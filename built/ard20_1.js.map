{"version":3,"file":"ard20_1.js","sources":["dice/d20-roll.js","dice/damage-roll.js","dice/dice.js","documents/item.js","helpers/effects.js","helpers/cha-adv.js","sheets/actor-sheet.js","helpers/feat_req.js","sheets/item-sheet.js","helpers/templates.js","helpers/config.js","helpers/socket.js","../svelte/advancement-rate/advancement-rate-shell.svelte","../svelte/advancement-rate/advancement-rate.js","../svelte/FeatSetting/FeatPack.svelte","../svelte/FeatSetting/featSetting-shell.svelte","../svelte/FeatSetting/featSetting.js","helpers/settings.js","helpers/chat.js","ard20.js","documents/actor.js","../svelte/init.js"],"sourcesContent":["/**\r\n * A type of Roll specific to a d20-based check, save, or attack roll in the 5e system.\r\n * @param {string} formula                       The string formula to parse\r\n * @param {object} data                          The data object against which to parse attributes within the formula\r\n * @param {object} [options={}]                  Extra optional arguments which describe or modify the D20Roll\r\n * @param {number} [options.advantageMode]             What advantage modifier to apply to the roll (none, advantage, disadvantage)\r\n * @param {number} [options.critical]                  The value of d20 result which represents a critical success\r\n * @param {number} [options.fumble]                    The value of d20 result which represents a critical failure\r\n * @param {(number)} [options.targetValue]             Assign a target value against which the result of this roll should be compared\r\n * @param {boolean} [options.elvenAccuracy=false]      Allow Elven Accuracy to modify this roll?\r\n * @param {boolean} [options.halflingLucky=false]      Allow Halfling Luck to modify this roll?\r\n * @param {boolean} [options.reliableTalent=false]     Allow Reliable Talent to modify this roll?\r\n */\r\nexport default class D20Roll extends Roll {\r\n    constructor(formula, data, options = {}) {\r\n        super(formula, data, options);\r\n        if (!(this.terms[0] instanceof Die && this.terms[0].faces === 20)) {\r\n            throw new Error(`Invalid D20Roll formula provided ${this._formula}`);\r\n        }\r\n        this.configureModifiers();\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * A convenience reference for whether this D20Roll has advantage\r\n     * @type {boolean}\r\n     */\r\n    get hasAdvantage() {\r\n        //@ts-expect-error\r\n        return this.options.advantageMode === D20Roll.ADV_MODE.ADVANTAGE;\r\n    }\r\n    /**\r\n     * A convenience reference for whether this D20Roll has disadvantage\r\n     * @type {boolean}\r\n     */\r\n    get hasDisadvantage() {\r\n        //@ts-expect-error\r\n        return this.options.advantageMode === D20Roll.ADV_MODE.DISADVANTAGE;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /*  D20 Roll Methods                            */\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Apply optional modifiers which customize the behavior of the d20term\r\n     * @private\r\n     */\r\n    configureModifiers() {\r\n        const d20 = this.terms[0];\r\n        //@ts-expect-error\r\n        d20.modifiers = [];\r\n        // Handle Advantage or Disadvantage\r\n        if (this.hasAdvantage) {\r\n            //@ts-expect-error\r\n            d20.number = 2;\r\n            //@ts-expect-error\r\n            d20.modifiers.push(\"kh\");\r\n            //@ts-expect-error\r\n            d20.options.advantage = true;\r\n        }\r\n        else if (this.hasDisadvantage) {\r\n            //@ts-expect-error\r\n            d20.number = 2;\r\n            //@ts-expect-error\r\n            d20.modifiers.push(\"kl\");\r\n            //@ts-expect-error\r\n            d20.options.disadvantage = true;\r\n            //@ts-expect-error\r\n        }\r\n        else\r\n            d20.number = 1;\r\n        // Assign critical and fumble thresholds\r\n        //@ts-expect-error\r\n        if (this.options.critical)\r\n            d20.options.critical = this.options.critical;\r\n        //@ts-expect-error\r\n        if (this.options.fumble)\r\n            d20.options.fumble = this.options.fumble;\r\n        //@ts-expect-error\r\n        if (this.options.targetValue)\r\n            d20.options.target = this.options.targetValue;\r\n        // Re-compile the underlying formula\r\n        //@ts-expect-error\r\n        this._formula = this.constructor.getFormula(this.terms);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @inheritdoc */\r\n    async toMessage(messageData = {}, options = {}) {\r\n        // Evaluate the roll now so we have the results available to determine whether reliable talent came into play\r\n        if (!this._evaluated)\r\n            await this.evaluate({ async: true });\r\n        // Add appropriate advantage mode message flavor and ard20 roll flags\r\n        //@ts-expect-error\r\n        messageData.flavor = messageData.flavor || this.options.flavor;\r\n        //@ts-expect-error\r\n        if (this.hasAdvantage)\r\n            messageData.flavor += ` (${game.i18n.localize(\"ARd20.Advantage\")})`;\r\n        //@ts-expect-error\r\n        else if (this.hasDisadvantage)\r\n            messageData.flavor += ` (${game.i18n.localize(\"ARd20.Disadvantage\")})`;\r\n        // Record the preferred rollMode\r\n        //@ts-expect-error\r\n        options.rollMode = options.rollMode ?? this.options.rollMode;\r\n        return super.toMessage(messageData, options);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /*  Configuration Dialog                        */\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Create a Dialog prompt used to configure evaluation of an existing D20Roll instance.\r\n     * @param {object} data                     Dialog configuration data\r\n     * @param {string} [data.title]               The title of the shown dialog window\r\n     * @param {number} [data.defaultRollMode]     The roll mode that the roll mode select element should default to\r\n     * @param {number} [data.defaultAction]       The button marked as default\r\n     * @param {boolean} [data.chooseModifier]     Choose which ability modifier should be applied to the roll?\r\n     * @param {string} [data.defaultAbility]      For tool rolls, the default ability modifier applied to the roll\r\n     * @param {string} [data.template]            A custom path to an HTML template to use instead of the default\r\n     * @param {object} options                  Additional Dialog customization options\r\n     * @returns {Promise<D20Roll|null>}         A resulting D20Roll object constructed with the dialog, or null if the dialog was closed\r\n     */\r\n    //@ts-expect-error\r\n    async configureDialog({ title: string, defaultRollMode: number, canMult: boolean, defaultAction = D20Roll.ADV_MODE.NORMAL, mRoll, chooseModifier = false, defaultAttribute, template } = {}, options = {}) {\r\n        // Render the Dialog inner HTML\r\n        //@ts-expect-error\r\n        const content = await renderTemplate(template ?? this.constructor.EVALUATION_TEMPLATE, {\r\n            formula: `${this.formula} + @bonus`,\r\n            //@ts-expect-error\r\n            defaultRollMode,\r\n            rollModes: CONFIG.Dice.rollModes,\r\n            chooseModifier,\r\n            defaultAttribute,\r\n            attributes: CONFIG.ARd20.Attributes,\r\n            //@ts-expect-error\r\n            canMult,\r\n            mRoll,\r\n        });\r\n        let defaultButton = \"normal\";\r\n        switch (defaultAction) {\r\n            case D20Roll.ADV_MODE.ADVANTAGE:\r\n                defaultButton = \"advantage\";\r\n                break;\r\n            case D20Roll.ADV_MODE.DISADVANTAGE:\r\n                defaultButton = \"disadvantage\";\r\n                break;\r\n        }\r\n        // Create the Dialog window and await submission of the form\r\n        return new Promise((resolve) => {\r\n            new Dialog({\r\n                //@ts-expect-error\r\n                title,\r\n                content,\r\n                buttons: {\r\n                    advantage: {\r\n                        label: game.i18n.localize(\"ARd20.Advantage\"),\r\n                        callback: (html) => resolve(this._onDialogSubmit(html, D20Roll.ADV_MODE.ADVANTAGE)),\r\n                    },\r\n                    normal: {\r\n                        label: game.i18n.localize(\"ARd20.Normal\"),\r\n                        callback: (html) => resolve(this._onDialogSubmit(html, D20Roll.ADV_MODE.NORMAL)),\r\n                    },\r\n                    disadvantage: {\r\n                        label: game.i18n.localize(\"ARd20.Disadvantage\"),\r\n                        callback: (html) => resolve(this._onDialogSubmit(html, D20Roll.ADV_MODE.DISADVANTAGE)),\r\n                    },\r\n                },\r\n                default: defaultButton,\r\n                close: () => resolve(null),\r\n            }, options).render(true);\r\n        });\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Handle submission of the Roll evaluation configuration Dialog\r\n     * @param {jQuery} html             The submitted dialog content\r\n     * @param {number} advantageMode    The chosen advantage mode\r\n     * @private\r\n     */\r\n    //@ts-expect-error\r\n    _onDialogSubmit(html, advantageMode) {\r\n        const form = html[0].querySelector(\"form\");\r\n        console.log(this);\r\n        console.log(form, \"ФОРМА\");\r\n        if (form.bonus.value) {\r\n            const bonus = new Roll(form.bonus.value, this.data);\r\n            if (!(bonus.terms[0] instanceof OperatorTerm))\r\n                this.terms.push(new OperatorTerm({ operator: \"+\" }));\r\n            this.terms = this.terms.concat(bonus.terms);\r\n        }\r\n        // Customize the modifier\r\n        if (form.ability?.value) {\r\n            //@ts-expect-error\r\n            const abl = this.data.attributes[form.ability.value];\r\n            console.log(abl);\r\n            //@ts-expect-error\r\n            this.terms.findSplice((t) => t.term === \"@mod\", new NumericTerm({ number: abl.mod }));\r\n            //@ts-expect-error\r\n            this.options.flavor += ` (${game.i18n.localize(CONFIG.ARd20.Attributes[form.ability.value])})`;\r\n        }\r\n        /* if (form.prof_type?.value) {\r\n           const pr = this.data[form.prof_type.value][form.prof_value.value];\r\n           console.log(pr);\r\n           this.terms.findSplice((t) => t.term === \"@prof_die\", new Die({ number: 1, faces: pr.prof_die }));\r\n           this.terms.findSplice((t) => t.term === \"@prof_bonus\", new NumericTerm({ number: pr.prof_bonus }));\r\n         }*/\r\n        // Apply advantage or disadvantage\r\n        //@ts-expect-error\r\n        this.options.advantageMode = advantageMode;\r\n        //@ts-expect-error\r\n        this.options.rollMode = form.rollMode.value;\r\n        //@ts-expect-error\r\n        this.options.mRoll = form.mRoll?.checked;\r\n        this.configureModifiers();\r\n        return this;\r\n    }\r\n}\r\n/* -------------------------------------------- */\r\n/**\r\n * Advantage mode of a 5e d20 roll\r\n * @enum {number}\r\n */\r\nD20Roll.ADV_MODE = {\r\n    NORMAL: 0,\r\n    ADVANTAGE: 1,\r\n    DISADVANTAGE: -1,\r\n};\r\n/**\r\n * The HTML template path used to configure evaluation of this Roll\r\n * @type {string}\r\n */\r\nD20Roll.EVALUATION_TEMPLATE = \"systems/ard20/templates/chat/roll-dialog.html\";\r\n","/**\r\n * A type of Roll specific to a damage (or healing) roll in the 5e system.\r\n * @param {string} formula                       The string formula to parse\r\n * @param {object} data                          The data object against which to parse attributes within the formula\r\n * @param {object} [options={}]                  Extra optional arguments which describe or modify the DamageRoll\r\n * @param {number} [options.criticalBonusDice=0]      A number of bonus damage dice that are added for critical hits\r\n * @param {number} [options.criticalMultiplier=2]     A critical hit multiplier which is applied to critical hits\r\n * @param {boolean} [options.multiplyNumeric=false]   Multiply numeric terms by the critical multiplier\r\n * @param {boolean} [options.powerfulCritical=false]  Apply the \"powerful criticals\" house rule to critical hits\r\n *\r\n */\r\n//@ts-expect-error\r\nexport default class DamageRoll extends Roll {\r\n    //@ts-expect-error\r\n    constructor(formula, data, options) {\r\n        super(formula, data, options);\r\n        // For backwards compatibility, skip rolls which do not have the \"critical\" option defined\r\n        //@ts-expect-error\r\n        if (this.options.critical !== undefined)\r\n            this.configureDamage();\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * A convenience reference for whether this DamageRoll is a critical hit\r\n     * @type {boolean}\r\n     */\r\n    get isCritical() {\r\n        //@ts-expect-error\r\n        return this.options.critical;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /*  Damage Roll Methods                         */\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Apply optional modifiers which customize the behavior of the d20term\r\n     * @private\r\n     */\r\n    configureDamage() {\r\n        let critBonus = 0;\r\n        for (let [i, term] of this.terms.entries()) {\r\n            if (!(term instanceof OperatorTerm)) {\r\n                //@ts-expect-error\r\n                term.options.damageType = i !== 0 && this.terms[i - 1] instanceof OperatorTerm ? this.options.damageType[i - 1] : this.options.damageType[i];\r\n            }\r\n            // Multiply dice terms\r\n            if (term instanceof DiceTerm) {\r\n                //@ts-expect-error\r\n                term.options.baseNumber = term.options.baseNumber ?? term.number; // Reset back\r\n                //@ts-expect-error\r\n                term.number = term.options.baseNumber;\r\n                if (this.isCritical) {\r\n                    critBonus += term.number * term.faces;\r\n                    let [oper, num] = [new OperatorTerm({ operator: \"+\" }), new NumericTerm({ number: critBonus, options: { flavor: \"Crit\" } })];\r\n                    this.terms.splice(1, 0, oper);\r\n                    this.terms.splice(2, 0, num);\r\n                    //@ts-expect-error\r\n                    let cb = this.options.criticalBonusDice && i === 0 ? this.options.criticalBonusDice : 0;\r\n                    term.alter(1, cb);\r\n                    //@ts-expect-error\r\n                    term.options.critical = true;\r\n                }\r\n            }\r\n            // Multiply numeric terms\r\n            //@ts-expect-error\r\n            else if (this.options.multiplyNumeric && term instanceof NumericTerm) {\r\n                //@ts-expect-error\r\n                term.options.baseNumber = term.options.baseNumber ?? term.number; // Reset back\r\n                //@ts-expect-error\r\n                term.number = term.options.baseNumber;\r\n                if (this.isCritical) {\r\n                    //@ts-expect-error\r\n                    term.number *= this.options.criticalMultiplier ?? 2;\r\n                    //@ts-expect-error\r\n                    term.options.critical = true;\r\n                }\r\n            }\r\n        }\r\n        //@ts-expect-error\r\n        this._formula = this.constructor.getFormula(this.terms);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @inheritdoc */\r\n    toMessage(messageData = {}, options = {}) {\r\n        //@ts-expect-error\r\n        messageData.flavor = messageData.flavor || this.options.flavor;\r\n        if (this.isCritical) {\r\n            const label = game.i18n.localize(\"ARd20.CriticalHit\");\r\n            //@ts-expect-error\r\n            messageData.flavor = messageData.flavor ? `${messageData.flavor} (${label})` : label;\r\n        }\r\n        //@ts-expect-error\r\n        options.rollMode = options.rollMode ?? this.options.rollMode;\r\n        return super.toMessage(messageData, options);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /*  Configuration Dialog                        */\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Create a Dialog prompt used to configure evaluation of an existing D20Roll instance.\r\n     * @param {object} data                     Dialog configuration data\r\n     * @param {string} [data.title]               The title of the shown dialog window\r\n     * @param {number} [data.defaultRollMode]     The roll mode that the roll mode select element should default to\r\n     * @param {string} [data.defaultCritical]     Should critical be selected as default\r\n     * @param {string} [data.template]            A custom path to an HTML template to use instead of the default\r\n     * @param {boolean} [data.allowCritical=true] Allow critical hit to be chosen as a possible damage mode\r\n     * @param {object} options                  Additional Dialog customization options\r\n     * @returns {Promise<D20Roll|null>}         A resulting D20Roll object constructed with the dialog, or null if the dialog was closed\r\n     */\r\n    //@ts-expect-error\r\n    async configureDialog({ title, defaultRollMode, canMult, damType, mRoll, defaultCritical = false, template, allowCritical = true } = {}, options = {}) {\r\n        // Render the Dialog inner HTML\r\n        //@ts-expect-error\r\n        const content = await renderTemplate(template ?? this.constructor.EVALUATION_TEMPLATE, {\r\n            formula: `${this.formula} + @bonus`,\r\n            defaultRollMode,\r\n            rollModes: CONFIG.Dice.rollModes,\r\n            canMult,\r\n            damType,\r\n            mRoll\r\n        });\r\n        // Create the Dialog window and await submission of the form\r\n        return new Promise((resolve) => {\r\n            new Dialog({\r\n                title,\r\n                content,\r\n                buttons: {\r\n                    critical: {\r\n                        //@ts-expect-error\r\n                        condition: allowCritical,\r\n                        label: game.i18n.localize(\"ARd20.CriticalHit\"),\r\n                        callback: (html) => resolve(this._onDialogSubmit(html, true)),\r\n                    },\r\n                    normal: {\r\n                        label: game.i18n.localize(allowCritical ? \"ARd20.Normal\" : \"ARd20.Roll\"),\r\n                        callback: (html) => resolve(this._onDialogSubmit(html, false)),\r\n                    },\r\n                },\r\n                default: defaultCritical ? \"critical\" : \"normal\",\r\n                close: () => resolve(null),\r\n            }, options).render(true);\r\n        });\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Handle submission of the Roll evaluation configuration Dialog\r\n     * @param {jQuery} html             The submitted dialog content\r\n     * @param {boolean} isCritical      Is the damage a critical hit?\r\n     * @private\r\n     */\r\n    //@ts-expect-error\r\n    _onDialogSubmit(html, isCritical) {\r\n        const form = html[0].querySelector(\"form\");\r\n        // Append a situational bonus term\r\n        if (form.bonus.value) {\r\n            const bonus = new Roll(form.bonus.value, this.data);\r\n            if (!(bonus.terms[0] instanceof OperatorTerm))\r\n                this.terms.push(new OperatorTerm({ operator: \"+\" }));\r\n            this.terms = this.terms.concat(bonus.terms);\r\n        }\r\n        // Apply advantage or disadvantage\r\n        //@ts-expect-error\r\n        this.options.critical = isCritical;\r\n        //@ts-expect-error\r\n        this.options.rollMode = form.rollMode.value;\r\n        //@ts-expect-error\r\n        this.options.damageType.forEach((part, ind) => (this.options.damageType[ind] = form[`damageType.${ind}`] ? part[form[`damageType.${ind}`].value] : part[0]));\r\n        //@ts-expect-error\r\n        this.options.mRoll = form.mRoll?.checked;\r\n        this.configureDamage();\r\n        return this;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @inheritdoc */\r\n    //@ts-expect-error\r\n    static fromData(data) {\r\n        const roll = super.fromData(data);\r\n        //@ts-expect-error\r\n        roll._formula = this.getFormula(roll.terms);\r\n        return roll;\r\n    }\r\n}\r\n/**\r\n * The HTML template path used to configure evaluation of this Roll\r\n * @type {string}\r\n */\r\nDamageRoll.EVALUATION_TEMPLATE = \"systems/ard20/templates/chat/roll-dialog.html\";\r\n","export { default as D20Roll } from \"./d20-roll.js\";\r\nexport { default as DamageRoll } from \"./damage-roll.js\";\r\n/**\r\n * A standardized helper function for simplifying the constant parts of a multipart roll formula\r\n *\r\n * @param {string} formula                 The original Roll formula\r\n * @param {Object} data                    Actor or item data against which to parse the roll\r\n * @param {Object} options                 Formatting options\r\n * @param {boolean} options.constantFirst   Puts the constants before the dice terms in the resulting formula\r\n *\r\n * @return {string}                        The resulting simplified formula\r\n */\r\nexport function simplifyRollFormula(formula, data, { constantFirst = false }) {\r\n    const roll = new Roll(formula, data); // Parses the formula and replaces any @properties\r\n    const terms = roll.terms;\r\n    // Some terms are \"too complicated\" for this algorithm to simplify\r\n    // In this case, the original formula is returned.\r\n    if (terms.some(_isUnsupportedTerm))\r\n        return roll.formula;\r\n    const rollableTerms = []; // Terms that are non-constant, and their associated operators\r\n    const constantTerms = []; // Terms that are constant, and their associated operators\r\n    let operators = []; // Temporary storage for operators before they are moved to one of the above\r\n    for (let term of terms) {\r\n        // For each term\r\n        if (term instanceof OperatorTerm)\r\n            operators.push(term);\r\n        // If the term is an addition/subtraction operator, push the term into the operators array\r\n        else {\r\n            // Otherwise the term is not an operator\r\n            if (term instanceof DiceTerm) {\r\n                // If the term is something rollable\r\n                rollableTerms.push(...operators); // Place all the operators into the rollableTerms array\r\n                rollableTerms.push(term); // Then place this rollable term into it as well\r\n            } //\r\n            else {\r\n                // Otherwise, this must be a constant\r\n                constantTerms.push(...operators); // Place the operators into the constantTerms array\r\n                constantTerms.push(term); // Then also add this constant term to that array.\r\n            } //\r\n            operators = []; // Finally, the operators have now all been assigend to one of the arrays, so empty this before the next iteration.\r\n        }\r\n    }\r\n    const constantFormula = Roll.getFormula(constantTerms); // Cleans up the constant terms and produces a new formula string\r\n    const rollableFormula = Roll.getFormula(rollableTerms); // Cleans up the non-constant terms and produces a new formula string\r\n    // Mathematically evaluate the constant formula to produce a single constant term\r\n    let constantPart = undefined;\r\n    if (constantFormula) {\r\n        try {\r\n            constantPart = Roll.safeEval(constantFormula);\r\n        }\r\n        catch (err) {\r\n            console.warn(`Unable to evaluate constant term ${constantFormula} in simplifyRollFormula`);\r\n        }\r\n    }\r\n    // Order the rollable and constant terms, either constant first or second depending on the optional argument\r\n    const parts = constantFirst ? [constantPart, rollableFormula] : [rollableFormula, constantPart];\r\n    // Join the parts with a + sign, pass them to `Roll` once again to clean up the formula\r\n    return new Roll(parts.filterJoin(\" + \")).formula;\r\n}\r\n/* -------------------------------------------- */\r\n/**\r\n * Only some terms are supported by simplifyRollFormula, this method returns true when the term is not supported.\r\n * @param {*} term - A single Dice term to check support on\r\n * @return {Boolean} True when unsupported, false if supported\r\n */\r\nfunction _isUnsupportedTerm(term) {\r\n    const diceTerm = term instanceof DiceTerm;\r\n    const operator = term instanceof OperatorTerm && [\"+\", \"-\"].includes(term.operator);\r\n    const number = term instanceof NumericTerm;\r\n    return !(diceTerm || operator || number);\r\n}\r\n/* -------------------------------------------- */\r\n/* D20 Roll                                     */\r\n/* -------------------------------------------- */\r\n/**\r\n * A standardized helper function for managing core 5e d20 rolls.\r\n * Holding SHIFT, ALT, or CTRL when the attack is rolled will \"fast-forward\".\r\n * This chooses the default options of a normal attack with no bonus, Advantage, or Disadvantage respectively\r\n *\r\n * @param {string[]} parts          The dice roll component parts, excluding the initial d20\r\n * @param {object} data             Actor or item data against which to parse the roll\r\n *\r\n * @param {boolean} [advantage]       Apply advantage to the roll (unless otherwise specified)\r\n * @param {boolean} [disadvantage]    Apply disadvantage to the roll (unless otherwise specified)\r\n * @param {number} [critical]         The value of d20 result which represents a critical success\r\n * @param {number} [fumble]           The value of d20 result which represents a critical failure\r\n * @param {number} [targetValue]      Assign a target value against which the result of this roll should be compared\r\n\r\n * @param {boolean} [chooseModifier=false] Choose the ability modifier that should be used when the roll is made\r\n * @param {boolean} [fastForward=false] Allow fast-forward advantage selection\r\n * @param {Event} [event]             The triggering event which initiated the roll\r\n * @param {string} [rollMode]         A specific roll mode to apply as the default for the resulting roll\r\n * @param {string} [template]         The HTML template used to render the roll dialog\r\n * @param {string} [title]            The dialog window title\r\n * @param {Object} [dialogOptions]    Modal dialog options\r\n *\r\n * @param {boolean} [chatMessage=true] Automatically create a Chat Message for the result of this roll\r\n * @param {object} [messageData={}] Additional data which is applied to the created Chat Message, if any\r\n * @param {string} [rollMode]       A specific roll mode to apply as the default for the resulting roll\r\n * @param {object} [speaker]        The ChatMessage speaker to pass when creating the chat\r\n * @param {string} [flavor]         Flavor text to use in the posted chat message\r\n *\r\n * @return {Promise<D20Roll|null>}  The evaluated D20Roll, or null if the workflow was cancelled\r\n */\r\n//@ts-expect-error\r\nexport async function d20Roll({ \r\n//@ts-expect-error\r\nparts = [], \r\n//@ts-expect-error\r\ndata = {}, \r\n//@ts-expect-error\r\nadvantage, \r\n//@ts-expect-error\r\ndisadvantage, \r\n//@ts-expect-error\r\nfumble = 1, \r\n//@ts-expect-error\r\ncritical = 20, \r\n//@ts-expect-error\r\ntargetValue, \r\n//@ts-expect-error\r\nchooseModifier = false, \r\n//@ts-expect-error\r\nfastForward = false, \r\n//@ts-expect-error\r\nevent, \r\n//@ts-expect-error\r\ntemplate, \r\n//@ts-expect-error\r\ntitle, \r\n//@ts-expect-error\r\ndialogOptions, \r\n//@ts-expect-error\r\nchatMessage = true, \r\n//@ts-expect-error\r\nmessageData = {}, \r\n//@ts-expect-error\r\nrollMode, \r\n//@ts-expect-error\r\nspeaker, \r\n//@ts-expect-error\r\noptions, \r\n//@ts-expect-error\r\nflavor, \r\n//@ts-expect-error\r\ncanMult, \r\n//@ts-expect-error\r\nmRoll,\r\n//@ts-expect-error\r\n } = {}) {\r\n    // Handle input arguments\r\n    const formula = [\"1d20\"].concat(parts).join(\" + \");\r\n    const { advantageMode, isFF } = _determineAdvantageMode({ advantage, disadvantage, fastForward, event });\r\n    const defaultRollMode = rollMode || game.settings.get(\"core\", \"rollMode\");\r\n    if (chooseModifier && !isFF) {\r\n        data[\"mod\"] = \"@mod\";\r\n    }\r\n    // Construct the D20Roll instance\r\n    //@ts-expect-error\r\n    const roll = new CONFIG.Dice.D20Roll(formula, data, {\r\n        flavor: flavor || title,\r\n        advantageMode,\r\n        defaultRollMode,\r\n        critical,\r\n        fumble,\r\n        targetValue,\r\n        mRoll,\r\n    });\r\n    // Prompt a Dialog to further configure the D20Roll\r\n    if (!isFF) {\r\n        const configured = await roll.configureDialog({\r\n            title,\r\n            chooseModifier,\r\n            defaultRollMode: defaultRollMode,\r\n            defaultAction: advantageMode,\r\n            defaultAbility: data?.item?.ability,\r\n            template,\r\n            canMult,\r\n            mRoll,\r\n        }, dialogOptions);\r\n        if (configured === null)\r\n            return null;\r\n    }\r\n    // Evaluate the configured roll\r\n    await roll.evaluate({ async: true });\r\n    // Create a Chat Message\r\n    if (speaker) {\r\n        console.warn(`You are passing the speaker argument to the d20Roll function directly which should instead be passed as an internal key of messageData`);\r\n        messageData.speaker = speaker;\r\n    }\r\n    if (roll && chatMessage)\r\n        await roll.toMessage(messageData, options);\r\n    return roll;\r\n}\r\n/* -------------------------------------------- */\r\n/**\r\n * Determines whether this d20 roll should be fast-forwarded, and whether advantage or disadvantage should be applied\r\n * @returns {{isFF: boolean, advantageMode: number}}  Whether the roll is fast-forward, and its advantage mode\r\n */\r\n//@ts-expect-error\r\nfunction _determineAdvantageMode({ event, advantage = false, disadvantage = false, fastForward = false } = {}) {\r\n    const isFF = fastForward || (event && (event.shiftKey || event.altKey || event.ctrlKey || event.metaKey));\r\n    //@ts-expect-error\r\n    let advantageMode = CONFIG.Dice.D20Roll.ADV_MODE.NORMAL;\r\n    //@ts-expect-error\r\n    if (advantage || event?.altKey)\r\n        advantageMode = CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE;\r\n    //@ts-expect-error\r\n    else if (disadvantage || event?.ctrlKey || event?.metaKey)\r\n        advantageMode = CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE;\r\n    return { isFF, advantageMode };\r\n}\r\n/* -------------------------------------------- */\r\n/* Damage Roll                                  */\r\n/* -------------------------------------------- */\r\n/**\r\n * A standardized helper function for managing core 5e damage rolls.\r\n * Holding SHIFT, ALT, or CTRL when the attack is rolled will \"fast-forward\".\r\n * This chooses the default options of a normal attack with no bonus, Critical, or no bonus respectively\r\n *\r\n * @param {string[]} parts          The dice roll component parts, excluding the initial d20\r\n * @param {object} [data]           Actor or item data against which to parse the roll\r\n *\r\n * @param {boolean} [critical=false] Flag this roll as a critical hit for the purposes of fast-forward or default dialog action\r\n * @param {number} [criticalBonusDice=0] A number of bonus damage dice that are added for critical hits\r\n * @param {number} [criticalMultiplier=2] A critical hit multiplier which is applied to critical hits\r\n * @param {boolean} [multiplyNumeric=false] Multiply numeric terms by the critical multiplier\r\n * @param {boolean} [powerfulCritical=false] Apply the \"powerful criticals\" house rule to critical hits\r\n\r\n * @param {boolean} [fastForward=false] Allow fast-forward advantage selection\r\n * @param {Event}[event]            The triggering event which initiated the roll\r\n * @param {boolean} [allowCritical=true] Allow the opportunity for a critical hit to be rolled\r\n * @param {string} [template]       The HTML template used to render the roll dialog\r\n * @param {string} [title]          The dice roll UI window title\r\n * @param {object} [dialogOptions]  Configuration dialog options\r\n *\r\n * @param {boolean} [chatMessage=true] Automatically create a Chat Message for the result of this roll\r\n * @param {object} [messageData={}] Additional data which is applied to the created Chat Message, if any\r\n * @param {string} [rollMode]       A specific roll mode to apply as the default for the resulting roll\r\n * @param {object} [speaker]        The ChatMessage speaker to pass when creating the chat\r\n * @param {string} [flavor]         Flavor text to use in the posted chat message\r\n *\r\n * @return {Promise<DamageRoll|null>} The evaluated DamageRoll, or null if the workflow was canceled\r\n */\r\n//@ts-expect-error\r\nexport async function damageRoll({ \r\n//@ts-expect-error\r\nparts = [], \r\n//@ts-expect-error\r\ndata, // Roll creation\r\n//@ts-expect-error\r\ncritical = false, \r\n//@ts-expect-error\r\ndamType, \r\n//@ts-expect-error\r\ndamageType, \r\n//@ts-expect-error\r\ncriticalBonusDice, \r\n//@ts-expect-error\r\ncriticalMultiplier, \r\n//@ts-expect-error\r\nmultiplyNumeric, // Damage customization\r\n//@ts-expect-error\r\nfastForward = false, \r\n//@ts-expect-error\r\nevent, \r\n//@ts-expect-error\r\nallowCritical = true, \r\n//@ts-expect-error\r\ntemplate, \r\n//@ts-expect-error\r\ntitle, \r\n//@ts-expect-error\r\ndialogOptions, // Dialog configuration\r\n//@ts-expect-error\r\nchatMessage = false, \r\n//@ts-expect-error\r\nmessageData = {}, \r\n//@ts-expect-error\r\nrollMode, \r\n//@ts-expect-error\r\nspeaker, \r\n//@ts-expect-error\r\ncanMult, \r\n//@ts-expect-error\r\nflavor, \r\n//@ts-expect-error\r\nmRoll\r\n//@ts-expect-error\r\n } = {}) {\r\n    console.log(canMult);\r\n    // Handle input arguments\r\n    const defaultRollMode = rollMode || game.settings.get(\"core\", \"rollMode\");\r\n    // Construct the DamageRoll instance\r\n    const formula = parts.join(\" + \");\r\n    const { isCritical, isFF } = _determineCriticalMode({ critical, fastForward, event });\r\n    //@ts-expect-error\r\n    const roll = new CONFIG.Dice.DamageRoll(formula, data, {\r\n        flavor: flavor || title,\r\n        critical: isCritical,\r\n        criticalBonusDice,\r\n        criticalMultiplier,\r\n        multiplyNumeric,\r\n        damType,\r\n        mRoll,\r\n        damageType\r\n    });\r\n    // Prompt a Dialog to further configure the DamageRoll\r\n    if (!isFF) {\r\n        const configured = await roll.configureDialog({\r\n            title,\r\n            defaultRollMode: defaultRollMode,\r\n            defaultCritical: isCritical,\r\n            template,\r\n            allowCritical,\r\n            mRoll,\r\n            canMult,\r\n            damType\r\n        }, dialogOptions);\r\n        if (configured === null)\r\n            return null;\r\n    }\r\n    // Evaluate the configured roll\r\n    await roll.evaluate({ async: true });\r\n    // Create a Chat Message\r\n    if (speaker) {\r\n        console.warn(`You are passing the speaker argument to the damageRoll function directly which should instead be passed as an internal key of messageData`);\r\n        messageData.speaker = speaker;\r\n    }\r\n    if (roll && chatMessage)\r\n        await roll.toMessage(messageData);\r\n    return roll;\r\n}\r\n/* -------------------------------------------- */\r\n/**\r\n * Determines whether this d20 roll should be fast-forwarded, and whether advantage or disadvantage should be applied\r\n * @returns {{isFF: boolean, isCritical: boolean}}  Whether the roll is fast-forward, and whether it is a critical hit\r\n */\r\n//@ts-expect-error\r\nfunction _determineCriticalMode({ event, critical = false, fastForward = false } = {}) {\r\n    const isFF = fastForward || (event && (event.shiftKey || event.altKey || event.ctrlKey || event.metaKey));\r\n    if (event?.altKey)\r\n        critical = true;\r\n    return { isFF, isCritical: critical };\r\n}\r\n","import { getValues, obj_entries } from \"../ard20.js\";\r\nimport { d20Roll, damageRoll, simplifyRollFormula } from \"../dice/dice.js\";\r\n/**\r\n * Extend the basic Item with some very simple modifications.\r\n * @extends {Item}\r\n */\r\nexport class ARd20Item extends Item {\r\n    /**\r\n     * Augment the basic Item data model with additional dynamic data.\r\n     */\r\n    prepareData() {\r\n        // As with the actor class, items are documents that can have their data\r\n        // preparation methods overridden (such as prepareBaseData()).\r\n        super.prepareData();\r\n    }\r\n    prepareDerivedData() {\r\n        super.prepareDerivedData();\r\n        const itemData = this.data;\r\n        this._prepareSpellData(itemData);\r\n        this._prepareWeaponData(itemData);\r\n        this._prepareFeatureData(itemData);\r\n        this._prepareRaceData(itemData);\r\n        this._prepareArmorData(itemData);\r\n        if (itemData.data.hasAttack)\r\n            this._prepareAttack(itemData);\r\n        if (itemData.data.hasDamage)\r\n            this._prepareDamage(itemData);\r\n        if (!this.isOwned)\r\n            this.prepareFinalAttributes();\r\n    }\r\n    /**\r\n     *Prepare data for Spells\r\n     */\r\n    _prepareSpellData(itemData) {\r\n        if (itemData.type !== \"spell\")\r\n            return;\r\n        const data = itemData.data;\r\n    }\r\n    /**\r\n     *Prepare data for weapons\r\n     */\r\n    _prepareWeaponData(itemData) {\r\n        if (itemData.type !== \"weapon\")\r\n            return;\r\n        const data = itemData.data;\r\n        const flags = itemData.flags;\r\n        data.hasAttack = data.hasAttack || true;\r\n        data.hasDamage = data.hasDamage || true;\r\n        //TODO: this._setDeflect(data);\r\n        this._setTypeAndSubtype(data, flags);\r\n        for (let [key, type] of obj_entries(data.damage)) {\r\n            if (key !== \"current\") {\r\n                for (let [key, prof] of obj_entries(type)) {\r\n                    prof.formula = \"\";\r\n                    prof.parts.forEach((part) => {\r\n                        if (Array.isArray(part[1])) {\r\n                            prof.formula += `${part[0]}`;\r\n                            part[1].forEach((sub, ind) => {\r\n                                if (ind === 0) {\r\n                                    prof.formula += ` {${sub[0]} ${sub[1]}`;\r\n                                    prof.formula += ind === part[1].length - 1 ? \"}\" : \"\";\r\n                                }\r\n                                else {\r\n                                    prof.formula += ` or ${sub[0]} ${sub[1]}`;\r\n                                    prof.formula += ind === part[1].length - 1 ? \"}\" : \"\";\r\n                                }\r\n                            });\r\n                        }\r\n                        else\r\n                            prof.formula += `${part[0]} {${part[1]} ${part[2]}}; `;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     *Set deflect die equal to damage die, if not\r\n     */\r\n    /* TODO:\r\n    _setDeflect(data: object & WeaponDataPropertiesData) {\r\n      for (let [k, v] of obj_entries(CONFIG.ARd20.Rank)) {\r\n        v = game.i18n.localize(CONFIG.ARd20.prof[k]) ?? k;\r\n        v = v.toLowerCase();\r\n        data.deflect[v] = data.property[v].def ? data.deflect[v] || data.damage.common[v] : 0;\r\n      }\r\n    }\r\n    */\r\n    //@ts-expect-error\r\n    _setTypeAndSubtype(data, flags) {\r\n        data.sub_type_array = game.settings\r\n            .get(\"ard20\", \"proficiencies\")\r\n            .weapon.filter((prof) => prof.type === data.type.value);\r\n        if (flags.core?.sourceId) {\r\n            const id = /Item.(.+)/.exec(flags.core.sourceId)[1];\r\n            const item = game.items.get(id);\r\n            if (item?.data.type === \"weapon\") {\r\n                data.sub_type = data.sub_type === undefined ? item.data.data.sub_type : data.sub_type;\r\n            }\r\n        }\r\n        data.sub_type =\r\n            data.sub_type_array.filter((prof) => prof.name === data.sub_type).length === 0\r\n                ? data.sub_type_array[0].name\r\n                : data.sub_type || data.sub_type_array[0].name;\r\n        data.proficiency.name =\r\n            game.i18n.localize(getValues(CONFIG.ARd20.Rank, data.proficiency.level)) ??\r\n                getValues(CONFIG.ARd20.Rank, data.proficiency.level);\r\n        data.type.name =\r\n            game.i18n.localize(getValues(CONFIG.ARd20.Rank, data.type.value)) ??\r\n                getValues(CONFIG.ARd20.Rank, data.type.value);\r\n    }\r\n    /**\r\n     *Prepare data for features\r\n     */\r\n    _prepareFeatureData(itemData) {\r\n        if (itemData.type !== \"feature\")\r\n            return;\r\n        const data = itemData.data;\r\n        // Handle Source of the feature\r\n        data.source.label = \"\";\r\n        data.source.value.forEach((value, key) => {\r\n            let label = game.i18n.localize(getValues(CONFIG.ARd20.Source, value));\r\n            data.source.label += key === 0 ? label : `, ${label}`;\r\n        });\r\n        //labels.source = game.i18n.localize(CONFIG.ARd20.source[data.source.value]);\r\n        //define levels\r\n        data.level.has = data.level.has !== undefined ? data.level.has : false;\r\n        data.level.max = data.level.has ? data.level.max || 4 : 1;\r\n        data.level.initial = Math.min(data.level.max, data.level.initial);\r\n        data.level.current = this.isOwned ? Math.max(data.level.initial, 1) : 0;\r\n        //define exp cost\r\n        if (data.level.max > 1) {\r\n            let n = (10 - data.level.max) / data.level.max;\r\n            let k = 1.7 + (Math.round(Number((Math.abs(n) * 100).toPrecision(15))) / 100) * Math.sign(n);\r\n            if (data.xp.basicCost.length < data.level.max) {\r\n                for (let i = 1; i < data.level.max; i++) {\r\n                    data.xp.basicCost.push(Math.round((data.xp.basicCost[i - 1] * k) / 5) * 5);\r\n                    data.xp.AdvancedCost.push(data.xp.basicCost[i]);\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 1; i < data.level.max; i++) {\r\n                    data.xp.basicCost[i] = Math.round((data.xp.basicCost[i - 1] * k) / 5) * 5;\r\n                    data.xp.AdvancedCost[i] = data.xp.AdvancedCost[i] ?? data.xp.basicCost[i];\r\n                }\r\n            }\r\n        }\r\n        for (let [key, req] of Object.entries(data.req.values)) {\r\n            req.pass = Array.from({ length: data.level.max }, (i) => (i = false));\r\n            switch (req.type) {\r\n                case \"ability\":\r\n                    for (let [key, v] of obj_entries(CONFIG.ARd20.Attributes)) {\r\n                        if (req.name === game.i18n.localize(CONFIG.ARd20.Attributes[key]))\r\n                            req.value = key;\r\n                    }\r\n                    break;\r\n                case \"skill\":\r\n                    for (let [key, v] of obj_entries(CONFIG.ARd20.Skills)) {\r\n                        if (req.name === game.i18n.localize(CONFIG.ARd20.Skills[key]))\r\n                            req.value = key;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        for (let i = data.req.logic.length; data.level.max > data.req.logic.length; i++) {\r\n            if (i === 0) {\r\n                data.req.logic.push(\"1\");\r\n            }\r\n            else {\r\n                data.req.logic.push(data.req.logic[i - 1]);\r\n            }\r\n        }\r\n        for (let i = data.req.logic.length; data.level.max < data.req.logic.length; i--) {\r\n            data.req.logic.splice(data.req.logic.length - 1, 1);\r\n        }\r\n    }\r\n    /**\r\n     * Prepare data for 'race' type of item\r\n     */\r\n    _prepareRaceData(itemData) {\r\n        if (itemData.type !== \"race\")\r\n            return;\r\n    }\r\n    /**\r\n     * Prepare data for \"armor\" type item\r\n     */\r\n    _prepareArmorData(itemData) {\r\n        if (itemData.type !== \"armor\")\r\n            return;\r\n        const data = itemData.data;\r\n        for (let [key, dr] of obj_entries(CONFIG.ARd20.DamageSubTypes)) {\r\n            if (!(key === \"force\" || key === \"radiant\" || key === \"psychic\")) {\r\n                data.res.phys[key] = data.res.phys[key] ?? 0;\r\n            }\r\n            data.res.mag[key] = data.res.mag[key] ?? 0;\r\n        }\r\n        data.mobility.value = data.mobility.value ?? CONFIG.ARd20.HeavyPoints[data.type][data.slot];\r\n        data.mobility.value += data.mobility.bonus;\r\n    }\r\n    /**\r\n    Prepare Data that uses actor's data\r\n    */\r\n    prepareFinalAttributes() {\r\n        const itemData = this.data;\r\n        //@ts-expect-error\r\n        const abil = (itemData.abil = {});\r\n        for (let [k, v] of obj_entries(CONFIG.ARd20.Attributes)) {\r\n            abil[k] = this.isOwned ? getProperty(this.actor.data, `data.attributes.${k}.mod`) : null;\r\n        }\r\n        let prof_bonus = 0;\r\n        if (itemData.type === \"weapon\") {\r\n            const data = itemData.data;\r\n            data.proficiency.level = this.isOwned\r\n                ? this.actor?.data.data.proficiencies.weapon.filter((pr) => pr.name === data.sub_type)[0].value\r\n                : 0;\r\n            data.proficiency.levelName =\r\n                game.i18n.localize(CONFIG.ARd20.Rank[data.proficiency.level]) ?? CONFIG.ARd20.Rank[data.proficiency.level];\r\n            prof_bonus = data.proficiency.level * 4;\r\n        }\r\n        if (itemData.data.hasAttack)\r\n            this._prepareAttack(itemData, prof_bonus, abil);\r\n        if (itemData.data.hasDamage)\r\n            this._prepareDamage(itemData, abil);\r\n    }\r\n    _prepareAttack(itemData, prof_bonus, abil) {\r\n        const data = itemData.data;\r\n        if (!data.hasAttack)\r\n            return;\r\n        //@ts-expect-error\r\n        let mod = itemData.type === \"weapon\" && abil !== undefined ? abil.dex : data.atkMod;\r\n        //@ts-expect-error\r\n        data.attack = {\r\n            formula: \"1d20+\" + prof_bonus + \"+\" + mod,\r\n            parts: [mod, prof_bonus],\r\n        };\r\n    }\r\n    _prepareDamage(itemData, abil) {\r\n        const data = itemData.data;\r\n        if (!data.hasDamage)\r\n            return;\r\n        let mod = itemData.type === \"weapon\" && abil !== undefined ? abil.str : 0;\r\n        const prop = \"damage.parts\";\r\n        let baseDamage = getProperty(data, prop);\r\n        //@ts-expect-error\r\n        data.damage.current = {\r\n            formula: \"\",\r\n            parts: baseDamage,\r\n        };\r\n        baseDamage.forEach((part) => {\r\n            //@ts-expect-error\r\n            data.damage.current.formula += part[0] + `[${part[1]}, ${part[2]}] `;\r\n        });\r\n    }\r\n    /**\r\n     * Prepare a data object which is passed to any Roll formulas which are created related to this Item\r\n     * @private\r\n     */\r\n    //@ts-expect-error\r\n    getRollData() {\r\n        // If present, return the actor's roll data.\r\n        if (!this.actor)\r\n            return null;\r\n        const rollData = this.actor.getRollData();\r\n        const hasDamage = this.data.data.hasDamage;\r\n        const hasAttack = this.data.data.hasAttack;\r\n        //@ts-expect-error\r\n        rollData.item = foundry.utils.deepClone(this.data.data);\r\n        //@ts-expect-error\r\n        rollData.damageDie = hasDamage ? this.data.data.damage.current.parts[0] : null;\r\n        //@ts-expect-error\r\n        rollData.mod = hasAttack\r\n            ? //@ts-expect-error\r\n                this.data.data.attack.parts[0]\r\n            : hasDamage\r\n                ? //@ts-expect-error\r\n                    this.data.data.damage.current.parts[1]\r\n                : null;\r\n        //@ts-expect-error\r\n        rollData.prof = hasAttack ? this.data.data.attack.parts[1] : null;\r\n        return rollData;\r\n    }\r\n    /**\r\n     * Handle clickable rolls.\r\n     * @param {Event} event   The originating click event\r\n     * @private\r\n     */\r\n    //@ts-expect-error\r\n    async roll({ configureDialog = true, rollMode, hasDamage = false, hasAttack = false, createMessage = true }) {\r\n        let item = this;\r\n        const id = item.id;\r\n        const iData = this.data.data; //Item data\r\n        const actor = this.actor;\r\n        const aData = actor?.data.data;\r\n        hasDamage = iData.hasDamage || hasDamage;\r\n        hasAttack = iData.hasAttack || hasAttack;\r\n        // Initialize chat data.\r\n        const speaker = ChatMessage.getSpeaker({ actor: actor });\r\n        const iName = this.name;\r\n        // Otherwise, create a roll and send a chat message from it.\r\n        const targets = Array.from(game.user.targets);\r\n        //@ts-expect-error\r\n        const mRoll = this.data.data.mRoll || false;\r\n        //@ts-expect-error\r\n        return item.displayCard({ rollMode, createMessage, hasAttack, hasDamage, targets, mRoll });\r\n    }\r\n    /* -------------------------------------------- */\r\n    /*  Chat Message Helpers                        */\r\n    /* -------------------------------------------- */\r\n    static chatListeners(html) {\r\n        html.on(\"click\", \".card-buttons button\", this._onChatCardAction.bind(this));\r\n        html.on(\"click\", \".item-name\", this._onChatCardToggleContent.bind(this));\r\n        html.on(\"click\", \".attack-roll .roll-controls .accept\", this._rollDamage.bind(this));\r\n        html.on(\"hover\", \".attack-roll .flexrow .value\", function (event) {\r\n            event.preventDefault();\r\n            const element = this.closest(\"li.flexrow\");\r\n            element.querySelector(\".attack-roll .hover-roll\")?.classList.toggle(\"shown\", event.type == \"mouseenter\");\r\n        });\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Handle execution of a chat card action via a click event on one of the card buttons\r\n     * @param {Event} event       The originating click event\r\n     * @returns {Promise}         A promise which resolves once the handler workflow is complete\r\n     * @private\r\n     */\r\n    //@ts-expect-error\r\n    static async _onChatCardAction(event) {\r\n        event.preventDefault();\r\n        // Extract card data\r\n        const button = event.currentTarget;\r\n        const card = button.closest(\".chat-card\");\r\n        const messageId = card.closest(\".message\").dataset.messageId;\r\n        const message = game.messages.get(messageId);\r\n        const action = button.dataset.action;\r\n        const targetUuid = button.closest(\".flexrow\").dataset.targetId;\r\n        // Validate permission to proceed with the roll\r\n        const isTargetted = action === \"save\";\r\n        if (!(isTargetted || game.user.isGM || message.isAuthor))\r\n            return;\r\n        // Recover the actor for the chat card\r\n        const actor = await this._getChatCardActor(card);\r\n        if (!actor)\r\n            return;\r\n        // Get the Item from stored flag data or by the item ID on the Actor\r\n        const storedData = message.getFlag(\"ard20\", \"itemData\");\r\n        //@ts-expect-error\r\n        const item = storedData ? new this(storedData, { parent: actor }) : actor.items.get(card.dataset.itemId);\r\n        if (!item) {\r\n            return ui.notifications.error(game.i18n.format(\"ARd20.ActionWarningNoItem\", { item: card.dataset.itemId, name: actor.name }));\r\n        }\r\n        const spellLevel = parseInt(card.dataset.spellLevel) || null;\r\n        // Handle different actions\r\n        switch (action) {\r\n            case \"damage\":\r\n            case \"versatile\":\r\n                let dam = await item.rollDamage({\r\n                    critical: event.altKey,\r\n                    event: event,\r\n                    spellLevel: spellLevel,\r\n                    versatile: action === \"versatile\",\r\n                });\r\n                //const dom = new DOMParser().parseFromString(message.data.content,\"text/html\")\r\n                const html = $(message.data.content);\r\n                dam = await dam.render();\r\n                //dom.querySelector('button').replaceWith(dam)\r\n                if (targetUuid) {\r\n                    html.find(`[data-targetId=\"${targetUuid}\"]`).find(\"button\").replaceWith(dam);\r\n                }\r\n                else {\r\n                    html.find(\".damage-roll\").find(\"button\").replaceWith(dam);\r\n                }\r\n                //console.log(dom)\r\n                await message.update({ content: html[0].outerHTML });\r\n                break;\r\n            case \"formula\":\r\n                await item.rollFormula({ event, spellLevel });\r\n                break;\r\n            case \"save\":\r\n                const targets = this._getChatCardTargets(card);\r\n                for (let token of targets) {\r\n                    //@ts-expect-error\r\n                    const speaker = ChatMessage.getSpeaker({ scene: canvas.scene, token: token });\r\n                    //@ts-expect-error\r\n                    await token.actor.rollAbilitySave(button.dataset.ability, { event, speaker });\r\n                }\r\n                break;\r\n            case \"toolCheck\":\r\n                await item.rollToolCheck({ event });\r\n                break;\r\n            case \"placeTemplate\":\r\n                ///@ts-expect-error\r\n                const template = game.ard20.canvas.AbilityTemplate.fromItem(item);\r\n                if (template)\r\n                    template.drawPreview();\r\n                break;\r\n        }\r\n        // Re-enable the button\r\n        button.disabled = false;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Handle toggling the visibility of chat card content when the name is clicked\r\n     * @param {Event} event   The originating click event\r\n     * @private\r\n     */\r\n    static _onChatCardToggleContent(event) {\r\n        event.preventDefault();\r\n        const header = event.currentTarget;\r\n        const card = header.closest(\".chat-card\");\r\n        const content = card.querySelector(\".card-content\");\r\n        content.style.display = content.style.display === \"none\" ? \"block\" : \"none\";\r\n    }\r\n    async _applyDamage(dam, tData, tHealth, tActor) {\r\n        let value = dam.total;\r\n        console.log(\"урон до резистов: \", value);\r\n        dam.terms.forEach((term) => {\r\n            if (!(term instanceof OperatorTerm)) {\r\n                let damageType = term.options.damageType;\r\n                let res = tData.defences.damage[damageType[0]][damageType[1]];\r\n                if (res.type === \"imm\")\r\n                    console.log(\"Иммунитет\");\r\n                console.log(\"урон уменьшился с \", value);\r\n                value -= res.type === \"imm\" ? term.total : Math.min(res.value, term.total);\r\n                console.log(\"до\", value);\r\n            }\r\n        });\r\n        console.log(value, \"итоговый урон\");\r\n        tHealth -= value;\r\n        console.log(\"хп стало\", tHealth);\r\n        let obj = {};\r\n        obj[\"data.health.value\"] = tHealth;\r\n        if (game.user.isGM) {\r\n            await tActor.update(obj);\r\n        }\r\n        else {\r\n            game.socket.emit(\"system.ard20\", {\r\n                operation: \"updateActorData\",\r\n                actor: tActor,\r\n                update: obj,\r\n                value: value,\r\n            });\r\n        }\r\n    }\r\n    static async _rollDamage(event) {\r\n        event.preventDefault();\r\n        const element = event.currentTarget;\r\n        const card = element.closest(\".chat-card\");\r\n        const message = game.messages.get(card.closest(\".message\").dataset.messageId);\r\n        const targetUuid = element.closest(\"li.flexrow\").dataset.targetId;\r\n        const token = await fromUuid(targetUuid);\r\n        //@ts-expect-error\r\n        const tActor = token?.actor;\r\n        const tData = tActor.data.data;\r\n        let tHealth = tData.health.value;\r\n        console.log(tHealth, \"здоровье цели\");\r\n        // Recover the actor for the chat card\r\n        const actor = await this._getChatCardActor(card);\r\n        if (!actor)\r\n            return;\r\n        // Get the Item from stored flag data or by the item ID on the Actor\r\n        const storedData = message.getFlag(\"ard20\", \"itemData\");\r\n        //@ts-expect-error\r\n        const item = storedData ? new this(storedData, { parent: actor }) : actor.items.get(card.dataset.itemId);\r\n        if (!item) {\r\n            return ui.notifications.error(game.i18n.format(\"ARd20.ActionWarningNoItem\", { item: card.dataset.itemId, name: actor.name }));\r\n        }\r\n        const dam = await item.rollDamage({\r\n            event: event,\r\n            canMult: false,\r\n        });\r\n        const html = $(message.data.content);\r\n        let damHTML = await dam.render();\r\n        console.log(html.find(`[data-target-id=\"${targetUuid}\"]`).find(\".damage-roll\")[0]);\r\n        html.find(`[data-target-id=\"${targetUuid}\"]`).find(\".damage-roll\").append(damHTML);\r\n        html.find(`[data-target-id=\"${targetUuid}\"]`).find(\".accept\").remove();\r\n        console.log(html[0]);\r\n        await message.update({ content: html[0].outerHTML });\r\n        await item._applyDamage(dam, tData, tHealth, tActor);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Get the Actor which is the author of a chat card\r\n     * @param {HTMLElement} card    The chat card being used\r\n     * @return {Actor|null}         The Actor entity or null\r\n     * @private\r\n     */\r\n    static async _getChatCardActor(card) {\r\n        // Case 1 - a synthetic actor from a Token\r\n        if (card.dataset.tokenId) {\r\n            const token = await fromUuid(card.dataset.tokenId);\r\n            if (!token)\r\n                return null;\r\n            //@ts-expect-error\r\n            return token.actor;\r\n        }\r\n        // Case 2 - use Actor ID directory\r\n        const actorId = card.dataset.actorId;\r\n        return game.actors.get(actorId) || null;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Get the Actor which is the author of a chat card\r\n     * @param {HTMLElement} card    The chat card being used\r\n     * @return {Actor[]}            An Array of Actor entities, if any\r\n     * @private\r\n     */\r\n    static _getChatCardTargets(card) {\r\n        let targets = canvas.tokens.controlled.filter((t) => !!t.actor);\r\n        //@ts-expect-error\r\n        if (!targets.length && game.user.character)\r\n            targets = targets.concat(game.user.character.getActiveTokens());\r\n        if (!targets.length)\r\n            ui.notifications.warn(game.i18n.localize(\"ARd20.ActionWarningNoToken\"));\r\n        return targets;\r\n    }\r\n    /*showRollDetail(event){\r\n      event.preventDefault();\r\n      const elem = event.currentTarget;\r\n      const\r\n    }*/\r\n    async displayCard({ \r\n    //@ts-expect-error\r\n    rollMode, createMessage = true, hasAttack = Boolean(), hasDamage = Boolean(), targets = [], mRoll = Boolean(), } = {}) {\r\n        // Render the chat card template\r\n        let atk = {};\r\n        let dc = {};\r\n        let atkHTML = {};\r\n        let dmgHTML = {};\r\n        let result = {};\r\n        let hit = {};\r\n        let dmg = {};\r\n        let dieResultCss = {};\r\n        //@ts-expect-error\r\n        const def = this.data.data.attack?.def ?? \"reflex\";\r\n        const token = this.actor.token;\r\n        if (targets.length !== 0) {\r\n            //@ts-expect-error\r\n            let atkRoll = hasAttack ? await this.rollAttack(mRoll, { canMult: true }) : null;\r\n            let dmgRoll = hasDamage && !hasAttack ? await this.rollDamage({ canMult: true }) : null;\r\n            for (let [key, target] of Object.entries(targets)) {\r\n                if (atkRoll) {\r\n                    mRoll = atkRoll.options.mRoll;\r\n                    //@ts-expect-error\r\n                    dc[key] = target.actor.data.data.defences.stats[def].value;\r\n                    //@ts-expect-error\r\n                    atk[key] = hasAttack ? (Object.keys(atk).length === 0 || !mRoll ? atkRoll : await atkRoll.reroll()) : null;\r\n                    //@ts-expect-error\r\n                    console.log(atk[key]);\r\n                    //@ts-expect-error\r\n                    atkHTML[key] = hasAttack ? await atk[key].render() : null;\r\n                    //@ts-expect-error\r\n                    let d20 = atk[key] ? atk[key].terms[0] : null;\r\n                    //@ts-expect-error\r\n                    atk[key] = atk[key].total;\r\n                    //@ts-expect-error\r\n                    dieResultCss[key] =\r\n                        d20.total >= d20.options.critical ? \"d20crit\" : d20.total <= d20.options.fumble ? \"d20fumble\" : \"d20normal\";\r\n                    //@ts-expect-error\r\n                    result[key] = atk[key] > dc[key] ? \"hit\" : \"miss\";\r\n                    //@ts-expect-error\r\n                    hit[key] = result[key] === \"hit\" ? true : false;\r\n                }\r\n                else {\r\n                    mRoll = dmgRoll.options.mRoll;\r\n                    //@ts-expect-error\r\n                    dmg[key] = hasDamage ? (Object.keys(dmg).length === 0 || !mRoll ? dmgRoll : await dmgRoll.reroll()) : null;\r\n                    //@ts-expect-error\r\n                    dmgHTML[key] = hasDamage ? await dmg[key].render() : null;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //@ts-expect-error\r\n            atk[0] = hasAttack ? await this.rollAttack(mRoll) : null;\r\n            //@ts-expect-error\r\n            mRoll = atk[0] ? atk[0].options.mRoll : false;\r\n            //@ts-expect-error\r\n            atkHTML[0] = hasAttack ? await atk[0].render() : null;\r\n        }\r\n        //@ts-expect-error\r\n        let templateState = targets.size !== 0 ? (mRoll ? \"multiAttack\" : \"oneAttack\") : \"noTarget\";\r\n        const templateData = {\r\n            //@ts-expect-error\r\n            actor: this.actor.data,\r\n            tokenId: token?.uuid || null,\r\n            item: this.data,\r\n            data: this.getChatData(),\r\n            //@ts-expect-error\r\n            labels: this.labels,\r\n            hasAttack,\r\n            hasDamage,\r\n            atk,\r\n            atkHTML,\r\n            targets,\r\n            //@ts-expect-error\r\n            owner: this.actor.isOwner || game.user.isGM,\r\n            dc,\r\n            result,\r\n            hit,\r\n            dmgHTML,\r\n            dieResultCss,\r\n        };\r\n        const html = await renderTemplate(`systems/ard20/templates/chat/item-card-multiAttack.html`, templateData);\r\n        // Create the ChatMessage data object\r\n        const chatData = {\r\n            user: game.user.data._id,\r\n            type: CONST.CHAT_MESSAGE_TYPES.OTHER,\r\n            content: html,\r\n            //@ts-expect-error\r\n            flavor: this.data.data.chatFlavor || this.name,\r\n            //@ts-expect-error\r\n            speaker: ChatMessage.getSpeaker({ actor: this.actor, token }),\r\n            flags: { \"core.canPopout\": true },\r\n        };\r\n        // If the Item was destroyed in the process of displaying its card - embed the item data in the chat message\r\n        /*\r\n        if (this.data.type === \"consumable\" && !this.actor.items.has(this.id)) {\r\n          chatData.flags[\"ard20.itemData\"] = this.data;\r\n        }*/\r\n        // Apply the roll mode to adjust message visibility\r\n        ChatMessage.applyRollMode(chatData, rollMode || game.settings.get(\"core\", \"rollMode\"));\r\n        // Create the Chat Message or return its data\r\n        return createMessage ? ChatMessage.create(chatData) : chatData;\r\n    }\r\n    /**\r\n     * Prepare an object of chat data used to display a card for the Item in the chat log.\r\n     * @param {object} htmlOptions    Options used by the TextEditor.enrichHTML function.\r\n     * @returns {object}              An object of chat data to render.\r\n     */\r\n    getChatData(htmlOptions = {}) {\r\n        const data = foundry.utils.deepClone(this.data.data);\r\n        // Rich text description\r\n        //data.description.value = TextEditor.enrichHTML(data.description.value, htmlOptions);\r\n        // Item type specific properties\r\n        const props = [];\r\n        // Equipment properties\r\n        /*if (data.hasOwnProperty(\"equipped\") && ![\"loot\", \"tool\"].includes(this.data.type)) {\r\n          /*if (data.attunement === CONFIG.ARd20.attunementTypes.REQUIRED) {\r\n            props.push(game.i18n.localize(CONFIG.ARd20.attunements[CONFIG.ARd20.attunementTypes.REQUIRED]));\r\n          }*/\r\n        /*props.push(game.i18n.localize(data.equipped ? \"ARd20.Equipped\" : \"ARd20.Unequipped\"));\r\n        }\r\n    \r\n        // Ability activation properties\r\n        if (data.hasOwnProperty(\"activation\")) {\r\n          props.push(labels.activation + (data.activation?.condition ? ` (${data.activation.condition})` : \"\"), labels.target, labels.range, labels.duration);\r\n        }\r\n    \r\n        // Filter properties and return\r\n        data.properties = props.filter((p) => !!p);\r\n        */\r\n        return data;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Prepare chat card data for weapon type items.\r\n     * @param {object} data     Copy of item data being use to display the chat message.\r\n     * @param {object} labels   Specially prepared item labels.\r\n     * @param {string[]} props  Existing list of properties to be displayed. *Will be mutated.*\r\n     * @private\r\n     */\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Place an attack roll using an item (weapon, feat, spell, or equipment)\r\n     * Rely upon the d20Roll logic for the core implementation\r\n     *\r\n     * @param {object} options        Roll options which are configured and provided to the d20Roll function\r\n     * @returns {Promise<Roll|null>}   A Promise which resolves to the created Roll instance\r\n     */\r\n    async rollAttack(mRoll = Boolean(), canMult = Boolean(), options = {}) {\r\n        console.log(canMult);\r\n        const itemData = this.data.data;\r\n        //@ts-expect-error\r\n        const flags = this.actor.data.flags.ard20 || {};\r\n        let title = `${this.name} - ${game.i18n.localize(\"ARd20.AttackRoll\")}`;\r\n        const { parts, rollData } = this.getAttackToHit();\r\n        const targets = game.user.targets;\r\n        //@ts-expect-error\r\n        if (options.parts?.length > 0) {\r\n            //@ts-expect-error\r\n            parts.push(...options.parts);\r\n        }\r\n        let rollConfig = {\r\n            parts: parts,\r\n            actor: this.actor,\r\n            data: rollData,\r\n            title: title,\r\n            flavor: title,\r\n            dialogOptions: {\r\n                width: 400,\r\n            },\r\n            chatMessage: true,\r\n            options: {\r\n                create: false,\r\n            },\r\n            targetValue: targets,\r\n            canMult: canMult,\r\n            mRoll: mRoll,\r\n        };\r\n        //@ts-expect-error\r\n        rollConfig = mergeObject(rollConfig, options);\r\n        //@ts-expect-error\r\n        const roll = await d20Roll(rollConfig);\r\n        if (roll === false)\r\n            return null;\r\n        return roll;\r\n    }\r\n    rollDamage({ critical = false, event = null, spellLevel = null, versatile = false, options = {}, mRoll = Boolean(), canMult = Boolean(), } = {}) {\r\n        console.log(canMult);\r\n        const iData = this.data.data;\r\n        const aData = this.actor.data.data;\r\n        //@ts-expect-error\r\n        const parts = iData.damage.current.parts.map((d) => d[0]);\r\n        //@ts-expect-error\r\n        const damType = iData.damage.current.parts.map((d) => d[1].map((c, ind) => {\r\n            //@ts-expect-error\r\n            let a = game.i18n.localize(CONFIG.ARd20.DamageTypes[c[0]]);\r\n            //@ts-expect-error\r\n            let b = game.i18n.localize(CONFIG.ARd20.DamageSubTypes[c[1]]);\r\n            let obj = { key: ind, label: `${a} ${b}` };\r\n            return obj;\r\n        }));\r\n        //@ts-expect-error\r\n        options.damageType = iData.damage.current.parts.map((d) => d[1]);\r\n        const hasAttack = false;\r\n        const hasDamage = true;\r\n        //@ts-expect-error\r\n        const rollData = this.getRollData(hasAttack, hasDamage);\r\n        const rollConfig = {\r\n            actor: this.actor,\r\n            //@ts-expect-error\r\n            critical: critical ?? event?.altkey ?? false,\r\n            data: rollData,\r\n            event: event,\r\n            parts: parts,\r\n            canMult: canMult,\r\n            damType: damType,\r\n            mRoll: mRoll,\r\n        };\r\n        //@ts-expect-error\r\n        return damageRoll(mergeObject(rollConfig, options));\r\n    }\r\n    /**\r\n     * Update a label to the Item detailing its total to hit bonus.\r\n     * Sources:\r\n     * - item entity's innate attack bonus\r\n     * - item's actor's proficiency bonus if applicable\r\n     * - item's actor's global bonuses to the given item type\r\n     * - item's ammunition if applicable\r\n     *\r\n     * @returns {{rollData: object, parts: string[]}|null}  Data used in the item's Attack roll.\r\n     */\r\n    getAttackToHit() {\r\n        const itemData = this.data.data;\r\n        const hasAttack = true;\r\n        const hasDamage = false;\r\n        //if (!this.hasAttack || !itemData) return;\r\n        //@ts-expect-error\r\n        const rollData = this.getRollData(hasAttack, hasDamage);\r\n        console.log(\"ROLL DATA\", rollData);\r\n        // Define Roll bonuses\r\n        const parts = [];\r\n        // Include the item's innate attack bonus as the initial value and label\r\n        //@ts-expect-error\r\n        if (itemData.attackBonus) {\r\n            //@ts-expect-error\r\n            parts.push(itemData.attackBonus);\r\n            //@ts-expect-error\r\n            this.labels.toHit = itemData.attackBonus;\r\n        }\r\n        // Take no further action for un-owned items\r\n        if (!this.isOwned)\r\n            return { rollData, parts };\r\n        // Ability score modifier\r\n        parts.push(\"@prof\", \"@mod\");\r\n        /* Add proficiency bonus if an explicit proficiency flag is present or for non-item features\r\n        if ( ![\"weapon\", \"consumable\"].includes(this.data.type)) {\r\n          parts.push(\"@prof\");\r\n          if ( this.data.data.prof?.hasProficiency ) {\r\n            rollData.prof = this.data.data.prof.term;\r\n          }\r\n        }\r\n        */\r\n        /* Actor-level global bonus to attack rolls\r\n        const actorBonus = this.actor.data.data.bonuses?.[itemData.actionType] || {};\r\n        if (actorBonus.attack) parts.push(actorBonus.attack);\r\n        */\r\n        /* One-time bonus provided by consumed ammunition\r\n        if (itemData.consume?.type === \"ammo\" && this.actor.items) {\r\n          const ammoItemData = this.actor.items.get(itemData.consume.target)?.data;\r\n    \r\n          if (ammoItemData) {\r\n            const ammoItemQuantity = ammoItemData.data.quantity;\r\n            const ammoCanBeConsumed = ammoItemQuantity && ammoItemQuantity - (itemData.consume.amount ?? 0) >= 0;\r\n            const ammoItemAttackBonus = ammoItemData.data.attackBonus;\r\n            const ammoIsTypeConsumable = ammoItemData.type === \"consumable\" && ammoItemData.data.consumableType === \"ammo\";\r\n            if (ammoCanBeConsumed && ammoItemAttackBonus && ammoIsTypeConsumable) {\r\n              parts.push(\"@ammo\");\r\n              rollData.ammo = ammoItemAttackBonus;\r\n            }\r\n          }\r\n        }\r\n        */\r\n        // Condense the resulting attack bonus formula into a simplified label\r\n        //@ts-expect-error\r\n        const roll = new Roll(parts.join(\"+\"), rollData);\r\n        //@ts-expect-error\r\n        const formula = simplifyRollFormula(roll.formula);\r\n        //@ts-expect-error\r\n        this.labels.toHit = !/^[+-]/.test(formula) ? `+ ${formula}` : formula;\r\n        // Update labels and return the prepared roll data\r\n        return { rollData, parts };\r\n    }\r\n}\r\n","/**\r\n * Manage Active Effect instances through the Actor Sheet via effect control buttons.\r\n * @param {MouseEvent} event      The left-click event on the effect control\r\n * @param {Actor|Item} owner      The owning entity which manages this effect\r\n */\r\nexport function onManageActiveEffect(event, owner) {\r\n    event.preventDefault();\r\n    const a = event.currentTarget;\r\n    //@ts-expect-error\r\n    const li = a.closest(\"li\");\r\n    const effect = li.dataset.effectId ? owner.effects.get(li.dataset.effectId) : null;\r\n    //@ts-expect-error\r\n    switch (a.dataset.action) {\r\n        case \"create\":\r\n            return owner.createEmbeddedDocuments(\"ActiveEffect\", [{\r\n                    label: \"New Effect\",\r\n                    icon: \"icons/svg/aura.svg\",\r\n                    origin: owner.uuid,\r\n                    \"duration.rounds\": li.dataset.effectType === \"temporary\" ? 1 : undefined,\r\n                    disabled: li.dataset.effectType === \"inactive\"\r\n                }]);\r\n        case \"edit\":\r\n            return effect.sheet.render(true);\r\n        case \"delete\":\r\n            return effect.delete();\r\n        case \"toggle\":\r\n            return effect.update({ disabled: !effect.data.disabled });\r\n    }\r\n}\r\n/**\r\n * Prepare the data structure for Active Effects which are currently applied to an Actor or Item.\r\n * @param {ActiveEffect[]} effects    The array of Active Effect instances to prepare sheet data for\r\n * @return {object}                   Data for rendering\r\n */\r\nexport function prepareActiveEffectCategories(effects) {\r\n    // Define effect header categories\r\n    const categories = {\r\n        temporary: {\r\n            type: \"temporary\",\r\n            label: \"Temporary Effects\",\r\n            effects: []\r\n        },\r\n        passive: {\r\n            type: \"passive\",\r\n            label: \"Passive Effects\",\r\n            effects: []\r\n        },\r\n        inactive: {\r\n            type: \"inactive\",\r\n            label: \"Inactive Effects\",\r\n            effects: []\r\n        }\r\n    };\r\n    // Iterate over active effects, classifying them into categories\r\n    for (let e of effects) {\r\n        //@ts-expect-error\r\n        e._getSourceName(); // Trigger a lookup for the source name\r\n        //@ts-expect-error\r\n        if (e.data.disabled)\r\n            categories.inactive.effects.push(e);\r\n        //@ts-expect-error\r\n        else if (e.isTemporary)\r\n            categories.temporary.effects.push(e);\r\n        //@ts-expect-error\r\n        else\r\n            categories.passive.effects.push(e);\r\n    }\r\n    return categories;\r\n}\r\n","import { obj_entries } from \"../ard20.js\";\r\nimport { ARd20Item } from \"../documents/item.js\";\r\n//@ts-expect-error\r\nexport class CharacterAdvancement extends FormApplication {\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            classes: [\"ard20\"],\r\n            title: \"Character Advancement\",\r\n            template: \"systems/ard20/templates/actor/parts/actor-adv.html\",\r\n            id: \"actor-adv\",\r\n            width: 1000,\r\n            height: \"auto\",\r\n            tabs: [\r\n                {\r\n                    navSelector: \".sheet-tabs\",\r\n                    contentSelector: \".sheet-body\",\r\n                    initial: \"stats\",\r\n                },\r\n            ],\r\n            closeOnSubmit: false,\r\n        });\r\n    }\r\n    async InitilizeData() {\r\n        if (this.form)\r\n            return;\r\n        const pack = await this.getPacks();\r\n        const folder = this.getFolders();\r\n        const rList = await this.getRacesList(pack, folder);\r\n        const fList = await this.getFeaturesList(pack, folder);\r\n        const actorData = this.object.data.data;\r\n        const startingData = {\r\n            isReady: duplicate(actorData.isReady),\r\n            attributes: duplicate(actorData.attributes),\r\n            skills: duplicate(actorData.skills),\r\n            xp: duplicate(actorData.advancement.xp),\r\n            profs: duplicate(actorData.proficiencies),\r\n            health: duplicate(actorData.health),\r\n            races: { list: rList, chosen: \"\" },\r\n            count: {\r\n                // counter for skills and feats\r\n                skills: {\r\n                    // count skills by their level\r\n                    0: 0,\r\n                    1: 0,\r\n                    2: 0,\r\n                    3: 0,\r\n                    4: 0,\r\n                },\r\n                feats: {\r\n                    // count feats by their source\r\n                    mar: 0,\r\n                    mag: 0,\r\n                    div: 0,\r\n                    pri: 0,\r\n                    psy: 0,\r\n                },\r\n            },\r\n            content: {\r\n                // descriptions for skills and feats\r\n                skills: {},\r\n                feats: {},\r\n            },\r\n            feats: {\r\n                learned: fList.learnedFeatures,\r\n                awail: fList.temp_feat_list, // array of feats that are available to learn\r\n            },\r\n            allow: {\r\n                attribute: actorData.isReady,\r\n                race: actorData.isReady,\r\n                final: actorData.isReady,\r\n            },\r\n            hover: {\r\n                attribute: \"\",\r\n                skill: \"\",\r\n                race: \"\",\r\n                feat: \"\",\r\n            },\r\n        };\r\n        startingData.xp.get = startingData.isReady || startingData.xp.used !== 0 ? startingData.xp.get : 10000;\r\n        let awailFeats = startingData.feats.awail;\r\n        let name_array = [];\r\n        for (let i of startingData.feats.learned) {\r\n            name_array.push(i.name);\r\n        }\r\n        awailFeats.forEach((v, k) => {\r\n            if (name_array.includes(v.name)) {\r\n                console.log(\"this item is already learned\", awailFeats[k]);\r\n                awailFeats[k] = foundry.utils.deepClone(startingData.feats.learned.filter((item) => item.name === v.name)[0]);\r\n            }\r\n        });\r\n        awailFeats = awailFeats.filter((item) => {\r\n            if (item.type === \"feature\")\r\n                return !name_array.includes(item.name) || item.data.level.current !== item.data.level.max;\r\n        });\r\n        startingData.feats.awail = awailFeats;\r\n        // count skills by rank\r\n        for (let [k, v] of obj_entries(CONFIG.ARd20.Skills)) {\r\n            if (startingData.skills[k].level === 0) {\r\n                startingData.count.skills[0] += 1;\r\n            }\r\n            else if (startingData.skills[k].level === 1) {\r\n                startingData.count.skills[1] += 1;\r\n            }\r\n            else if (startingData.skills[k].level === 2) {\r\n                startingData.count.skills[2] += 1;\r\n            }\r\n        }\r\n        // count feats by source\r\n        for (let v of startingData.feats.learned) {\r\n            console.log(v);\r\n            if (v.type === \"feature\")\r\n                v.data.source.value.forEach((val) => {\r\n                    console.log(val);\r\n                    startingData.count.feats[val] += 1;\r\n                });\r\n        }\r\n        startingData.hover.feat = TextEditor.enrichHTML(startingData.feats.awail[0]?.data.description);\r\n        return startingData;\r\n    }\r\n    async getPacks() {\r\n        let pack_list = []; // array of feats from Compendium\r\n        let pack_name = [];\r\n        for (const key of game.settings.get(\"ard20\", \"feat\").packs) {\r\n            if (game.packs.filter((pack) => pack.metadata.label === key).length !== 0) {\r\n                let feat_list = [];\r\n                feat_list.push(Array.from(game.packs.filter((pack) => pack.metadata.label === key && pack.documentName === \"Item\")[0].index));\r\n                feat_list = feat_list.flat();\r\n                for (const feat of feat_list) {\r\n                    if (feat instanceof ARd20Item) {\r\n                        const new_key = game.packs.filter((pack) => pack.metadata.label === key)[0].metadata.package + \".\" + key;\r\n                        const doc = await game.packs.get(new_key).getDocument(feat.id);\r\n                        if (doc instanceof ARd20Item) {\r\n                            const item = doc.toObject();\r\n                            item.data = foundry.utils.deepClone(doc.data.data);\r\n                            pack_list.push(item);\r\n                            pack_name.push(item.name);\r\n                        }\r\n                    }\r\n                }\r\n                pack_list = pack_list.flat();\r\n            }\r\n        }\r\n        return {\r\n            pack_list,\r\n            pack_name,\r\n        };\r\n    }\r\n    getFolders() {\r\n        let folder_list = []; // array of feats from game folders\r\n        let folder_name = [];\r\n        for (let key of game.settings.get(\"ard20\", \"feat\").folders) {\r\n            if (game.folders.filter((folder) => folder.data.name === key).length !== 0) {\r\n                let feat_list = [];\r\n                feat_list.push(game.folders.filter((folder) => folder.data.name === key && folder.data.type === \"Item\")[0].contents);\r\n                feat_list = feat_list.flat();\r\n                for (let feat of feat_list) {\r\n                    if (feat instanceof ARd20Item) {\r\n                        console.log(\"item added from folder \", feat);\r\n                        const item = feat.toObject();\r\n                        item.data = foundry.utils.deepClone(feat.data.data);\r\n                        folder_list.push(item);\r\n                        folder_name.push(item.name);\r\n                    }\r\n                }\r\n                folder_list = folder_list.flat();\r\n            }\r\n        }\r\n        return {\r\n            folder_list,\r\n            folder_name,\r\n        };\r\n    }\r\n    async getRacesList(pack, folder) {\r\n        const pack_list = pack.pack_list;\r\n        const pack_name = pack.pack_name;\r\n        const folder_list = folder.folder_list;\r\n        let race_pack_list = [];\r\n        let race_folder_list = [];\r\n        pack_list.forEach((item) => {\r\n            if (item.type === \"race\") {\r\n                let raceItem = { ...item, chosen: false };\r\n                race_pack_list.push(raceItem);\r\n            }\r\n        });\r\n        folder_list.forEach((item) => {\r\n            if (item.type === \"race\") {\r\n                let raceItem = { ...item, chosen: false };\r\n                race_folder_list.push(raceItem);\r\n            }\r\n        });\r\n        return race_pack_list.concat(race_folder_list.filter((item) => !pack_name.includes(item.name)));\r\n    }\r\n    async getFeaturesList(pack, folder) {\r\n        const pack_list = pack.pack_list;\r\n        const pack_name = pack.pack_name;\r\n        const folder_list = folder.folder_list;\r\n        let feat_pack_list = [];\r\n        pack_list.forEach((item) => {\r\n            if (item.type === \"feature\") {\r\n                let FeatureItem = { ...item, currentXP: 0, isEq: false, isXP: false };\r\n                feat_pack_list.push(FeatureItem);\r\n            }\r\n        });\r\n        let feat_folder_list = [];\r\n        folder_list.forEach((item) => {\r\n            if (item.type === \"feature\") {\r\n                let FeatureItem = { ...item, currentXP: 0, isEq: false, isXP: false };\r\n                feat_folder_list.push(FeatureItem);\r\n            }\r\n        });\r\n        let temp_feat_list = feat_pack_list.concat(feat_folder_list.filter((item) => !pack_name.includes(item.name)));\r\n        let learnedFeatures = [];\r\n        this.object.itemTypes.feature.forEach((item) => {\r\n            if (item.data.type === \"feature\") {\r\n                let FeatureItem = { ...item.data, currentXP: 0, isEq: false };\r\n                learnedFeatures.push(FeatureItem);\r\n            }\r\n        });\r\n        return { temp_feat_list, learnedFeatures };\r\n    }\r\n    async getData() {\r\n        this.options.data = !this.form ? (await this.InitilizeData()) : this.options.data;\r\n        const templateData = this.options.data;\r\n        const count = templateData.count;\r\n        const attributes = templateData.attributes;\r\n        const xp = templateData.xp;\r\n        const raceList = templateData.races.list;\r\n        const raceChosen = templateData.races.chosen;\r\n        const isReady = templateData.isReady;\r\n        const skills = templateData.skills;\r\n        const featsAwail = templateData.feats.awail;\r\n        const featsLearned = templateData.feats.learned;\r\n        const health = templateData.health;\r\n        count.feats.all = 0;\r\n        count.feats.all = Object.values(count.feats).reduce(function (a, b) {\r\n            return a + b;\r\n        }, 0);\r\n        /*\r\n         * Calculate attributes' modifiers and xp cost\r\n         */\r\n        for (let [k, v] of obj_entries(CONFIG.ARd20.Attributes)) {\r\n            const race_abil = raceList.filter((race) => race.chosen === true)?.[0]?.data.bonus.attributes[k].value ?? 0;\r\n            attributes[k].mod = Math.floor((attributes[k].value - 10) / 2);\r\n            attributes[k].xp = CONFIG.ARd20.AbilXP[attributes[k].value - 5];\r\n            attributes[k].isEq = attributes[k].value === this.object.data.data.attributes[k].value;\r\n            attributes[k].isXP = xp.get < attributes[k].xp;\r\n            attributes[k].total = isReady ? attributes[k].value : attributes[k].value + race_abil;\r\n            attributes[k].mod = Math.floor((attributes[k].total - 10) / 2);\r\n        }\r\n        /*\r\n         * Calculate skills' xp cost\r\n         */\r\n        for (let [k, v] of obj_entries(CONFIG.ARd20.Skills)) {\r\n            templateData.skills[k].rankName =\r\n                game.i18n.localize(CONFIG.ARd20.Rank[templateData.skills[k].level]) ??\r\n                    CONFIG.ARd20.Rank[templateData.skills[k].level];\r\n            templateData.skills[k].xp =\r\n                templateData.skills[k].level < 2\r\n                    ? CONFIG.ARd20.SkillXP[templateData.skills[k].level][templateData.count.skills[templateData.skills[k].level + 1]]\r\n                    : false;\r\n            templateData.skills[k].isEq = templateData.skills[k].level === this.object.data.data.skills[k].level;\r\n            templateData.skills[k].isXP =\r\n                templateData.xp.get < templateData.skills[k].xp || templateData.skills[k].level > 1;\r\n        }\r\n        for (let v of templateData.profs.weapon) {\r\n            //@ts-expect-error\r\n            v.value_hover = game.i18n.localize(CONFIG.ARd20.Rank[v.value]) ?? CONFIG.ARd20.Rank[v.value];\r\n        }\r\n        /*\r\n         * Calculate features cost and their availattribute\r\n         */\r\n        featsAwail.forEach((object) => {\r\n            if (object.type === \"feature\") {\r\n                let pass = [];\r\n                object.pass = [];\r\n                let allCount = templateData.count.feats.all;\r\n                let featCount = 0;\r\n                object.data.source.value.forEach((val) => (featCount += templateData.count.feats[val]));\r\n                for (let i = object.data.level.initial; i < object.data.level.max; i++) {\r\n                    object.data.xp.AdvancedCost[i] = object.data.xp.basicCost[i]\r\n                        ? Math.ceil((object.data.xp.basicCost[i] * (1 + 0.01 * (allCount - featCount))) / 5) * 5\r\n                        : 0;\r\n                }\r\n                object.currentXP = object.data.xp.AdvancedCost[object.data.level.initial];\r\n                object.isEq = object.data.level.initial === object.data.level.current || object.data.level.initial === 0;\r\n                object.isXP =\r\n                    object.data.level.initial === object.data.level.max ||\r\n                        object.data.xp.AdvancedCost[object.data.level.initial] > templateData.xp.get;\r\n                object.data.req.values.forEach((r) => {\r\n                    switch (r.type) {\r\n                        case \"attribute\": //check if character's attribute is equal or higher than value entered in feature requirements\r\n                            //@ts-expect-error\r\n                            r.pass.forEach((_item, index) => (r.pass[index] = r.input[index] <= attributes[r.value].total));\r\n                            break;\r\n                        case \"skill\": //check if character's skill rank is equal or higher than value entered in feature requirements\r\n                            //@ts-expect-error\r\n                            r.pass.forEach((_item, index) => (r.pass[index] = r.input[index] <= skills[r.value].level));\r\n                            break;\r\n                        case \"feat\": //check if character has features (and their level is equal or higher) that listed in feature requirements\r\n                            if (featsAwail.filter((item) => item.name === r.name)?.[0] !== undefined) {\r\n                                const featLevel = featsAwail.filter((item) => item.name === r.name)[0].data.level.initial;\r\n                                r.pass.forEach((_item, index) => (r.pass[index] = r.input[index] <= featLevel));\r\n                            }\r\n                            else if (featsLearned.filter((item) => item.name === r.name)?.[0] !== undefined) {\r\n                                const featLevel = featsLearned.filter((item) => item.name === r.name)[0].data.level.initial;\r\n                                r.pass.forEach((_item, index) => (r.pass[index] = r.input[index] <= featLevel));\r\n                            }\r\n                            break;\r\n                    }\r\n                    pass.push(r.pass);\r\n                });\r\n                object.pass = [];\r\n                /*\r\n                 * Check the custom logic in feature requirements. For example \"Strength 15 OR Arcana Basic\"\r\n                 */\r\n                for (let i = 0; i <= object.data.level.initial; i++) {\r\n                    if (i === object.data.level.max || pass.length === 0)\r\n                        break;\r\n                    let exp = object.data.req.logic[i];\r\n                    let lev_array = exp.match(/\\d*/g).filter((item) => item !== \"\");\r\n                    console.log(lev_array);\r\n                    let f = {};\r\n                    lev_array.forEach((item) => {\r\n                        exp = exp.replace(item, `c${item}`);\r\n                        f[\"c\" + item] = pass[parseInt(item) - 1][i];\r\n                    });\r\n                    //@ts-expect-error\r\n                    let filter = filtrex.compileExpression(exp);\r\n                    object.pass[i] = Boolean(filter(f));\r\n                }\r\n                object.isXP = object.pass[object.data.level.initial] || object.pass.length === 0 ? object.isXP : true;\r\n            }\r\n        });\r\n        /*\r\n         * Calculate starting HP based on character's CON and race\r\n         */\r\n        raceList.forEach((race) => {\r\n            race.chosen = raceChosen === race._id ? true : false;\r\n        });\r\n        let raceHP = 0;\r\n        raceList.forEach((race) => {\r\n            if (race._id === raceChosen) {\r\n                raceHP = race.data.health;\r\n            }\r\n        });\r\n        health.max = attributes.con.value + raceHP;\r\n        // At character creation, check all conditions\r\n        if (!this.object.data.data.isReady) {\r\n            let abil_sum = 0;\r\n            for (let [key, abil] of obj_entries(templateData.attributes)) {\r\n                abil_sum += abil.value;\r\n            }\r\n            templateData.allow.attribute = abil_sum >= 60 && abil_sum <= 80 ? true : false;\r\n            templateData.allow.race = Boolean(templateData.races.chosen) ? true : false;\r\n            let allow_list = [];\r\n            for (let [key, item] of obj_entries(templateData.allow)) {\r\n                if (key === \"final\") {\r\n                    continue;\r\n                }\r\n                allow_list.push(item);\r\n            }\r\n            templateData.allow.final = !allow_list.includes(false) || templateData.isReady ? true : false;\r\n        }\r\n        /*\r\n         * Final Template Data\r\n         */\r\n        console.log(this.form);\r\n        console.log(templateData);\r\n        return templateData;\r\n    }\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n        html.find(\".change\").on(\"click\", this._onChange.bind(this));\r\n        html.find(\"td:not(.description)\").on(\"mouseover\", this._onHover.bind(this));\r\n    }\r\n    //@ts-expect-error\r\n    _onChange(event) {\r\n        const button = event.currentTarget;\r\n        const data = this.options.data;\r\n        switch (button.dataset.type) {\r\n            case \"attribute\":\r\n                switch (button.dataset.action) {\r\n                    case \"plus\":\r\n                        //@ts-expect-error\r\n                        data.attributes[button.dataset.key].value += 1;\r\n                        //@ts-expect-error\r\n                        data.xp.get -= data.attributes[button.dataset.key].xp;\r\n                        //@ts-expect-error\r\n                        data.xp.used += data.attributes[button.dataset.key].xp;\r\n                        break;\r\n                    case \"minus\":\r\n                        //@ts-expect-error\r\n                        data.attributes[button.dataset.key].value -= 1;\r\n                        data.xp.get +=\r\n                            //@ts-expect-error\r\n                            CONFIG.ARd20.AbilXP[data.attributes[button.dataset.key].value - 5] ??\r\n                                //@ts-expect-error\r\n                                CONFIG.ARd20.AbilXP[data.attributes[button.dataset.key].value - 5];\r\n                        data.xp.used -=\r\n                            //@ts-expect-error\r\n                            CONFIG.ARd20.AbilXP[data.attributes[button.dataset.key].value - 5] ??\r\n                                //@ts-expect-error\r\n                                CONFIG.ARd20.AbilXP[data.attributes[button.dataset.key].value - 5];\r\n                        break;\r\n                }\r\n                break;\r\n            case \"skill\":\r\n                switch (button.dataset.action) {\r\n                    case \"plus\":\r\n                        //@ts-expect-error\r\n                        data.skills[button.dataset.key].level += 1;\r\n                        //@ts-expect-error\r\n                        data.xp.get -= data.skills[button.dataset.key].xp;\r\n                        //@ts-expect-error\r\n                        data.xp.used += data.skills[button.dataset.key].xp;\r\n                        //@ts-expect-error\r\n                        data.count.skills[data.skills[button.dataset.key].level] += 1;\r\n                        break;\r\n                    case \"minus\":\r\n                        //@ts-expect-error\r\n                        data.skills[button.dataset.key].level -= 1;\r\n                        //@ts-expect-error\r\n                        data.count.skills[data.skills[button.dataset.key].level + 1] -= 1;\r\n                        data.xp.get +=\r\n                            //@ts-expect-error\r\n                            CONFIG.ARd20.SkillXP[data.skills[button.dataset.key].level][\r\n                            //@ts-expect-error\r\n                            data.count.skills[data.skills[button.dataset.key].level + 1]];\r\n                        data.xp.used -=\r\n                            //@ts-expect-error\r\n                            CONFIG.ARd20.SkillXP[data.skills[button.dataset.key].level][\r\n                            //@ts-expect-error\r\n                            data.count.skills[data.skills[button.dataset.key].level + 1]];\r\n                        break;\r\n                }\r\n                break;\r\n            case \"prof\":\r\n                switch (button.dataset.action) {\r\n                    case \"plus\":\r\n                        data.profs.weapon[button.dataset.key].value += 1;\r\n                        data.count.feats.mar += 1;\r\n                        break;\r\n                    case \"minus\":\r\n                        data.profs.weapon[button.dataset.key].value -= 1;\r\n                        data.count.feats.mar -= 1;\r\n                        break;\r\n                }\r\n                break;\r\n            case \"feat\":\r\n                switch (button.dataset.action) {\r\n                    case \"plus\":\r\n                        data.feats.awail[button.dataset.key].data.source.value.forEach((val) => (data.count.feats[val] += data.feats.awail[button.dataset.key].data.level.initial === 0 ? 1 : 0));\r\n                        data.xp.get -=\r\n                            data.feats.awail[button.dataset.key].data.xp.AdvancedCost[data.feats.awail[button.dataset.key].data.level.initial];\r\n                        data.xp.used +=\r\n                            data.feats.awail[button.dataset.key].data.xp.AdvancedCost[data.feats.awail[button.dataset.key].data.level.initial];\r\n                        data.feats.awail[button.dataset.key].data.level.initial += 1;\r\n                        break;\r\n                    case \"minus\":\r\n                        data.feats.awail[button.dataset.key].data.level.initial -= 1;\r\n                        data.feats.awail[button.dataset.key].data.source.value.forEach((val) => (data.count.feats[val] -= data.feats.awail[button.dataset.key].data.level.initial === 0 ? 1 : 0));\r\n                        data.xp.get +=\r\n                            data.feats.awail[button.dataset.key].data.xp.AdvancedCost[data.feats.awail[button.dataset.key].data.level.initial];\r\n                        data.xp.used -=\r\n                            data.feats.awail[button.dataset.key].data.xp.AdvancedCost[data.feats.awail[button.dataset.key].data.level.initial];\r\n                        break;\r\n                }\r\n                break;\r\n        }\r\n        this.render();\r\n    }\r\n    //@ts-expect-error\r\n    _onChangeInput(event) {\r\n        super._onChangeInput(event);\r\n        const data = this.options.data;\r\n        const k = parseInt(event.currentTarget.dataset.key);\r\n        data.races.list.forEach((race, key) => {\r\n            data.races.list[key].chosen = key === k ? true : false;\r\n            data.races.chosen = data.races.list[key].chosen ? race._id : data.races.chosen;\r\n        });\r\n        this.render();\r\n    }\r\n    //@ts-expect-error\r\n    _onHover(event) {\r\n        event.preventDefault();\r\n        const data = this.options.data;\r\n        const element = event.currentTarget;\r\n        const table = element.closest(\"div.tab\");\r\n        const tr = element.closest(\"tr\");\r\n        const trDOM = tr.querySelectorAll(\"td:not(.description)\");\r\n        const tdDesc = table.querySelector(\"td.description\");\r\n        const bColor = window.getComputedStyle(element).getPropertyValue(\"background-color\");\r\n        tdDesc.style[\"background-color\"] = bColor;\r\n        //@ts-expect-error\r\n        trDOM?.forEach((td) => {\r\n            td.classList.toggle(\"chosen\", event.type == \"mouseenter\");\r\n            if (td.nextElementSibling === null || td.nextElementSibling.classList[0] === \"description\") {\r\n                td.classList.toggle(\"last\", event.type == \"mouseenter\");\r\n            }\r\n        });\r\n        tr.nextElementSibling\r\n            ?.querySelectorAll(\"td:not(.description)\")\r\n            //@ts-expect-error\r\n            .forEach((td) => td.classList.toggle(\"under-chosen\", event.type == \"mouseenter\"));\r\n        tr.previousElementSibling\r\n            ?.querySelectorAll(\"th:not(.description)\")\r\n            //@ts-expect-error\r\n            .forEach((th) => th.classList.toggle(\"over-chosen\", event.type == \"mouseenter\"));\r\n        tr.previousElementSibling\r\n            ?.querySelectorAll(\"td:not(.description)\")\r\n            //@ts-expect-error\r\n            .forEach((td) => td.classList.toggle(\"over-chosen\", event.type == \"mouseenter\"));\r\n        const type = table.dataset.tab;\r\n        if (type !== \"feats\")\r\n            return;\r\n        const key = tr.dataset.key;\r\n        const hover_desc = TextEditor.enrichHTML(data.feats.awail[key].data.description);\r\n        if (hover_desc === data.hover.feat)\r\n            return;\r\n        data.hover.feat = hover_desc;\r\n        this.render();\r\n    }\r\n    async _updateObject(_event, formData) {\r\n        let updateData = expandObject(formData);\r\n        const actor = this.object;\r\n        const data = this.options.data;\r\n        this.render();\r\n        const obj = {};\r\n        for (let [key, abil] of obj_entries(data.attributes)) {\r\n            obj[`data.attributes.${key}.value`] = data.attributes[key].total;\r\n        }\r\n        obj[\"data.health.max\"] = data.health.max;\r\n        if (data.isReady) {\r\n            obj[\"data.advancement.xp\"] = updateData.xp;\r\n        }\r\n        obj[\"data.skills\"] = updateData.skills;\r\n        obj[\"data.profs\"] = updateData.profs;\r\n        obj[\"data.isReady\"] = data.allow.final;\r\n        console.log(obj);\r\n        const feats_data = {\r\n            new: [],\r\n            exist: [],\r\n        };\r\n        const feats = data.feats.awail.filter((item) => item.data.level.initial > item.data.level.current);\r\n        feats.forEach((awItem, _index) => {\r\n            if (data.feats.learned.length > 0) {\r\n                data.feats.learned.forEach((learnedItem, _index) => {\r\n                    if (awItem._id === learnedItem._id) {\r\n                        feats_data.exist.push(awItem);\r\n                    }\r\n                    else {\r\n                        feats_data.new.push(awItem);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                feats_data.new.push(awItem);\r\n            }\r\n        });\r\n        let pass = [];\r\n        feats_data.exist.forEach((item) => {\r\n            //@ts-expect-error\r\n            pass.push(item.pass.slice(0, item.pass.length - 1));\r\n        });\r\n        feats_data.new.forEach((item) => {\r\n            //@ts-expect-error\r\n            pass.push(item.pass.slice(0, item.pass.length - 1));\r\n        });\r\n        pass = pass.flat();\r\n        console.log(pass);\r\n        if (!data.isReady && !data.allow.final) {\r\n            ui.notifications.error(`Something not ready for your character to be created. Check the list`);\r\n        }\r\n        else if (pass.includes(false)) {\r\n            ui.notifications.error(`Some changes in your features do not comply with the requirements`);\r\n        }\r\n        else {\r\n            await actor.update(obj);\r\n            if (actor.itemTypes.race.length === 0) {\r\n                let race_list = this.options.data.races.list.filter((race) => race.chosen === true);\r\n                //@ts-expect-error\r\n                await actor.createEmbeddedDocuments(\"Item\", race_list);\r\n            }\r\n            if (feats_data.exist.length > 0) {\r\n                await actor.updateEmbeddedDocuments(\"Item\", feats_data.exist.map((item) => ({\r\n                    _id: item._id,\r\n                    \"data.level.initial\": item.data.level.initial,\r\n                })));\r\n            }\r\n            if (feats_data.new.length > 0) {\r\n                //@ts-expect-error\r\n                await actor.createEmbeddedDocuments(\"Item\", feats_data.new);\r\n            }\r\n            this.close();\r\n        }\r\n    }\r\n}\r\n","import { onManageActiveEffect, prepareActiveEffectCategories } from \"../helpers/effects.js\";\r\nimport { CharacterAdvancement } from \"../helpers/cha-adv.js\";\r\nimport { getValues, obj_entries } from \"../ard20.js\";\r\n/**\r\n * Extend the basic ActorSheet with some very simple modifications\r\n * @extends {ActorSheet}\r\n */\r\nexport class ARd20ActorSheet extends ActorSheet {\r\n    /** @override */\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            classes: [\"ard20\", \"sheet\", \"actor\"],\r\n            template: \"systems/ard20/templates/actor/actor-sheet.html\",\r\n            width: 600,\r\n            height: 600,\r\n            tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"main\" }],\r\n        });\r\n    }\r\n    /** @override */\r\n    get template() {\r\n        return `systems/ard20/templates/actor/actor-${this.actor.data.type}-sheet.html`;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @override */\r\n    getData() {\r\n        // Retrieve the data structure from the base sheet. You can inspect or log\r\n        // the context variable to see the structure, but some key properties for\r\n        // sheets are the actor object, the data object, whether or not it's\r\n        // editable, the items array, and the effects array.\r\n        const context = super.getData();\r\n        // Use a safe clone of the actor data for further operations.\r\n        const actorData = this.actor.data;\r\n        // Add the actor's data to context.data for easier access, as well as flags.\r\n        //@ts-expect-error\r\n        context.data = actorData.data;\r\n        //@ts-expect-error\r\n        context.flags = actorData.flags;\r\n        //@ts-expect-error\r\n        context.config = CONFIG.ARd20;\r\n        //@ts-expect-error\r\n        context.isGM = game.user.isGM;\r\n        // Prepare character data and items.\r\n        if (actorData.type === \"character\") {\r\n            //@ts-expect-error\r\n            this._prepareItems(context);\r\n            this._prepareCharacterData(context);\r\n        }\r\n        // Prepare NPC data and items.\r\n        //@ts-expect-error\r\n        if (actorData.type === \"npc\") {\r\n            //@ts-expect-error\r\n            this._prepareItems(context);\r\n        }\r\n        // Add roll data for TinyMCE editors.\r\n        //@ts-expect-error\r\n        context.rollData = context.actor.getRollData();\r\n        // Prepare active effects\r\n        //@ts-expect-error\r\n        context.effects = prepareActiveEffectCategories(this.actor.effects);\r\n        return context;\r\n    }\r\n    /**\r\n     * Organize and classify Items for Character sheets.\r\n     *\r\n     * @param {Object} actorData The actor to prepare.\r\n     *\r\n     * @return {undefined}\r\n     */\r\n    //@ts-expect-error\r\n    _prepareCharacterData(context) {\r\n        // Handle ability scores.\r\n        for (let [k, v] of obj_entries(context.data.attributes)) {\r\n            //@ts-expect-error\r\n            v.label = game.i18n.localize(getValues(CONFIG.ARd20.Attributes, k)) ?? k;\r\n        }\r\n        for (let [k, v] of obj_entries(context.data.skills)) {\r\n            //@ts-expect-error\r\n            v.name = game.i18n.localize(getValues(CONFIG.ARd20.Skills, k)) ?? k;\r\n            v.rank_name = game.i18n.localize(getValues(CONFIG.ARd20.Rank, v.rank)) ?? v.rank;\r\n        }\r\n    }\r\n    /**\r\n     * Organize and classify Items for Character sheets.\r\n     *\r\n     * @param {Object} actorData The actor to prepare.\r\n     *\r\n     * @return {undefined}\r\n     */\r\n    _prepareItems(context) {\r\n        // Initialize containers.\r\n        const gear = [];\r\n        const features = [];\r\n        const weapons = [];\r\n        const armor = [];\r\n        const spells = {\r\n            0: [],\r\n            1: [],\r\n            2: [],\r\n            3: [],\r\n            4: [],\r\n            5: [],\r\n            6: [],\r\n            7: [],\r\n            8: [],\r\n            9: [],\r\n        };\r\n        // Iterate through items, allocating to containers\r\n        for (let i of context.items) {\r\n            //@ts-expect-error\r\n            i.img = i.img || DEFAULT_TOKEN;\r\n            // Append to gear.\r\n            if (i.type === \"item\") {\r\n                gear.push(i);\r\n            }\r\n            // Append to features.\r\n            else if (i.type === \"feature\") {\r\n                features.push(i);\r\n            }\r\n            // Append to spells.\r\n            else if (i.type === \"spell\") {\r\n                //@ts-expect-error\r\n                if (i.data.spellLevel != undefined) {\r\n                    //@ts-expect-error\r\n                    spells[i.data.spellLevel].push(i);\r\n                }\r\n            }\r\n            else if (i.type === \"armor\" || i.type === \"weapon\") {\r\n                const isActive = getProperty(i.data, \"equipped\");\r\n                //@ts-expect-error\r\n                i.toggleClass = isActive ? \"active\" : \"\";\r\n                //@ts-expect-error\r\n                i.toggleTitle = game.i18n.localize(isActive ? \"ARd20.Equipped\" : \"ARd20.Unequipped\");\r\n                //@ts-expect-error\r\n                i.data.equipped = !isActive;\r\n                if (i.type === \"armor\")\r\n                    armor.push(i);\r\n                else\r\n                    weapons.push(i);\r\n            }\r\n        }\r\n        // Assign and return\r\n        //@ts-expect-error\r\n        context.gear = gear;\r\n        //@ts-expect-error\r\n        context.features = features;\r\n        //@ts-expect-error\r\n        context.spells = spells;\r\n        //@ts-expect-error\r\n        context.weapons = weapons;\r\n        //@ts-expect-error\r\n        context.armor = armor;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @override */\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n        //@ts-expect-error\r\n        $(\".select2\", html).select2();\r\n        // Render the item sheet for viewing/editing prior to the editable check.\r\n        html.find(\".item-toggle\").click(this._onToggleItem.bind(this));\r\n        html.find(\".item-edit\").click((ev) => {\r\n            const li = $(ev.currentTarget).parents(\".item\");\r\n            const item = this.actor.items.get(li.data(\"itemId\"));\r\n            item.sheet.render(true);\r\n        });\r\n        // -------------------------------------------------------------\r\n        // Everything below here is only needed if the sheet is editable\r\n        if (!this.isEditable)\r\n            return;\r\n        // Add Inventory Item\r\n        html.find(\".item-create\").click(this._onItemCreate.bind(this));\r\n        // Delete Inventory Item\r\n        html.find(\".item-delete\").click((ev) => {\r\n            const li = $(ev.currentTarget).parents(\".item\");\r\n            const item = this.actor.items.get(li.data(\"itemId\"));\r\n            item.delete();\r\n            li.slideUp(200, () => this.render(false));\r\n        });\r\n        // Active Effect management\r\n        html.find(\".effect-control\").click((ev) => onManageActiveEffect(ev, this.actor));\r\n        //roll abilities and skills\r\n        html.find(\".ability-name\").click(this._onRollAbilityTest.bind(this));\r\n        html.find(\".skill-name\").click(this._onRollSkillCheck.bind(this));\r\n        //open \"character advancement\" window\r\n        html.find(\".config-button\").click(this._OnAdvanceMenu.bind(this));\r\n        //item's roll\r\n        html.find(\".item-roll\").click(this._onItemRoll.bind(this));\r\n        // Drag events for macros.\r\n        if (this.actor.isOwner) {\r\n            let handler = (ev) => this._onDragStart(ev);\r\n            html.find(\"li.item\").each((i, li) => {\r\n                if (li.classList.contains(\"inventory-header\"))\r\n                    return;\r\n                li.setAttribute(\"draggable\", \"true\");\r\n                li.addEventListener(\"dragstart\", handler, false);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Open @class CharacterAdvancement\r\n     */\r\n    _OnAdvanceMenu(event) {\r\n        event.preventDefault();\r\n        const button = event.currentTarget;\r\n        let app;\r\n        //@ts-ignore\r\n        switch (button.dataset?.action) {\r\n            case \"adv\":\r\n                app = new CharacterAdvancement(this.object);\r\n                break;\r\n        }\r\n        app?.render(true);\r\n    }\r\n    /**\r\n     * Change @param data.equipped\r\n     * by toggling it on sheet\r\n     */\r\n    _onToggleItem(event) {\r\n        event.preventDefault();\r\n        //@ts-ignore\r\n        const itemid = event.currentTarget.closest(\".item\").dataset.itemId;\r\n        const item = this.actor.items.get(itemid);\r\n        //const attr = item.data.type === \"spell\" ? \"data.preparation.prepared\" : \"data.equipped\";\r\n        const attr = \"data.equipped\";\r\n        return item.update({ [attr]: !getProperty(item.data, attr) });\r\n    }\r\n    _onRollAbilityTest(event) {\r\n        event.preventDefault();\r\n        //@ts-ignore\r\n        let ability = event.currentTarget.parentElement.dataset.ability;\r\n        return this.actor.rollAbilityTest(ability, { event: event });\r\n    }\r\n    _onRollSkillCheck(event) {\r\n        event.preventDefault();\r\n        //@ts-ignore\r\n        let skill = event.currentTarget.parentElement.dataset.skill;\r\n        return this.actor.rollSkill(skill, { event: event });\r\n    }\r\n    _onItemRoll(event) {\r\n        event.preventDefault();\r\n        console.log(\"БРОСОК\");\r\n        //@ts-ignore\r\n        const id = event.currentTarget.closest(\".item\").dataset.itemId;\r\n        const item = this.actor.items.get(id);\r\n        const hasAttack = item.data.data.hasAttack;\r\n        const hasDamage = item.data.data.hasDamage;\r\n        //@ts-expect-error\r\n        if (item)\r\n            return item.roll({ hasAttack, hasDamage });\r\n    }\r\n    /**\r\n     * Handle creating a new Owned Item for the actor using initial data defined in the HTML dataset\r\n     * @param {Event} event   The originating click event\r\n     * @private\r\n     */\r\n    async _onItemCreate(event) {\r\n        event.preventDefault();\r\n        const header = event.currentTarget;\r\n        // Get the type of item to create.\r\n        //@ts-ignore\r\n        const type = header.dataset.type;\r\n        // Grab any data associated with this control.\r\n        //@ts-ignore\r\n        const data = duplicate(header.dataset);\r\n        // Initialize a default name.\r\n        const name = `New ${type.capitalize()}`;\r\n        // Prepare the item object.\r\n        const itemData = {\r\n            name: name,\r\n            type: type,\r\n            data: data,\r\n        };\r\n        // Remove the type from the dataset since it's in the itemData.type prop.\r\n        delete itemData.data[\"type\"];\r\n        // Finally, create the item!\r\n        return await Item.create(itemData, { parent: this.actor });\r\n    }\r\n    /**\r\n     * Handle clickable rolls.\r\n     * @param {Event} event   The originating click event\r\n     * @private\r\n     */\r\n    _onRoll(event) {\r\n        event.preventDefault();\r\n        const element = event.currentTarget;\r\n        //@ts-expect-error\r\n        const dataset = element.dataset;\r\n        // Handle item rolls.\r\n        if (dataset.rollType) {\r\n            if (dataset.rollType == \"item\") {\r\n                //@ts-ignore\r\n                const itemid = element.closest(\".item\").dataset.itemId;\r\n                const item = this.actor.items.get(itemid);\r\n                //@ts-expect-error\r\n                if (item)\r\n                    return item.roll();\r\n            }\r\n            /*else if (dataset.rollType==='weapon'){\r\n              const itemid = element.closest(\".item\").dataset.itemId\r\n              const item = this.actor.items.get(itemid)\r\n              if (item) return item.DamageRoll()\r\n            }*/\r\n        }\r\n    }\r\n    /**\r\n     * _onDrop method with\r\n     */\r\n    async _onDrop(event) {\r\n        if (!game.user.isGM) {\r\n            ui.notifications.error(\"you don't have permissions to add documents to this actor manually\");\r\n            return;\r\n        }\r\n        // Try to extract the data\r\n        let data;\r\n        try {\r\n            data = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n        const actor = this.actor;\r\n        /**\r\n         * A hook event that fires when some useful data is dropped onto an ActorSheet.\r\n         * @function dropActorSheetData\r\n         * @memberof hookEvents\r\n         * @param {Actor} actor      The Actor\r\n         * @param {ActorSheet} sheet The ActorSheet application\r\n         * @param {object} data      The data that has been dropped onto the sheet\r\n         */\r\n        const allowed = Hooks.call(\"dropActorSheetData\", actor, this, data);\r\n        if (allowed === false)\r\n            return;\r\n        // Handle different data types\r\n        switch (data.type) {\r\n            case \"ActiveEffect\":\r\n                return this._onDropActiveEffect(event, data);\r\n            case \"Actor\":\r\n                return this._onDropActor(event, data);\r\n            case \"Item\":\r\n                return this._onDropItem(event, data);\r\n            case \"Folder\":\r\n                return this._onDropFolder(event, data);\r\n        }\r\n    }\r\n}\r\n","import { getValues, obj_entries } from \"../ard20.js\";\r\nimport { ARd20Item } from \"../documents/item.js\";\r\n//@ts-expect-error\r\nexport class FeatRequirements extends FormApplication {\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            classes: [\"ard20\"],\r\n            title: \"Feature Requirements\",\r\n            template: \"systems/ard20/templates/app/feat_req.hbs\",\r\n            id: \"feat_req\",\r\n            width: 800,\r\n            height: \"auto\",\r\n        });\r\n    }\r\n    async getData() {\r\n        this.options.data = !this.form ? (await this.InitializeData()) : this.options.data;\r\n        //create easier acces to templateData\r\n        const templateData = this.options.data;\r\n        const req = templateData.req;\r\n        const reqValues = req.values;\r\n        const reqLogic = req.logic;\r\n        const data = templateData.data;\r\n        let formApp = templateData.formApp;\r\n        console.log(\"data created\");\r\n        //creating array with all possible requirements' names\r\n        let name_array = [];\r\n        for (let i of data) {\r\n            name_array.push(i.name);\r\n        }\r\n        //iterate through created requirements\r\n        reqValues.forEach((value, index) => {\r\n            //setting correct type of reqirement\r\n            reqValues[index].type = formApp?.values?.[index]?.type ?? (reqValues[index].type || \"attribute\");\r\n            //creating array with from data array with elements that are same type\r\n            let subtype_list = data.filter((item) => item.type === reqValues[index].type);\r\n            //setting correct requirement name\r\n            reqValues[index].name =\r\n                subtype_list.filter((item) => {\r\n                    item.name === formApp.values?.[index]?.name;\r\n                }).length > 0\r\n                    ? formApp.values?.[index].name || reqValues[index].name\r\n                    : reqValues[index].name || subtype_list[0].name;\r\n            reqValues[index].subtype_list = subtype_list.map((item) => item.name);\r\n            reqValues[index].input = formApp.values[index]?.input ?? (reqValues[index].input || []);\r\n            reqValues[index].value = data.filter((item) => item.name === reqValues[index].name)[0].value;\r\n            for (let i = 0; i < this.object.data.data.level.max; i++) {\r\n                let inputElement = reqValues[index].input[i];\r\n                let previousElement = reqValues[index].input[i - 1] ?? 0;\r\n                switch (reqValues[index].type) {\r\n                    case \"skill\":\r\n                        inputElement = inputElement > 4 ? 1 : inputElement || 1;\r\n                        break;\r\n                    case \"attribute\":\r\n                        inputElement = inputElement || 10;\r\n                        break;\r\n                    case \"feature\":\r\n                        const maxLevel = reqValues[index].value;\r\n                        inputElement = Math.min(inputElement, maxLevel);\r\n                }\r\n                inputElement = Math.max(inputElement, previousElement);\r\n                reqValues[index].input[i] = inputElement;\r\n            }\r\n        });\r\n        reqLogic.forEach((value, index) => {\r\n            reqLogic[index] = formApp.logic?.[index] ?? reqLogic[index];\r\n        });\r\n        templateData.formApp = req;\r\n        console.log(templateData);\r\n        return templateData;\r\n    }\r\n    /**\r\n     * Initialize Data for FormApplication\r\n     * Data structure looks like this:\r\n     * @param {Array} req - already existing requirements\r\n     * @param {Array} type_list - list of types for requirements, can be attribute, skill or feat\r\n     * @param feat.awail - array of Items with type feat from Folders and Compendium Packs\r\n     * @param feat.current - array of Items that was already used\r\n     * @returns {object} templateData\r\n     */\r\n    async InitializeData() {\r\n        if (this.form)\r\n            return;\r\n        console.log(\"First launch\");\r\n        const featList = await this.getFeats();\r\n        const pack_list = featList.pack_list;\r\n        const folder_list = featList.folder_list;\r\n        const folder_name = featList.folder_name;\r\n        const data = []; //list of attributes, skills and feats that user can use as requirement\r\n        for (let [k, v] of Object.entries(CONFIG.ARd20.Attributes)) {\r\n            data.push({\r\n                name: game.i18n.localize(getValues(CONFIG.ARd20.Attributes, k)) ?? k,\r\n                value: k,\r\n                type: \"attribute\",\r\n            });\r\n        }\r\n        for (let [k, v] of obj_entries(CONFIG.ARd20.Skills)) {\r\n            data.push({\r\n                name: game.i18n.localize(getValues(CONFIG.ARd20.Skills, k)) ?? k,\r\n                value: k,\r\n                type: \"skill\",\r\n            });\r\n        }\r\n        const arr = Object.values(CONFIG.ARd20.Rank).filter((value, index) => {\r\n            if (index !== 0)\r\n                return CONFIG.ARd20.Rank[index];\r\n        });\r\n        const rank = Object.assign({}, arr);\r\n        const templateData = {\r\n            formApp: {\r\n                values: [],\r\n                logic: [],\r\n            },\r\n            req: foundry.utils.deepClone(this.object.data.data.req),\r\n            type_list: [\"attribute\", \"skill\", \"feature\"],\r\n            feat: {\r\n                awail: pack_list.concat(folder_list.filter((item) => pack_list.indexOf(item) < 0)),\r\n                current: this.object.data.data.req.values.filter((item) => item.type === \"feature\"),\r\n            },\r\n            data: data,\r\n            rank: rank,\r\n        };\r\n        const formApp = templateData.formApp;\r\n        const req = templateData.req;\r\n        const type_list = templateData.type_list;\r\n        const featAwail = templateData.feat.awail;\r\n        const featCurrent = templateData.feat.current;\r\n        let name_array = [];\r\n        for (let i of featCurrent) {\r\n            name_array.push(i.name);\r\n        }\r\n        featAwail.forEach((item, index) => {\r\n            if (item.name === this.object.name) {\r\n                console.log(item.name, \" matches name of the feat\");\r\n                featAwail.splice(index, 1);\r\n            }\r\n            else if (name_array.includes(item.name)) {\r\n                console.log(item.name, \"this feat is already included\", index);\r\n                item.input = featCurrent[featCurrent.indexOf(featCurrent.filter((feat) => feat.name === item.name)[0])].input;\r\n                featAwail.splice(index, 1);\r\n            }\r\n            if (featAwail.filter((feat) => feat.name === item.name).length !== 0) {\r\n                data.push({ name: item.name, type: \"feature\", value: item.value });\r\n            }\r\n        });\r\n        return templateData;\r\n    }\r\n    /**\r\n     * Get features from folders and packs that were configured in settings\r\n     * @returns {} {pack_list, folder_list, folder_name}\r\n     */\r\n    async getFeats() {\r\n        let pack_list = [];\r\n        let folder_list = [];\r\n        let folder_name = [];\r\n        const packs = game.settings.get(\"ard20\", \"feat\").packs;\r\n        const folders = game.settings.get(\"ard20\", \"feat\").folders;\r\n        for (let key of packs) {\r\n            if (game.packs.filter((pack) => pack.metadata.label === key).length !== 0) {\r\n                let feat_list = [];\r\n                feat_list.push(Array.from(game.packs.filter((pack) => pack.metadata.label === key && pack.metadata.entity === \"Item\")[0].index));\r\n                feat_list = feat_list.flat();\r\n                for (let feat of feat_list) {\r\n                    if (feat instanceof ARd20Item) {\r\n                        const new_key = game.packs.filter((pack) => pack.metadata.label === key)[0].metadata.package + \".\" + key;\r\n                        const doc = await game.packs.get(new_key).getDocument(feat.id);\r\n                        if (doc instanceof ARd20Item) {\r\n                            if (doc.data.type === \"feature\") {\r\n                                let item = doc.toObject();\r\n                                item.data = doc.data.data;\r\n                                const feature = {\r\n                                    name: item.name,\r\n                                    type: \"feature\",\r\n                                    input: [],\r\n                                    pass: [],\r\n                                    subtype_list: [],\r\n                                    value: item.data.level.max,\r\n                                };\r\n                                pack_list.push(feature);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let key of folders) {\r\n            if (game.folders.filter((folder) => folder.data.name === key).length !== 0) {\r\n                let feat_list = [];\r\n                feat_list.push(game.folders.filter((folder) => folder.data.name === key && folder.data.type === \"Item\")[0].contents);\r\n                feat_list = feat_list.flat();\r\n                for (let feat of feat_list) {\r\n                    if (feat instanceof ARd20Item && feat.data.type === \"feature\") {\r\n                        console.log(\"item added from folder \", feat);\r\n                        const item = feat.toObject();\r\n                        item.data = foundry.utils.deepClone(feat.data.data);\r\n                        const feature = {\r\n                            name: item.name,\r\n                            type: \"feature\",\r\n                            input: [],\r\n                            pass: [],\r\n                            subtype_list: [],\r\n                            value: item.data.level.max,\r\n                        };\r\n                        folder_list.push(feature);\r\n                        folder_name.push(item.name);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { pack_list, folder_list, folder_name };\r\n    }\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n        html.find(\".item-create\").on(\"click\", this._onAdd.bind(this));\r\n        html.find(\".item-delete\").on(\"click\", this._Delete.bind(this));\r\n    }\r\n    /**\r\n     * Add new requirement. By default it \"Strength>=10\" for every feat's level.\r\n     * @param event\r\n     */\r\n    async _onAdd(event) {\r\n        event.preventDefault();\r\n        const req = this.options.data.req;\r\n        let sub_list = []; //temporary list with attributes\r\n        for (let [k, i] of obj_entries(CONFIG.ARd20.Attributes)) {\r\n            sub_list.push(k);\r\n        }\r\n        //create varible for easier access to maximum level of feature\r\n        const maxLevel = this.object.data.data.level.max;\r\n        //create default value object\r\n        const defaultValue = {\r\n            name: \"Strength\",\r\n            type: \"attribute\",\r\n            pass: new Array(maxLevel).fill(false),\r\n            subtype_list: sub_list,\r\n            value: \"str\",\r\n            input: new Array(maxLevel).fill(10),\r\n        };\r\n        req.values.push(defaultValue);\r\n        this.render();\r\n    }\r\n    /**\r\n     * Delete existing requirement\r\n     * @param event\r\n     */\r\n    async _Delete(event) {\r\n        event.preventDefault();\r\n        const req = this.options.data.req;\r\n        req.values.splice(event.currentTarget.dataset.key, 1);\r\n        this.render();\r\n    }\r\n    /**\r\n     * Save typed-in values\r\n     * @param event\r\n     */\r\n    _onChangeInput(event) {\r\n        super._onChangeInput(event);\r\n        const data = this.options.data;\r\n        const formApp = data.formApp;\r\n        const k = event.currentTarget.dataset.key;\r\n        const i = event.currentTarget.dataset.order;\r\n        console.log(foundry.utils.expandObject(this._getSubmitData()));\r\n        const req = foundry.utils.expandObject(this._getSubmitData()).req;\r\n        switch (event.currentTarget.dataset.type) {\r\n            case \"value\":\r\n                formApp.values[k].type = req.values[k].type;\r\n                formApp.values[k].name = req.values[k].name;\r\n                formApp.values[k].input[i] = req.values[k].input[i];\r\n                break;\r\n            case \"logic\":\r\n                formApp.logic[k] = req.logic[k];\r\n                break;\r\n        }\r\n        this.getData();\r\n        this.render();\r\n    }\r\n    async _updateObject(event, formData) {\r\n        const item = this.object;\r\n        this.render();\r\n        const req = this.options.data.req;\r\n        const obj = {};\r\n        obj[\"data.req.values\"] = req.values;\r\n        obj[\"data.req.logic\"] = req.logic;\r\n        console.log(obj);\r\n        await item.update(obj);\r\n    }\r\n}\r\n","import { obj_entries } from \"../ard20.js\";\r\nimport { onManageActiveEffect, prepareActiveEffectCategories } from \"../helpers/effects.js\";\r\nimport { FeatRequirements } from \"../helpers/feat_req.js\";\r\n/**\r\n * Extend the basic ItemSheet with some very simple modifications\r\n * @extends {ItemSheet}\r\n */\r\nexport class ARd20ItemSheet extends ItemSheet {\r\n    /** @override */\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            classes: [\"ard20\", \"sheet\", \"item\"],\r\n            width: 520,\r\n            height: 480,\r\n            tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"description\" }],\r\n        });\r\n    }\r\n    /** @override */\r\n    get template() {\r\n        const path = \"systems/ard20/templates/item\";\r\n        return `${path}/item-${this.item.data.type}-sheet.html`;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @override */\r\n    getData() {\r\n        // Retrieve base data structure.\r\n        const context = super.getData();\r\n        // Use a safe clone of the item data for further operations.\r\n        //@ts-expect-error\r\n        const itemData = context.item.data;\r\n        //@ts-expect-error\r\n        context.config = CONFIG.ARd20;\r\n        // Retrieve the roll data for TinyMCE editors.\r\n        //@ts-expect-error\r\n        context.rollData = {};\r\n        let actor = this.object?.parent ?? null;\r\n        if (actor) {\r\n            //@ts-expect-error\r\n            context.rollData = actor.getRollData();\r\n        }\r\n        // Add the actor's data to context.data for easier access, as well as flags.\r\n        //@ts-expect-error\r\n        context.data = itemData.data;\r\n        //@ts-expect-error\r\n        context.flags = itemData.flags;\r\n        //@ts-expect-error\r\n        context.isGM = game.user.isGM;\r\n        //@ts-expect-error\r\n        context.type = context.item.type;\r\n        //@ts-expect-error\r\n        context.effects = prepareActiveEffectCategories(this.item.effects);\r\n        return context;\r\n    }\r\n    _getSubmitData(updateData = {}) {\r\n        // Create the expanded update data object\r\n        if (this.form === null)\r\n            return;\r\n        //@ts-expect-error\r\n        const fd = new FormDataExtended(this.form, { editors: this.editors });\r\n        let data = fd.toObject();\r\n        if (updateData)\r\n            data = mergeObject(data, updateData);\r\n        else\r\n            data = expandObject(data);\r\n        // Handle Damage array\r\n        //@ts-expect-error\r\n        const damage = data.data?.damage;\r\n        if (damage) {\r\n            if (damage.parts) {\r\n                damage.damType = Object.values(damage?.damType || {});\r\n                damage.parts = Object.values(damage?.parts || {}).map(function (d, ind) {\r\n                    let a = [];\r\n                    if (damage.damType[ind].length !== 0) {\r\n                        damage.damType[ind].forEach((sub, i) => a.push(JSON.parse(damage.damType[ind][i])));\r\n                    }\r\n                    //@ts-expect-error\r\n                    return [d[0] || \"\", a];\r\n                });\r\n            }\r\n            else {\r\n                for (let [key, type] of obj_entries(damage)) {\r\n                    for (let [k, prof] of obj_entries(type)) {\r\n                        prof.damType = Object.values(prof?.damType || {});\r\n                        prof.parts = Object.values(prof?.parts || {}).map(function (d, ind) {\r\n                            let a = [];\r\n                            if (prof.damType[ind].length !== 0 && prof.damType[ind][0] !== \"\") {\r\n                                prof.damType[ind].forEach((sub, i) => a.push(JSON.parse(prof.damType[ind][i])));\r\n                            }\r\n                            //@ts-expect-error\r\n                            return [d[0] || \"\", a];\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return flattenObject(data);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @override */\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n        const edit = !this.isEditable;\r\n        const context = this.getData();\r\n        //@ts-expect-error\r\n        function formatSelection(state) {\r\n            const parent = $(state.element).parent().prop(\"tagName\");\r\n            if (!state.id || parent !== \"OPTGROUP\")\r\n                return state.text;\r\n            const optgroup = $(state.element).parent().attr(\"label\");\r\n            const subtype = state.element.value.match(/(\\w+)/g)[1];\r\n            const url = `systems/ard20/css/${subtype}.svg`;\r\n            return `<div><img style=\"width:15px; background-color:black; margin-left:2px\" src=${url} />${optgroup} ${state.text}</div>`;\r\n        }\r\n        //@ts-expect-error\r\n        function formatResult(state) {\r\n            const parent = $(state.element).parent().prop(\"tagName\");\r\n            if (!state.id || parent !== \"OPTGROUP\")\r\n                return state.text;\r\n            const subtype = state.element.value.match(/(\\w+)/g)[1];\r\n            const url = `systems/ard20/css/${subtype}.svg`;\r\n            return `<div><img style=\"width:15px; background-color:black; margin-left:2px\" src=${url} /> ${state.text}</div>`;\r\n        }\r\n        $(`select.select2`, html)\r\n            //@ts-expect-error\r\n            .select2({\r\n            theme: \"filled\",\r\n            width: \"auto\",\r\n            dropdownAutoWidth: true,\r\n            disabled: edit,\r\n            templateSelection: formatSelection,\r\n            templateResult: formatResult,\r\n            //@ts-expect-error\r\n            escapeMarkup: function (m) {\r\n                return m;\r\n            },\r\n        })\r\n            //@ts-expect-error\r\n            .val(function (index, value) {\r\n            //@ts-expect-error\r\n            const name = $(\"select.select2\", html)[index].name;\r\n            const val = getProperty(context, name);\r\n            return val;\r\n        })\r\n            .trigger(\"change\");\r\n        $(\"select\").on(\"select2:unselect\", function (evt) {\r\n            //@ts-expect-error\r\n            if (!evt.params.originalEvent) {\r\n                return;\r\n            }\r\n            //@ts-expect-error\r\n            evt.params.originalEvent.stopPropagation();\r\n        });\r\n        // Everything below here is only needed if the sheet is editable\r\n        if (!this.isEditable)\r\n            return;\r\n        //@ts-expect-error\r\n        html.find(\".effect-control\").click((ev) => onManageActiveEffect(ev, this.item));\r\n        // Roll handlers, click handlers, etc. would go here.\r\n        html.find(\".config-button\").click(this._FeatReq.bind(this));\r\n        html.find(\".damage-control\").click(this._onDamageControl.bind(this));\r\n    }\r\n    //@ts-expect-error\r\n    _FeatReq(event) {\r\n        event.preventDefault();\r\n        const button = event.currentTarget;\r\n        let app;\r\n        switch (button.dataset.action) {\r\n            case \"feat-req\":\r\n                //@ts-expect-error\r\n                app = new FeatRequirements(this.object);\r\n                break;\r\n        }\r\n        app?.render(true);\r\n    }\r\n    //@ts-expect-error\r\n    async _onDamageControl(event) {\r\n        event.preventDefault();\r\n        const a = event.currentTarget;\r\n        if (a.classList.contains(\"add-damage\")) {\r\n            //await this._onSubmit(event);\r\n            let path = a.dataset.type ? \"data.damage\" + a.dataset.type : \"data.damage\";\r\n            const damage = getProperty(this.item.data, path);\r\n            damage.damType = damage.damType || [];\r\n            const partsPath = path + \".parts\";\r\n            const damTypePath = path + \".damType\";\r\n            const update = {};\r\n            update[partsPath] = damage.parts.concat([[\"\", [\"\", \"\"]]]);\r\n            update[damTypePath] = damage.damType?.concat([[\"\"]]);\r\n            await this.item.update(update);\r\n        }\r\n        if (a.classList.contains(\"delete-damage\")) {\r\n            //await this._onSubmit(event);\r\n            const li = a.closest(\".damage-part\");\r\n            let path = a.dataset.type ? \"data.damage\" + a.dataset.type : \"data.damage\";\r\n            const damage = getProperty(this.item.data, path);\r\n            console.log(damage);\r\n            damage.parts.splice(Number(li.dataset.damagePart), 1);\r\n            damage.damType.splice(Number(li.dataset.damagePart), 1);\r\n            const partsPath = path + \".parts\";\r\n            const damTypePath = path + \".damType\";\r\n            const update = {};\r\n            update[partsPath] = damage.parts;\r\n            update[damTypePath] = damage.damType;\r\n            await this.item.update(update);\r\n        }\r\n    }\r\n    //@ts-expect-error\r\n    async _onSubmit(...args) {\r\n        if (this._tabs[0].active === \"data\")\r\n            this.position.height = \"auto\";\r\n        //@ts-expect-error\r\n        await super._onSubmit(...args);\r\n    }\r\n}\r\n","/**\r\n * Define a set of template paths to pre-load\r\n * Pre-loaded templates are compiled and cached for fast access when rendering\r\n * @return {Promise}\r\n */\r\nexport const preloadHandlebarsTemplates = async function () {\r\n    return loadTemplates([\r\n        // Actor partials.\r\n        \"systems/ard20/templates/actor/parts/actor-features.html\",\r\n        \"systems/ard20/templates/actor/parts/actor-items.html\",\r\n        \"systems/ard20/templates/actor/parts/actor-spells.html\",\r\n        \"systems/ard20/templates/actor/parts/actor-effects.html\",\r\n        \"systems/ard20/templates/actor/parts/actor-equip.html\",\r\n        // Character Advancement\r\n        \"systems/ard20/templates/actor/parts/actor-adv.html\",\r\n        // Settings\r\n        \"systems/ard20/templates/app/prof-settings.html\",\r\n        \"systems/ard20/templates/app/feat-settings.html\",\r\n        // Requirements for features\r\n        \"systems/ard20/templates/app/feat_req.hbs\",\r\n    ]);\r\n};\r\n","//@ts-expect-error\r\nexport const ARd20 = {};\r\nARd20.Attributes = {\r\n    str: \"ARd20.AttributeStr\",\r\n    dex: \"ARd20.AttributeDex\",\r\n    con: \"ARd20.AttributeCon\",\r\n    int: \"ARd20.AttributeInt\",\r\n    wis: \"ARd20.AttributeWis\",\r\n    cha: \"ARd20.AttributeCha\",\r\n};\r\nARd20.AttributeAbbreviations = {\r\n    str: \"ARd20.AttributeStrAbbr\",\r\n    dex: \"ARd20.AttributeDexAbbr\",\r\n    con: \"ARd20.AttributeConAbbr\",\r\n    int: \"ARd20.AttributeIntAbbr\",\r\n    wis: \"ARd20.AttributeWisAbbr\",\r\n    cha: \"ARd20.AttributeChaAbbr\",\r\n};\r\nARd20.CHARACTER_EXP_LEVELS = [0, 300, 900, 2700, 6500, 14000, 23000, 34000, 48000, 64000, 85000, 100000, 120000, 140000, 165000, 195000, 225000, 265000, 305000, 355000];\r\nARd20.SpellSchool = {\r\n    abj: \"ARd20.SchoolAbj\",\r\n    con: \"ARd20.SchoolCon\",\r\n    div: \"ARd20.SchoolDiv\",\r\n    enc: \"ARd20.SchoolEnc\",\r\n    evo: \"ARd20.SchoolEvo\",\r\n    ill: \"ARd20.SchoolIll\",\r\n    nec: \"ARd20.SchoolNec\",\r\n    trs: \"ARd20.SchoolTrs\",\r\n};\r\nARd20.Skills = {\r\n    acr: \"ARd20.SkillAcr\",\r\n    ani: \"ARd20.SkillAni\",\r\n    arc: \"ARd20.SkillArc\",\r\n    ath: \"ARd20.SkillAth\",\r\n    dec: \"ARd20.SkillDec\",\r\n    his: \"ARd20.SkillHis\",\r\n    ins: \"ARd20.SkillIns\",\r\n    itm: \"ARd20.SkillItm\",\r\n    inv: \"ARd20.SkillInv\",\r\n    med: \"ARd20.SkillMed\",\r\n    nat: \"ARd20.SkillNat\",\r\n    prc: \"ARd20.SkillPrc\",\r\n    prf: \"ARd20.SkillPrf\",\r\n    per: \"ARd20.SkillPer\",\r\n    rel: \"ARd20.SkillRel\",\r\n    slt: \"ARd20.SkillSlt\",\r\n    ste: \"ARd20.SkillSte\",\r\n    sur: \"ARd20.SkillSur\",\r\n};\r\nARd20.Rank = {\r\n    0: \"ARd20.Untrained\",\r\n    1: \"ARd20.Basic\",\r\n    2: \"ARd20.Expert\",\r\n    3: \"ARd20.Master\",\r\n    4: \"ARd20.Legend\",\r\n};\r\nARd20.Source = {\r\n    mar: \"ARd20.Martial\",\r\n    mag: \"ARd20.Magical\",\r\n    div: \"ARd20.Divine\",\r\n    pri: \"ARd20.Primal\",\r\n    psy: \"ARd20.Psyhic\",\r\n};\r\nARd20.WeaponProp = {\r\n    aff: \"ARd20.Affixed\",\r\n    awk: \"ARd20.Awkward\",\r\n    con: \"ARd20.Conceal\",\r\n    bra: \"ARd20.Brace\",\r\n    def: \"ARd20.Deflect\",\r\n    dis: \"ARd20.Disarm\",\r\n    dou: \"ARd20.Double Ended\",\r\n    ent: \"ARd20.Entangle\",\r\n    fin: \"ARd20.Finesse\",\r\n    fir: \"ARd20.Firearm\",\r\n    hea: \"ARd20.Heavy\",\r\n    lau: \"ARd20.Launch\",\r\n    lig: \"ARd20.Light\",\r\n    lun: \"ARd20.Lunge\",\r\n    mel: \"ARd20.Melee\",\r\n    one: \"ARd20.One-Handed\",\r\n    pen: \"ARd20.Penetrate\",\r\n    ran: \"ARd20.Ranged\",\r\n    rea: \"ARd20.Reach\",\r\n    rel: \"ARd20.Reload\",\r\n    sta: \"Ard20.Stagger\",\r\n    thr: \"ARd20.Thrown\",\r\n    tri: \"ARd20.Trip\",\r\n    two: \"ARd20.Two-Handed\",\r\n    ver: \"ARd20.Versatile\",\r\n};\r\nARd20.WeaponType = {\r\n    amb: \"ARd20.Ambush\",\r\n    axe: \"ARd20.Axe\",\r\n    blu: \"ARd20.Bludgeon\",\r\n    bow: \"ARd20.Bow\",\r\n    sli: \"ARd20.Sling\",\r\n    cbl: \"ARd20.Combat Blade\",\r\n    cro: \"ARd20.Crossbow\",\r\n    dbl: \"ARd20.Dueling Blade\",\r\n    fir: \"ARd20.Firearm\",\r\n    fla: \"ARd20.Flail\",\r\n    whi: \"ARd20.Whip\",\r\n    ham: \"ARd20.Hammer\",\r\n    pic: \"ARd20.Pick\",\r\n    pol: \"ARd20.Polearm\",\r\n    spe: \"ARd20.Spear\",\r\n    thr: \"ARd20.Throwing\",\r\n};\r\nARd20.AbilXP = [50, 50, 50, 50, 70, 90, 120, 150, 190, 290, 440, 660, 990, 1500, 2700, 4800, 8400, 14700, 25700, 51500, 103000, 206000, 412000, 824000, 2060000];\r\nARd20.SkillXP = {\r\n    0: [50, 80, 125, 185, 260, 350, 455, 575, 710, 860, 1025, 1205, 1400, 1610, 1835, 2075, 2330, 2600],\r\n    1: [115, 190, 295, 430, 595, 790, 1015, 1270, 1555, 1870, 2215, 2590, 2995, 3430, 3895, 4390, 4915, 5470],\r\n};\r\nARd20.DamageTypes = {\r\n    mag: \"ARd20.Magical\",\r\n    phys: \"ARd20.Physical\",\r\n};\r\nARd20.DamageSubTypes = {\r\n    acid: \"ARd20.DamageAcid\",\r\n    bludgeoning: \"ARd20.DamageBludgeoning\",\r\n    cold: \"ARd20.DamageCold\",\r\n    fire: \"ARd20.DamageFire\",\r\n    force: \"ARd20.DamageForce\",\r\n    lightning: \"ARd20.DamageLightning\",\r\n    necr: \"ARd20.DamageNecrotic\",\r\n    piercing: \"ARd20.DamagePiercing\",\r\n    poison: \"ARd20.DamagePoison\",\r\n    slashing: \"ARd20.DamageSlashing\",\r\n    radiant: \"ARd20.DamageRadiant\",\r\n    psychic: \"ARd20.DamagePsychic\",\r\n};\r\nARd20.ResistTypes = {\r\n    res: \"ARd20.Resistance\",\r\n    vul: \"Ard20.Vulnerability\",\r\n    imm: \"ARd20.Immunity\",\r\n};\r\nARd20.HPDice = [\"1d6\", \"1d8\", \"1d10\", \"1d12\", \"1d12+2\", \"1d12+4\", \"1d20\", \"1d20+2\", \"1d20+4\", \"1d20+6\", \"1d20+8\", \"1d20+10\", \"1d20+12\"];\r\nARd20.HeavyPoints = {\r\n    light: { chest: 3, gloves: 1, boots: 1, pants: 2, head: 1 },\r\n    medium: { chest: 5, gloves: 2, boots: 2, pants: 3, head: 2 },\r\n    heavy: { chest: 8, gloves: 3, boots: 3, pants: 5, head: 3 },\r\n};\r\nARd20.RollResult = {\r\n    0: \"ARd20.Fumble\",\r\n    1: \"ARd20.Fail\",\r\n    2: \"ARd20.Success\",\r\n    3: \"ARd20.Crit\",\r\n};\r\n","export default class ARd20SocketHandler {\r\n    //@ts-expect-error\r\n    static async updateActorData(data) {\r\n        if (game.user.isGM) {\r\n            const actor = game.actors.get(data.actor._id);\r\n            //@ts-expect-error\r\n            if (actor)\r\n                await actor.update(data.update, { \"data.health.value\": data.value });\r\n        }\r\n    }\r\n}\r\n","<svelte:options accessors={true} />\r\n\r\n<script>\r\n  import { ApplicationShell } from \"@typhonjs-fvtt/runtime/svelte/component/core\";\r\n  export let form;\r\n  let advancementSetting = game.settings.get(\"ard20\", \"advancement-rate\");\r\n  export let elementRoot;\r\n  let attributeFormula;\r\n  $: {\r\n    attributeFormula = advancementSetting.formulas.attributes;\r\n    for (let variable of Object.values(advancementSetting.variables)) {\r\n      if (variable.value) {\r\n        console.log(attributeFormula);\r\n        attributeFormula = attributeFormula.replaceAll(variable.shortName, variable.value);\r\n      }\r\n    }\r\n  }\r\n  async function changeSetting() {\r\n    await game.settings.set(\"ard20\", \"advancement-rate\", advancementSetting);\r\n    console.log(\"change\");\r\n  }\r\n</script>\r\n\r\n<ApplicationShell bind:elementRoot>\r\n  <form bind:this={form} autocomplete=\"off\">\r\n    <section class=\"grid grid-2col\">\r\n      <div>\r\n        <label for=\"Custom Values\"> CustomValues </label>\r\n        <div class=\"grid grid-3col\">\r\n          {#each Object.values(advancementSetting.variables) as variable}\r\n            <label for={variable.longName}>{variable.longName}</label>\r\n            <input bind:value={variable.shortName} on:change={changeSetting} placeholder=\"shortName\" />\r\n            <input\r\n              min=\"-999\"\r\n              max=\"999\"\r\n              type=\"number\"\r\n              bind:value={variable.value}\r\n              on:change={changeSetting}\r\n              placeholder=\"custom value\"\r\n            />\r\n          {/each}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <label for=\"Non-custom Values\">Non-custom Values</label>\r\n        <div>AS - Attribute Score</div>\r\n        <div>SS - Skill Score</div>\r\n        <div>SL - Skill level</div>\r\n      </div>\r\n    </section>\r\n    <section>\r\n      <div>\r\n        <label for=\"Attribute Formula\">Attribute Advancement Formula</label>\r\n        <input type=\"text\" on:change={changeSetting} bind:value={advancementSetting.formulas.attributes} />\r\n      </div>\r\n      <br />\r\n      <div>{attributeFormula}</div>\r\n      <br />\r\n    </section>\r\n  </form>\r\n</ApplicationShell>\r\n","import { SvelteApplication } from \"@typhonjs-fvtt/runtime/svelte/application\";\r\nimport AdvancementRateShell from \"./advancement-rate-shell.svelte\";\r\nexport class AdvRateSettingsShim extends FormApplication {\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  constructor(options = {}) {\r\n    super({}, options);\r\n\r\n    new AdvancementRateFormApp().render(true, { focus: true });\r\n  }\r\n\r\n  async _updateObject(event, formData) {}\r\n  render() {\r\n    this.close();\r\n  }\r\n}\r\nclass AdvancementRateFormApp extends SvelteApplication {\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      classes: [\"ard20\"],\r\n      title: \"Advancement Rate\",\r\n      minimizable:true,\r\n      resizable:true,\r\n      width: 600,\r\n      height: \"auto\",\r\n      svelte: {\r\n        class: AdvancementRateShell,\r\n        target: document.body,\r\n      },\r\n    });\r\n  }\r\n}\r\n","<script>\r\n  import { deleteEntry, changeSetting } from \"./featSetting-shell.svelte\";\r\n  let pack\r\n  let type\r\n</script>\r\n\r\n<div class=\"grid grid-2col\">\r\n    <input type=\"text\" bind:value={pack.name} on:change={changeSetting} />\r\n    <button on:click={() => deleteEntry(type, pack.id)} class=\"minus far fa-minus-square\" />\r\n</div>\r\n\r\n","<svelte:options accessors={true} />\r\n\r\n<script context=\"module\">\r\n  export async function deleteEntry(type, id) {\r\n    console.log(type);\r\n    const index = featSetting[type].findIndex((entry) => entry.id === id);\r\n    if (index >= 0) {\r\n      console.log(featSetting[type]);\r\n      featSetting[type].splice(index, 1);\r\n      await game.settings.set(\"ard20\", \"feat\", featSetting);\r\n      featSetting = featSetting;\r\n    }\r\n  }\r\n  export async function changeSetting() {\r\n    await game.settings.set(\"ard20\", \"feat\", featSetting);\r\n    console.log(featSetting);\r\n  }\r\n</script>\r\n\r\n<script>\r\n  import { ApplicationShell } from \"@typhonjs-fvtt/runtime/svelte/component/core\";\r\n  import { uuidv4 } from \"@typhonjs-fvtt/runtime/svelte/util\";\r\n  import FeatPack from \"./FeatPack.svelte\";\r\n  export let elementRoot;\r\n  let featSetting = game.settings.get(\"ard20\", \"feat\");\r\n  async function addEntry(type) {\r\n    const name = `New ${type}`.slice(0, -1);\r\n    const id = uuidv4();\r\n    featSetting[type] = [...featSetting[type], { name: name, id: id }];\r\n    console.log(featSetting);\r\n    await game.settings.set(\"ard20\", \"feat\", featSetting);\r\n    featSetting = featSetting;\r\n  }\r\n</script>\r\n\r\n<ApplicationShell bind:elementRoot>\r\n  <section class=\"sheet-body\">\r\n    <div class=\"flexcol\">\r\n      packs\r\n      {#each featSetting.packs as pack (pack.id)}\r\n        <FeatPack {pack} type={\"packs\"} />\r\n      {/each}\r\n      <button on:click={() => addEntry(\"packs\")} class=\"add far fa-plus-square\" />\r\n      <hr />\r\n      folders\r\n      {#each featSetting.folders as folder (folder.id)}\r\n        <FeatPack {folder} type={\"folders\"} />\r\n      {/each}\r\n      <button on:click={() => addEntry(\"folders\")} class=\"add far fa-plus-square\" />\r\n    </div>\r\n  </section>\r\n</ApplicationShell>\r\n","import { SvelteApplication } from \"@typhonjs-fvtt/runtime/svelte/application\";\r\nimport FeatSettingShell from './featSetting-shell.svelte'\r\nexport class FeatSettingsShim extends FormApplication {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    constructor(options = {}) {\r\n      super({}, options);\r\n  \r\n      new FeatSetting().render(true, { focus: true });\r\n    }\r\n  \r\n    async _updateObject(event, formData) {}\r\n    render() {\r\n      this.close();\r\n    }\r\n  }\r\n  class FeatSetting extends SvelteApplication {\r\n    static get defaultOptions() {\r\n      return foundry.utils.mergeObject(super.defaultOptions, {\r\n        classes: [\"ard20\"],\r\n        title: \"Folders and Packs with Features\",\r\n        minimizable:true,\r\n        resizable:true,\r\n        width: \"auto\",\r\n        height: \"auto\",\r\n        svelte: {\r\n          class: FeatSettingShell,\r\n          target: document.body,\r\n        },\r\n      });\r\n    }\r\n  }\r\n  ","import {AdvRateSettingsShim} from '../../svelte/advancement-rate/advancement-rate.js'\r\nimport {FeatSettingsShim} from '../../svelte/FeatSetting/featSetting.js'\r\nexport const registerSystemSettings = function () {\r\n    game.settings.register(\"ard20\", \"proficiencies\", {\r\n        scope: \"world\",\r\n        config: false,\r\n        default: {\r\n            weapon: [\r\n                { name: \"Punch Dagger\", type: \"amb\" },\r\n                { name: \"Whip Dagger\", type: \"amb\" },\r\n                { name: \"Gauntlet\", type: \"amb\" },\r\n                { name: \"Hidden Blade\", type: \"amb\" },\r\n                { name: \"Knucke Axe\", type: \"amb\" },\r\n                { name: \"Side Baton\", type: \"amb\" },\r\n                { name: \"Unarmed strike\", type: \"amb\" },\r\n                { name: \"Battle Axe\", type: \"axe\" },\r\n                { name: \"Great Axe\", type: \"axe\" },\r\n                { name: \"Handaxe\", type: \"axe\" },\r\n                { name: \"Hook Sword\", type: \"axe\" },\r\n                { name: \"Khopesh\", type: \"axe\" },\r\n                { name: \"Poleaxe\", type: \"axe\" },\r\n                { name: \"Tomahawk\", type: \"axe\" },\r\n                { name: \"Great club\", type: \"blu\" },\r\n                { name: \"Heavy club\", type: \"blu\" },\r\n                { name: \"Light Club\", type: \"blu\" },\r\n            ],\r\n            armor: [],\r\n            tools: [],\r\n            skills: [],\r\n        },\r\n        onChange: (value) => {\r\n            console.log(\"Настройка изменилась \", value);\r\n        },\r\n    });\r\n    game.settings.registerMenu(\"ard20\", \"gearProfManage\", {\r\n        name: \"SETTINGS.ProfManage\",\r\n        label: \"SETTINGS.ProfManage\",\r\n        type: ProfFormApp,\r\n        restricted: false,\r\n        icon: \"fab fa-buffer\",\r\n    });\r\n    game.settings.register(\"ard20\", \"feat\", {\r\n        scope: \"world\",\r\n        config: false,\r\n        default: {\r\n            packs: [],\r\n            folders: [],\r\n        },\r\n        onChange: (value) => {\r\n            console.log(\"Настройка изменилась\", value);\r\n        },\r\n    });\r\n    game.settings.registerMenu(\"ard20\", \"featManage\", {\r\n        name: \"SETTINGS.FeatureManage\",\r\n        label: \"SETTINGS.FeatureManage\",\r\n        type: FeatSettingsShim,\r\n        restricted: false,\r\n    });\r\n    game.settings.register(\"ard20\", \"advancement-rate\", {\r\n        scope: \"world\",\r\n        config: false,\r\n        default: {\r\n            variables: {\r\n                skillCount: {\r\n                    value:5,\r\n                    shortName:'SC',\r\n                    longName:'Skill Count',\r\n                },\r\n                featureCount: {\r\n                    value:5,\r\n                    shortName:'FC',\r\n                    longName:'featureCount'\r\n                },\r\n                skillValue: {\r\n                    value:5,\r\n                    shortName:'SV',\r\n                    longName:'skillValue'\r\n                },\r\n                featureLevel: {\r\n                    value:5,\r\n                    shortName:'FL',\r\n                    longName:'Feature Level'\r\n                },\r\n                attributeValue:{\r\n                    value:5,\r\n                    shortName:'AV',\r\n                    longName:'Attribute Value'\r\n                },\r\n            },\r\n            formulas: {\r\n                skills: \"\",\r\n                features: \"n\",\r\n                attributes: \"max(floor((AS-10)/2)+2,1)\",\r\n            },\r\n        },\r\n        onChange: (value) => {\r\n            console.log(\"Настройка изменилась\", value);\r\n        },\r\n    });\r\n    game.settings.registerMenu(\"ard20\", \"advancementRateManage\", {\r\n        name: \"SETTINGS.AdvancementRateManage\",\r\n        label: \"SETTINGS.AdvancementRateManage\",\r\n        type: AdvRateSettingsShim,\r\n        restricted: false,\r\n    });\r\n};\r\nclass ProfFormApp extends FormApplication {\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            classes: [\"ard20\"],\r\n            title: \"Armor/Weapon Proficiencies\",\r\n            template: \"systems/ard20/templates/app/prof-settings.html\",\r\n            id: \"prof-settings\",\r\n            width: 600,\r\n            height: \"auto\",\r\n            submitOnChange: true,\r\n            closeOnSubmit: false,\r\n            tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"weapons\" }],\r\n        });\r\n    }\r\n    //@ts-expect-error\r\n    getData() {\r\n        const sheetData = {\r\n            proficiencies: game.settings.get(\"ard20\", \"proficiencies\"),\r\n            config: CONFIG.ARd20,\r\n        };\r\n        return sheetData;\r\n    }\r\n    //@ts-expect-error\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n        html.find(\".add\").click(this._onAdd.bind(this));\r\n        html.find(\".minus\").click(this._Delete.bind(this));\r\n    }\r\n    //@ts-expect-error\r\n    async _onAdd(event) {\r\n        event.preventDefault();\r\n        const proficiencies = game.settings.get(\"ard20\", \"proficiencies\");\r\n        proficiencies.weapon.push({ name: \"name\", type: \"amb\" });\r\n        await game.settings.set(\"ard20\", \"proficiencies\", proficiencies);\r\n        this.render();\r\n    }\r\n    //@ts-expect-error\r\n    async _Delete(event) {\r\n        event.preventDefault();\r\n        const proficiencies = game.settings.get(\"ard20\", \"proficiencies\");\r\n        proficiencies.weapon.splice(event.currentTarget.dataset.key, 1);\r\n        await game.settings.set(\"ard20\", \"proficiencies\", proficiencies);\r\n        this.render();\r\n    }\r\n    //@ts-expect-error\r\n    async _updateObject(event, formData) {\r\n        const proficiencies = game.settings.get(\"ard20\", \"proficiencies\");\r\n        console.log(formData);\r\n        let dirty = false;\r\n        for (let [fieldName, value] of Object.entries(foundry.utils.flattenObject(formData))) {\r\n            const [type, index, propertyName] = fieldName.split(\".\");\r\n            //@ts-expect-error\r\n            if (proficiencies[type][index][propertyName] !== value) {\r\n                //log({index, propertyName, value});\r\n                //@ts-expect-error\r\n                proficiencies[type][index][propertyName] = value;\r\n                dirty = dirty || true;\r\n            }\r\n            if (dirty) {\r\n                await game.settings.set(\"ard20\", \"proficiencies\", proficiencies);\r\n            }\r\n        }\r\n    }\r\n}","/**\r\n * Highlight critical success or failure on d20 rolls\r\n */\r\n//@ts-expect-error\r\nexport const highlightCriticalSuccessFailure = function (message, html, data) {\r\n    if (!message.isRoll || !message.isContentVisible)\r\n        return;\r\n    // Highlight rolls where the first part is a d20 roll\r\n    const roll = message.roll;\r\n    if (!roll.dice.length)\r\n        return;\r\n    const d = roll.dice[0];\r\n    // Ensure it is an un-modified d20 roll\r\n    const isD20 = (d.faces === 20) && (d.values.length === 1);\r\n    if (!isD20)\r\n        return;\r\n    const isModifiedRoll = (\"success\" in d.results[0]) || d.options.marginSuccess || d.options.marginFailure;\r\n    if (isModifiedRoll)\r\n        return;\r\n    // Highlight successes and failures\r\n    const critical = d.options.critical || 20;\r\n    const fumble = d.options.fumble || 1;\r\n    if (d.total >= critical)\r\n        html.find(\".dice-total\").addClass(\"critical\");\r\n    else if (d.total <= fumble)\r\n        html.find(\".dice-total\").addClass(\"fumble\");\r\n    else if (d.options.target) {\r\n        if (roll.total >= d.options.target)\r\n            html.find(\".dice-total\").addClass(\"success\");\r\n        else\r\n            html.find(\".dice-total\").addClass(\"failure\");\r\n    }\r\n};\r\n/* -------------------------------------------- */\r\n/**\r\n * Optionally hide the display of chat card action buttons which cannot be performed by the user\r\n */\r\n//@ts-expect-error\r\nexport const displayChatActionButtons = function (message, html, data) {\r\n    const chatCard = html.find(\".ard20.chat-card\");\r\n    if (chatCard.length > 0) {\r\n        const flavor = html.find(\".flavor-text\");\r\n        if (flavor.text() === html.find(\".item-name\").text())\r\n            flavor.remove();\r\n        // If the user is the message author or the actor owner, proceed\r\n        let actor = game.actors.get(data.message.speaker.actor);\r\n        if (actor && actor.isOwner)\r\n            return;\r\n        else if (game.user.isGM || (data.author.id === game.user.id))\r\n            return;\r\n        // Otherwise conceal action buttons except for saving throw\r\n        const buttons = chatCard.find(\"button[data-action]\");\r\n        //@ts-expect-error\r\n        buttons.each((i, btn) => {\r\n            if (btn.dataset.action === \"save\")\r\n                return;\r\n            btn.style.display = \"none\";\r\n        });\r\n    }\r\n};\r\n/* -------------------------------------------- */\r\n/**\r\n * This function is used to hook into the Chat Log context menu to add additional options to each message\r\n * These options make it easy to conveniently apply damage to controlled tokens based on the value of a Roll\r\n *\r\n * @param {HTMLElement} html    The Chat Message being rendered\r\n * @param {Array} options       The Array of Context Menu options\r\n *\r\n * @return {Array}              The extended options Array including new context choices\r\n */\r\nexport const addChatMessageContextOptions = function (html, options) {\r\n    let canApply = (li) => {\r\n        //@ts-expect-error\r\n        const message = game.messages.get(li.data(\"messageId\"));\r\n        return message?.isRoll && message?.isContentVisible && canvas.tokens?.controlled.length;\r\n    };\r\n    options.push({\r\n        //@ts-expect-error\r\n        name: game.i18n.localize(\"ARd20.ChatContextDamage\"),\r\n        //@ts-expect-error\r\n        icon: '<i class=\"fas fa-user-minus\"></i>',\r\n        //@ts-expect-error\r\n        condition: canApply,\r\n        //@ts-expect-error\r\n        callback: li => applyChatCardDamage(li, 1)\r\n    }, {\r\n        name: game.i18n.localize(\"ARd20.ChatContextHealing\"),\r\n        icon: '<i class=\"fas fa-user-plus\"></i>',\r\n        condition: canApply,\r\n        //@ts-expect-error\r\n        callback: li => applyChatCardDamage(li, -1)\r\n    }, {\r\n        name: game.i18n.localize(\"ARd20.ChatContextDoubleDamage\"),\r\n        icon: '<i class=\"fas fa-user-injured\"></i>',\r\n        condition: canApply,\r\n        //@ts-expect-error\r\n        callback: li => applyChatCardDamage(li, 2)\r\n    }, {\r\n        name: game.i18n.localize(\"ARd20.ChatContextHalfDamage\"),\r\n        icon: '<i class=\"fas fa-user-shield\"></i>',\r\n        condition: canApply,\r\n        //@ts-expect-error\r\n        callback: li => applyChatCardDamage(li, 0.5)\r\n    });\r\n    return options;\r\n};\r\n/* -------------------------------------------- */\r\n/**\r\n * Apply rolled dice damage to the token or tokens which are currently controlled.\r\n * This allows for damage to be scaled by a multiplier to account for healing, critical hits, or resistance\r\n *\r\n * @param {HTMLElement} li      The chat entry which contains the roll data\r\n * @param {Number} multiplier   A damage multiplier to apply to the rolled damage.\r\n * @return {Promise}\r\n */\r\nfunction applyChatCardDamage(li, multiplier) {\r\n    //@ts-expect-error\r\n    const message = game.messages.get(li.data(\"messageId\"));\r\n    const roll = message.roll;\r\n    return Promise.all(canvas.tokens.controlled.map(t => {\r\n        const a = t.actor;\r\n        //@ts-expect-error\r\n        return a.applyDamage(roll.total, multiplier);\r\n    }));\r\n}\r\n/* -------------------------------------------- */\r\n","// Import document classes.\r\nimport { ARd20Actor } from \"./documents/actor.js\";\r\nimport { ARd20Item } from \"./documents/item.js\";\r\n// Import sheet classes.\r\nimport { ARd20ActorSheet } from \"./sheets/actor-sheet.js\";\r\nimport { ARd20ItemSheet } from \"./sheets/item-sheet.js\";\r\n// Import helper/utility classes and constants.\r\nimport { preloadHandlebarsTemplates } from \"./helpers/templates.js\";\r\nimport { ARd20 } from \"./helpers/config.js\";\r\nimport ARd20SocketHandler from \"./helpers/socket.js\";\r\nimport { registerSystemSettings } from \"./helpers/settings.js\";\r\nimport * as dice from \"./dice/dice.js\";\r\nimport * as chat from \"./helpers/chat.js\";\r\n/* -------------------------------------------- */\r\n/*  Init Hook                                   */\r\n/* -------------------------------------------- */\r\nexport function obj_entries(obj) {\r\n    return Object.entries(obj);\r\n}\r\nexport function arr_entries(arr) {\r\n    return Object.entries(arr);\r\n}\r\nexport function getValues(SourceObject, key) {\r\n    return SourceObject[key];\r\n}\r\nexport function obj_keys(obj) {\r\n    return Object.keys(obj);\r\n}\r\nexport function array_keys(obj) {\r\n    return Object.keys(obj);\r\n}\r\nHooks.once(\"init\", async function () {\r\n    // Add utility classes to the global game object so that they're more easily\r\n    // accessible in global contexts.\r\n    if (game instanceof Game) {\r\n        game.ard20 = {\r\n            documents: {\r\n                ARd20Actor,\r\n                ARd20Item,\r\n            },\r\n            rollItemMacro,\r\n            config: ARd20,\r\n            dice: dice,\r\n        };\r\n        // Add custom constants for configuration.\r\n        CONFIG.ARd20 = ARd20;\r\n        //@ts-expect-error\r\n        CONFIG.Dice.DamageRoll = dice.DamageRoll;\r\n        //@ts-expect-error\r\n        CONFIG.Dice.D20Roll = dice.D20Roll;\r\n        CONFIG.Dice.rolls.push(dice.D20Roll);\r\n        CONFIG.Dice.rolls.push(dice.DamageRoll);\r\n        if (game.socket instanceof io.Socket) {\r\n            game.socket.on(\"system.ard20\", (data) => {\r\n                if (data.operation === \"updateActorData\")\r\n                    ARd20SocketHandler.updateActorData(data);\r\n            });\r\n        }\r\n        /**\r\n         * Set an initiative formula for the system\r\n         * @type {String}\r\n         */\r\n        CONFIG.Combat.initiative = {\r\n            formula: \"1d20 + @abilities.dex.mod\",\r\n            decimals: 2,\r\n        };\r\n        // Define custom Document classes\r\n        CONFIG.Actor.documentClass = ARd20Actor;\r\n        CONFIG.Item.documentClass = ARd20Item;\r\n        // Register sheet application classes\r\n        Actors.unregisterSheet(\"core\", ActorSheet);\r\n        Actors.registerSheet(\"ard20\", ARd20ActorSheet, { makeDefault: true });\r\n        Items.unregisterSheet(\"core\", ItemSheet);\r\n        //@ts-expect-error\r\n        Items.registerSheet(\"ard20\", ARd20ItemSheet, { makeDefault: true });\r\n        registerSystemSettings();\r\n        // Preload Handlebars templates.\r\n        return preloadHandlebarsTemplates();\r\n    }\r\n    else {\r\n        throw new Error(\"game not initialized yet!\");\r\n    }\r\n});\r\n/* -------------------------------------------- */\r\n/*  Handlebars Helpers                          */\r\n/* -------------------------------------------- */\r\n// If you need to add Handlebars helpers, here are a few useful examples:\r\nHandlebars.registerHelper(\"concat\", function () {\r\n    var outStr = \"\";\r\n    for (var arg in arguments) {\r\n        if (typeof arguments[arg] != \"object\") {\r\n            outStr += arguments[arg];\r\n        }\r\n    }\r\n    return outStr;\r\n});\r\nHandlebars.registerHelper(\"toLowerCase\", function (str) {\r\n    return str.toLowerCase();\r\n});\r\nHandlebars.registerHelper(\"add\", function (value1, value2) {\r\n    return Number(value1) + Number(value2);\r\n});\r\n/* -------------------------------------------- */\r\n/*  Ready Hook                                  */\r\n/* -------------------------------------------- */\r\nHooks.once(\"ready\", async function () {\r\n    // Wait to register hotbar drop hook on ready so that modules could register earlier if they want to\r\n    Hooks.on(\"hotbarDrop\", (bar, data, slot) => createItemMacro(data, slot));\r\n});\r\n/* -------------------------------------------- */\r\n/*  Hotbar Macros                               */\r\n/* -------------------------------------------- */\r\n/**\r\n * Create a Macro from an Item drop.\r\n * Get an existing item macro if one exists, otherwise create a new one.\r\n * @param {Object} data     The dropped data\r\n * @param {number} slot     The hotbar slot to use\r\n * @returns {Promise}\r\n */\r\nasync function createItemMacro(data, slot) {\r\n    if (game instanceof Game) {\r\n        //@ts-expect-error\r\n        if (data.type !== \"Item\")\r\n            return;\r\n        if (!(\"data\" in data) && ui.notifications instanceof Notifications)\r\n            return ui.notifications.warn(\"You can only create macro buttons for owned Items\");\r\n        //@ts-expect-error\r\n        const item = data.data;\r\n        // Create the macro command\r\n        const command = `game.ard20.rollItemMacro(\"${item.name}\");`;\r\n        let macroList = game.macros.contents.filter((m) => m.name === item.name && m?.command === command);\r\n        let macroCheck = macroList.length !== 0 ? macroList[0] : null;\r\n        if (macroCheck !== null) {\r\n            let macro = await Macro.create({\r\n                name: item.name,\r\n                type: \"script\",\r\n                img: item.img,\r\n                command: command,\r\n                flags: { \"ard20.itemMacro\": true },\r\n            });\r\n            if (macro instanceof Macro) {\r\n                game.user?.assignHotbarMacro(macro, slot);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Create a Macro from an Item drop.\r\n * Get an existing item macro if one exists, otherwise create a new one.\r\n * @param {string} itemName\r\n * @return {Promise}\r\n */\r\nexport function rollItemMacro(itemName) {\r\n    if (game instanceof Game) {\r\n        const speaker = ChatMessage.getSpeaker();\r\n        let actor;\r\n        if (speaker.token)\r\n            actor = game.actors.tokens[speaker.token];\r\n        if (!actor && typeof speaker.actor === \"string\")\r\n            actor = game.actors.get(speaker.actor);\r\n        const item = actor ? actor.items.find((i) => i.name === itemName) : null;\r\n        if (!item)\r\n            return ui.notifications.warn(`Your controlled Actor does not have an item named ${itemName}`);\r\n        // Trigger the item roll\r\n        //@ts-expect-error\r\n        return item.roll();\r\n    }\r\n}\r\nHooks.on(\"renderChatMessage\", (app, html, data) => {\r\n    // Display action buttons\r\n    chat.displayChatActionButtons(app, html, data);\r\n    // Highlight critical success or failure die\r\n    chat.highlightCriticalSuccessFailure(app, html, data);\r\n    // Optionally collapse the content\r\n});\r\nHooks.on(\"getChatLogEntryContext\", chat.addChatMessageContextOptions);\r\n//@ts-expect-error\r\nHooks.on(\"renderChatLog\", (app, html, data) => ARd20Item.chatListeners(html));\r\n//@ts-expect-error\r\nHooks.on(\"renderChatPopout\", (app, html, data) => ARd20Item.chatListeners(html));\r\n","import { d20Roll } from \"../dice/dice.js\";\r\nimport { obj_entries, obj_keys, getValues } from \"../ard20.js\";\r\n/**\r\n * Extend the base Actor document by defining a custom roll data structure which is ideal for the Simple system.\r\n * @extends {Actor}\r\n */\r\nexport class ARd20Actor extends Actor {\r\n    //@ts-check\r\n    /** @override */\r\n    prepareData() {\r\n        // Prepare data for the actor. Calling the super version of this executes\r\n        // the following, in order: data reset (to clear active effects),\r\n        // prepareBaseData(), prepareEmbeddedDocuments() (including active effects),\r\n        // prepareDerivedData().\r\n        super.prepareData();\r\n        this.items.forEach((item) => item.prepareFinalAttributes());\r\n    }\r\n    /**\r\n     * @override\r\n     * Augment the basic actor data with additional dynamic data. Typically,\r\n     * you'll want to handle most of your calculated/derived data in this step.\r\n     * Data calculated in this step should generally not exist in template.json\r\n     * (such as ability modifiers rather than ability scores) and should be\r\n     * available both inside and outside of character sheets (such as if an actor\r\n     * is queried and has a roll executed directly from it).\r\n     */\r\n    prepareDerivedData() {\r\n        const actorData = this.data;\r\n        const data = actorData.data;\r\n        const flags = actorData.flags.ard20 || {};\r\n        // Make separate methods for each Actor type (character, npc, etc.) to keep\r\n        // things organized.\r\n        this._prepareCharacterData(actorData);\r\n        this._prepareNpcData(actorData);\r\n    }\r\n    /**\r\n     * Prepare Character type specific data\r\n     */\r\n    _prepareCharacterData(actorData) {\r\n        if (actorData.type !== \"character\")\r\n            return;\r\n        // Make modifications to data here. For example:\r\n        const data = actorData.data;\r\n        const attributes = data.attributes;\r\n        const advancement = data.advancement;\r\n        const def_stats = data.defences.stats;\r\n        const def_dam = data.defences.damage;\r\n        const proficiencies = data.proficiencies;\r\n        data.mobility.value = 0;\r\n        this.itemTypes.armor.forEach((item) => {\r\n            if (item.data.type === \"armor\") {\r\n                if (item.data.data.equipped) {\r\n                    for (let key of obj_keys(def_dam.phys)) {\r\n                        let ph = item.data.data.res.phys[key];\r\n                        def_dam.phys[key].bonus += ph.type !== \"imm\" ? ph.value : 0;\r\n                        def_dam.phys[key].type = ph.type === \"imm\" ? \"imm\" : def_dam.phys[key].type;\r\n                    }\r\n                    for (let key of obj_keys(def_dam.mag)) {\r\n                        let mg = item.data.data.res.mag[key];\r\n                        def_dam.mag[key].bonus += mg.type !== \"imm\" ? mg.value : 0;\r\n                        def_dam.mag[key].type = mg.type === \"imm\" ? \"imm\" : def_dam.mag[key].type;\r\n                    }\r\n                    data.mobility.value += item.data.data.mobility.value;\r\n                }\r\n            }\r\n        });\r\n        data.mobility.value += data.mobility.bonus;\r\n        // Loop through ability scores, and add their modifiers to our sheet output.\r\n        for (let ability of Object.values(attributes)) {\r\n            // Calculate the modifier using d20 rules.\r\n            ability.total = ability.value + ability.bonus;\r\n            ability.mod = Math.floor((ability.value - 10) / 2);\r\n        }\r\n        let dexMod = data.mobility.value < 10\r\n            ? attributes.dex.mod\r\n            : data.mobility.value < 16\r\n                ? Math.min(2, attributes.dex.mod)\r\n                : Math.min(0, attributes.dex.mod);\r\n        //calculate level and expierence\r\n        const levels = CONFIG.ARd20.CHARACTER_EXP_LEVELS;\r\n        if (advancement.xp.used) {\r\n            advancement.xp.used = advancement.xp.used ?? 0;\r\n        }\r\n        for (let i = 1; i < 21; i++) {\r\n            if (advancement.xp.used >= levels[i - 1] && advancement.xp.used < levels[i]) {\r\n                advancement.level = i;\r\n                advancement.xp.level = levels[i];\r\n                advancement.xp.level_min = levels[i - 1];\r\n            }\r\n        }\r\n        advancement.xp.bar_max = advancement.xp.level - advancement.xp.level_min;\r\n        advancement.xp.bar_min = advancement.xp.used - advancement.xp.level_min;\r\n        def_stats.reflex.value = 10 + 4 * def_stats.reflex.level + dexMod + attributes.int.mod + def_stats.reflex.bonus;\r\n        def_stats.reflex.label = \"Reflex\";\r\n        def_stats.fortitude.value =\r\n            10 + 4 * def_stats.fortitude.level + attributes.str.mod + attributes.con.mod + def_stats.fortitude.bonus;\r\n        def_stats.fortitude.label = \"Fortitude\";\r\n        def_stats.will.value =\r\n            10 + 4 * def_stats.will.level + attributes.wis.mod + attributes.cha.mod + def_stats.will.bonus;\r\n        def_stats.will.label = \"Will\";\r\n        for (let [key, dr] of obj_entries(CONFIG.ARd20.DamageSubTypes)) {\r\n            if (!(key === \"force\" || key === \"radiant\" || key === \"psychic\")) {\r\n                def_dam.phys[key].value =\r\n                    def_dam.phys[key]?.value || def_dam.phys[key]?.type !== \"imm\"\r\n                        ? Math.max(isNaN(def_dam.phys[key]?.value) ? 0 : def_dam.phys[key].value) + def_dam.phys[key]?.bonus\r\n                        : 0;\r\n                def_dam.phys[key].name =\r\n                    game.i18n.localize(CONFIG.ARd20.DamageSubTypes[key]) ?? CONFIG.ARd20.DamageSubTypes[key];\r\n            }\r\n            def_dam.mag[key].value =\r\n                def_dam.mag[key]?.value || def_dam.mag[key]?.type !== \"imm\"\r\n                    ? Math.max(isNaN(def_dam.mag[key]?.value) ? 0 : def_dam.mag[key].value) + def_dam.mag[key]?.bonus\r\n                    : 0;\r\n            def_dam.mag[key].name = game.i18n.localize(CONFIG.ARd20.DamageSubTypes[key]) ?? CONFIG.ARd20.DamageSubTypes[key];\r\n        }\r\n        //calculate rolls for character's skills\r\n        for (let [key, skill] of obj_entries(data.skills)) {\r\n            skill.level = skill.level < 4 ? skill.level : 4;\r\n            skill.value = skill.level * 4 + skill.bonus;\r\n            skill.name = game.i18n.localize(CONFIG.ARd20.Skills[key]) ?? CONFIG.ARd20.Skills[key];\r\n            skill.rankName =\r\n                game.i18n.localize(getValues(CONFIG.ARd20.Rank, skill.level)) ?? getValues(CONFIG.ARd20.Rank, skill.level);\r\n        }\r\n        proficiencies.weapon = game.settings.get(\"ard20\", \"proficiencies\").weapon.map((setting, key) => {\r\n            return { ...setting, value: proficiencies.weapon[key]?.value ?? 0 };\r\n        });\r\n        data.speed.value = this.itemTypes.race[0]?.data.type === \"race\" ? this.itemTypes.race[0].data.data.speed : 0;\r\n        data.speed.value += attributes.dex.mod + data.speed.bonus;\r\n    }\r\n    /**\r\n     * Prepare NPC type specific data.\r\n     */\r\n    _prepareNpcData(actorData) {\r\n        //@ts-expect-error\r\n        if (actorData.type !== \"npc\")\r\n            return;\r\n        // Make modifications to data here. For example:\r\n        const data = actorData.data;\r\n        //@ts-expect-error\r\n        data.xp = data.cr * data.cr * 100;\r\n    }\r\n    /**\r\n     * Override getRollData() that's supplied to rolls.\r\n     */\r\n    getRollData() {\r\n        const data = super.getRollData();\r\n        // Prepare character roll data.\r\n        return data;\r\n    }\r\n    /**\r\n     * Roll an Ability Test\r\n     * Prompt the user for input regarding Advantage/Disadvantage and any Situational Bonus\r\n     * @param {Number} attributeId    The ability ID (e.g. \"str\")\r\n     * @param {Object} options      Options which configure how ability tests are rolled\r\n     * @return {Promise<Roll>}      A Promise which resolves to the created Roll instance\r\n     */\r\n    rollAbilityTest(attributeId, options) {\r\n        const label = game.i18n.localize(getValues(CONFIG.ARd20.Attributes, attributeId));\r\n        const actorData = this.data.data;\r\n        const attributes = actorData.attributes;\r\n        const attr = getValues(attributes, attributeId);\r\n        // Construct parts\r\n        const parts = [\"@mod\"];\r\n        const data = { mod: attr };\r\n        // Add provided extra roll parts now because they will get clobbered by mergeObject below\r\n        if (options.parts.length > 0) {\r\n            parts.push(...options.parts);\r\n        }\r\n        // Roll and return\r\n        const rollData = foundry.utils.mergeObject(options, {\r\n            parts: parts,\r\n            data: data,\r\n            title: game.i18n.format(\"ARd20.AttributePromptTitle\", { attribute: label }),\r\n            messageData: {\r\n                speaker: options.speaker || ChatMessage.getSpeaker({ actor: this }),\r\n                \"flags.ard20.roll\": { type: \"attribute\", attributeId },\r\n            },\r\n        });\r\n        //@ts-expect-error\r\n        return d20Roll(rollData);\r\n    }\r\n    /**\r\n     * Roll a Skill Check\r\n     * Prompt the user for input regarding Advantage/Disadvantage and any Situational Bonus\r\n     * @param {string} skillId      The skill id (e.g. \"ins\")\r\n     * @param {Object} options      Options which configure how the skill check is rolled\r\n     * @return {Promise<Roll>}      A Promise which resolves to the created Roll instance\r\n     */\r\n    rollSkill(skillId, options) {\r\n        const skl = getValues(this.data.data.skills, skillId);\r\n        // Compose roll parts and data\r\n        const parts = [\"@proficiency\", \"@mod\"];\r\n        const data = { attributes: this.getRollData().attributes, proficiency: skl.value };\r\n        // Add provided extra roll parts now because they will get clobbered by mergeObject below\r\n        if (options.parts.length > 0) {\r\n            parts.push(...options.parts);\r\n        }\r\n        // Roll and return\r\n        const rollData = foundry.utils.mergeObject(options, {\r\n            parts: parts,\r\n            data: data,\r\n            title: game.i18n.format(\"ARd20.SkillPromptTitle\", {\r\n                skill: game.i18n.localize(getValues(CONFIG.ARd20.Skills, skillId)),\r\n            }),\r\n            messageData: {\r\n                speaker: options.speaker || ChatMessage.getSpeaker({ actor: this }),\r\n                \"flags.ard20.roll\": { type: \"skill\", skillId },\r\n            },\r\n            chooseModifier: true,\r\n        });\r\n        //@ts-expect-error\r\n        return d20Roll(rollData);\r\n    }\r\n}\r\n","// Import document classes.\r\nimport { ARd20Actor } from \"../built/documents/actor.js\";\r\nimport { ARd20Item } from \"../built/documents/item.js\";\r\n// Import sheet classes.\r\nimport { ARd20ActorSheet } from \"../built/sheets/actor-sheet.js\";\r\nimport { ARd20ItemSheet } from \"../built/sheets/item-sheet.js\";\r\n// Import helper/utility classes and constants.\r\nimport { preloadHandlebarsTemplates } from \"../built/helpers/templates.js\";\r\nimport { ARd20 } from \"../built/helpers/config.js\";\r\nimport ARd20SocketHandler from \"../built/helpers/socket.js\";\r\nimport { registerSystemSettings } from \"../built/helpers/settings.js\";\r\nimport * as dice from \"../built/dice/dice.js\";\r\nimport * as chat from \"../built/helpers/chat.js\";\r\n/* -------------------------------------------- */\r\n/*  Init Hook                                   */\r\n/* -------------------------------------------- */\r\nexport function obj_entries(obj) {\r\n    return Object.entries(obj);\r\n}\r\nexport function arr_entries(arr) {\r\n    return Object.entries(arr);\r\n}\r\nexport function getValues(SourceObject, key) {\r\n    return SourceObject[key];\r\n}\r\nexport function obj_keys(obj) {\r\n    return Object.keys(obj);\r\n}\r\nexport function array_keys(obj) {\r\n    return Object.keys(obj);\r\n}\r\nHooks.once(\"init\", async function () {\r\n    // Add utility classes to the global game object so that they're more easily\r\n    // accessible in global contexts.\r\n    if (game instanceof Game) {\r\n        game.ard20 = {\r\n            documents: {\r\n                ARd20Actor,\r\n                ARd20Item,\r\n            },\r\n            rollItemMacro,\r\n            config: ARd20,\r\n            dice: dice,\r\n        };\r\n        // Add custom constants for configuration.\r\n        CONFIG.ARd20 = ARd20;\r\n        //@ts-expect-error\r\n        CONFIG.Dice.DamageRoll = dice.DamageRoll;\r\n        //@ts-expect-error\r\n        CONFIG.Dice.D20Roll = dice.D20Roll;\r\n        CONFIG.Dice.rolls.push(dice.D20Roll);\r\n        CONFIG.Dice.rolls.push(dice.DamageRoll);\r\n        if (game.socket instanceof io.Socket) {\r\n            game.socket.on(\"system.ard20\", (data) => {\r\n                if (data.operation === \"updateActorData\")\r\n                    ARd20SocketHandler.updateActorData(data);\r\n            });\r\n        }\r\n        /**\r\n         * Set an initiative formula for the system\r\n         * @type {String}\r\n         */\r\n        CONFIG.Combat.initiative = {\r\n            formula: \"1d20 + @abilities.dex.mod\",\r\n            decimals: 2,\r\n        };\r\n        // Define custom Document classes\r\n        CONFIG.Actor.documentClass = ARd20Actor;\r\n        CONFIG.Item.documentClass = ARd20Item;\r\n        // Register sheet application classes\r\n        Actors.unregisterSheet(\"core\", ActorSheet);\r\n        Actors.registerSheet(\"ard20\", ARd20ActorSheet, { makeDefault: true });\r\n        Items.unregisterSheet(\"core\", ItemSheet);\r\n        //@ts-expect-error\r\n        Items.registerSheet(\"ard20\", ARd20ItemSheet, { makeDefault: true });\r\n        registerSystemSettings();\r\n        // Preload Handlebars templates.\r\n        return preloadHandlebarsTemplates();\r\n    }\r\n    else {\r\n        throw new Error(\"game not initialized yet!\");\r\n    }\r\n});\r\n/* -------------------------------------------- */\r\n/*  Handlebars Helpers                          */\r\n/* -------------------------------------------- */\r\n// If you need to add Handlebars helpers, here are a few useful examples:\r\nHandlebars.registerHelper(\"concat\", function () {\r\n    var outStr = \"\";\r\n    for (var arg in arguments) {\r\n        if (typeof arguments[arg] != \"object\") {\r\n            outStr += arguments[arg];\r\n        }\r\n    }\r\n    return outStr;\r\n});\r\nHandlebars.registerHelper(\"toLowerCase\", function (str) {\r\n    return str.toLowerCase();\r\n});\r\nHandlebars.registerHelper(\"add\", function (value1, value2) {\r\n    return Number(value1) + Number(value2);\r\n});\r\n/* -------------------------------------------- */\r\n/*  Ready Hook                                  */\r\n/* -------------------------------------------- */\r\nHooks.once(\"ready\", async function () {\r\n    // Wait to register hotbar drop hook on ready so that modules could register earlier if they want to\r\n    Hooks.on(\"hotbarDrop\", (bar, data, slot) => createItemMacro(data, slot));\r\n});\r\n/* -------------------------------------------- */\r\n/*  Hotbar Macros                               */\r\n/* -------------------------------------------- */\r\n/**\r\n * Create a Macro from an Item drop.\r\n * Get an existing item macro if one exists, otherwise create a new one.\r\n * @param {Object} data     The dropped data\r\n * @param {number} slot     The hotbar slot to use\r\n * @returns {Promise}\r\n */\r\nasync function createItemMacro(data, slot) {\r\n    if (game instanceof Game) {\r\n        //@ts-expect-error\r\n        if (data.type !== \"Item\")\r\n            return;\r\n        if (!(\"data\" in data) && ui.notifications instanceof Notifications)\r\n            return ui.notifications.warn(\"You can only create macro buttons for owned Items\");\r\n        //@ts-expect-error\r\n        const item = data.data;\r\n        // Create the macro command\r\n        const command = `game.ard20.rollItemMacro(\"${item.name}\");`;\r\n        let macroList = game.macros.contents.filter((m) => m.name === item.name && m?.command === command);\r\n        let macroCheck = macroList.length !== 0 ? macroList[0] : null;\r\n        if (macroCheck !== null) {\r\n            let macro = await Macro.create({\r\n                name: item.name,\r\n                type: \"script\",\r\n                img: item.img,\r\n                command: command,\r\n                flags: { \"ard20.itemMacro\": true },\r\n            });\r\n            if (macro instanceof Macro) {\r\n                game.user?.assignHotbarMacro(macro, slot);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Create a Macro from an Item drop.\r\n * Get an existing item macro if one exists, otherwise create a new one.\r\n * @param {string} itemName\r\n * @return {Promise}\r\n */\r\nexport function rollItemMacro(itemName) {\r\n    if (game instanceof Game) {\r\n        const speaker = ChatMessage.getSpeaker();\r\n        let actor;\r\n        if (speaker.token)\r\n            actor = game.actors.tokens[speaker.token];\r\n        if (!actor && typeof speaker.actor === \"string\")\r\n            actor = game.actors.get(speaker.actor);\r\n        const item = actor ? actor.items.find((i) => i.name === itemName) : null;\r\n        if (!item)\r\n            return ui.notifications.warn(`Your controlled Actor does not have an item named ${itemName}`);\r\n        // Trigger the item roll\r\n        //@ts-expect-error\r\n        return item.roll();\r\n    }\r\n}\r\nHooks.on(\"renderChatMessage\", (app, html, data) => {\r\n    // Display action buttons\r\n    chat.displayChatActionButtons(app, html, data);\r\n    // Highlight critical success or failure die\r\n    chat.highlightCriticalSuccessFailure(app, html, data);\r\n    // Optionally collapse the content\r\n});\r\nHooks.on(\"getChatLogEntryContext\", chat.addChatMessageContextOptions);\r\n//@ts-expect-error\r\nHooks.on(\"renderChatLog\", (app, html, data) => ARd20Item.chatListeners(html));\r\n//@ts-expect-error\r\nHooks.on(\"renderChatPopout\", (app, html, data) => ARd20Item.chatListeners(html));\r\n"],"names":["D20Roll","Roll","constructor","formula","data","options","terms","Die","faces","Error","_formula","configureModifiers","hasAdvantage","advantageMode","ADV_MODE","ADVANTAGE","hasDisadvantage","DISADVANTAGE","d20","modifiers","number","push","advantage","disadvantage","critical","fumble","targetValue","target","getFormula","toMessage","messageData","_evaluated","evaluate","async","flavor","game","i18n","localize","rollMode","configureDialog","title","string","defaultRollMode","canMult","boolean","defaultAction","NORMAL","mRoll","chooseModifier","defaultAttribute","template","content","renderTemplate","EVALUATION_TEMPLATE","rollModes","CONFIG","Dice","attributes","ARd20","Attributes","defaultButton","Promise","resolve","Dialog","buttons","label","callback","html","_onDialogSubmit","normal","default","close","render","form","querySelector","console","log","bonus","value","OperatorTerm","operator","concat","ability","abl","findSplice","t","term","NumericTerm","mod","checked","DamageRoll","undefined","configureDamage","isCritical","critBonus","i","entries","damageType","DiceTerm","baseNumber","oper","num","splice","cb","criticalBonusDice","alter","multiplyNumeric","criticalMultiplier","damType","defaultCritical","allowCritical","condition","forEach","part","ind","fromData","roll","simplifyRollFormula","constantFirst","some","_isUnsupportedTerm","rollableTerms","constantTerms","operators","constantFormula","rollableFormula","constantPart","safeEval","err","warn","parts","filterJoin","diceTerm","includes","d20Roll","fastForward","event","dialogOptions","chatMessage","speaker","join","isFF","_determineAdvantageMode","settings","get","configured","defaultAbility","item","shiftKey","altKey","ctrlKey","metaKey","damageRoll","_determineCriticalMode","ARd20Item","Item","prepareData","prepareDerivedData","itemData","_prepareSpellData","_prepareWeaponData","_prepareFeatureData","_prepareRaceData","_prepareArmorData","hasAttack","_prepareAttack","hasDamage","_prepareDamage","isOwned","prepareFinalAttributes","type","flags","_setTypeAndSubtype","key","obj_entries","damage","prof","Array","isArray","sub","length","sub_type_array","weapon","filter","core","sourceId","id","exec","items","sub_type","name","proficiency","getValues","Rank","level","source","Source","has","max","initial","Math","min","current","n","k","round","Number","abs","toPrecision","sign","xp","basicCost","AdvancedCost","req","Object","values","pass","from","v","Skills","logic","dr","DamageSubTypes","res","phys","mag","mobility","HeavyPoints","slot","abil","getProperty","actor","prof_bonus","proficiencies","pr","levelName","dex","atkMod","attack","str","prop","baseDamage","getRollData","rollData","foundry","utils","deepClone","damageDie","createMessage","iData","ChatMessage","getSpeaker","targets","user","displayCard","chatListeners","on","_onChatCardAction","bind","_onChatCardToggleContent","_rollDamage","preventDefault","element","closest","classList","toggle","button","currentTarget","card","messageId","dataset","message","messages","action","targetUuid","targetId","isTargetted","isGM","isAuthor","_getChatCardActor","storedData","getFlag","parent","itemId","ui","notifications","error","format","spellLevel","parseInt","dam","rollDamage","versatile","$","find","replaceWith","update","outerHTML","rollFormula","_getChatCardTargets","token","scene","canvas","rollAbilitySave","rollToolCheck","ard20","AbilityTemplate","fromItem","drawPreview","disabled","header","style","display","_applyDamage","tData","tHealth","tActor","total","defences","obj","socket","emit","operation","fromUuid","health","damHTML","append","remove","tokenId","actorId","actors","tokens","controlled","character","getActiveTokens","Boolean","atk","dc","atkHTML","dmgHTML","result","hit","dmg","dieResultCss","def","atkRoll","rollAttack","dmgRoll","stats","keys","reroll","size","templateData","uuid","getChatData","labels","owner","isOwner","chatData","_id","CONST","CHAT_MESSAGE_TYPES","OTHER","chatFlavor","applyRollMode","create","htmlOptions","getAttackToHit","rollConfig","width","mergeObject","map","d","c","a","DamageTypes","b","altkey","attackBonus","toHit","test","onManageActiveEffect","li","effect","effectId","effects","createEmbeddedDocuments","icon","origin","effectType","sheet","delete","prepareActiveEffectCategories","categories","temporary","passive","inactive","e","_getSourceName","isTemporary","CharacterAdvancement","FormApplication","defaultOptions","classes","height","tabs","navSelector","contentSelector","closeOnSubmit","InitilizeData","pack","getPacks","folder","getFolders","rList","getRacesList","fList","getFeaturesList","actorData","object","startingData","isReady","duplicate","skills","advancement","profs","races","list","chosen","count","feats","mar","div","pri","psy","learned","learnedFeatures","awail","temp_feat_list","allow","attribute","race","final","hover","skill","feat","used","awailFeats","name_array","val","TextEditor","enrichHTML","description","pack_list","pack_name","packs","metadata","feat_list","documentName","index","flat","new_key","package","doc","getDocument","toObject","folder_list","folder_name","folders","contents","race_pack_list","race_folder_list","raceItem","feat_pack_list","FeatureItem","currentXP","isEq","isXP","feat_folder_list","itemTypes","feature","_objectSpread","getData","raceList","raceChosen","featsAwail","featsLearned","all","reduce","race_abil","floor","AbilXP","rankName","SkillXP","value_hover","allCount","featCount","ceil","r","_item","input","featLevel","exp","lev_array","match","f","replace","filtrex","compileExpression","raceHP","con","abil_sum","allow_list","activateListeners","_onChange","_onHover","_onChangeInput","table","tr","trDOM","querySelectorAll","tdDesc","bColor","window","getComputedStyle","getPropertyValue","td","nextElementSibling","previousElementSibling","th","tab","hover_desc","_updateObject","_event","formData","updateData","expandObject","feats_data","new","exist","awItem","_index","learnedItem","slice","race_list","updateEmbeddedDocuments","ARd20ActorSheet","ActorSheet","context","config","_prepareItems","_prepareCharacterData","rank_name","rank","gear","features","weapons","armor","spells","img","DEFAULT_TOKEN","isActive","toggleClass","toggleTitle","equipped","select2","click","_onToggleItem","ev","parents","isEditable","_onItemCreate","slideUp","_onRollAbilityTest","_onRollSkillCheck","_OnAdvanceMenu","_onItemRoll","handler","_onDragStart","each","contains","setAttribute","addEventListener","app","itemid","attr","parentElement","rollAbilityTest","rollSkill","capitalize","_onRoll","rollType","_onDrop","JSON","parse","dataTransfer","allowed","Hooks","call","_onDropActiveEffect","_onDropActor","_onDropItem","_onDropFolder","FeatRequirements","InitializeData","reqValues","reqLogic","formApp","subtype_list","inputElement","previousElement","maxLevel","featList","getFeats","arr","assign","type_list","indexOf","featAwail","featCurrent","entity","_onAdd","_Delete","sub_list","defaultValue","fill","order","_getSubmitData","ARd20ItemSheet","ItemSheet","path","fd","FormDataExtended","editors","flattenObject","edit","formatSelection","state","text","optgroup","subtype","url","formatResult","theme","dropdownAutoWidth","templateSelection","templateResult","escapeMarkup","m","trigger","evt","params","originalEvent","stopPropagation","_FeatReq","_onDamageControl","partsPath","damTypePath","damagePart","_onSubmit","args","_tabs","active","position","preloadHandlebarsTemplates","loadTemplates","int","wis","cha","AttributeAbbreviations","CHARACTER_EXP_LEVELS","SpellSchool","abj","enc","evo","ill","nec","trs","acr","ani","arc","ath","dec","his","ins","itm","inv","med","nat","prc","prf","per","rel","slt","ste","sur","WeaponProp","aff","awk","bra","dis","dou","ent","fin","fir","hea","lau","lig","lun","mel","one","pen","ran","rea","sta","thr","tri","two","ver","WeaponType","amb","axe","blu","bow","sli","cbl","cro","dbl","fla","whi","ham","pic","pol","spe","acid","bludgeoning","cold","fire","force","lightning","necr","piercing","poison","slashing","radiant","psychic","ResistTypes","vul","imm","HPDice","light","chest","gloves","boots","pants","head","medium","heavy","RollResult","ARd20SocketHandler","updateActorData","AdvRateSettingsShim","AdvancementRateFormApp","focus","SvelteApplication","minimizable","resizable","svelte","class","AdvancementRateShell","document","body","FeatSettingsShim","FeatSetting","FeatSettingShell","registerSystemSettings","register","scope","tools","onChange","registerMenu","ProfFormApp","restricted","variables","skillCount","shortName","longName","featureCount","skillValue","featureLevel","attributeValue","formulas","submitOnChange","sheetData","set","dirty","fieldName","propertyName","split","highlightCriticalSuccessFailure","isRoll","isContentVisible","dice","isD20","isModifiedRoll","results","marginSuccess","marginFailure","addClass","displayChatActionButtons","chatCard","author","btn","addChatMessageContextOptions","canApply","applyChatCardDamage","multiplier","applyDamage","SourceObject","obj_keys","once","Game","documents","ARd20Actor","rollItemMacro","rolls","io","Socket","Combat","initiative","decimals","Actor","documentClass","Actors","unregisterSheet","registerSheet","makeDefault","Items","Handlebars","registerHelper","outStr","arg","arguments","toLowerCase","value1","value2","bar","createItemMacro","Notifications","command","macroList","macros","macroCheck","macro","Macro","assignHotbarMacro","itemName","chat","_prepareNpcData","def_stats","def_dam","ph","mg","dexMod","levels","level_min","bar_max","bar_min","reflex","fortitude","will","isNaN","setting","speed","cr","attributeId","skillId","skl","arr_entries","array_keys"],"mappings":"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"}