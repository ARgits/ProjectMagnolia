{"version":3,"file":"ard20_1.js","sources":["dice/d20-roll.js","dice/damage-roll.js","dice/dice.js","documents/actor.js","documents/item.js","helpers/effects.js","helpers/Character Advancement/ChangeButton.svelte","helpers/Character Advancement/TDvariants.svelte","helpers/Character Advancement/Attributes.svelte","helpers/Character Advancement/Tabs.svelte","helpers/Character Advancement/cha-adv-shell.svelte","helpers/Character Advancement/characterAdvancement.js","sheets/legacy/actor-sheet.js","helpers/feat_req.js","sheets/legacy/item-sheet.js","sheets/svelte/EmptySheet.svelte","sheets/svelte/general components/InputForDocumentSheet.svelte","sheets/svelte/item/ItemItemSheet.svelte","sheets/svelte/general components/ImageWithFilePicker.svelte","sheets/svelte/general components/Tabs.svelte","sheets/svelte/actor/AttributeTab.svelte","sheets/svelte/actor/ActorSheet.svelte","helpers/templates.js","helpers/config.js","helpers/socket.js","general svelte components/SettingsSubmitButton.svelte","settings/advancement-rate/advancement-rate-shell.svelte","settings/advancement-rate/advancement-rate.js","settings/FeatSetting/featSetting-shell.svelte","settings/FeatSetting/featSetting.js","settings/ProfSetting/profSetting-shell.svelte","settings/ProfSetting/profSetting.js","settings/ProfLevelsSetting/profLevelSetting-shell.svelte","settings/ProfLevelsSetting/profLevelSetting.js","settings/settings.js","helpers/chat.js","sheets/svelte/DocumentShell.svelte","sheets/svelte/documentSheet.js","ard20.js"],"sourcesContent":["/**\r\n * A type of Roll specific to a d20-based check, save, or attack roll in the 5e system.\r\n * @param {string} formula                       The string formula to parse\r\n * @param {object} data                          The data object against which to parse attributes within the formula\r\n * @param {object} [options={}]                  Extra optional arguments which describe or modify the D20Roll\r\n * @param {number} [options.advantageMode]             What advantage modifier to apply to the roll (none, advantage, disadvantage)\r\n * @param {number} [options.critical]                  The value of d20 result which represents a critical success\r\n * @param {number} [options.fumble]                    The value of d20 result which represents a critical failure\r\n * @param {(number)} [options.targetValue]             Assign a target value against which the result of this roll should be compared\r\n * @param {boolean} [options.elvenAccuracy=false]      Allow Elven Accuracy to modify this roll?\r\n * @param {boolean} [options.halflingLucky=false]      Allow Halfling Luck to modify this roll?\r\n * @param {boolean} [options.reliableTalent=false]     Allow Reliable Talent to modify this roll?\r\n */\r\nexport default class D20Roll extends Roll {\r\n  constructor(formula, data, options = {}) {\r\n    super(formula, data, options);\r\n    /*if (!(this.terms[0] instanceof Die && this.terms[0].faces === 20)) {\r\n            throw new Error(`Invalid D20Roll formula provided ${this._formula}`);\r\n        }*/\r\n    this.configureModifiers();\r\n  }\r\n  /* -------------------------------------------- */\r\n  /**\r\n   * A convenience reference for whether this D20Roll has advantage\r\n   * @type {boolean}\r\n   */\r\n  get hasAdvantage() {\r\n    //@ts-expect-error\r\n    return this.options.advantageMode === D20Roll.ADV_MODE.ADVANTAGE;\r\n  }\r\n  /**\r\n   * A convenience reference for whether this D20Roll has disadvantage\r\n   * @type {boolean}\r\n   */\r\n  get hasDisadvantage() {\r\n    //@ts-expect-error\r\n    return this.options.advantageMode === D20Roll.ADV_MODE.DISADVANTAGE;\r\n  }\r\n  /* -------------------------------------------- */\r\n  /*  D20 Roll Methods                            */\r\n  /* -------------------------------------------- */\r\n  /**\r\n   * Apply optional modifiers which customize the behavior of the d20term\r\n   * @private\r\n   */\r\n  configureModifiers() {\r\n    const d20 = this.terms[0];\r\n    const mainDice = game.settings.get(\"ard20\", \"mainDiceType\");\r\n    //@ts-expect-error\r\n    d20.modifiers = [];\r\n    // Handle Advantage or Disadvantage\r\n    if (this.hasAdvantage) {\r\n      //@ts-expect-error\r\n      d20.number = mainDice[0] * 2;\r\n      //@ts-expect-error\r\n      d20.modifiers.push(`kh${d20.number / 2}`);\r\n      //@ts-expect-error\r\n      d20.options.advantage = true;\r\n    } else if (this.hasDisadvantage) {\r\n      //@ts-expect-error\r\n      d20.number = mainDice[0] * 2;\r\n      //@ts-expect-error\r\n      d20.modifiers.push(`kl${d20.number / 2}`);\r\n      //@ts-expect-error\r\n      d20.options.disadvantage = true;\r\n      //@ts-expect-error\r\n    } else d20.number = mainDice[0] * 1;\r\n    // Assign critical and fumble thresholds\r\n    //@ts-expect-error\r\n    if (this.options.critical) d20.options.critical = this.options.critical;\r\n    //@ts-expect-error\r\n    if (this.options.fumble) d20.options.fumble = this.options.fumble;\r\n    //@ts-expect-error\r\n    if (this.options.targetValue) d20.options.target = this.options.targetValue;\r\n    // Re-compile the underlying formula\r\n    //@ts-expect-error\r\n    this._formula = this.constructor.getFormula(this.terms);\r\n  }\r\n  /* -------------------------------------------- */\r\n  /** @inheritdoc */\r\n  async toMessage(messageData = {}, options = {}) {\r\n    // Evaluate the roll now so we have the results available to determine whether reliable talent came into play\r\n    if (!this._evaluated) await this.evaluate({ async: true });\r\n    // Add appropriate advantage mode message flavor and ard20 roll flags\r\n    //@ts-expect-error\r\n    messageData.flavor = messageData.flavor || this.options.flavor;\r\n    //@ts-expect-error\r\n    if (this.hasAdvantage) messageData.flavor += ` (${game.i18n.localize(\"ARd20.Advantage\")})`;\r\n    //@ts-expect-error\r\n    else if (this.hasDisadvantage) messageData.flavor += ` (${game.i18n.localize(\"ARd20.Disadvantage\")})`;\r\n    // Record the preferred rollMode\r\n    //@ts-expect-error\r\n    options.rollMode = options.rollMode ?? this.options.rollMode;\r\n    return super.toMessage(messageData, options);\r\n  }\r\n  /* -------------------------------------------- */\r\n  /*  Configuration Dialog                        */\r\n  /* -------------------------------------------- */\r\n  /**\r\n   * Create a Dialog prompt used to configure evaluation of an existing D20Roll instance.\r\n   * @param {object} data                     Dialog configuration data\r\n   * @param {string} [data.title]               The title of the shown dialog window\r\n   * @param {number} [data.defaultRollMode]     The roll mode that the roll mode select element should default to\r\n   * @param {number} [data.defaultAction]       The button marked as default\r\n   * @param {boolean} [data.chooseModifier]     Choose which ability modifier should be applied to the roll?\r\n   * @param {string} [data.defaultAbility]      For tool rolls, the default ability modifier applied to the roll\r\n   * @param {string} [data.template]            A custom path to an HTML template to use instead of the default\r\n   * @param {object} options                  Additional Dialog customization options\r\n   * @returns {Promise<D20Roll|null>}         A resulting D20Roll object constructed with the dialog, or null if the dialog was closed\r\n   */\r\n  //@ts-expect-error\r\n  async configureDialog(\r\n    {\r\n      title,\r\n      defaultRollMode,\r\n      canMult,\r\n      defaultAction = D20Roll.ADV_MODE.NORMAL,\r\n      mRoll,\r\n      chooseModifier = false,\r\n      defaultAttribute,\r\n      template,\r\n    } = {},\r\n    options = {}\r\n  ) {\r\n    // Render the Dialog inner HTML\r\n    //@ts-expect-error\r\n    const content = await renderTemplate(template ?? this.constructor.EVALUATION_TEMPLATE, {\r\n      formula: `${this.formula} + @bonus`,\r\n      //@ts-expect-error\r\n      defaultRollMode,\r\n      rollModes: CONFIG.Dice.rollModes,\r\n      chooseModifier,\r\n      defaultAttribute,\r\n      attributes: CONFIG.ARd20.Attributes,\r\n      //@ts-expect-error\r\n      canMult,\r\n      mRoll,\r\n    });\r\n    let defaultButton = \"normal\";\r\n    switch (defaultAction) {\r\n      case D20Roll.ADV_MODE.ADVANTAGE:\r\n        defaultButton = \"advantage\";\r\n        break;\r\n      case D20Roll.ADV_MODE.DISADVANTAGE:\r\n        defaultButton = \"disadvantage\";\r\n        break;\r\n    }\r\n    // Create the Dialog window and await submission of the form\r\n    return new Promise((resolve) => {\r\n      new Dialog(\r\n        {\r\n          //@ts-expect-error\r\n          title,\r\n          content,\r\n          buttons: {\r\n            advantage: {\r\n              label: game.i18n.localize(\"ARd20.Advantage\"),\r\n              callback: (html) => resolve(this._onDialogSubmit(html, D20Roll.ADV_MODE.ADVANTAGE)),\r\n            },\r\n            normal: {\r\n              label: game.i18n.localize(\"ARd20.Normal\"),\r\n              callback: (html) => resolve(this._onDialogSubmit(html, D20Roll.ADV_MODE.NORMAL)),\r\n            },\r\n            disadvantage: {\r\n              label: game.i18n.localize(\"ARd20.Disadvantage\"),\r\n              callback: (html) => resolve(this._onDialogSubmit(html, D20Roll.ADV_MODE.DISADVANTAGE)),\r\n            },\r\n          },\r\n          default: defaultButton,\r\n          close: () => resolve(null),\r\n        },\r\n        options\r\n      ).render(true);\r\n    });\r\n  }\r\n  /* -------------------------------------------- */\r\n  /**\r\n   * Handle submission of the Roll evaluation configuration Dialog\r\n   * @param {jQuery} html             The submitted dialog content\r\n   * @param {number} advantageMode    The chosen advantage mode\r\n   * @private\r\n   */\r\n  //@ts-expect-error\r\n  _onDialogSubmit(html, advantageMode) {\r\n    const form = html[0].querySelector(\"form\");\r\n    console.log(this);\r\n    console.log(form, \"ФОРМА\");\r\n    if (form.bonus.value) {\r\n      const bonus = new Roll(form.bonus.value, this.data);\r\n      if (!(bonus.terms[0] instanceof OperatorTerm)) this.terms.push(new OperatorTerm({ operator: \"+\" }));\r\n      this.terms = this.terms.concat(bonus.terms);\r\n    }\r\n    // Customize the modifier\r\n    if (form.attribute?.value) {\r\n      //@ts-expect-error\r\n      const abl = this.data.attributes[form.attribute.value];\r\n      console.log(abl);\r\n      //@ts-expect-error\r\n      this.terms.findSplice((t) => t.term === \"@mod\", new NumericTerm({ number: abl.mod }));\r\n      //@ts-expect-error\r\n      this.options.flavor += ` (${game.i18n.localize(CONFIG.ARd20.Attributes[form.attribute.value])})`;\r\n    }\r\n    /* if (form.prof_type?.value) {\r\n           const pr = this.data[form.prof_type.value][form.prof_value.value];\r\n           console.log(pr);\r\n           this.terms.findSplice((t) => t.term === \"@prof_die\", new Die({ number: 1, faces: pr.prof_die }));\r\n           this.terms.findSplice((t) => t.term === \"@prof_bonus\", new NumericTerm({ number: pr.prof_bonus }));\r\n         }*/\r\n    // Apply advantage or disadvantage\r\n    //@ts-expect-error\r\n    this.options.advantageMode = advantageMode;\r\n    //@ts-expect-error\r\n    this.options.rollMode = form.rollMode.value;\r\n    //@ts-expect-error\r\n    this.options.mRoll = form.mRoll?.checked;\r\n    this.configureModifiers();\r\n    return this;\r\n  }\r\n}\r\n/* -------------------------------------------- */\r\n/**\r\n * Advantage mode of a 5e d20 roll\r\n * @enum {number}\r\n */\r\nD20Roll.ADV_MODE = {\r\n  NORMAL: 0,\r\n  ADVANTAGE: 1,\r\n  DISADVANTAGE: -1,\r\n};\r\n/**\r\n * The HTML template path used to configure evaluation of this Roll\r\n * @type {string}\r\n */\r\nD20Roll.EVALUATION_TEMPLATE = \"systems/ard20/templates/chat/roll-dialog.html\";\r\n","/**\r\n * A type of Roll specific to a damage (or healing) roll in the 5e system.\r\n * @param {string} formula                       The string formula to parse\r\n * @param {object} data                          The data object against which to parse attributes within the formula\r\n * @param {object} [options={}]                  Extra optional arguments which describe or modify the DamageRoll\r\n * @param {number} [options.criticalBonusDice=0]      A number of bonus damage dice that are added for critical hits\r\n * @param {number} [options.criticalMultiplier=2]     A critical hit multiplier which is applied to critical hits\r\n * @param {boolean} [options.multiplyNumeric=false]   Multiply numeric terms by the critical multiplier\r\n * @param {boolean} [options.powerfulCritical=false]  Apply the \"powerful criticals\" house rule to critical hits\r\n *\r\n */\r\n//@ts-expect-error\r\nexport default class DamageRoll extends Roll {\r\n    //@ts-expect-error\r\n    constructor(formula, data, options) {\r\n        super(formula, data, options);\r\n        // For backwards compatibility, skip rolls which do not have the \"critical\" option defined\r\n        //@ts-expect-error\r\n        if (this.options.critical !== undefined)\r\n            this.configureDamage();\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * A convenience reference for whether this DamageRoll is a critical hit\r\n     * @type {boolean}\r\n     */\r\n    get isCritical() {\r\n        //@ts-expect-error\r\n        return this.options.critical;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /*  Damage Roll Methods                         */\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Apply optional modifiers which customize the behavior of the d20term\r\n     * @private\r\n     */\r\n    configureDamage() {\r\n        let critBonus = 0;\r\n        for (let [i, term] of this.terms.entries()) {\r\n            if (!(term instanceof OperatorTerm)) {\r\n                //@ts-expect-error\r\n                term.options.damageType = i !== 0 && this.terms[i - 1] instanceof OperatorTerm ? this.options.damageType[i - 1] : this.options.damageType[i];\r\n            }\r\n            // Multiply dice terms\r\n            if (term instanceof DiceTerm) {\r\n                //@ts-expect-error\r\n                term.options.baseNumber = term.options.baseNumber ?? term.number; // Reset back\r\n                //@ts-expect-error\r\n                term.number = term.options.baseNumber;\r\n                if (this.isCritical) {\r\n                    critBonus += term.number * term.faces;\r\n                    let [oper, num] = [new OperatorTerm({ operator: \"+\" }), new NumericTerm({ number: critBonus, options: { flavor: \"Crit\" } })];\r\n                    this.terms.splice(1, 0, oper);\r\n                    this.terms.splice(2, 0, num);\r\n                    //@ts-expect-error\r\n                    let cb = this.options.criticalBonusDice && i === 0 ? this.options.criticalBonusDice : 0;\r\n                    term.alter(1, cb);\r\n                    //@ts-expect-error\r\n                    term.options.critical = true;\r\n                }\r\n            }\r\n            // Multiply numeric terms\r\n            //@ts-expect-error\r\n            else if (this.options.multiplyNumeric && term instanceof NumericTerm) {\r\n                //@ts-expect-error\r\n                term.options.baseNumber = term.options.baseNumber ?? term.number; // Reset back\r\n                //@ts-expect-error\r\n                term.number = term.options.baseNumber;\r\n                if (this.isCritical) {\r\n                    //@ts-expect-error\r\n                    term.number *= this.options.criticalMultiplier ?? 2;\r\n                    //@ts-expect-error\r\n                    term.options.critical = true;\r\n                }\r\n            }\r\n        }\r\n        //@ts-expect-error\r\n        this._formula = this.constructor.getFormula(this.terms);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @inheritdoc */\r\n    toMessage(messageData = {}, options = {}) {\r\n        //@ts-expect-error\r\n        messageData.flavor = messageData.flavor || this.options.flavor;\r\n        if (this.isCritical) {\r\n            const label = game.i18n.localize(\"ARd20.CriticalHit\");\r\n            //@ts-expect-error\r\n            messageData.flavor = messageData.flavor ? `${messageData.flavor} (${label})` : label;\r\n        }\r\n        //@ts-expect-error\r\n        options.rollMode = options.rollMode ?? this.options.rollMode;\r\n        return super.toMessage(messageData, options);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /*  Configuration Dialog                        */\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Create a Dialog prompt used to configure evaluation of an existing D20Roll instance.\r\n     * @param {object} data                     Dialog configuration data\r\n     * @param {string} [data.title]               The title of the shown dialog window\r\n     * @param {number} [data.defaultRollMode]     The roll mode that the roll mode select element should default to\r\n     * @param {string} [data.defaultCritical]     Should critical be selected as default\r\n     * @param {string} [data.template]            A custom path to an HTML template to use instead of the default\r\n     * @param {boolean} [data.allowCritical=true] Allow critical hit to be chosen as a possible damage mode\r\n     * @param {object} options                  Additional Dialog customization options\r\n     * @returns {Promise<D20Roll|null>}         A resulting D20Roll object constructed with the dialog, or null if the dialog was closed\r\n     */\r\n    //@ts-expect-error\r\n    async configureDialog({ title, defaultRollMode, canMult, damType, mRoll, defaultCritical = false, template, allowCritical = true } = {}, options = {}) {\r\n        // Render the Dialog inner HTML\r\n        //@ts-expect-error\r\n        const content = await renderTemplate(template ?? this.constructor.EVALUATION_TEMPLATE, {\r\n            formula: `${this.formula} + @bonus`,\r\n            defaultRollMode,\r\n            rollModes: CONFIG.Dice.rollModes,\r\n            canMult,\r\n            damType,\r\n            mRoll\r\n        });\r\n        // Create the Dialog window and await submission of the form\r\n        return new Promise((resolve) => {\r\n            new Dialog({\r\n                title,\r\n                content,\r\n                buttons: {\r\n                    critical: {\r\n                        //@ts-expect-error\r\n                        condition: allowCritical,\r\n                        label: game.i18n.localize(\"ARd20.CriticalHit\"),\r\n                        callback: (html) => resolve(this._onDialogSubmit(html, true)),\r\n                    },\r\n                    normal: {\r\n                        label: game.i18n.localize(allowCritical ? \"ARd20.Normal\" : \"ARd20.Roll\"),\r\n                        callback: (html) => resolve(this._onDialogSubmit(html, false)),\r\n                    },\r\n                },\r\n                default: defaultCritical ? \"critical\" : \"normal\",\r\n                close: () => resolve(null),\r\n            }, options).render(true);\r\n        });\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Handle submission of the Roll evaluation configuration Dialog\r\n     * @param {jQuery} html             The submitted dialog content\r\n     * @param {boolean} isCritical      Is the damage a critical hit?\r\n     * @private\r\n     */\r\n    //@ts-expect-error\r\n    _onDialogSubmit(html, isCritical) {\r\n        const form = html[0].querySelector(\"form\");\r\n        // Append a situational bonus term\r\n        if (form.bonus.value) {\r\n            const bonus = new Roll(form.bonus.value, this.data);\r\n            if (!(bonus.terms[0] instanceof OperatorTerm))\r\n                this.terms.push(new OperatorTerm({ operator: \"+\" }));\r\n            this.terms = this.terms.concat(bonus.terms);\r\n        }\r\n        // Apply advantage or disadvantage\r\n        //@ts-expect-error\r\n        this.options.critical = isCritical;\r\n        //@ts-expect-error\r\n        this.options.rollMode = form.rollMode.value;\r\n        //@ts-expect-error\r\n        this.options.damageType.forEach((part, ind) => (this.options.damageType[ind] = form[`damageType.${ind}`] ? part[form[`damageType.${ind}`].value] : part[0]));\r\n        //@ts-expect-error\r\n        this.options.mRoll = form.mRoll?.checked;\r\n        this.configureDamage();\r\n        return this;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @inheritdoc */\r\n    //@ts-expect-error\r\n    static fromData(data) {\r\n        const roll = super.fromData(data);\r\n        //@ts-expect-error\r\n        roll._formula = this.getFormula(roll.terms);\r\n        return roll;\r\n    }\r\n}\r\n/**\r\n * The HTML template path used to configure evaluation of this Roll\r\n * @type {string}\r\n */\r\nDamageRoll.EVALUATION_TEMPLATE = \"systems/ard20/templates/chat/roll-dialog.html\";\r\n","export { default as D20Roll } from \"./d20-roll.js\";\r\nexport { default as DamageRoll } from \"./damage-roll.js\";\r\n/**\r\n * A standardized helper function for simplifying the constant parts of a multipart roll formula\r\n *\r\n * @param {string} formula                 The original Roll formula\r\n * @param {Object} data                    Actor or item data against which to parse the roll\r\n * @param {Object} options                 Formatting options\r\n * @param {boolean} options.constantFirst   Puts the constants before the dice terms in the resulting formula\r\n *\r\n * @return {string}                        The resulting simplified formula\r\n */\r\nexport function simplifyRollFormula(formula, data, options = { constantFirst: false }) {\r\n  const roll = new Roll(formula, data); // Parses the formula and replaces any @properties\r\n  const terms = roll.terms;\r\n  // Some terms are \"too complicated\" for this algorithm to simplify\r\n  // In this case, the original formula is returned.\r\n  if (terms.some(_isUnsupportedTerm)) return roll.formula;\r\n  const rollableTerms = []; // Terms that are non-constant, and their associated operators\r\n  const constantTerms = []; // Terms that are constant, and their associated operators\r\n  let operators = []; // Temporary storage for operators before they are moved to one of the above\r\n  for (let term of terms) {\r\n    // For each term\r\n    if (term instanceof OperatorTerm) operators.push(term);\r\n    // If the term is an addition/subtraction operator, push the term into the operators array\r\n    else {\r\n      // Otherwise the term is not an operator\r\n      if (term instanceof DiceTerm) {\r\n        // If the term is something rollable\r\n        rollableTerms.push(...operators); // Place all the operators into the rollableTerms array\r\n        rollableTerms.push(term); // Then place this rollable term into it as well\r\n      } //\r\n      else {\r\n        // Otherwise, this must be a constant\r\n        constantTerms.push(...operators); // Place the operators into the constantTerms array\r\n        constantTerms.push(term); // Then also add this constant term to that array.\r\n      } //\r\n      operators = []; // Finally, the operators have now all been assigend to one of the arrays, so empty this before the next iteration.\r\n    }\r\n  }\r\n  const constantFormula = Roll.getFormula(constantTerms); // Cleans up the constant terms and produces a new formula string\r\n  const rollableFormula = Roll.getFormula(rollableTerms); // Cleans up the non-constant terms and produces a new formula string\r\n  // Mathematically evaluate the constant formula to produce a single constant term\r\n  let constantPart = undefined;\r\n  if (constantFormula) {\r\n    try {\r\n      constantPart = Roll.safeEval(constantFormula);\r\n    } catch (err) {\r\n      console.warn(`Unable to evaluate constant term ${constantFormula} in simplifyRollFormula`);\r\n    }\r\n  }\r\n  // Order the rollable and constant terms, either constant first or second depending on the optional argument\r\n  const parts = options.constantFirst ? [constantPart, rollableFormula] : [rollableFormula, constantPart];\r\n  // Join the parts with a + sign, pass them to `Roll` once again to clean up the formula\r\n  return new Roll(parts.filterJoin(\" + \")).formula;\r\n}\r\n/* -------------------------------------------- */\r\n/**\r\n * Only some terms are supported by simplifyRollFormula, this method returns true when the term is not supported.\r\n * @param {*} term - A single Dice term to check support on\r\n * @return {Boolean} True when unsupported, false if supported\r\n */\r\nfunction _isUnsupportedTerm(term) {\r\n  const diceTerm = term instanceof DiceTerm;\r\n  const operator = term instanceof OperatorTerm && [\"+\", \"-\"].includes(term.operator);\r\n  const number = term instanceof NumericTerm;\r\n  return !(diceTerm || operator || number);\r\n}\r\n/* -------------------------------------------- */\r\n/* D20 Roll                                     */\r\n/* -------------------------------------------- */\r\n/**\r\n * A standardized helper function for managing core 5e d20 rolls.\r\n * Holding SHIFT, ALT, or CTRL when the attack is rolled will \"fast-forward\".\r\n * This chooses the default options of a normal attack with no bonus, Advantage, or Disadvantage respectively\r\n *\r\n * @param {string[]} parts          The dice roll component parts, excluding the initial d20\r\n * @param {object} data             Actor or item data against which to parse the roll\r\n *\r\n * @param {boolean} [advantage]       Apply advantage to the roll (unless otherwise specified)\r\n * @param {boolean} [disadvantage]    Apply disadvantage to the roll (unless otherwise specified)\r\n * @param {number} [critical]         The value of d20 result which represents a critical success\r\n * @param {number} [fumble]           The value of d20 result which represents a critical failure\r\n * @param {number} [targetValue]      Assign a target value against which the result of this roll should be compared\r\n\r\n * @param {boolean} [chooseModifier=false] Choose the ability modifier that should be used when the roll is made\r\n * @param {boolean} [fastForward=false] Allow fast-forward advantage selection\r\n * @param {Event} [event]             The triggering event which initiated the roll\r\n * @param {string} [rollMode]         A specific roll mode to apply as the default for the resulting roll\r\n * @param {string} [template]         The HTML template used to render the roll dialog\r\n * @param {string} [title]            The dialog window title\r\n * @param {Object} [dialogOptions]    Modal dialog options\r\n *\r\n * @param {boolean} [chatMessage=true] Automatically create a Chat Message for the result of this roll\r\n * @param {object} [messageData={}] Additional data which is applied to the created Chat Message, if any\r\n * @param {string} [rollMode]       A specific roll mode to apply as the default for the resulting roll\r\n * @param {object} [speaker]        The ChatMessage speaker to pass when creating the chat\r\n * @param {string} [flavor]         Flavor text to use in the posted chat message\r\n *\r\n * @return {Promise<D20Roll|null>}  The evaluated D20Roll, or null if the workflow was cancelled\r\n */\r\n//@ts-expect-error\r\nexport async function d20Roll({\r\n  //@ts-expect-error\r\n  parts = [],\r\n  //@ts-expect-error\r\n  data = {},\r\n  //@ts-expect-error\r\n  advantage,\r\n  //@ts-expect-error\r\n  disadvantage,\r\n  //@ts-expect-error\r\n  fumble = 1,\r\n  //@ts-expect-error\r\n  critical = 20,\r\n  //@ts-expect-error\r\n  targetValue,\r\n  //@ts-expect-error\r\n  chooseModifier = false,\r\n  //@ts-expect-error\r\n  fastForward = false,\r\n  //@ts-expect-error\r\n  event,\r\n  //@ts-expect-error\r\n  template,\r\n  //@ts-expect-error\r\n  title,\r\n  //@ts-expect-error\r\n  dialogOptions,\r\n  //@ts-expect-error\r\n  chatMessage = true,\r\n  //@ts-expect-error\r\n  messageData = {},\r\n  //@ts-expect-error\r\n  rollMode,\r\n  //@ts-expect-error\r\n  speaker,\r\n  //@ts-expect-error\r\n  options,\r\n  //@ts-expect-error\r\n  flavor,\r\n  //@ts-expect-error\r\n  canMult,\r\n  //@ts-expect-error\r\n  mRoll,\r\n  //@ts-expect-error\r\n} = {}) {\r\n  // Handle input arguments\r\n  const mainDie = new Die(game.settings.get(\"ard20\", \"mainDiceType\")); //check if main dice still d20 or it was changed to 3d6 in settings\r\n  fumble = mainDie.number\r\n  critical = mainDie.number * mainDie.faces\r\n  const { advantageMode, isFF } = _determineAdvantageMode({ advantage, disadvantage, fastForward, event });\r\n  const formula = [mainDie.formula].concat(parts).join(\" + \") \r\n\r\n  const defaultRollMode = rollMode || game.settings.get(\"core\", \"rollMode\");\r\n  if (chooseModifier && !isFF) {\r\n    data[\"mod\"] = \"@mod\";\r\n  }\r\n  // Construct the D20Roll instance\r\n  //@ts-expect-error\r\n  const roll = new CONFIG.Dice.D20Roll(formula, data, {\r\n    flavor: flavor || title,\r\n    advantageMode,\r\n    defaultRollMode,\r\n    critical,\r\n    fumble,\r\n    targetValue,\r\n    mRoll,\r\n  });\r\n  // Prompt a Dialog to further configure the D20Roll\r\n  if (!isFF) {\r\n    const configured = await roll.configureDialog(\r\n      {\r\n        title,\r\n        chooseModifier,\r\n        defaultRollMode: defaultRollMode,\r\n        defaultAction: advantageMode,\r\n        defaultAbility: data?.item?.ability,\r\n        template,\r\n        canMult,\r\n        mRoll,\r\n      },\r\n      dialogOptions\r\n    );\r\n    if (configured === null) return null;\r\n  }\r\n  // Evaluate the configured roll\r\n  await roll.evaluate({ async: true });\r\n  // Create a Chat Message\r\n  if (speaker) {\r\n    console.warn(\r\n      `You are passing the speaker argument to the d20Roll function directly which should instead be passed as an internal key of messageData`\r\n    );\r\n    messageData.speaker = speaker;\r\n  }\r\n  if (roll && chatMessage) await roll.toMessage(messageData, options);\r\n  return roll;\r\n}\r\n/* -------------------------------------------- */\r\n/**\r\n * Determines whether this d20 roll should be fast-forwarded, and whether advantage or disadvantage should be applied\r\n * @returns {{isFF: boolean, advantageMode: number}}  Whether the roll is fast-forward, and its advantage mode\r\n */\r\n//@ts-expect-error\r\nfunction _determineAdvantageMode({ event, advantage = false, disadvantage = false, fastForward = false } = {}) {\r\n  const isFF = fastForward || (event && (event.shiftKey || event.altKey || event.ctrlKey || event.metaKey));\r\n  //@ts-expect-error\r\n  let advantageMode = CONFIG.Dice.D20Roll.ADV_MODE.NORMAL;\r\n  //@ts-expect-error\r\n  if (advantage || event?.altKey) advantageMode = CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE;\r\n  //@ts-expect-error\r\n  else if (disadvantage || event?.ctrlKey || event?.metaKey) advantageMode = CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE;\r\n  return { isFF, advantageMode };\r\n}\r\n/* -------------------------------------------- */\r\n/* Damage Roll                                  */\r\n/* -------------------------------------------- */\r\n/**\r\n * A standardized helper function for managing core 5e damage rolls.\r\n * Holding SHIFT, ALT, or CTRL when the attack is rolled will \"fast-forward\".\r\n * This chooses the default options of a normal attack with no bonus, Critical, or no bonus respectively\r\n *\r\n * @param {string[]} parts          The dice roll component parts, excluding the initial d20\r\n * @param {object} [data]           Actor or item data against which to parse the roll\r\n *\r\n * @param {boolean} [critical=false] Flag this roll as a critical hit for the purposes of fast-forward or default dialog action\r\n * @param {number} [criticalBonusDice=0] A number of bonus damage dice that are added for critical hits\r\n * @param {number} [criticalMultiplier=2] A critical hit multiplier which is applied to critical hits\r\n * @param {boolean} [multiplyNumeric=false] Multiply numeric terms by the critical multiplier\r\n * @param {boolean} [powerfulCritical=false] Apply the \"powerful criticals\" house rule to critical hits\r\n\r\n * @param {boolean} [fastForward=false] Allow fast-forward advantage selection\r\n * @param {Event}[event]            The triggering event which initiated the roll\r\n * @param {boolean} [allowCritical=true] Allow the opportunity for a critical hit to be rolled\r\n * @param {string} [template]       The HTML template used to render the roll dialog\r\n * @param {string} [title]          The dice roll UI window title\r\n * @param {object} [dialogOptions]  Configuration dialog options\r\n *\r\n * @param {boolean} [chatMessage=true] Automatically create a Chat Message for the result of this roll\r\n * @param {object} [messageData={}] Additional data which is applied to the created Chat Message, if any\r\n * @param {string} [rollMode]       A specific roll mode to apply as the default for the resulting roll\r\n * @param {object} [speaker]        The ChatMessage speaker to pass when creating the chat\r\n * @param {string} [flavor]         Flavor text to use in the posted chat message\r\n *\r\n * @return {Promise<DamageRoll|null>} The evaluated DamageRoll, or null if the workflow was canceled\r\n */\r\n//@ts-expect-error\r\nexport async function damageRoll({\r\n  //@ts-expect-error\r\n  parts = [],\r\n  //@ts-expect-error\r\n  data, // Roll creation\r\n  //@ts-expect-error\r\n  critical = false,\r\n  //@ts-expect-error\r\n  damType,\r\n  //@ts-expect-error\r\n  damageType,\r\n  //@ts-expect-error\r\n  criticalBonusDice,\r\n  //@ts-expect-error\r\n  criticalMultiplier,\r\n  //@ts-expect-error\r\n  multiplyNumeric, // Damage customization\r\n  //@ts-expect-error\r\n  fastForward = false,\r\n  //@ts-expect-error\r\n  event,\r\n  //@ts-expect-error\r\n  allowCritical = true,\r\n  //@ts-expect-error\r\n  template,\r\n  //@ts-expect-error\r\n  title,\r\n  //@ts-expect-error\r\n  dialogOptions, // Dialog configuration\r\n  //@ts-expect-error\r\n  chatMessage = false,\r\n  //@ts-expect-error\r\n  messageData = {},\r\n  //@ts-expect-error\r\n  rollMode,\r\n  //@ts-expect-error\r\n  speaker,\r\n  //@ts-expect-error\r\n  canMult,\r\n  //@ts-expect-error\r\n  flavor,\r\n  //@ts-expect-error\r\n  mRoll,\r\n  //@ts-expect-error\r\n} = {}) {\r\n  console.log(canMult);\r\n  // Handle input arguments\r\n  const defaultRollMode = rollMode || game.settings.get(\"core\", \"rollMode\");\r\n  // Construct the DamageRoll instance\r\n  const formula = parts.join(\" + \");\r\n  const { isCritical, isFF } = _determineCriticalMode({ critical, fastForward, event });\r\n  //@ts-expect-error\r\n  const roll = new CONFIG.Dice.DamageRoll(formula, data, {\r\n    flavor: flavor || title,\r\n    critical: isCritical,\r\n    criticalBonusDice,\r\n    criticalMultiplier,\r\n    multiplyNumeric,\r\n    damType,\r\n    mRoll,\r\n    damageType,\r\n  });\r\n  // Prompt a Dialog to further configure the DamageRoll\r\n  if (!isFF) {\r\n    const configured = await roll.configureDialog(\r\n      {\r\n        title,\r\n        defaultRollMode: defaultRollMode,\r\n        defaultCritical: isCritical,\r\n        template,\r\n        allowCritical,\r\n        mRoll,\r\n        canMult,\r\n        damType,\r\n      },\r\n      dialogOptions\r\n    );\r\n    if (configured === null) return null;\r\n  }\r\n  // Evaluate the configured roll\r\n  await roll.evaluate({ async: true });\r\n  // Create a Chat Message\r\n  if (speaker) {\r\n    console.warn(\r\n      `You are passing the speaker argument to the damageRoll function directly which should instead be passed as an internal key of messageData`\r\n    );\r\n    messageData.speaker = speaker;\r\n  }\r\n  if (roll && chatMessage) await roll.toMessage(messageData);\r\n  return roll;\r\n}\r\n/* -------------------------------------------- */\r\n/**\r\n * Determines whether this d20 roll should be fast-forwarded, and whether advantage or disadvantage should be applied\r\n * @returns {{isFF: boolean, isCritical: boolean}}  Whether the roll is fast-forward, and whether it is a critical hit\r\n */\r\n//@ts-expect-error\r\nfunction _determineCriticalMode({ event, critical = false, fastForward = false } = {}) {\r\n  const isFF = fastForward || (event && (event.shiftKey || event.altKey || event.ctrlKey || event.metaKey));\r\n  if (event?.altKey) critical = true;\r\n  return { isFF, isCritical: critical };\r\n}\r\n","import { d20Roll } from \"../dice/dice.js\";\r\nimport { obj_entries, obj_keys, getValues } from \"../ard20.js\";\r\n/**\r\n * Extend the base Actor document by defining a custom roll data structure which is ideal for the Simple system.\r\n * @extends {Actor}\r\n */\r\nexport class ARd20Actor extends Actor {\r\n  //@ts-check\r\n  /** @override */\r\n  prepareData() {\r\n    // Prepare data for the actor. Calling the super version of this executes\r\n    // the following, in order: data reset (to clear active effects),\r\n    // prepareBaseData(), prepareEmbeddedDocuments() (including active effects),\r\n    // prepareDerivedData().\r\n    super.prepareData();\r\n    this.items.forEach((item) => item.prepareFinalAttributes());\r\n  }\r\n  /**\r\n   * @override\r\n   * Augment the basic actor data with additional dynamic data. Typically,\r\n   * you'll want to handle most of your calculated/derived data in this step.\r\n   * Data calculated in this step should generally not exist in template.json\r\n   * (such as ability modifiers rather than ability scores) and should be\r\n   * available both inside and outside of character sheets (such as if an actor\r\n   * is queried and has a roll executed directly from it).\r\n   */\r\n  prepareDerivedData() {\r\n    const actorData = this.system;\r\n    // Make separate methods for each Actor type (character, npc, etc.) to keep\r\n    // things organized.\r\n    this._prepareCharacterData(actorData);\r\n    this._prepareNpcData(actorData);\r\n  }\r\n  /**\r\n   * Prepare Character type specific data\r\n   */\r\n  _prepareCharacterData(actorData) {\r\n    if (this.type !== \"character\") return;\r\n    // Make modifications to data here. For example:\r\n    const attributes = actorData.attributes;\r\n    const advancement = actorData.advancement;\r\n    const def_stats = actorData.defences.stats;\r\n    const def_dam = actorData.defences.damage;\r\n    const proficiencies = actorData.proficiencies;\r\n    actorData.mobility.value = 0;\r\n    this.itemTypes.armor.forEach((item) => {\r\n      if (item.type === \"armor\") {\r\n        if (item.system.equipped) {\r\n          for (let key of obj_keys(def_dam.phys)) {\r\n            let ph = item.system.res.phys[key];\r\n            def_dam.phys[key].bonus += !ph.immune ? parseInt(ph.value) : 0;\r\n          }\r\n          for (let key of obj_keys(def_dam.mag)) {\r\n            let mg = item.system.res.mag[key];\r\n            def_dam.mag[key].bonus += !mg.immune ? parseInt(mg.value) : 0;\r\n          }\r\n          actorData.mobility.value += item.system.mobility.value;\r\n        }\r\n      }\r\n    });\r\n    actorData.mobility.value += actorData.mobility.bonus;\r\n    // Loop through ability scores, and add their modifiers to our sheet output.\r\n    for (let [key,attribute] of Object.entries(attributes)) {\r\n      console.log(key,attribute)\r\n      // Calculate the modifier using d20 rules.\r\n      attribute.total = attribute.value + attribute.bonus;\r\n      attribute.mod = Math.floor((attribute.value - 10) / 2);\r\n      attribute.label = game.i18n.localize(CONFIG.ARd20.Attributes[key]) ?? key;\r\n    }\r\n    let dexMod =\r\n      actorData.mobility.value < 10\r\n        ? attributes.dex.mod\r\n        : actorData.mobility.value < 16\r\n        ? Math.min(2, attributes.dex.mod)\r\n        : Math.min(0, attributes.dex.mod);\r\n    //calculate level and expierence\r\n    const levels = CONFIG.ARd20.CHARACTER_EXP_LEVELS;\r\n    if (advancement.xp.used) {\r\n      advancement.xp.used = advancement.xp.used ?? 0;\r\n    }\r\n    for (let i = 1; i < 21; i++) {\r\n      if (advancement.xp.used >= levels[i - 1] && advancement.xp.used < levels[i]) {\r\n        advancement.level = i;\r\n        advancement.xp.level = levels[i];\r\n        advancement.xp.level_min = levels[i - 1];\r\n      }\r\n    }\r\n    advancement.xp.bar_max = advancement.xp.level - advancement.xp.level_min;\r\n    advancement.xp.bar_min = advancement.xp.used - advancement.xp.level_min;\r\n    def_stats.reflex.value = 10 + 4 * def_stats.reflex.level + dexMod + attributes.int.mod + def_stats.reflex.bonus;\r\n    def_stats.reflex.label = \"Reflex\";\r\n    def_stats.fortitude.value =\r\n      10 + 4 * def_stats.fortitude.level + attributes.str.mod + attributes.con.mod + def_stats.fortitude.bonus;\r\n    def_stats.fortitude.label = \"Fortitude\";\r\n    def_stats.will.value =\r\n      10 + 4 * def_stats.will.level + attributes.wis.mod + attributes.cha.mod + def_stats.will.bonus;\r\n    def_stats.will.label = \"Will\";\r\n    for (let [key, dr] of obj_entries(CONFIG.ARd20.DamageSubTypes)) {\r\n      if (!(key === \"force\" || key === \"radiant\" || key === \"psychic\")) {\r\n        def_dam.phys[key].value =\r\n          def_dam.phys[key]?.value || !def_dam.phys[key]?.immune\r\n            ? Math.max(isNaN(def_dam.phys[key]?.value) ? 0 : def_dam.phys[key].value) + def_dam.phys[key]?.bonus\r\n            : 0;\r\n        def_dam.phys[key].name =\r\n          game.i18n.localize(CONFIG.ARd20.DamageSubTypes[key]) ?? CONFIG.ARd20.DamageSubTypes[key];\r\n      }\r\n      def_dam.mag[key].value =\r\n        def_dam.mag[key]?.value || !def_dam.mag[key]?.immune\r\n          ? Math.max(isNaN(def_dam.mag[key]?.value) ? 0 : def_dam.mag[key].value) + def_dam.mag[key]?.bonus\r\n          : 0;\r\n      def_dam.mag[key].name = game.i18n.localize(CONFIG.ARd20.DamageSubTypes[key]) ?? CONFIG.ARd20.DamageSubTypes[key];\r\n    }\r\n    const profLevelSetting = game.settings.get(\"ard20\", \"profLevel\");\r\n    const maxProfLevel = profLevelSetting.length - 1;\r\n    //calculate rolls for character's skills\r\n    for (let [key, skill] of obj_entries(actorData.skills)) {\r\n      skill.level = skill.level < maxProfLevel ? skill.level : maxProfLevel;\r\n      skill.value = skill.level * 4 + skill.bonus;\r\n      skill.name = game.i18n.localize(CONFIG.ARd20.Skills[key]) ?? CONFIG.ARd20.Skills[key];\r\n      skill.rankName = profLevelSetting[skill.level].label;\r\n    }\r\n    proficiencies.weapon = game.settings.get(\"ard20\", \"proficiencies\").weapon.value.map((setting, key) => {\r\n      return {\r\n        name: setting.name,\r\n        type: setting.type,\r\n        value: proficiencies.weapon[key]?.value ?? 0,\r\n        rankName: profLevelSetting[proficiencies.weapon[key]?.value ?? 0].label,\r\n      };\r\n    });\r\n    actorData.speed.value = this.itemTypes.race[0]?.type === \"race\" ? this.itemTypes.race[0].system.speed : 0;\r\n    actorData.speed.value += attributes.dex.mod + actorData.speed.bonus;\r\n  }\r\n  /**\r\n   * Prepare NPC type specific data.\r\n   */\r\n  _prepareNpcData(actorData) {\r\n    //@ts-expect-error\r\n    if (this.type !== \"npc\") return;\r\n    // Make modifications to data here. For example:\r\n    const data = actorData;\r\n    //@ts-expect-error\r\n    data.xp = data.cr * data.cr * 100;\r\n  }\r\n  /**\r\n   * Override getRollData() that's supplied to rolls.\r\n   */\r\n  getRollData() {\r\n    const data = super.getRollData();\r\n    // Prepare character roll data.\r\n    return data;\r\n  }\r\n  /**\r\n   * Roll an Attribute Test\r\n   * Prompt the user for input regarding Advantage/Disadvantage and any Situational Bonus\r\n   * @param {Number} attributeId    The ability ID (e.g. \"str\")\r\n   * @param {Object} options      Options which configure how ability tests are rolled\r\n   * @return {Promise<Roll>}      A Promise which resolves to the created Roll instance\r\n   */\r\n  rollAttributeTest(attributeId, options) {\r\n    const label = game.i18n.localize(CONFIG.ARd20.Attributes[attributeId]);\r\n    const actorData = this.system;\r\n    const attributes = actorData.attributes;\r\n    const attr = attributes[attributeId];\r\n    // Construct parts\r\n    const parts = [\"@mod\"];\r\n    const data = { mod: attr.mod };\r\n    // Add provided extra roll parts now because they will get clobbered by mergeObject below\r\n    if (options?.parts?.length > 0) {\r\n      parts.push(...options.parts);\r\n    }\r\n    // Roll and return\r\n    const rollData = foundry.utils.mergeObject(options, {\r\n      parts: parts,\r\n      data: data,\r\n      title: game.i18n.format(\"ARd20.AttributePromptTitle\", { attribute: label }),\r\n      messageData: {\r\n        speaker: options.speaker || ChatMessage.getSpeaker({ actor: this }) || this.name,\r\n        \"flags.ard20.roll\": { type: \"attribute\", attributeId },\r\n      },\r\n    });\r\n    //@ts-expect-error\r\n    return d20Roll(rollData);\r\n  }\r\n  /**\r\n   * Roll a Skill Check\r\n   * Prompt the user for input regarding Advantage/Disadvantage and any Situational Bonus\r\n   * @param {string} skillId      The skill id (e.g. \"ins\")\r\n   * @param {Object} options      Options which configure how the skill check is rolled\r\n   * @return {Promise<Roll>}      A Promise which resolves to the created Roll instance\r\n   */\r\n  rollSkill(skillId, options) {\r\n    console.log(\"rollSkill event:\", skillId, \"skillID;   \", options, \"options;   \");\r\n    const skl = getValues(this.system.skills, skillId);\r\n    // Compose roll parts and data\r\n    const parts = [\"@proficiency\", \"@mod\"];\r\n    const data = { attributes: this.getRollData().attributes, proficiency: skl.value };\r\n    // Add provided extra roll parts now because they will get clobbered by mergeObject below\r\n    if (options.parts?.length > 0) {\r\n      parts.push(...options.parts);\r\n    }\r\n    // Roll and return\r\n    const rollData = foundry.utils.mergeObject(options, {\r\n      parts: parts,\r\n      data: data,\r\n      title: game.i18n.format(\"ARd20.SkillPromptTitle\", {\r\n        skill: game.i18n.localize(getValues(CONFIG.ARd20.Skills, skillId)),\r\n      }),\r\n      messageData: {\r\n        speaker: options.speaker || ChatMessage.getSpeaker({ actor: this }),\r\n        \"flags.ard20.roll\": { type: \"skill\", skillId },\r\n      },\r\n      chooseModifier: true,\r\n    });\r\n    //@ts-expect-error\r\n    return d20Roll(rollData);\r\n  }\r\n}\r\n","import { getValues, obj_entries } from \"../ard20.js\";\r\nimport { d20Roll, damageRoll, simplifyRollFormula } from \"../dice/dice.js\";\r\n/**\r\n * Extend the basic Item with some very simple modifications.\r\n * @extends {Item}\r\n */\r\nexport class ARd20Item extends Item {\r\n  /**\r\n   * Augment the basic Item data model with additional dynamic data.\r\n   */\r\n  prepareData() {\r\n    // As with the actor class, items are documents that can have their data\r\n    // preparation methods overridden (such as prepareBaseData()).\r\n    super.prepareData();\r\n  }\r\n  prepareDerivedData() {\r\n    super.prepareDerivedData();\r\n    const itemData = this.system;\r\n    this.labels = {};\r\n    this._prepareSpellData(itemData);\r\n    this._prepareWeaponData(itemData);\r\n    this._prepareFeatureData(itemData);\r\n    this._prepareRaceData(itemData);\r\n    this._prepareArmorData(itemData);\r\n    if (itemData.hasAttack) this._prepareAttack(itemData);\r\n    if (itemData.hasDamage) this._prepareDamage(itemData);\r\n    if (!this.isOwned) this.prepareFinalAttributes();\r\n  }\r\n  /**\r\n   *Prepare data for Spells\r\n   */\r\n  _prepareSpellData(itemData) {\r\n    if (itemData.type !== \"spell\") return;\r\n    const data = itemData;\r\n  }\r\n  /**\r\n   *Prepare data for weapons\r\n   */\r\n  _prepareWeaponData(itemData) {\r\n    if (itemData.type !== \"weapon\") return;\r\n    const data = itemData;\r\n    const flags = this.flags;\r\n    data.hasAttack = data.hasAttack || true;\r\n    data.hasDamage = data.hasDamage || true;\r\n    //TODO: this._setDeflect(data);\r\n    this._setTypeAndSubtype(data, flags);\r\n    for (const level of game.settings.get(\"ard20\", \"profLevel\")) {\r\n      data.damage.common[level.key] = data.damage.common[level.key] ?? {\r\n        formula: \"\",\r\n        parts: [[\"\", [\"\", \"\"]]],\r\n      };\r\n    }\r\n    /*for (let [key, type] of obj_entries(data.damage)) {\r\n            if (key !== \"current\") {\r\n                for (let [key, prof] of obj_entries(type)) {\r\n                    prof.formula = \"\";\r\n                    prof.parts.forEach((part) => {\r\n                        if (Array.isArray(part[1])) {\r\n                            prof.formula += `${part[0]}`;\r\n                            part[1].forEach((sub, ind) => {\r\n                                if (ind === 0) {\r\n                                    prof.formula += ` {${sub[0]} ${sub[1]}`;\r\n                                    prof.formula += ind === part[1].length - 1 ? \"}\" : \"\";\r\n                                }\r\n                                else {\r\n                                    prof.formula += ` or ${sub[0]} ${sub[1]}`;\r\n                                    prof.formula += ind === part[1].length - 1 ? \"}\" : \"\";\r\n                                }\r\n                            });\r\n                        }\r\n                        else\r\n                            prof.formula += `${part[0]} {${part[1]} ${part[2]}}; `;\r\n                    });\r\n                }\r\n            }\r\n        }*/\r\n  }\r\n  /**\r\n   *Set deflect die equal to damage die, if not\r\n   */\r\n  /* TODO:\r\n    _setDeflect(data: object & WeaponDataPropertiesData) {\r\n      for (let [k, v] of obj_entries(CONFIG.ARd20.Rank)) {\r\n        v = game.i18n.localize(CONFIG.ARd20.prof[k]) ?? k;\r\n        v = v.toLowerCase();\r\n        data.deflect[v] = data.property[v].def ? data.deflect[v] || data.damage.common[v] : 0;\r\n      }\r\n    }\r\n    */\r\n  //@ts-expect-error\r\n  _setTypeAndSubtype(data, flags) {\r\n    data.sub_type_array = game.settings\r\n      .get(\"ard20\", \"proficiencies\")\r\n      .weapon.value.filter((prof) => prof.type === data.type.value);\r\n    if (flags.core?.sourceId) {\r\n      const id = /Item.(.+)/.exec(flags.core.sourceId)[1];\r\n      const item = game.items?.get(id);\r\n      if (item?.type === \"weapon\") {\r\n        data.sub_type = data.sub_type === undefined ? item.system.sub_type : data.sub_type;\r\n      }\r\n    }\r\n    data.sub_type =\r\n      data.sub_type_array.filter((prof) => prof.name === data.sub_type).length === 0\r\n        ? data.sub_type_array[0].name\r\n        : data.sub_type || data.sub_type_array[0].name;\r\n    data.proficiency.name =\r\n      game.i18n.localize(getValues(CONFIG.ARd20.Rank, data.proficiency.level)) ??\r\n      getValues(CONFIG.ARd20.Rank, data.proficiency.level);\r\n    data.type.name =\r\n      game.i18n.localize(getValues(CONFIG.ARd20.Rank, data.type.value)) ??\r\n      getValues(CONFIG.ARd20.Rank, data.type.value);\r\n  }\r\n  /**\r\n   *Prepare data for features\r\n   */\r\n  _prepareFeatureData(itemData) {\r\n    if (itemData.type !== \"feature\") return;\r\n    const data = itemData;\r\n    // Handle Source of the feature\r\n    data.source.label = \"\";\r\n    data.source.value.forEach((value, key) => {\r\n      let label = game.i18n.localize(getValues(CONFIG.ARd20.Source, value));\r\n      data.source.label += key === 0 ? label : `</br>${label}`;\r\n    });\r\n    //labels.source = game.i18n.localize(CONFIG.ARd20.source[data.source.value]);\r\n    //define levels\r\n    data.level.has = data.level.has !== undefined ? data.level.has : false;\r\n    data.level.max = data.level.has ? data.level.max || 4 : 1;\r\n    data.level.initial = Math.min(data.level.max, data.level.initial);\r\n    data.level.current = this.isOwned ? Math.max(data.level.initial, 1) : 0;\r\n    //define exp cost\r\n    if (data.level.max > 1) {\r\n      let n = (10 - data.level.max) / data.level.max;\r\n      let k = 1.7 + (Math.round(Number((Math.abs(n) * 100).toPrecision(15))) / 100) * Math.sign(n);\r\n      if (data.xp.basicCost.length < data.level.max) {\r\n        for (let i = 1; i < data.level.max; i++) {\r\n          data.xp.basicCost.push(Math.round((data.xp.basicCost[i - 1] * k) / 5) * 5);\r\n          data.xp.AdvancedCost.push(data.xp.basicCost[i]);\r\n        }\r\n      } else {\r\n        for (let i = 1; i < data.level.max; i++) {\r\n          data.xp.basicCost[i] = Math.round((data.xp.basicCost[i - 1] * k) / 5) * 5;\r\n          data.xp.AdvancedCost[i] = data.xp.AdvancedCost[i] ?? data.xp.basicCost[i];\r\n        }\r\n      }\r\n    }\r\n    for (let [key, req] of Object.entries(data.req.values)) {\r\n      req.pass = Array.from({ length: data.level.max }, (i) => (i = false));\r\n      switch (req.type) {\r\n        case \"ability\":\r\n          for (let [key, v] of obj_entries(CONFIG.ARd20.Attributes)) {\r\n            if (req.name === game.i18n.localize(CONFIG.ARd20.Attributes[key])) req.value = key;\r\n          }\r\n          break;\r\n        case \"skill\":\r\n          for (let [key, v] of obj_entries(CONFIG.ARd20.Skills)) {\r\n            if (req.name === game.i18n.localize(CONFIG.ARd20.Skills[key])) req.value = key;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n    for (let i = data.req.logic.length; data.level.max > data.req.logic.length; i++) {\r\n      if (i === 0) {\r\n        data.req.logic.push(\"1\");\r\n      } else {\r\n        data.req.logic.push(data.req.logic[i - 1]);\r\n      }\r\n    }\r\n    for (let i = data.req.logic.length; data.level.max < data.req.logic.length; i--) {\r\n      data.req.logic.splice(data.req.logic.length - 1, 1);\r\n    }\r\n  }\r\n  /**\r\n   * Prepare data for 'race' type of item\r\n   */\r\n  _prepareRaceData(itemData) {\r\n    if (itemData.type !== \"race\") return;\r\n  }\r\n  /**\r\n   * Prepare data for \"armor\" type item\r\n   */\r\n  _prepareArmorData(itemData) {\r\n    if (itemData.type !== \"armor\") return;\r\n    const data = itemData;\r\n    for (let [key, dr] of obj_entries(CONFIG.ARd20.DamageSubTypes)) {\r\n      if (!(key === \"force\" || key === \"radiant\" || key === \"psychic\")) {\r\n        data.res.phys[key].value = parseInt(data.res.phys[key].value) || 0;\r\n        data.res.phys[key].value += data.res.phys[key].value !== \"imm\" ? data.res.phys[key].bonus : \"\";\r\n      }\r\n      data.res.mag[key].value = parseInt(data.res.mag[key].value) || 0;\r\n      data.res.mag[key].value += data.res.mag[key].value !== \"imm\" ? data.res.mag[key].bonus : \"\";\r\n    }\r\n    data.mobility.value = data.mobility.value ?? CONFIG.ARd20.HeavyPoints[data.type][data.slot];\r\n    data.mobility.value += data.mobility.bonus;\r\n  }\r\n  /**\r\n    Prepare Data that uses actor's data\r\n    */\r\n  prepareFinalAttributes() {\r\n    const itemData = this.system;\r\n    //@ts-expect-error\r\n    const abil = (itemData.abil = {});\r\n    for (let [k, v] of obj_entries(CONFIG.ARd20.Attributes)) {\r\n      abil[k] = this.isOwned ? getProperty(this.actor.system, `data.attributes.${k}.mod`) : null;\r\n    }\r\n    let prof_bonus = 0;\r\n    if (itemData.type === \"weapon\") {\r\n      const data = itemData;\r\n      data.proficiency.level = this.isOwned\r\n        ? this.actor?.system.proficiencies.weapon.filter((pr) => pr.name === data.sub_type)[0].value\r\n        : 0;\r\n      data.proficiency.levelName = game.settings.get(\"ard20\", \"profLevel\")[data.proficiency.level].label;\r\n      data.proficiency.key = game.settings.get(\"ard20\", \"profLevel\")[data.proficiency.level].key;\r\n      prof_bonus = data.proficiency.level * 4;\r\n    }\r\n    if (itemData.hasAttack) this._prepareAttack(itemData, prof_bonus, abil);\r\n    if (itemData.hasDamage) this._prepareDamage(itemData, abil);\r\n  }\r\n  _prepareAttack(itemData, prof_bonus, abil) {\r\n    const data = itemData;\r\n    if (!data.hasAttack) return;\r\n    //@ts-expect-error\r\n    let mod = itemData.type === \"weapon\" && abil !== undefined ? abil.dex : data.atkMod;\r\n    //@ts-expect-error\r\n    data.attack = {\r\n      formula: \"1d20+\" + prof_bonus + \"+\" + mod,\r\n      parts: [mod, prof_bonus],\r\n    };\r\n  }\r\n  _prepareDamage(itemData, abil) {\r\n    const data = itemData;\r\n    if (!data.hasDamage) return;\r\n    let mod = itemData.type === \"weapon\" && abil !== undefined ? abil.str : 0;\r\n    const prop = itemData.type === \"weapon\" ? `damage.common.${data.proficiency.key}.parts` : \"damage.parts\";\r\n    let baseDamage = getProperty(data, prop);\r\n    //@ts-expect-error\r\n    data.damage.current = {\r\n      formula: \"\",\r\n      parts: baseDamage,\r\n    };\r\n    baseDamage?.forEach((part, key) => {\r\n      console.log(\"baseDamage for current damage\", part);\r\n      //@ts-expect-error\r\n      data.damage.current.formula += part[0] + `[`;\r\n      part[1].forEach((subPart, subKey) => {\r\n        data.damage.current.formula +=\r\n          game.i18n.localize(CONFIG.ARd20.DamageTypes[subPart[0]]) +\r\n          ` ${game.i18n.localize(CONFIG.ARd20.DamageSubTypes[subPart[1]])}`;\r\n        data.damage.current.formula += subKey === part[1].length - 1 ? \"]\" : \" or<br/>\";\r\n      });\r\n      data.damage.current.formula += key === baseDamage.length - 1 ? \"\" : \"<br/>+<br/>\";\r\n    });\r\n  }\r\n  /**\r\n   * Prepare a data object which is passed to any Roll formulas which are created related to this Item\r\n   * @private\r\n   */\r\n  //@ts-expect-error\r\n  getRollData() {\r\n    // If present, return the actor's roll data.\r\n    if (!this.actor) return null;\r\n    const rollData = this.actor.getRollData();\r\n    const hasDamage = this.system.hasDamage;\r\n    const hasAttack = this.system.hasAttack;\r\n    //@ts-expect-error\r\n    rollData.item = foundry.utils.deepClone(this.system);\r\n    //@ts-expect-error\r\n    rollData.damageDie = hasDamage ? this.system.damage.current.parts[0] : null;\r\n    //@ts-expect-error\r\n    rollData.mod = hasAttack\r\n      ? //@ts-expect-error\r\n        this.system.attack.parts[0]\r\n      : hasDamage\r\n      ? //@ts-expect-error\r\n        this.system.damage.current.parts[1]\r\n      : null;\r\n    //@ts-expect-error\r\n    rollData.prof = hasAttack ? this.system.attack.parts[1] : null;\r\n    return rollData;\r\n  }\r\n  /**\r\n   * Handle clickable rolls.\r\n   * @param {Event} event   The originating click event\r\n   * @private\r\n   */\r\n  //@ts-expect-error\r\n  async roll({ configureDialog = true, rollMode, hasDamage = false, hasAttack = false, createMessage = true }) {\r\n    let item = this;\r\n    const id = item.id;\r\n    const iData = this.system; //Item data\r\n    const actor = this.actor;\r\n    const aData = actor?.system;\r\n    hasDamage = iData.hasDamage || hasDamage;\r\n    hasAttack = iData.hasAttack || hasAttack;\r\n    // Initialize chat data.\r\n    const speaker = ChatMessage.getSpeaker({ actor: actor });\r\n    const iName = this.name;\r\n    // Otherwise, create a roll and send a chat message from it.\r\n    const targets = Array.from(game.user.targets);\r\n    //@ts-expect-error\r\n    const mRoll = this.system.mRoll || false;\r\n    //@ts-expect-error\r\n    return item.displayCard({ rollMode, createMessage, hasAttack, hasDamage, targets, mRoll });\r\n  }\r\n  /* -------------------------------------------- */\r\n  /*  Chat Message Helpers                        */\r\n  /* -------------------------------------------- */\r\n  static chatListeners(html) {\r\n    html.on(\"click\", \".card-buttons button\", this._onChatCardAction.bind(this));\r\n    html.on(\"click\", \".item-name\", this._onChatCardToggleContent.bind(this));\r\n    html.on(\"click\", \".attack-roll .roll-controls .accept\", this._rollDamage.bind(this));\r\n    html.trigger(\"click\");\r\n    html.on(\"hover\", \".attack-roll .flexrow .value\", function (event) {\r\n      event.preventDefault();\r\n      const element = this.closest(\"li.flexrow\");\r\n      element.querySelector(\".attack-roll .hover-roll\")?.classList.toggle(\"shown\", event.type == \"mouseenter\");\r\n    });\r\n  }\r\n  /* -------------------------------------------- */\r\n  /**\r\n   * Handle execution of a chat card action via a click event on one of the card buttons\r\n   * @param {Event} event       The originating click event\r\n   * @returns {Promise}         A promise which resolves once the handler workflow is complete\r\n   * @private\r\n   */\r\n  //@ts-expect-error\r\n  static async _onChatCardAction(event) {\r\n    console.log(event);\r\n    event.stopImmediatePropagation();\r\n    // Extract card data\r\n    const button = event.currentTarget;\r\n    const card = button.closest(\".chat-card\");\r\n    const messageId = card.closest(\".message\").dataset.messageId;\r\n    const message = game.messages.get(messageId);\r\n    const action = button.dataset.action;\r\n    const targetUuid = button.closest(\".flexrow\").dataset.targetId;\r\n    // Validate permission to proceed with the roll\r\n    const isTargetted = action === \"save\";\r\n    if (!(isTargetted || game.user.isGM || message.isAuthor)) return;\r\n    // Recover the actor for the chat card\r\n    const actor = await this._getChatCardActor(card);\r\n    if (!actor) return;\r\n    // Get the Item from stored flag data or by the item ID on the Actor\r\n    const storedData = message.getFlag(\"ard20\", \"itemData\");\r\n    //@ts-expect-error\r\n    const item = storedData ? new this(storedData, { parent: actor }) : actor.items.get(card.dataset.itemId);\r\n    if (!item) {\r\n      return ui.notifications.error(\r\n        game.i18n.format(\"ARd20.ActionWarningNoItem\", { item: card.dataset.itemId, name: actor.name })\r\n      );\r\n    }\r\n    const spellLevel = parseInt(card.dataset.spellLevel) || null;\r\n    // Handle different actions\r\n    switch (action) {\r\n      case \"damage\":\r\n      case \"versatile\":\r\n        let dam = await item.rollDamage({\r\n          critical: event.altKey,\r\n          event: event,\r\n          spellLevel: spellLevel,\r\n          versatile: action === \"versatile\",\r\n        });\r\n        //const dom = new DOMParser().parseFromString(message.data.content,\"text/html\")\r\n        const html = $(message.data.content);\r\n        dam = await dam.render();\r\n        //dom.querySelector('button').replaceWith(dam)\r\n        if (targetUuid) {\r\n          html.find(`[data-targetId=\"${targetUuid}\"]`).find(\"button\").replaceWith(dam);\r\n        } else {\r\n          html.find(\".damage-roll\").find(\"button\").replaceWith(dam);\r\n        }\r\n        //console.log(dom)\r\n        await message.update({ content: html[0].outerHTML });\r\n        break;\r\n      case \"formula\":\r\n        await item.rollFormula({ event, spellLevel });\r\n        break;\r\n      case \"save\":\r\n        const targets = this._getChatCardTargets(card);\r\n        for (let token of targets) {\r\n          //@ts-expect-error\r\n          const speaker = ChatMessage.getSpeaker({ scene: canvas.scene, token: token });\r\n          //@ts-expect-error\r\n          await token.actor.rollAbilitySave(button.dataset.ability, { event, speaker });\r\n        }\r\n        break;\r\n      case \"toolCheck\":\r\n        await item.rollToolCheck({ event });\r\n        break;\r\n      case \"placeTemplate\":\r\n        ///@ts-expect-error\r\n        const template = game.ard20.canvas.AbilityTemplate.fromItem(item);\r\n        if (template) template.drawPreview();\r\n        break;\r\n    }\r\n    // Re-enable the button\r\n    button.disabled = false;\r\n  }\r\n  /* -------------------------------------------- */\r\n  /**\r\n   * Handle toggling the visibility of chat card content when the name is clicked\r\n   * @param {Event} event   The originating click event\r\n   * @private\r\n   */\r\n  static _onChatCardToggleContent(event) {\r\n    event.preventDefault();\r\n    const header = event.currentTarget;\r\n    const card = header.closest(\".chat-card\");\r\n    const content = card.querySelector(\".card-content\");\r\n    content.style.display = content.style.display === \"none\" ? \"block\" : \"none\";\r\n  }\r\n  async _applyDamage(dam, tData, tHealth, tActor, tokenId) {\r\n    let value = dam.total;\r\n    console.log(\"урон до резистов: \", value);\r\n    dam.terms.forEach((term) => {\r\n      if (!(term instanceof OperatorTerm)) {\r\n        let damageType = term.options.damageType;\r\n        let res = tData.defences.damage[damageType[0]][damageType[1]];\r\n        if (res.type === \"imm\") console.log(\"Иммунитет\");\r\n        console.log(\"урон уменьшился с \", value);\r\n        value -= res.type === \"imm\" ? term.total : Math.min(res.value, term.total);\r\n        console.log(\"до\", value);\r\n      }\r\n    });\r\n    console.log(value, \"итоговый урон\");\r\n    tHealth -= value;\r\n    console.log(\"хп стало\", tHealth);\r\n    let obj = {};\r\n    obj[\"data.health.value\"] = tHealth;\r\n    if (game.user.isGM) {\r\n      console.log(\"GM applying damage\");\r\n      console.log(tActor);\r\n      await tActor.update(obj);\r\n    } else {\r\n      console.log(\"not GM applying damage\");\r\n      game.socket.emit(\"system.ard20\", {\r\n        operation: \"updateActorData\",\r\n        tokenId: tokenId,\r\n        update: obj,\r\n        value: value,\r\n      });\r\n    }\r\n  }\r\n  static async _rollDamage(event) {\r\n    event.stopImmediatePropagation();\r\n    const element = event.currentTarget;\r\n    const card = element.closest(\".chat-card\");\r\n    const message = game.messages.get(card.closest(\".message\").dataset.messageId);\r\n    const targetUuid = element.closest(\"li.flexrow\").dataset.targetId;\r\n    const token = await fromUuid(targetUuid);\r\n    //@ts-expect-error\r\n    const tActor = token?.actor;\r\n    const tData = tActor.system;\r\n    let tHealth = tData.health.value;\r\n    console.log(tHealth, \"здоровье цели\");\r\n    // Recover the actor for the chat card\r\n    const actor = await this._getChatCardActor(card);\r\n    if (!actor) return;\r\n    // Get the Item from stored flag data or by the item ID on the Actor\r\n    const storedData = message.getFlag(\"ard20\", \"itemData\");\r\n    //@ts-expect-error\r\n    const item = storedData ? new this(storedData, { parent: actor }) : actor.items.get(card.dataset.itemId);\r\n    if (!item) {\r\n      return ui.notifications.error(\r\n        game.i18n.format(\"ARd20.ActionWarningNoItem\", { item: card.dataset.itemId, name: actor.name })\r\n      );\r\n    }\r\n    const dam = await item.rollDamage({\r\n      event: event,\r\n      canMult: false,\r\n    });\r\n    const html = $(message.data.content);\r\n    let damHTML = await dam.render();\r\n    console.log(html.find(`[data-target-id=\"${targetUuid}\"]`).find(\".damage-roll\")[0]);\r\n    html.find(`[data-target-id=\"${targetUuid}\"]`).find(\".damage-roll\").append(damHTML);\r\n    html.find(`[data-target-id=\"${targetUuid}\"]`).find(\".accept\").remove();\r\n    console.log(html[0]);\r\n    await message.update({ content: html[0].outerHTML });\r\n    await item._applyDamage(dam, tData, tHealth, tActor, targetUuid);\r\n  }\r\n  /* -------------------------------------------- */\r\n  /**\r\n   * Get the Actor which is the author of a chat card\r\n   * @param {HTMLElement} card    The chat card being used\r\n   * @return {Actor|null}         The Actor entity or null\r\n   * @private\r\n   */\r\n  static async _getChatCardActor(card) {\r\n    // Case 1 - a synthetic actor from a Token\r\n    if (card.dataset.tokenId) {\r\n      const token = await fromUuid(card.dataset.tokenId);\r\n      if (!token) return null;\r\n      //@ts-expect-error\r\n      return token.actor;\r\n    }\r\n    // Case 2 - use Actor ID directory\r\n    const actorId = card.dataset.actorId;\r\n    return game.actors.get(actorId) || null;\r\n  }\r\n  /* -------------------------------------------- */\r\n  /**\r\n   * Get the Actor which is the author of a chat card\r\n   * @param {HTMLElement} card    The chat card being used\r\n   * @return {Actor[]}            An Array of Actor entities, if any\r\n   * @private\r\n   */\r\n  static _getChatCardTargets(card) {\r\n    let targets = canvas.tokens.controlled.filter((t) => !!t.actor);\r\n    //@ts-expect-error\r\n    if (!targets.length && game.user.character) targets = targets.concat(game.user.character.getActiveTokens());\r\n    if (!targets.length) ui.notifications.warn(game.i18n.localize(\"ARd20.ActionWarningNoToken\"));\r\n    return targets;\r\n  }\r\n  /*showRollDetail(event){\r\n      event.preventDefault();\r\n      const elem = event.currentTarget;\r\n      const\r\n    }*/\r\n  async displayCard({\r\n    //@ts-expect-error\r\n    rollMode,\r\n    createMessage = true,\r\n    hasAttack = Boolean(),\r\n    hasDamage = Boolean(),\r\n    targets = [],\r\n    mRoll = Boolean(),\r\n  } = {}) {\r\n    // Render the chat card template\r\n    let atk = {};\r\n    let dc = {};\r\n    let atkHTML = {};\r\n    let dmgHTML = {};\r\n    let result = {};\r\n    let hit = {};\r\n    let dmg = {};\r\n    let dieResultCss = {};\r\n    //@ts-expect-error\r\n    const def = this.system.attack?.def ?? \"reflex\";\r\n    const token = this.actor.token;\r\n    if (targets.length !== 0) {\r\n      //@ts-expect-error\r\n      let atkRoll = hasAttack ? await this.rollAttack(mRoll, { canMult: true }) : null;\r\n      let dmgRoll = hasDamage && !hasAttack ? await this.rollDamage({ canMult: true }) : null;\r\n      for (let [key, target] of Object.entries(targets)) {\r\n        if (atkRoll) {\r\n          mRoll = atkRoll.options.mRoll;\r\n          //@ts-expect-error\r\n          dc[key] = target.actor.system.defences.stats[def].value;\r\n          //@ts-expect-error\r\n          atk[key] = hasAttack ? (Object.keys(atk).length === 0 || !mRoll ? atkRoll : await atkRoll.reroll()) : null;\r\n          //@ts-expect-error\r\n          console.log(atk[key]);\r\n          //@ts-expect-error\r\n          atkHTML[key] = hasAttack ? await atk[key].render() : null;\r\n          //@ts-expect-error\r\n          let d20 = atk[key] ? atk[key].terms[0] : null;\r\n          //@ts-expect-error\r\n          atk[key] = atk[key].total;\r\n          //@ts-expect-error\r\n          dieResultCss[key] =\r\n            d20.total >= d20.options.critical ? \"d20crit\" : d20.total <= d20.options.fumble ? \"d20fumble\" : \"d20normal\";\r\n          //@ts-expect-error\r\n          result[key] = atk[key] > dc[key] ? \"hit\" : \"miss\";\r\n          //@ts-expect-error\r\n          hit[key] = result[key] === \"hit\" ? true : false;\r\n        } else {\r\n          mRoll = dmgRoll.options.mRoll;\r\n          //@ts-expect-error\r\n          dmg[key] = hasDamage ? (Object.keys(dmg).length === 0 || !mRoll ? dmgRoll : await dmgRoll.reroll()) : null;\r\n          //@ts-expect-error\r\n          dmgHTML[key] = hasDamage ? await dmg[key].render() : null;\r\n        }\r\n      }\r\n    } else {\r\n      //@ts-expect-error\r\n      atk[0] = hasAttack ? await this.rollAttack(mRoll) : null;\r\n      //@ts-expect-error\r\n      mRoll = atk[0] ? atk[0].options.mRoll : false;\r\n      //@ts-expect-error\r\n      atkHTML[0] = hasAttack ? await atk[0].render() : null;\r\n    }\r\n    //@ts-expect-error\r\n    let templateState = targets.size !== 0 ? (mRoll ? \"multiAttack\" : \"oneAttack\") : \"noTarget\";\r\n    const templateData = {\r\n      //@ts-expect-error\r\n      actor: this.actor.system,\r\n      tokenId: token?.uuid || null,\r\n      item: this,\r\n      data: this.getChatData(),\r\n      //@ts-expect-error\r\n      labels: this.labels,\r\n      hasAttack,\r\n      hasDamage,\r\n      atk,\r\n      atkHTML,\r\n      targets,\r\n      //@ts-expect-error\r\n      owner: this.actor.isOwner || game.user.isGM,\r\n      dc,\r\n      result,\r\n      hit,\r\n      dmgHTML,\r\n      dieResultCss,\r\n    };\r\n    const html = await renderTemplate(`systems/ard20/templates/chat/item-card-multiAttack.html`, templateData);\r\n    // Create the ChatMessage data object\r\n    const chatData = {\r\n      user: game.user.data._id,\r\n      type: CONST.CHAT_MESSAGE_TYPES.OTHER,\r\n      content: html,\r\n      //@ts-expect-error\r\n      flavor: this.system.chatFlavor || this.name,\r\n      //@ts-expect-error\r\n      speaker: ChatMessage.getSpeaker({ actor: this.actor, token }),\r\n      flags: { \"core.canPopout\": true },\r\n    };\r\n    // If the Item was destroyed in the process of displaying its card - embed the item data in the chat message\r\n    /*\r\n        if (this.data.type === \"consumable\" && !this.actor.items.has(this.id)) {\r\n          chatData.flags[\"ard20.itemData\"] = this.data;\r\n        }*/\r\n    // Apply the roll mode to adjust message visibility\r\n    ChatMessage.applyRollMode(chatData, rollMode || game.settings.get(\"core\", \"rollMode\"));\r\n    // Create the Chat Message or return its data\r\n    return createMessage ? ChatMessage.create(chatData) : chatData;\r\n  }\r\n  /**\r\n   * Prepare an object of chat data used to display a card for the Item in the chat log.\r\n   * @param {object} htmlOptions    Options used by the TextEditor.enrichHTML function.\r\n   * @returns {object}              An object of chat data to render.\r\n   */\r\n  getChatData(htmlOptions = {}) {\r\n    const data = foundry.utils.deepClone(this.system);\r\n    // Rich text description\r\n    //data.description.value = TextEditor.enrichHTML(data.description.value, htmlOptions);\r\n    // Item type specific properties\r\n    const props = [];\r\n    // Equipment properties\r\n    /*if (data.hasOwnProperty(\"equipped\") && ![\"loot\", \"tool\"].includes(this.data.type)) {\r\n          /*if (data.attunement === CONFIG.ARd20.attunementTypes.REQUIRED) {\r\n            props.push(game.i18n.localize(CONFIG.ARd20.attunements[CONFIG.ARd20.attunementTypes.REQUIRED]));\r\n          }*/\r\n    /*props.push(game.i18n.localize(data.equipped ? \"ARd20.Equipped\" : \"ARd20.Unequipped\"));\r\n        }\r\n    \r\n        // Ability activation properties\r\n        if (data.hasOwnProperty(\"activation\")) {\r\n          props.push(labels.activation + (data.activation?.condition ? ` (${data.activation.condition})` : \"\"), labels.target, labels.range, labels.duration);\r\n        }\r\n    \r\n        // Filter properties and return\r\n        data.properties = props.filter((p) => !!p);\r\n        */\r\n    return data;\r\n  }\r\n  /* -------------------------------------------- */\r\n  /**\r\n   * Prepare chat card data for weapon type items.\r\n   * @param {object} data     Copy of item data being use to display the chat message.\r\n   * @param {object} labels   Specially prepared item labels.\r\n   * @param {string[]} props  Existing list of properties to be displayed. *Will be mutated.*\r\n   * @private\r\n   */\r\n  /* -------------------------------------------- */\r\n  /**\r\n   * Place an attack roll using an item (weapon, feat, spell, or equipment)\r\n   * Rely upon the d20Roll logic for the core implementation\r\n   *\r\n   * @param {object} options        Roll options which are configured and provided to the d20Roll function\r\n   * @returns {Promise<Roll|null>}   A Promise which resolves to the created Roll instance\r\n   */\r\n  async rollAttack(mRoll = Boolean(), canMult = Boolean(), options = {}) {\r\n    console.log(canMult);\r\n    const itemData = this.system;\r\n    //@ts-expect-error\r\n    const flags = this.actor.flags.ard20 || {};\r\n    let title = `${this.name} - ${game.i18n.localize(\"ARd20.AttackRoll\")}`;\r\n    const { parts, rollData } = this.getAttackToHit();\r\n    const targets = game.user.targets;\r\n    //@ts-expect-error\r\n    if (options.parts?.length > 0) {\r\n      //@ts-expect-error\r\n      parts.push(...options.parts);\r\n    }\r\n    let rollConfig = {\r\n      parts: parts,\r\n      actor: this.actor,\r\n      data: rollData,\r\n      title: title,\r\n      flavor: title,\r\n      dialogOptions: {\r\n        width: 400,\r\n      },\r\n      chatMessage: true,\r\n      options: {\r\n        create: false,\r\n      },\r\n      targetValue: targets,\r\n      canMult: canMult,\r\n      mRoll: mRoll,\r\n    };\r\n    //@ts-expect-error\r\n    rollConfig = mergeObject(rollConfig, options);\r\n    //@ts-expect-error\r\n    const roll = await d20Roll(rollConfig);\r\n    if (roll === false) return null;\r\n    return roll;\r\n  }\r\n  rollDamage({\r\n    critical = false,\r\n    event = null,\r\n    spellLevel = null,\r\n    versatile = false,\r\n    options = {},\r\n    mRoll = Boolean(),\r\n    canMult = Boolean(),\r\n  } = {}) {\r\n    console.log(canMult);\r\n    const iData = this.system;\r\n    const aData = this.actor.system;\r\n    //@ts-expect-error\r\n    const parts = iData.damage.current.parts.map((d) => d[0]);\r\n    //@ts-expect-error\r\n    const damType = iData.damage.current.parts.map((d) =>\r\n      d[1].map((c, ind) => {\r\n        //@ts-expect-error\r\n        let a = game.i18n.localize(CONFIG.ARd20.DamageTypes[c[0]]);\r\n        //@ts-expect-error\r\n        let b = game.i18n.localize(CONFIG.ARd20.DamageSubTypes[c[1]]);\r\n        let obj = { key: ind, label: `${a} ${b}` };\r\n        return obj;\r\n      })\r\n    );\r\n    //@ts-expect-error\r\n    options.damageType = iData.damage.current.parts.map((d) => d[1]);\r\n    const hasAttack = false;\r\n    const hasDamage = true;\r\n    //@ts-expect-error\r\n    const rollData = this.getRollData(hasAttack, hasDamage);\r\n    const rollConfig = {\r\n      actor: this.actor,\r\n      //@ts-expect-error\r\n      critical: critical ?? event?.altkey ?? false,\r\n      data: rollData,\r\n      event: event,\r\n      parts: parts,\r\n      canMult: canMult,\r\n      damType: damType,\r\n      mRoll: mRoll,\r\n    };\r\n    //@ts-expect-error\r\n    return damageRoll(mergeObject(rollConfig, options));\r\n  }\r\n  /**\r\n   * Update a label to the Item detailing its total to hit bonus.\r\n   * Sources:\r\n   * - item entity's innate attack bonus\r\n   * - item's actor's proficiency bonus if applicable\r\n   * - item's actor's global bonuses to the given item type\r\n   * - item's ammunition if applicable\r\n   *\r\n   * @returns {{rollData: object, parts: string[]}|null}  Data used in the item's Attack roll.\r\n   */\r\n  getAttackToHit() {\r\n    const itemData = this.system;\r\n    const hasAttack = true;\r\n    const hasDamage = false;\r\n    //if (!this.hasAttack || !itemData) return;\r\n    //@ts-expect-error\r\n    const rollData = this.getRollData(hasAttack, hasDamage);\r\n    console.log(\"ROLL DATA\", rollData);\r\n    // Define Roll bonuses\r\n    const parts = [];\r\n    // Include the item's innate attack bonus as the initial value and label\r\n    //@ts-expect-error\r\n    if (itemData.attackBonus) {\r\n      //@ts-expect-error\r\n      parts.push(itemData.attackBonus);\r\n      //@ts-expect-error\r\n      this.labels.toHit = itemData.attackBonus;\r\n    }\r\n    // Take no further action for un-owned items\r\n    if (!this.isOwned) return { rollData, parts };\r\n    // Ability score modifier\r\n    parts.push(\"@prof\", \"@mod\");\r\n    /* Add proficiency bonus if an explicit proficiency flag is present or for non-item features\r\n        if ( ![\"weapon\", \"consumable\"].includes(this.data.type)) {\r\n          parts.push(\"@prof\");\r\n          if ( this.system.prof?.hasProficiency ) {\r\n            rollData.prof = this.system.prof.term;\r\n          }\r\n        }\r\n        */\r\n    /* Actor-level global bonus to attack rolls\r\n        const actorBonus = this.actor.system.bonuses?.[itemData.actionType] || {};\r\n        if (actorBonus.attack) parts.push(actorBonus.attack);\r\n        */\r\n    /* One-time bonus provided by consumed ammunition\r\n        if (itemData.consume?.type === \"ammo\" && this.actor.items) {\r\n          const ammoItemData = this.actor.items.get(itemData.consume.target)?.data;\r\n    \r\n          if (ammoItemData) {\r\n            const ammoItemQuantity = ammoItemData.data.quantity;\r\n            const ammoCanBeConsumed = ammoItemQuantity && ammoItemQuantity - (itemData.consume.amount ?? 0) >= 0;\r\n            const ammoItemAttackBonus = ammoItemData.data.attackBonus;\r\n            const ammoIsTypeConsumable = ammoItemData.type === \"consumable\" && ammoItemData.data.consumableType === \"ammo\";\r\n            if (ammoCanBeConsumed && ammoItemAttackBonus && ammoIsTypeConsumable) {\r\n              parts.push(\"@ammo\");\r\n              rollData.ammo = ammoItemAttackBonus;\r\n            }\r\n          }\r\n        }\r\n        */\r\n    // Condense the resulting attack bonus formula into a simplified label\r\n    //@ts-expect-error\r\n    const roll = new Roll(parts.join(\"+\"), rollData);\r\n    //@ts-expect-error\r\n    const formula = simplifyRollFormula(roll.formula);\r\n    //@ts-expect-error\r\n    this.labels.toHit = !/^[+-]/.test(formula) ? `+ ${formula}` : formula;\r\n    // Update labels and return the prepared roll data\r\n    return { rollData, parts };\r\n  }\r\n}\r\n","/**\r\n * Manage Active Effect instances through the Actor Sheet via effect control buttons.\r\n * @param {MouseEvent} event      The left-click event on the effect control\r\n * @param {Actor|Item} owner      The owning entity which manages this effect\r\n */\r\nexport function onManageActiveEffect(event, owner) {\r\n    event.preventDefault();\r\n    const a = event.currentTarget;\r\n    //@ts-expect-error\r\n    const li = a.closest(\"li\");\r\n    const effect = li.dataset.effectId ? owner.effects.get(li.dataset.effectId) : null;\r\n    //@ts-expect-error\r\n    switch (a.dataset.action) {\r\n        case \"create\":\r\n            return owner.createEmbeddedDocuments(\"ActiveEffect\", [{\r\n                    label: \"New Effect\",\r\n                    icon: \"icons/svg/aura.svg\",\r\n                    origin: owner.uuid,\r\n                    \"duration.rounds\": li.dataset.effectType === \"temporary\" ? 1 : undefined,\r\n                    disabled: li.dataset.effectType === \"inactive\"\r\n                }]);\r\n        case \"edit\":\r\n            return effect.sheet.render(true);\r\n        case \"delete\":\r\n            return effect.delete();\r\n        case \"toggle\":\r\n            return effect.update({ disabled: !effect.data.disabled });\r\n    }\r\n}\r\n/**\r\n * Prepare the data structure for Active Effects which are currently applied to an Actor or Item.\r\n * @param {ActiveEffect[]} effects    The array of Active Effect instances to prepare sheet data for\r\n * @return {object}                   Data for rendering\r\n */\r\nexport function prepareActiveEffectCategories(effects) {\r\n    // Define effect header categories\r\n    const categories = {\r\n        temporary: {\r\n            type: \"temporary\",\r\n            label: \"Temporary Effects\",\r\n            effects: []\r\n        },\r\n        passive: {\r\n            type: \"passive\",\r\n            label: \"Passive Effects\",\r\n            effects: []\r\n        },\r\n        inactive: {\r\n            type: \"inactive\",\r\n            label: \"Inactive Effects\",\r\n            effects: []\r\n        }\r\n    };\r\n    // Iterate over active effects, classifying them into categories\r\n    for (let e of effects) {\r\n        //@ts-expect-error\r\n        e._getSourceName(); // Trigger a lookup for the source name\r\n        //@ts-expect-error\r\n        if (e.data.disabled)\r\n            categories.inactive.effects.push(e);\r\n        //@ts-expect-error\r\n        else if (e.isTemporary)\r\n            categories.temporary.effects.push(e);\r\n        //@ts-expect-error\r\n        else\r\n            categories.passive.effects.push(e);\r\n    }\r\n    return categories;\r\n}\r\n","<script>\r\n  import { getContext } from \"svelte\";\r\n  export let max;\r\n  export let min;\r\n  export let type;\r\n  export let subtype;\r\n  export let cost;\r\n  const doc = getContext(\"chaAdvActorData\");\r\n  const changes = getContext(\"chaAdvXpChanges\");\r\n  let disabled;\r\n  export let costLabel\r\n  $: {\r\n    switch (type) {\r\n      case \"attributes\":\r\n        disabled =\r\n          $doc[type][subtype].value === max || $doc[type][subtype].value === min || $doc.advancement.xp.get < cost;\r\n        break;\r\n      case \"skills\":\r\n        disabled =\r\n          $doc[type][subtype].level === max || $doc[type][subtype].level === min || $doc.advancement.xp.get < cost;\r\n        break;\r\n      case \"features\":\r\n        console.log(max,min)\r\n        disabled =\r\n          $doc[type][subtype].system.level.initial === max ||\r\n          $doc[type][subtype].system.level.initial === min ||\r\n          $doc.advancement.xp.get < cost;\r\n        break;\r\n    }\r\n    costLabel = disabled ? \"-\":cost\r\n  }\r\n  function increase(type, subtype) {\r\n    doc.update((store) => {\r\n      switch (type) {\r\n        case \"attributes\":\r\n          store.attributes[subtype].value += 1;\r\n          break;\r\n        case \"skills\":\r\n          store.skills[subtype].level += 1;\r\n          break;\r\n        case \"features\":\r\n          store.features[subtype].data.level.initial += 1;\r\n          break;\r\n      }\r\n      store.advancement.xp.used += cost;\r\n      store.advancement.xp.get -= cost;\r\n      return store;\r\n    });\r\n    changes.update((changeArr) => {\r\n      changeArr.push({ type: type, subtype: subtype, value: cost });\r\n      return changeArr;\r\n    });\r\n  }\r\n  function decrease(type, subtype) {\r\n    doc.update((store) => {\r\n      switch (type) {\r\n        case \"attributes\":\r\n          store.attributes[subtype].value -= 1;\r\n          break;\r\n        case \"skills\":\r\n          store.skills[subtype].level -= 1;\r\n          break;\r\n        case \"features\":\r\n          store.features[subtype].system.level.initial -= 1;\r\n          break;\r\n      }\r\n      let index = -1;\r\n      $changes.forEach((change, key) => {\r\n        index = change.type === type && change.subtype === subtype && key > index ? key : index;\r\n      });\r\n      if (index >= 0) {\r\n        store.advancement.xp.used -= $changes[index].value;\r\n        store.advancement.xp.get += $changes[index].value;\r\n        return store;\r\n      }\r\n    });\r\n    changes.update((changeArr) => {\r\n      let index = -1;\r\n      changeArr.forEach((change, key) => {\r\n        index = change.type === type && change.subtype === subtype && key > index ? key : index;\r\n      });\r\n      if (index >= 0) {\r\n        changeArr.splice(index, 1);\r\n        changeArr = changeArr;\r\n      }\r\n      return changeArr;\r\n    });\r\n  }\r\n</script>\r\n\r\n{#if max !== undefined}\r\n  <i class=\"change fa-light fa-square-plus\" class:disabled={disabled} on:click={() => increase(type, subtype)} />\r\n{/if}\r\n{#if min !== undefined}\r\n  <i class=\"change fa-light fa-square-minus\" class:disabled={disabled} on:click={() => decrease(type, subtype)}/> \r\n{/if}\r\n\r\n<style>\r\n  i:active {\r\n    transform: translateY(0.1em);\r\n  }\r\n  i.disabled{\r\n    color:red;\r\n    pointer-events: none;\r\n  }\r\n</style>\r\n","<script>\r\n  import { getContext } from \"svelte\";\r\n  import ChangeButton from \"./ChangeButton.svelte\";\r\n  export let max;\r\n  export let val;\r\n  export let key;\r\n  export let type;\r\n  export let description;\r\n  export let typeStr;\r\n  export let thead;\r\n  //export let cellWidth;\r\n  const originalData = getContext(\"chaAdvActorOriginalData\");\r\n  const aditionalData = getContext(\"chaAdvAditionalData\");\r\n  const element = getContext(\"chaAdvElementParameters\")\r\n  const formulas = getContext(\"chaAdvXpFormulas\").formulas;\r\n  let variables = {};\r\n  let cost;\r\n  let min;\r\n  let widthPercent = 100 / thead.length;\r\n  switch (typeStr) {\r\n    case \"attributes\":\r\n      min = originalData[typeStr][val[0]].value;\r\n      break;\r\n    case \"skills\":\r\n      min = originalData[typeStr][val[0]].level;\r\n      break;\r\n    case \"features\":\r\n      console.log(aditionalData, val[0]);\r\n      min = aditionalData.feats.awail[val[0]].system.level.current;\r\n      max = aditionalData.feats.awail[val[0]].system.level.max;\r\n      break;\r\n  }\r\n  $: {\r\n    for (let [key, variable] of Object.entries(getContext(\"chaAdvXpFormulas\").variables)) {\r\n      switch (key) {\r\n        case \"attributes\":\r\n          variables[variable.shortName] = typeStr === key ? val[1].value : 0;\r\n          break;\r\n        case \"skills\":\r\n          variables[variable.shortName] = typeStr === key ? val[1].level : 0;\r\n          break;\r\n        case \"features\":\r\n          variables[variable.shortName] = typeStr === key ? val[1].system.level.initial : 0;\r\n          break;\r\n        case \"skillsCount\":\r\n          variables[variable.shortName] = 1; //TODO: rewrite\r\n          break;\r\n        case \"featuresCount\":\r\n          variables[variable.shortName] = 1; //TODO: rewrite\r\n      }\r\n    }\r\n    cost = math.evaluate(formulas[typeStr], variables);\r\n  }\r\n  function changeDesc(val) {\r\n    if (!val[1].description) return \"\";\r\n    description = val[1].description;\r\n  }\r\n  let strMod;\r\n  $: if (val[1].mod !== undefined) {\r\n    strMod = val[1].mod < 0 ? `${val[1].mod}` : `+${val[1].mod}`;\r\n  }\r\n  let last = key === Object.values(type).length - 1 ? \"last\" : \"\";\r\n  //TODO: reconfigure thead for localization\r\n</script>\r\n\r\n<tr bind:offsetHeight={$element.trHeight} bind:clientWidth={$element.trWidth} style=\"--cellWidth:{widthPercent}%\">\r\n  {#if thead.includes(\"Name\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}> {val[0]} </td>\r\n  {/if}\r\n  {#if thead.includes(\"Source\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}> {@html val[1].system.source.label} </td>\r\n  {/if}\r\n  {#if thead.includes(\"Increase\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}>\r\n      <ChangeButton type={typeStr} subtype={val[0]} {max} {cost} />\r\n    </td>\r\n  {/if}\r\n  {#if thead.includes(\"Level\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}>\r\n      {val[1].system.level.initial}\r\n    </td>\r\n  {/if}\r\n  {#if thead.includes(\"Max Level\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}> {val[1].system.level.max} </td>\r\n  {/if}\r\n  {#if thead.includes(\"Rank\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}> {val[1].rankName} </td>\r\n  {/if}\r\n  {#if thead.includes(\"Value\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}> {val[1].value} </td>\r\n  {/if}\r\n  {#if thead.includes(\"Decrease\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}>\r\n      <ChangeButton type={typeStr} subtype={val[0]} {min} />\r\n    </td>\r\n  {/if}\r\n  {#if thead.includes(\"Mod\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}> {strMod} </td>\r\n  {/if}\r\n  {#if thead.includes(\"Cost\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}> {cost} </td>\r\n  {/if}\r\n  {#if key === 0 && thead.includes(\"Description\")}\r\n    <td class=\"description\" rowspan={thead.length}> {description} </td>\r\n  {/if}\r\n</tr>\r\n\r\n<style>\r\n  .last {\r\n    border-bottom: 1px solid black;\r\n  }\r\n  .description {\r\n    max-width: 1em;\r\n  }\r\n  td {\r\n    text-align: center;\r\n    border-right: 1px solid black;\r\n    border-left: 1px solid black;\r\n    width: var(--cellWidth);\r\n    word-break: break-word;\r\n  }\r\n  tr {\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    display: table;\r\n  }\r\n</style>\r\n","<script>\r\n  import { getContext } from \"svelte\";\r\n  import TDvariants from \"./TDvariants.svelte\";\r\n  \r\n  export let tabData;\r\n  const element = getContext(\"chaAdvElementParameters\")\r\n  const data = getContext(\"chaAdvActorData\");\r\n  const settings = game.settings.get(\"ard20\", \"profLevel\");\r\n  let typeStr;\r\n  let thead;\r\n  let description;\r\n  let max;\r\n  //TODO: reconfigure thead for localization\r\n  switch (tabData) {\r\n    case \"attributes\":\r\n      typeStr = \"attributes\";\r\n      thead = [\"Name\", \"Increase\", \"Value\", \"Decrease\", \"Mod\", \"Cost\"];\r\n      description = \"\";\r\n      max = 30;\r\n      break;\r\n    case \"skills\":\r\n      typeStr = \"skills\";\r\n      thead = [\"Name\", \"Increase\", \"Rank\", \"Decrease\", \"Cost\"];\r\n      description = \"\";\r\n      max = settings.length - 1;\r\n      break;\r\n    case \"features\":\r\n      typeStr = \"features\";\r\n      thead = [\"Name\", \"Source\", \"Increase\", \"Level\", \"Max Level\", \"Decrease\", \"Cost\"];\r\n      description = \"\";\r\n      max = 1;\r\n      break;\r\n  }\r\n  let thWidth = 100 / thead.length;\r\n  $: {\r\n    for (let [key, attr] of Object.entries($data.attributes)) {\r\n      attr.mod = Math.floor((attr.value - 10) / 2);\r\n    }\r\n  }\r\n  const rankName = settings.map((setting) => {\r\n    return setting.label;\r\n  });\r\n  $: for (let [key, skill] of Object.entries($data.skills)) {\r\n    skill.rankName = rankName[skill.level];\r\n  }\r\n</script>\r\n\r\n<div class=\"flex flexrow\">\r\n  <table>\r\n    <thead bind:offsetHeight={$element.theadHeight}>\r\n      <tr style:width=\"{$element.trWidth}px\">\r\n        {#each thead as th}\r\n          <th style:width=\"{thWidth}%\" class=\"last\"> {th} </th>\r\n        {/each}\r\n      </tr>\r\n    </thead>\r\n    <tbody style=\"--tbodyHeight:{0.95*$element.boxHeight - $element.theadHeight}px\">\r\n      {#each Object.entries($data[tabData]) as attr, key}\r\n        <TDvariants\r\n          type={$data[tabData]}\r\n          {thead}\r\n          {typeStr}\r\n          val={attr}\r\n          {max}\r\n          {key}\r\n          bind:description\r\n        />\r\n      {/each}\r\n    </tbody>\r\n  </table>\r\n  <div class=\"description\">\r\n    <label for=\"description\">Description</label>\r\n    <div>{description}</div>\r\n  </div>\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n  .description {\r\n    height: 100%;\r\n    padding-left: 2px;\r\n    border-left: 1px solid black;\r\n    border-bottom: 1px solid black;\r\n  }\r\n  table thead {\r\n    display: block;\r\n    width: 100%;\r\n    position: sticky;\r\n    inset-block-start: -0.05em;\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n  }\r\n  tbody {\r\n    display: block;\r\n    max-height: var(--tbodyHeight);\r\n    width: 100%;\r\n    overflow-y: auto;\r\n  }\r\n  tr {\r\n    border: 1px solid black;\r\n    display: table;\r\n  }\r\n  th {\r\n    background: rgb(100, 100, 100);\r\n    border: 1px solid black;\r\n    border-width: 0px 1px 0 1px;\r\n    text-align: center;\r\n    padding: 0.2em;\r\n    word-break: break-word;\r\n    &:last-child{\r\n      border-right: 0px;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { getContext } from \"svelte\";\r\n  export let tabs = [];\r\n  export let activeTab;\r\n  const data = getContext(\"chaAdvActorData\");\r\n  const element = getContext(\"chaAdvElementParameters\");\r\n  let minBoxSize;\r\n  $: {\r\n    minBoxSize = (Object.entries($data[activeTab]).length * $element.trHeight + $element.theadHeight) * 1.1;\r\n  }\r\n</script>\r\n\r\n<ul>\r\n  {#each tabs as tab}\r\n    <li class={activeTab === tab.id ? \"active\" : \"\"}>\r\n      <span\r\n        on:click={() => {\r\n          activeTab = tab.id;\r\n        }}\r\n      >\r\n        {tab.label}\r\n      </span>\r\n    </li>\r\n  {/each}\r\n</ul>\r\n<div class=\"box\" style=\"--minBoxSize:{minBoxSize}px\" bind:clientHeight={$element.boxHeight}>\r\n  {#each tabs as tab}\r\n    {#if tab.id === activeTab}\r\n      <svelte:component this={tab.component} tabData={tab.id} />\r\n    {/if}\r\n  {/each}\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n  .box {\r\n    margin-bottom: 10px;\r\n    border: 1px solid #dee2e6;\r\n    border-radius: 0 0 0.5rem 0.5rem;\r\n    border-top: 0;\r\n    height: min(75%, max(25%, var(--minBoxSize)));\r\n    background: rgba(0, 0, 0, 0.08);\r\n  }\r\n  ul {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding-left: 0;\r\n    margin-bottom: 0;\r\n    list-style: none;\r\n    border-bottom: 1px solid #dee2e6;\r\n  }\r\n  li {\r\n    &:active {\r\n      margin-bottom: -0.1em;\r\n      transform: translateY(0.1em);\r\n    }\r\n    &.active > span {\r\n      color: white;\r\n      background-color: rgba(0, 0, 0, 0.08);\r\n      border-color: #dee2e6 #dee2e6 #fff;\r\n    }\r\n  }\r\n\r\n  span {\r\n    border: 1px solid transparent;\r\n    border-top-left-radius: 0.25rem;\r\n    border-top-right-radius: 0.25rem;\r\n    display: block;\r\n    padding: 0.5rem 1rem;\r\n    cursor: pointer;\r\n    &:hover {\r\n      border-color: #e9ecef #e9ecef #dee2e6;\r\n    }\r\n  }\r\n</style>\r\n","<svelte:options accessors={true} />\r\n\r\n<script>\r\n  import { getContext, setContext } from \"svelte\";\r\n  import { writable } from \"svelte/store\";\r\n  import AttributeComp from \"./Attributes.svelte\";\r\n  import Tabs from \"./Tabs.svelte\";\r\n  export let document;\r\n  //\r\n  const actor = game.actors.get(document.id);\r\n  const { application } = getContext(\"external\");\r\n  //create list of changes and context for it\r\n  const changes = writable([]);\r\n  setContext(\"chaAdvXpChanges\", changes);\r\n  //create context for formulas from setting, CONFIG data, Actor's ID\r\n  setContext(\"chaAdvXpFormulas\", game.settings.get(\"ard20\", \"advancement-rate\"));\r\n  setContext(\"chaAdvCONFIG\", CONFIG);\r\n  setContext(\"chaAdvActorOriginalData\", actor.system);\r\n  setContext(\"chaAdvActorID\", document.id);\r\n  setContext(\"chaAdvAditionalData\", document.aditionalData);\r\n\r\n  //create store and context for data\r\n  //TODO: add features and other stuff\r\n  const actorData = writable({\r\n    attributes: duplicate(actor.system.attributes),\r\n    skills: duplicate(actor.system.skills),\r\n    advancement: duplicate(actor.system.advancement),\r\n    proficiencies: duplicate(actor.system.proficiencies),\r\n    health: duplicate(actor.system.health),\r\n    isReady: duplicate(actor.system.isReady),\r\n    features: duplicate(document.aditionalData.feats.awail),\r\n  });\r\n  const elementParameters=writable({\r\n    boxHeight:0,\r\n    trHeight:0,\r\n    trWidth:0,\r\n    theadHeight:0,\r\n  })\r\n  setContext(\"chaAdvElementParameters\",elementParameters)\r\n  setContext(\"chaAdvActorData\", actorData);\r\n\r\n  //create tabs\r\n  //TODO: create features, races and other tabs\r\n  const tabs = [\r\n    { label: \"attributes\", id: \"attributes\", component: AttributeComp },\r\n    { label: \"skills\", id: \"skills\", component: AttributeComp },\r\n    { label: \"Features\", id: \"features\", component: AttributeComp },\r\n  ];\r\n  //select first tab when app initialized\r\n  const activeTab = \"attributes\";\r\n  $: console.log($actorData, $changes);\r\n  const id = getContext(\"chaAdvActorID\");\r\n  const aditionalData = getContext(\"chaAdvAditionalData\");\r\n  //update actor and do other stuff when click 'submit' button\r\n  async function submitData() {\r\n    const updateObj = {};\r\n    updateObj[\"system.attributes\"] = $actorData.attributes;\r\n    updateObj[\"system.skills\"] = $actorData.skills;\r\n    updateObj[\"system.advancement.xp\"] = $actorData.advancement.xp;\r\n    updateObj[\"system.isReady\"] = true;\r\n    console.log($actorData.features);\r\n    let feats = { new: [], exist: [] };\r\n    $actorData.features.forEach((element) => {\r\n      const initLevel = element.system.level.initial;\r\n      const currentLevel = element.system.level.current;\r\n      if (initLevel > currentLevel) {\r\n        if (currentLevel > 0) {\r\n          feats.exist = [...feats.exist, element];\r\n        } else {\r\n          feats.new = [...feats.new, element];\r\n        }\r\n      }\r\n    });\r\n    console.log(feats, \"feats on update\");\r\n    await actor.update(updateObj);\r\n    if (feats.exist.length !== 0) await actor.updateEmbeddedDocuments(\"Item\", feats.exist);\r\n    if (feats.new.length !== 0) await actor.createEmbeddedDocuments(\"Item\", feats.new);\r\n    application.close();\r\n  }\r\n</script>\r\n\r\n<div>\r\n  XP get: {$actorData.advancement.xp.get}\r\n</div>\r\n<div>\r\n  XP used: {$actorData.advancement.xp.used}\r\n</div>\r\n<Tabs {tabs} {activeTab} />\r\n<button on:click={submitData}>SubmitData</button>\r\n","import CharacterAdvancementShell from \"../../helpers/Character Advancement/cha-adv-shell.svelte\";\r\nimport { TJSDialog } from \"@typhonjs-fvtt/runtime/svelte/application\";\r\nexport class CharacterAdvancement extends TJSDialog {\r\n  constructor(document) {\r\n    super(\r\n      {\r\n        title: \"Character advancement\",\r\n        id: \"cha-adv\",\r\n        modal: true,\r\n        draggable: false,\r\n        content: {\r\n          class: CharacterAdvancementShell,\r\n          props: {\r\n            document,\r\n          },\r\n        },\r\n      },\r\n      {\r\n        width: 800,\r\n        height: 600,\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { onManageActiveEffect, prepareActiveEffectCategories } from \"../../helpers/effects.js\";\r\nimport { getValues, obj_entries } from \"../../ard20.js\";\r\nimport { CharacterAdvancement } from \"../../helpers/Character Advancement/characterAdvancement.js\";\r\n/**\r\n * Extend the basic ActorSheet with some very simple modifications\r\n * @extends {ActorSheet}\r\n */\r\nexport class ARd20ActorSheet extends ActorSheet {\r\n  /** @override */\r\n  static get defaultOptions() {\r\n    return mergeObject(super.defaultOptions, {\r\n      classes: [\"ard20\", \"sheet\", \"actor\"],\r\n      template: \"systems/ard20/templates/actor/actor-sheet.html\",\r\n      width: 600,\r\n      height: 600,\r\n      tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"main\" }],\r\n    });\r\n  }\r\n  /** @override */\r\n  get template() {\r\n    return `systems/ard20/templates/actor/actor-${this.actor.data.type}-sheet.html`;\r\n  }\r\n  /* -------------------------------------------- */\r\n  /** @override */\r\n  getData() {\r\n    // Retrieve the data structure from the base sheet. You can inspect or log\r\n    // the context variable to see the structure, but some key properties for\r\n    // sheets are the actor object, the data object, whether or not it's\r\n    // editable, the items array, and the effects array.\r\n    const context = super.getData();\r\n    // Use a safe clone of the actor data for further operations.\r\n    const actorData = this.actor;\r\n    // Add the actor's data to context.data for easier access, as well as flags.\r\n    //@ts-expect-error\r\n    context.data = actorData.system;\r\n    //@ts-expect-error\r\n    context.flags = actorData.flags;\r\n    //@ts-expect-error\r\n    context.config = CONFIG.ARd20;\r\n    //@ts-expect-error\r\n    context.isGM = game.user.isGM;\r\n    // Prepare character data and items.\r\n    if (actorData.type === \"character\") {\r\n      //@ts-expect-error\r\n      this._prepareItems(context);\r\n      this._prepareCharacterData(context);\r\n    }\r\n    // Prepare NPC data and items.\r\n    //@ts-expect-error\r\n    if (actorData.type === \"npc\") {\r\n      //@ts-expect-error\r\n      this._prepareItems(context);\r\n    }\r\n    // Add roll data for TinyMCE editors.\r\n    //@ts-expect-error\r\n    context.rollData = context.actor.getRollData();\r\n    // Prepare active effects\r\n    //@ts-expect-error\r\n    context.effects = prepareActiveEffectCategories(this.actor.effects);\r\n    return context;\r\n  }\r\n  /**\r\n   * Organize and classify Items for Character sheets.\r\n   *\r\n   * @param {Object} actorData The actor to prepare.\r\n   *\r\n   * @return {undefined}\r\n   */\r\n  //@ts-expect-error\r\n  _prepareCharacterData(context) {\r\n    // Handle attribute scores.\r\n    for (let [k, v] of obj_entries(context.data.attributes)) {\r\n      //@ts-expect-error\r\n      v.label = game.i18n.localize(getValues(CONFIG.ARd20.Attributes, k)) ?? k;\r\n    }\r\n    /*for (let [k, v] of obj_entries(context.data.skills)) {\r\n      //@ts-expect-error\r\n      v.name = game.i18n.localize(getValues(CONFIG.ARd20.Skills, k)) ?? k;\r\n      v.rank_name = game.i18n.localize(getValues(CONFIG.ARd20.Rank, v.rank)) ?? v.rank;\r\n    }*/\r\n  }\r\n  /**\r\n   * Organize and classify Items for Character sheets.\r\n   *\r\n   * @param {Object} actorData The actor to prepare.\r\n   *\r\n   * @return {undefined}\r\n   */\r\n  _prepareItems(context) {\r\n    // Initialize containers.\r\n    const gear = [];\r\n    const features = [];\r\n    const weapons = [];\r\n    const armor = [];\r\n    const spells = {\r\n      0: [],\r\n      1: [],\r\n      2: [],\r\n      3: [],\r\n      4: [],\r\n      5: [],\r\n      6: [],\r\n      7: [],\r\n      8: [],\r\n      9: [],\r\n    };\r\n    // Iterate through items, allocating to containers\r\n    for (let i of context.items) {\r\n      //@ts-expect-error\r\n      i.img = i.img || DEFAULT_TOKEN;\r\n      // Append to gear.\r\n      if (i.type === \"item\") {\r\n        gear.push(i);\r\n      }\r\n      // Append to features.\r\n      else if (i.type === \"feature\") {\r\n        features.push(i);\r\n      }\r\n      // Append to spells.\r\n      else if (i.type === \"spell\") {\r\n        //@ts-expect-error\r\n        if (i.data.spellLevel != undefined) {\r\n          //@ts-expect-error\r\n          spells[i.data.spellLevel].push(i);\r\n        }\r\n      } else if (i.type === \"armor\" || i.type === \"weapon\") {\r\n        const isActive = getProperty(i.data, \"equipped\");\r\n        //@ts-expect-error\r\n        i.toggleClass = isActive ? \"active\" : \"\";\r\n        //@ts-expect-error\r\n        i.toggleTitle = game.i18n.localize(isActive ? \"ARd20.Equipped\" : \"ARd20.Unequipped\");\r\n        //@ts-expect-error\r\n        i.data.equipped = !isActive;\r\n        if (i.type === \"armor\") armor.push(i);\r\n        else weapons.push(i);\r\n      }\r\n    }\r\n    // Assign and return\r\n    //@ts-expect-error\r\n    context.gear = gear;\r\n    //@ts-expect-error\r\n    context.features = features;\r\n    //@ts-expect-error\r\n    context.spells = spells;\r\n    //@ts-expect-error\r\n    context.weapons = weapons;\r\n    //@ts-expect-error\r\n    context.armor = armor;\r\n  }\r\n  /* -------------------------------------------- */\r\n  /** @override */\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n    //@ts-expect-error\r\n    $(\".select2\", html).select2();\r\n    // Render the item sheet for viewing/editing prior to the editable check.\r\n    html.find(\".item-toggle\").click(this._onToggleItem.bind(this));\r\n    html.find(\".item-edit\").click((ev) => {\r\n      const li = $(ev.currentTarget).parents(\".item\");\r\n      const item = this.actor.items.get(li.data(\"itemId\"));\r\n      item.sheet.render(true);\r\n    });\r\n    // -------------------------------------------------------------\r\n    // Everything below here is only needed if the sheet is editable\r\n    if (!this.isEditable) return;\r\n    // Add Inventory Item\r\n    html.find(\".item-create\").click(this._onItemCreate.bind(this));\r\n    // Delete Inventory Item\r\n    html.find(\".item-delete\").click((ev) => {\r\n      const li = $(ev.currentTarget).parents(\".item\");\r\n      const item = this.actor.items.get(li.data(\"itemId\"));\r\n      item.delete();\r\n      li.slideUp(200, () => this.render(false));\r\n    });\r\n    // Active Effect management\r\n    html.find(\".effect-control\").click((ev) => onManageActiveEffect(ev, this.actor));\r\n    //roll abilities and skills\r\n    html.find(\".attribute-name\").click(this._onRollAttributeTest.bind(this));\r\n    html.find(\".skill-name\").click(this._onRollSkillCheck.bind(this));\r\n    //open \"character advancement\" window\r\n    html.find(\".config-button\").click(this._OnAdvanceMenu.bind(this));\r\n    //item's roll\r\n    html.find(\".item-roll\").click(this._onItemRoll.bind(this));\r\n    // Drag events for macros.\r\n    if (this.actor.isOwner) {\r\n      let handler = (ev) => this._onDragStart(ev);\r\n      html.find(\"li.item\").each((i, li) => {\r\n        if (li.classList.contains(\"inventory-header\")) return;\r\n        li.setAttribute(\"draggable\", \"true\");\r\n        li.addEventListener(\"dragstart\", handler, false);\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Open @class CharacterAdvancement\r\n   */\r\n  async _OnAdvanceMenu(event) {\r\n    event.preventDefault();\r\n    const button = event.currentTarget;\r\n    let app;\r\n    console.log(this.object);\r\n    const actor = this.object;\r\n    //@ts-ignore\r\n    switch (button.dataset?.action) {\r\n      case \"adv\":\r\n        async function createAditionalData() {\r\n          //functions to get lists of available features and lists\r\n          async function getPacks() {\r\n            let pack_list = []; // array of feats from Compendium\r\n            let pack_name = [];\r\n            for (const val of game.settings.get(\"ard20\", \"feat\").packs) {\r\n              if (game.packs.filter((pack) => pack.metadata.label === val.name).length !== 0) {\r\n                let feat_list = [];\r\n                feat_list.push(\r\n                  Array.from(\r\n                    game.packs.filter((pack) => pack.metadata.label === val.name && pack.documentName === \"Item\")[0]\r\n                      .index\r\n                  )\r\n                );\r\n                feat_list = feat_list.flat();\r\n                for (const feat of feat_list) {\r\n                  const new_key =\r\n                    game.packs.filter((pack) => pack.metadata.label === val.name)[0].metadata.package + \".\" + val.name;\r\n                  const doc = await game.packs.get(new_key).getDocument(feat.id);\r\n                  const item = doc.toObject();\r\n                  item.data = foundry.utils.deepClone(doc.system);\r\n                  pack_list.push(item);\r\n                  pack_name.push(item.name);\r\n                }\r\n                pack_list = pack_list.flat();\r\n              }\r\n            }\r\n            return {\r\n              pack_list,\r\n              pack_name,\r\n            };\r\n          }\r\n          function getFolders() {\r\n            let folder_list = []; // array of feats from game folders\r\n            let folder_name = [];\r\n            for (let val of game.settings.get(\"ard20\", \"feat\").folders) {\r\n              if (game.folders.filter((folder) => folder.data.name === val.name).length !== 0) {\r\n                let feat_list = [];\r\n                feat_list.push(\r\n                  game.folders.filter((folder) => folder.data.name === val.name && folder.data.type === \"Item\")[0]\r\n                    .contents\r\n                );\r\n                feat_list = feat_list.flat();\r\n                for (let feat of feat_list) {\r\n                  console.log(\"item added from folder \", feat);\r\n                  const item = feat.toObject();\r\n                  item.data = foundry.utils.deepClone(feat.system);\r\n                  folder_list.push(item);\r\n                  folder_name.push(item.name);\r\n                }\r\n                folder_list = folder_list.flat();\r\n              }\r\n            }\r\n            return {\r\n              folder_list,\r\n              folder_name,\r\n            };\r\n          }\r\n          let raceList = await getRacesList();\r\n          let featList = await getFeaturesList();\r\n          let name_array = [];\r\n\r\n          async function getRacesList() {\r\n            const pack = await getPacks();\r\n            const folder = getFolders();\r\n            const pack_list = pack.pack_list;\r\n            const pack_name = pack.pack_name;\r\n            const folder_list = folder.folder_list;\r\n            let race_pack_list = [];\r\n            let race_folder_list = [];\r\n            pack_list.forEach((item) => {\r\n              if (item.type === \"race\") {\r\n                let raceItem = { ...item, chosen: false };\r\n                race_pack_list.push(raceItem);\r\n              }\r\n            });\r\n            folder_list.forEach((item) => {\r\n              if (item.type === \"race\") {\r\n                let raceItem = { ...item, chosen: false };\r\n                race_folder_list.push(raceItem);\r\n              }\r\n            });\r\n            return race_pack_list.concat(race_folder_list.filter((item) => !pack_name.includes(item.name)));\r\n          }\r\n          async function getFeaturesList() {\r\n            const pack = await getPacks();\r\n            const pack_list = pack.pack_list;\r\n            const pack_name = pack.pack_name;\r\n            const folder = getFolders();\r\n            const folder_list = folder.folder_list;\r\n            let feat_pack_list = [];\r\n            pack_list.forEach((item) => {\r\n              if (item.type === \"feature\") {\r\n                let FeatureItem = { ...item };\r\n                feat_pack_list.push(FeatureItem);\r\n              }\r\n            });\r\n            let feat_folder_list = [];\r\n            folder_list.forEach((item) => {\r\n              if (item.type === \"feature\") {\r\n                let FeatureItem = { ...item };\r\n                feat_folder_list.push(FeatureItem);\r\n              }\r\n            });\r\n            let temp_feat_list = feat_pack_list.concat(\r\n              feat_folder_list.filter((item) => !pack_name.includes(item.name))\r\n            );\r\n            let learnedFeatures = [];\r\n            actor.itemTypes.feature.forEach((item) => {\r\n              if (item.data.type === \"feature\") {\r\n                let FeatureItem = { ...item.data };\r\n                learnedFeatures.push(FeatureItem);\r\n              }\r\n            });\r\n            return { temp_feat_list, learnedFeatures };\r\n          }\r\n          for (let i of featList.learnedFeatures) {\r\n            name_array.push(i.name);\r\n          }\r\n          console.log(featList.temp_feat_list, \"featList.temp_feat_list\")\r\n          featList.temp_feat_list.forEach((v, k) => {\r\n            console.log(k, v);\r\n            if (name_array.includes(v.name)) {\r\n              console.log(\"this item is already learned\", featList.temp_feat_list[k]);\r\n              featList.temp_feat_list[k] = foundry.utils.deepClone(\r\n                featList.learnedFeatures.filter((item) => item.name === v.name)[0]\r\n              );\r\n            }\r\n          });\r\n          featList.temp_feat_list = featList.temp_feat_list.filter((item) => {\r\n            if (item.type === \"feature\")\r\n              return !name_array.includes(item.name) || item.data.level.current !== item.data.level.max;\r\n          });\r\n          const obj = {\r\n            races: { list: raceList, chosen: \"\" },\r\n            count: {\r\n              //TODO: rework this for future where you can have more/less ranks\r\n              skills: { 0: 0, 1: 0, 2: 0, 3: 0, 4: 0 },\r\n              feats: { mar: 0, mag: 0, div: 0, pri: 0, psy: 0 },\r\n            },\r\n            feats: {\r\n              learned: featList.learnedFeatures,\r\n              awail: featList.temp_feat_list,\r\n            },\r\n            allow: {\r\n              attribute: duplicate(actor.system.isReady),\r\n              race: duplicate(actor.system.isReady),\r\n              final: duplicate(actor.system.isReady),\r\n            },\r\n          };\r\n          return obj;\r\n        }\r\n        const document = {\r\n          id: actor.id,\r\n          aditionalData: await createAditionalData(),\r\n        };\r\n        app = new CharacterAdvancement(document);\r\n        break;\r\n    }\r\n    app?.render(true);\r\n  }\r\n\r\n  /**\r\n   * Change @param data.equipped\r\n   * by toggling it on sheet\r\n   */\r\n  _onToggleItem(event) {\r\n    event.preventDefault();\r\n    //@ts-ignore\r\n    const itemid = event.currentTarget.closest(\".item\").dataset.itemId;\r\n    const item = this.actor.items.get(itemid);\r\n    //const attr = item.data.type === \"spell\" ? \"data.preparation.prepared\" : \"data.equipped\";\r\n    const attr = \"data.equipped\";\r\n    return item.update({ [attr]: !getProperty(item.data, attr) });\r\n  }\r\n  _onRollAttributeTest(event) {\r\n    event.preventDefault();\r\n    //@ts-ignore\r\n    let attribute = event.currentTarget.parentElement.dataset.attribute;\r\n    return this.actor.rollAttributeTest(attribute, { event: event });\r\n  }\r\n  _onRollSkillCheck(event) {\r\n    event.preventDefault();\r\n    //@ts-ignore\r\n    let skill = event.currentTarget.parentElement.dataset.skill;\r\n    return this.actor.rollSkill(skill, { event: event });\r\n  }\r\n  _onItemRoll(event) {\r\n    event.preventDefault();\r\n    console.log(\"БРОСОК\");\r\n    //@ts-ignore\r\n    const id = event.currentTarget.closest(\".item\").dataset.itemId;\r\n    const item = this.actor.items.get(id);\r\n    const hasAttack = item.system.hasAttack;\r\n    const hasDamage = item.system.hasDamage;\r\n    //@ts-expect-error\r\n    if (item) return item.roll({ hasAttack, hasDamage });\r\n  }\r\n  /**\r\n   * Handle creating a new Owned Item for the actor using initial data defined in the HTML dataset\r\n   * @param {Event} event   The originating click event\r\n   * @private\r\n   */\r\n  async _onItemCreate(event) {\r\n    event.preventDefault();\r\n    const header = event.currentTarget;\r\n    // Get the type of item to create.\r\n    //@ts-ignore\r\n    const type = header.dataset.type;\r\n    // Grab any data associated with this control.\r\n    //@ts-ignore\r\n    const data = duplicate(header.dataset);\r\n    // Initialize a default name.\r\n    const name = `New ${type.capitalize()}`;\r\n    // Prepare the item object.\r\n    const itemData = {\r\n      name: name,\r\n      type: type,\r\n      data: data,\r\n    };\r\n    // Remove the type from the dataset since it's in the itemData.type prop.\r\n    delete itemData.data[\"type\"];\r\n    // Finally, create the item!\r\n    return await Item.create(itemData, { parent: this.actor });\r\n  }\r\n  /**\r\n   * Handle clickable rolls.\r\n   * @param {Event} event   The originating click event\r\n   * @private\r\n   */\r\n  _onRoll(event) {\r\n    event.preventDefault();\r\n    const element = event.currentTarget;\r\n    //@ts-expect-error\r\n    const dataset = element.dataset;\r\n    // Handle item rolls.\r\n    if (dataset.rollType) {\r\n      if (dataset.rollType == \"item\") {\r\n        //@ts-ignore\r\n        const itemid = element.closest(\".item\").dataset.itemId;\r\n        const item = this.actor.items.get(itemid);\r\n        //@ts-expect-error\r\n        if (item) return item.roll();\r\n      }\r\n      /*else if (dataset.rollType==='weapon'){\r\n              const itemid = element.closest(\".item\").dataset.itemId\r\n              const item = this.actor.items.get(itemid)\r\n              if (item) return item.DamageRoll()\r\n            }*/\r\n    }\r\n  }\r\n  /**\r\n   * _onDrop method with\r\n   */\r\n  async _onDrop(event) {\r\n    if (!game.user.isGM) {\r\n      ui.notifications.error(\"you don't have permissions to add documents to this actor manually\");\r\n      return;\r\n    }\r\n    // Try to extract the data\r\n    let data;\r\n    try {\r\n      data = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n    const actor = this.actor;\r\n    /**\r\n     * A hook event that fires when some useful data is dropped onto an ActorSheet.\r\n     * @function dropActorSheetData\r\n     * @memberof hookEvents\r\n     * @param {Actor} actor      The Actor\r\n     * @param {ActorSheet} sheet The ActorSheet application\r\n     * @param {object} data      The data that has been dropped onto the sheet\r\n     */\r\n    const allowed = Hooks.call(\"dropActorSheetData\", actor, this, data);\r\n    if (allowed === false) return;\r\n    // Handle different data types\r\n    switch (data.type) {\r\n      case \"ActiveEffect\":\r\n        return this._onDropActiveEffect(event, data);\r\n      case \"Actor\":\r\n        return this._onDropActor(event, data);\r\n      case \"Item\":\r\n        return this._onDropItem(event, data);\r\n      case \"Folder\":\r\n        return this._onDropFolder(event, data);\r\n    }\r\n  }\r\n}\r\n","import { getValues, obj_entries } from \"../ard20.js\";\r\nimport { ARd20Item } from \"../documents/item.js\";\r\n//@ts-expect-error\r\nexport class FeatRequirements extends FormApplication {\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            classes: [\"ard20\"],\r\n            title: \"Feature Requirements\",\r\n            template: \"systems/ard20/templates/app/feat_req.hbs\",\r\n            id: \"feat_req\",\r\n            width: 800,\r\n            height: \"auto\",\r\n        });\r\n    }\r\n    async getData() {\r\n        this.options.data = !this.form ? (await this.InitializeData()) : this.options.data;\r\n        //create easier acces to templateData\r\n        const templateData = this.options.data;\r\n        const req = templateData.req;\r\n        const reqValues = req.values;\r\n        const reqLogic = req.logic;\r\n        const data = templateData.data;\r\n        let formApp = templateData.formApp;\r\n        console.log(\"data created\");\r\n        //creating array with all possible requirements' names\r\n        let name_array = [];\r\n        for (let i of data) {\r\n            name_array.push(i.name);\r\n        }\r\n        //iterate through created requirements\r\n        reqValues.forEach((value, index) => {\r\n            //setting correct type of reqirement\r\n            reqValues[index].type = formApp?.values?.[index]?.type ?? (reqValues[index].type || \"attribute\");\r\n            //creating array with from data array with elements that are same type\r\n            let subtype_list = data.filter((item) => item.type === reqValues[index].type);\r\n            //setting correct requirement name\r\n            reqValues[index].name =\r\n                subtype_list.filter((item) => {\r\n                    item.name === formApp.values?.[index]?.name;\r\n                }).length > 0\r\n                    ? formApp.values?.[index].name || reqValues[index].name\r\n                    : reqValues[index].name || subtype_list[0].name;\r\n            reqValues[index].subtype_list = subtype_list.map((item) => item.name);\r\n            reqValues[index].input = formApp.values[index]?.input ?? (reqValues[index].input || []);\r\n            reqValues[index].value = data.filter((item) => item.name === reqValues[index].name)[0].value;\r\n            for (let i = 0; i < this.object.data.data.level.max; i++) {\r\n                let inputElement = reqValues[index].input[i];\r\n                let previousElement = reqValues[index].input[i - 1] ?? 0;\r\n                switch (reqValues[index].type) {\r\n                    case \"skill\":\r\n                        inputElement = inputElement > 4 ? 1 : inputElement || 1;\r\n                        break;\r\n                    case \"attribute\":\r\n                        inputElement = inputElement || 10;\r\n                        break;\r\n                    case \"feature\":\r\n                        const maxLevel = reqValues[index].value;\r\n                        inputElement = Math.min(inputElement, maxLevel);\r\n                }\r\n                inputElement = Math.max(inputElement, previousElement);\r\n                reqValues[index].input[i] = inputElement;\r\n            }\r\n        });\r\n        reqLogic.forEach((value, index) => {\r\n            reqLogic[index] = formApp.logic?.[index] ?? reqLogic[index];\r\n        });\r\n        templateData.formApp = req;\r\n        console.log(templateData);\r\n        return templateData;\r\n    }\r\n    /**\r\n     * Initialize Data for FormApplication\r\n     * Data structure looks like this:\r\n     * @param {Array} req - already existing requirements\r\n     * @param {Array} type_list - list of types for requirements, can be attribute, skill or feat\r\n     * @param feat.awail - array of Items with type feat from Folders and Compendium Packs\r\n     * @param feat.current - array of Items that was already used\r\n     * @returns {object} templateData\r\n     */\r\n    async InitializeData() {\r\n        if (this.form)\r\n            return;\r\n        console.log(\"First launch\");\r\n        const featList = await this.getFeats();\r\n        const pack_list = featList.pack_list;\r\n        const folder_list = featList.folder_list;\r\n        const folder_name = featList.folder_name;\r\n        const data = []; //list of attributes, skills and feats that user can use as requirement\r\n        for (let [k, v] of Object.entries(CONFIG.ARd20.Attributes)) {\r\n            data.push({\r\n                name: game.i18n.localize(getValues(CONFIG.ARd20.Attributes, k)) ?? k,\r\n                value: k,\r\n                type: \"attribute\",\r\n            });\r\n        }\r\n        for (let [k, v] of obj_entries(CONFIG.ARd20.Skills)) {\r\n            data.push({\r\n                name: game.i18n.localize(getValues(CONFIG.ARd20.Skills, k)) ?? k,\r\n                value: k,\r\n                type: \"skill\",\r\n            });\r\n        }\r\n        const arr = Object.values(CONFIG.ARd20.Rank).filter((value, index) => {\r\n            if (index !== 0)\r\n                return CONFIG.ARd20.Rank[index];\r\n        });\r\n        const rank = Object.assign({}, arr);\r\n        const templateData = {\r\n            formApp: {\r\n                values: [],\r\n                logic: [],\r\n            },\r\n            req: foundry.utils.deepClone(this.object.data.data.req),\r\n            type_list: [\"attribute\", \"skill\", \"feature\"],\r\n            feat: {\r\n                awail: pack_list.concat(folder_list.filter((item) => pack_list.indexOf(item) < 0)),\r\n                current: this.object.data.data.req.values.filter((item) => item.type === \"feature\"),\r\n            },\r\n            data: data,\r\n            rank: rank,\r\n        };\r\n        const formApp = templateData.formApp;\r\n        const req = templateData.req;\r\n        const type_list = templateData.type_list;\r\n        const featAwail = templateData.feat.awail;\r\n        const featCurrent = templateData.feat.current;\r\n        let name_array = [];\r\n        for (let i of featCurrent) {\r\n            name_array.push(i.name);\r\n        }\r\n        featAwail.forEach((item, index) => {\r\n            if (item.name === this.object.name) {\r\n                console.log(item.name, \" matches name of the feat\");\r\n                featAwail.splice(index, 1);\r\n            }\r\n            else if (name_array.includes(item.name)) {\r\n                console.log(item.name, \"this feat is already included\", index);\r\n                item.input = featCurrent[featCurrent.indexOf(featCurrent.filter((feat) => feat.name === item.name)[0])].input;\r\n                featAwail.splice(index, 1);\r\n            }\r\n            if (featAwail.filter((feat) => feat.name === item.name).length !== 0) {\r\n                data.push({ name: item.name, type: \"feature\", value: item.value });\r\n            }\r\n        });\r\n        return templateData;\r\n    }\r\n    /**\r\n     * Get features from folders and packs that were configured in settings\r\n     * @returns {} {pack_list, folder_list, folder_name}\r\n     */\r\n    async getFeats() {\r\n        let pack_list = [];\r\n        let folder_list = [];\r\n        let folder_name = [];\r\n        const packs = game.settings.get(\"ard20\", \"feat\").packs;\r\n        const folders = game.settings.get(\"ard20\", \"feat\").folders;\r\n        for (let key of packs) {\r\n            if (game.packs.filter((pack) => pack.metadata.label === key).length !== 0) {\r\n                let feat_list = [];\r\n                feat_list.push(Array.from(game.packs.filter((pack) => pack.metadata.label === key && pack.metadata.entity === \"Item\")[0].index));\r\n                feat_list = feat_list.flat();\r\n                for (let feat of feat_list) {\r\n                    if (feat instanceof ARd20Item) {\r\n                        const new_key = game.packs.filter((pack) => pack.metadata.label === key)[0].metadata.package + \".\" + key;\r\n                        const doc = await game.packs.get(new_key).getDocument(feat.id);\r\n                        if (doc instanceof ARd20Item) {\r\n                            if (doc.data.type === \"feature\") {\r\n                                let item = doc.toObject();\r\n                                item.data = doc.data.data;\r\n                                const feature = {\r\n                                    name: item.name,\r\n                                    type: \"feature\",\r\n                                    input: [],\r\n                                    pass: [],\r\n                                    subtype_list: [],\r\n                                    value: item.data.level.max,\r\n                                };\r\n                                pack_list.push(feature);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let key of folders) {\r\n            if (game.folders.filter((folder) => folder.data.name === key).length !== 0) {\r\n                let feat_list = [];\r\n                feat_list.push(game.folders.filter((folder) => folder.data.name === key && folder.data.type === \"Item\")[0].contents);\r\n                feat_list = feat_list.flat();\r\n                for (let feat of feat_list) {\r\n                    if (feat instanceof ARd20Item && feat.data.type === \"feature\") {\r\n                        console.log(\"item added from folder \", feat);\r\n                        const item = feat.toObject();\r\n                        item.data = foundry.utils.deepClone(feat.data.data);\r\n                        const feature = {\r\n                            name: item.name,\r\n                            type: \"feature\",\r\n                            input: [],\r\n                            pass: [],\r\n                            subtype_list: [],\r\n                            value: item.data.level.max,\r\n                        };\r\n                        folder_list.push(feature);\r\n                        folder_name.push(item.name);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { pack_list, folder_list, folder_name };\r\n    }\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n        html.find(\".item-create\").on(\"click\", this._onAdd.bind(this));\r\n        html.find(\".item-delete\").on(\"click\", this._Delete.bind(this));\r\n    }\r\n    /**\r\n     * Add new requirement. By default it \"Strength>=10\" for every feat's level.\r\n     * @param event\r\n     */\r\n    async _onAdd(event) {\r\n        event.preventDefault();\r\n        const req = this.options.data.req;\r\n        let sub_list = []; //temporary list with attributes\r\n        for (let [k, i] of obj_entries(CONFIG.ARd20.Attributes)) {\r\n            sub_list.push(k);\r\n        }\r\n        //create varible for easier access to maximum level of feature\r\n        const maxLevel = this.object.data.data.level.max;\r\n        //create default value object\r\n        const defaultValue = {\r\n            name: \"Strength\",\r\n            type: \"attribute\",\r\n            pass: new Array(maxLevel).fill(false),\r\n            subtype_list: sub_list,\r\n            value: \"str\",\r\n            input: new Array(maxLevel).fill(10),\r\n        };\r\n        req.values.push(defaultValue);\r\n        this.render();\r\n    }\r\n    /**\r\n     * Delete existing requirement\r\n     * @param event\r\n     */\r\n    async _Delete(event) {\r\n        event.preventDefault();\r\n        const req = this.options.data.req;\r\n        req.values.splice(event.currentTarget.dataset.key, 1);\r\n        this.render();\r\n    }\r\n    /**\r\n     * Save typed-in values\r\n     * @param event\r\n     */\r\n    _onChangeInput(event) {\r\n        super._onChangeInput(event);\r\n        const data = this.options.data;\r\n        const formApp = data.formApp;\r\n        const k = event.currentTarget.dataset.key;\r\n        const i = event.currentTarget.dataset.order;\r\n        console.log(foundry.utils.expandObject(this._getSubmitData()));\r\n        const req = foundry.utils.expandObject(this._getSubmitData()).req;\r\n        switch (event.currentTarget.dataset.type) {\r\n            case \"value\":\r\n                formApp.values[k].type = req.values[k].type;\r\n                formApp.values[k].name = req.values[k].name;\r\n                formApp.values[k].input[i] = req.values[k].input[i];\r\n                break;\r\n            case \"logic\":\r\n                formApp.logic[k] = req.logic[k];\r\n                break;\r\n        }\r\n        this.getData();\r\n        this.render();\r\n    }\r\n    async _updateObject(event, formData) {\r\n        const item = this.object;\r\n        this.render();\r\n        const req = this.options.data.req;\r\n        const obj = {};\r\n        obj[\"data.req.values\"] = req.values;\r\n        obj[\"data.req.logic\"] = req.logic;\r\n        console.log(obj);\r\n        await item.update(obj);\r\n    }\r\n}\r\n","import { obj_entries } from \"../../ard20.js\";\r\nimport { onManageActiveEffect, prepareActiveEffectCategories } from \"../../helpers/effects.js\";\r\nimport { FeatRequirements } from \"../../helpers/feat_req.js\";\r\n/**\r\n * Extend the basic ItemSheet with some very simple modifications\r\n * @extends {ItemSheet}\r\n */\r\nexport class ARd20ItemSheet extends ItemSheet {\r\n  /** @override */\r\n  static get defaultOptions() {\r\n    return mergeObject(super.defaultOptions, {\r\n      classes: [\"ard20\", \"sheet\", \"item\"],\r\n      width: 520,\r\n      height: 480,\r\n      tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"description\" }],\r\n    });\r\n  }\r\n  /** @override */\r\n  get template() {\r\n      const path = \"systems/ard20/templates/item\";\r\n      return `${path}/item-${this.item.data.type}-sheet.html`;\r\n  }\r\n  /* -------------------------------------------- */\r\n  /** @override */\r\n  getData() {\r\n    // Retrieve base data structure.\r\n    const context = super.getData();\r\n    // Use a safe clone of the item data for further operations.\r\n    //@ts-expect-error\r\n    const itemData = context.item;\r\n    //@ts-expect-error\r\n    context.config = CONFIG.ARd20;\r\n    // Retrieve the roll data for TinyMCE editors.\r\n    //@ts-expect-error\r\n    context.rollData = {};\r\n    let actor = this.object?.parent ?? null;\r\n    if (actor) {\r\n      //@ts-expect-error\r\n      context.rollData = actor.getRollData();\r\n    }\r\n    // Add the actor's data to context.data for easier access, as well as flags.\r\n    //@ts-expect-error\r\n    context.data = itemData.system;\r\n    //@ts-expect-error\r\n    context.flags = itemData.flags;\r\n    //@ts-expect-error\r\n    context.isGM = game.user.isGM;\r\n    //@ts-expect-error\r\n    context.type = context.item.type;\r\n    //@ts-expect-error\r\n    context.effects = prepareActiveEffectCategories(this.item.effects);\r\n    return context;\r\n  }\r\n  _getSubmitData(updateData = {}) {\r\n    // Create the expanded update data object\r\n    if (this.form === null) return;\r\n    //@ts-expect-error\r\n    const fd = new FormDataExtended(this.form, { editors: this.editors });\r\n    let data = fd.toObject();\r\n    if (updateData) data = mergeObject(data, updateData);\r\n    else data = expandObject(data);\r\n    // Handle Damage array\r\n    //@ts-expect-error\r\n    const damage = data.data?.damage;\r\n    if (damage) {\r\n      if (damage.parts) {\r\n        damage.damType = Object.values(damage?.damType || {});\r\n        damage.parts = Object.values(damage?.parts || {}).map(function (d, ind) {\r\n          let a = [];\r\n          if (damage.damType[ind].length !== 0) {\r\n            damage.damType[ind].forEach((sub, i) => a.push(JSON.parse(damage.damType[ind][i])));\r\n          }\r\n          //@ts-expect-error\r\n          return [d[0] || \"\", a];\r\n        });\r\n      } else {\r\n        for (let [key, type] of obj_entries(damage)) {\r\n          for (let [k, prof] of obj_entries(type)) {\r\n            prof.damType = Object.values(prof?.damType || {});\r\n            prof.parts = Object.values(prof?.parts || {}).map(function (d, ind) {\r\n              let a = [];\r\n              if (prof.damType[ind].length !== 0 && prof.damType[ind][0] !== \"\") {\r\n                prof.damType[ind].forEach((sub, i) => a.push(JSON.parse(prof.damType[ind][i])));\r\n              }\r\n              //@ts-expect-error\r\n              return [d[0] || \"\", a];\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return flattenObject(data);\r\n  }\r\n  /* -------------------------------------------- */\r\n  /** @override */\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n    const edit = !this.isEditable;\r\n    const context = this.getData();\r\n    //@ts-expect-error\r\n    function formatSelection(state) {\r\n      const parent = $(state.element).parent().prop(\"tagName\");\r\n      if (!state.id || parent !== \"OPTGROUP\") return state.text;\r\n      const optgroup = $(state.element).parent().attr(\"label\");\r\n      const subtype = state.element.value.match(/(\\w+)/g)[1];\r\n      const url = `systems/ard20/css/${subtype}.svg`;\r\n      return `<div><img style=\"width:15px; background-color:black; margin-left:2px\" src=${url} />${optgroup} ${state.text}</div>`;\r\n    }\r\n    //@ts-expect-error\r\n    function formatResult(state) {\r\n      const parent = $(state.element).parent().prop(\"tagName\");\r\n      if (!state.id || parent !== \"OPTGROUP\") return state.text;\r\n      const subtype = state.element.value.match(/(\\w+)/g)[1];\r\n      const url = `systems/ard20/css/${subtype}.svg`;\r\n      return `<div><img style=\"width:15px; background-color:black; margin-left:2px\" src=${url} /> ${state.text}</div>`;\r\n    }\r\n    $(`select.select2`, html)\r\n      //@ts-expect-error\r\n      .select2({\r\n        width: \"auto\",\r\n        dropdownAutoWidth: true,\r\n        disabled: edit,\r\n        templateSelection: formatSelection,\r\n        templateResult: formatResult,\r\n        //@ts-expect-error\r\n        escapeMarkup: function (m) {\r\n          return m;\r\n        },\r\n      })\r\n      //@ts-expect-error\r\n      .val(function (index, value) {\r\n        //@ts-expect-error\r\n        const name = $(\"select.select2\", html)[index].name;\r\n        const val = getProperty(context, name);\r\n        return val;\r\n      })\r\n      .trigger(\"change\");\r\n    $(\"select\").on(\"select2:unselect\", function (evt) {\r\n      //@ts-expect-error\r\n      if (!evt.params.originalEvent) {\r\n        return;\r\n      }\r\n      //@ts-expect-error\r\n      evt.params.originalEvent.stopPropagation();\r\n    });\r\n    // Everything below here is only needed if the sheet is editable\r\n    if (!this.isEditable) return;\r\n    //@ts-expect-error\r\n    html.find(\".effect-control\").click((ev) => onManageActiveEffect(ev, this.item));\r\n    // Roll handlers, click handlers, etc. would go here.\r\n    html.find(\".config-button\").click(this._FeatReq.bind(this));\r\n    html.find(\".damage-control\").click(this._onDamageControl.bind(this));\r\n  }\r\n  //@ts-expect-error\r\n  _FeatReq(event) {\r\n    event.preventDefault();\r\n    const button = event.currentTarget;\r\n    let app;\r\n    switch (button.dataset.action) {\r\n      case \"feat-req\":\r\n        //@ts-expect-error\r\n        app = new FeatRequirements(this.object);\r\n        break;\r\n    }\r\n    app?.render(true);\r\n  }\r\n  //@ts-expect-error\r\n  async _onDamageControl(event) {\r\n    event.preventDefault();\r\n    const a = event.currentTarget;\r\n    if (a.classList.contains(\"add-damage\")) {\r\n      //await this._onSubmit(event);\r\n      let path = a.dataset.type ? \"system.damage\" + a.dataset.type : \"system.damage\";\r\n      const damage = getProperty(this.item.data, path);\r\n      damage.damType = damage.damType || [];\r\n      const partsPath = path + \".parts\";\r\n      const damTypePath = path + \".damType\";\r\n      const update = {};\r\n      update[partsPath] = damage.parts.concat([[\"\", [\"\", \"\"]]]);\r\n      update[damTypePath] = damage.damType?.concat([[\"\"]]);\r\n      await this.item.update(update);\r\n    }\r\n    if (a.classList.contains(\"delete-damage\")) {\r\n      //await this._onSubmit(event);\r\n      const li = a.closest(\".damage-part\");\r\n      let path = a.dataset.type ? \"system.damage\" + a.dataset.type : \"system.damage\";\r\n      const damage = getProperty(this.item.data, path);\r\n      console.log(damage);\r\n      damage.parts.splice(Number(li.dataset.damagePart), 1);\r\n      damage.damType.splice(Number(li.dataset.damagePart), 1);\r\n      const partsPath = path + \".parts\";\r\n      const damTypePath = path + \".damType\";\r\n      const update = {};\r\n      update[partsPath] = damage.parts;\r\n      update[damTypePath] = damage.damType;\r\n      await this.item.update(update);\r\n    }\r\n  }\r\n  //@ts-expect-error\r\n  async _onSubmit(...args) {\r\n    if (this._tabs[0].active === \"data\") this.position.height = \"auto\";\r\n    //@ts-expect-error\r\n    await super._onSubmit(...args);\r\n  }\r\n}\r\n","<svelte:options accessors={true} />\r\nSomething goes wrong and you get empty sheet. Sorry for that.\r\n\r\n","<svelte:options accessors={true} />\r\n\r\n<script>\r\n  import { getContext } from \"svelte\";\r\n  export let value;\r\n  export let type = \"text\";\r\n  export let label;\r\n  const document = getContext(\"DocumentSheetObject\");\r\n  let data;\r\n  let labelElem;\r\n  let input;\r\n  $: if (label && input) input.style.width = `calc(100% - ${labelElem.offsetWidth*1.1}px)`;\r\n  $: value = type === \"number\" ? parseInt(value) : value;\r\n  $: {\r\n    data = { img: $document.img, system: $document.system, flags: $document.flags, name: $document.name };\r\n  }\r\n</script>\r\n\r\n{#if label}\r\n  <span bind:this={labelElem}>{label}</span>\r\n{/if}\r\n<input\r\n  bind:this={input}\r\n  bind:value\r\n  on:change={() => {\r\n    $document.update(data);\r\n  }}\r\n/>\r\n\r\n<style lang=\"scss\">\r\n  input,\r\n  span {\r\n    background-color: inherit;\r\n    color: inherit;\r\n  }\r\n</style>\r\n","<svelte:options accessors={true} />\r\n\r\n<script>\r\n  import InputForDocumentSheet from \"../general components/InputForDocumentSheet.svelte\";\r\n  export let doc;\r\n</script>\r\n\r\nName: <InputForDocumentSheet bind:value={doc.name}/>\r\n","<svelte:options accessors={true} />\r\n\r\n<script>\r\n  import { getContext } from \"svelte\";\r\n  export let path;\r\n  export let alt;\r\n  let img;\r\n  $: if (img)\r\n    img.style.width = img.parentElement.clientHeight - parseFloat(getComputedStyle(img.parentElement).padding) * 2;\r\n\r\n  const { application } = getContext(\"external\"); //get sheet document\r\n  const document = getContext(\"DocumentSheetObject\");\r\n  let src = getProperty($document, path);\r\n  function onEditImage(event) {\r\n    const current = src;\r\n    const fp = new FilePicker({\r\n      type: \"image\",\r\n      current: current,\r\n      callback: async (newVal) => {\r\n        src = newVal;\r\n        let updateData = {};\r\n        updateData[path] = src;\r\n        await $document.update(updateData);\r\n      },\r\n      top: application.position.top + 40,\r\n      left: application.position.left + 10,\r\n    });\r\n    return fp.browse();\r\n  }\r\n</script>\r\n\r\n<img bind:this={img} {alt} {src} on:click={(event) => onEditImage(event)} />\r\n","<script>\r\n    import { getContext } from \"svelte\";\r\n    export let tabs = [];\r\n    export let activeTab;\r\n  </script>\r\n  \r\n  <ul>\r\n    {#each tabs as tab}\r\n      <li class={activeTab === tab.id ? \"active\" : \"\"}>\r\n        <span\r\n          on:click={() => {\r\n            activeTab = tab.id;\r\n          }}\r\n        >\r\n          {tab.label}\r\n        </span>\r\n      </li>\r\n    {/each}\r\n  </ul>\r\n  <div class=\"box\">\r\n    {#each tabs as tab}\r\n      {#if tab.id === activeTab}\r\n        <svelte:component this={tab.component}/>\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n  \r\n  <style lang=\"scss\">\r\n    .box {\r\n      margin-bottom: 10px;\r\n      border: 1px solid #dee2e6;\r\n      border-radius: 0 0 0.5rem 0.5rem;\r\n      border-top: 0;\r\n      background: rgba(0, 0, 0, 0.08);\r\n    }\r\n    ul {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      padding-left: 0;\r\n      margin-bottom: 0;\r\n      list-style: none;\r\n      border-bottom: 1px solid #dee2e6;\r\n    }\r\n    li {\r\n      &:active {\r\n        margin-bottom: -0.1em;\r\n        transform: translateY(0.1em);\r\n      }\r\n      &.active > span {\r\n        color: white;\r\n        background-color: rgba(0, 0, 0, 0.08);\r\n        border-color: #dee2e6 #dee2e6 #fff;\r\n      }\r\n    }\r\n  \r\n    span {\r\n      border: 1px solid transparent;\r\n      border-top-left-radius: 0.25rem;\r\n      border-top-right-radius: 0.25rem;\r\n      display: block;\r\n      padding: 0.5rem 1rem;\r\n      cursor: pointer;\r\n      &:hover {\r\n        border-color: #e9ecef #e9ecef #dee2e6;\r\n      }\r\n    }\r\n  </style>\r\n  ","<svelte:options accessors={true} />\r\n\r\n<script>\r\n  import { getContext } from \"svelte\";\r\n  const doc = getContext(\"DocumentSheetObject\");\r\n  let highlight = \"\";\r\n</script>\r\n\r\n\r\n<label for=\"skills\">Skills</label>\r\n<div class=\"skills\">\r\n  {#each Object.entries($doc.system.skills) as skill}\r\n    <div\r\n      class=\"skill\"\r\n      on:click={(event) => {\r\n        event.preventDefault();\r\n        return $doc.rollSkill(skill[0], { event: event });\r\n      }}\r\n    >\r\n      <span>\r\n        {skill[1].rankName}\r\n      </span>\r\n      <span>\r\n        {skill[1].name}\r\n      </span>\r\n      <span>\r\n        Bonus: {#if skill[1].value > 0}+{/if}\r\n        {skill[1].value}\r\n      </span>\r\n    </div>\r\n  {/each}\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n\r\n  .skills {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding-bottom: 10px;\r\n    & > div {\r\n      display: flex;\r\n      flex-direction: column;\r\n      border: 1px solid black;\r\n      flex: 1 0 calc(100% / 6 - 1.2em);\r\n      align-items: center;\r\n      margin: 0.6em;\r\n      border-radius: 10px;\r\n      &:hover {\r\n        text-shadow: red 0px 0px 0.5em;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n  label {\r\n    text-align: center;\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    display: inline-block;\r\n  }\r\n</style>\r\n","<svelte:options accessors={true} />\r\n\r\n<script>\r\n  import InputForDocumentSheet from \"../general components/InputForDocumentSheet.svelte\";\r\n  import ImageWithFilePicker from \"../general components/ImageWithFilePicker.svelte\";\r\n  import ProgressBar from \"../../../general svelte components/ProgressBar.svelte\";\r\n  import Tabs from \"../general components/Tabs.svelte\";\r\n  import AttributeTab from \"./AttributeTab.svelte\";\r\n  import InventoryTab from \"./InventoryTab.svelte\";\r\n  import FeaturesTab from \"./FeaturesTab.svelte\";\r\n  import SpellsTab from \"./SpellsTab.svelte\";\r\n  import EffectsTab from \"./EffectsTab.svelte\";\r\n  import BiographyTab from \"./BiographyTab.svelte\";\r\n  import { getContext } from \"svelte\";\r\n  const doc = getContext(\"DocumentSheetObject\");\r\n  let tabs = [\r\n    { label: \"Attributes\", id: \"attributes\", component: AttributeTab },\r\n    { label: \"Inventory\", id: \"inventory\", component: InventoryTab },\r\n    { label: \"Features\", id: \"features\", component: FeaturesTab },\r\n    { label: \"Spells\", id: \"spells\", component: SpellsTab },\r\n    { label: \"Effects\", id: \"effects\", component: EffectsTab },\r\n    { label: \"Biography\", id: \"biography\", component: BiographyTab },\r\n  ];\r\n  let activeTab = \"attributes\";\r\n  console.log($doc);\r\n</script>\r\n\r\n<header>\r\n  <div class=\"cha-img\">\r\n    <ImageWithFilePicker path={\"img\"} alt={\"character portrait\"} />\r\n  </div>\r\n  <div class=\"main-info\">\r\n    <div>\r\n      <div class=\"nameAndRace\">\r\n        <div class=\"name\">\r\n          <InputForDocumentSheet bind:value={$doc.name} label=\"name\" />\r\n        </div>\r\n        <div class=\"race\">\r\n          Race: {$doc.itemTypes.race[0]?.name || \"none\"}\r\n        </div>\r\n      </div>\r\n      <div class=\"health\">\r\n        <InputForDocumentSheet bind:value={$doc.system.health.value} label=\"health\"/>\r\n        <span>{$doc.system.health.max}</span>\r\n      </div>\r\n      <div class=\"level\">\r\n        <div>\r\n          <InputForDocumentSheet bind:value={$doc.system.advancement.xp.get} type=\"number\" label=\"XP earned\" />\r\n        </div>\r\n        <div>\r\n          XP used: {$doc.system.advancement.xp.used}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"attributes\">\r\n      {#each Object.entries($doc.system.attributes) as attribute}\r\n        <div\r\n          on:click={(event) => {\r\n            event.preventDefault;\r\n            return $doc.rollAttributeTest(attribute[0], { event: event });\r\n          }}\r\n        >\r\n          <span>\r\n            {attribute[1].label}\r\n          </span>\r\n          <span> Value: {attribute[1].value}</span>\r\n          <span> Mod: {attribute[1].mod}</span>\r\n        </div>\r\n      {/each}\r\n    </div>\r\n  </div>\r\n</header>\r\n<div class=\"content\">\r\n  <Tabs {tabs} {activeTab} />\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n  header {\r\n    display: flex;\r\n    flex-direction: row;\r\n    border-bottom: 1px solid black;\r\n    max-height: 155px;\r\n\r\n    & .main-info {\r\n      display: flex;\r\n      flex-direction: column;\r\n\r\n      & > :not(.attributes){\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-around;\r\n      }\r\n      & > .attributes {\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        padding-bottom: 10px;\r\n        & > div {\r\n          display: flex;\r\n          flex-direction: column;\r\n          border: 1px solid black;\r\n          flex: 1 0 calc(100% / 6 - 1.2em);\r\n          align-items: center;\r\n          margin: 0.6em;\r\n          border-radius: 10px;\r\n          &:hover {\r\n            text-shadow: red 0px 0px 0.5em;\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .cha-img{\r\n    max-width: 150px;\r\n  }\r\n</style>\r\n","import EmptySheet from \"../sheets/svelte/EmptySheet.svelte\";\r\nimport ItemItemSheet from \"../sheets/svelte/item/ItemItemSheet.svelte\";\r\nimport ActorSheet from \"../sheets/svelte/actor/ActorSheet.svelte\";\r\n/**\r\n * Define a set of template paths to pre-load\r\n * Pre-loaded templates are compiled and cached for fast access when rendering\r\n * @return {Promise}\r\n */\r\nexport const preloadHandlebarsTemplates = async function () {\r\n  return loadTemplates([\r\n    // Actor partials.\r\n    \"systems/ard20/templates/actor/parts/actor-features.html\",\r\n    \"systems/ard20/templates/actor/parts/actor-items.html\",\r\n    \"systems/ard20/templates/actor/parts/actor-spells.html\",\r\n    \"systems/ard20/templates/actor/parts/actor-effects.html\",\r\n    \"systems/ard20/templates/actor/parts/actor-equip.html\",\r\n    // Character Advancement\r\n    \"systems/ard20/templates/actor/parts/actor-adv.html\",\r\n    // Settings\r\n    \"systems/ard20/templates/app/prof-settings.html\",\r\n    \"systems/ard20/templates/app/feat-settings.html\",\r\n    // Requirements for features\r\n    \"systems/ard20/templates/app/feat_req.hbs\",\r\n  ]);\r\n};\r\n/**\r\n * Class for defining and extracting svelte templates for actor/item types\r\n */\r\nexport class DocTemplate {\r\n  static #map = new Map();\r\n\r\n  static delete(type) {\r\n    return this.#map.delete(type);\r\n  }\r\n\r\n  static get(doc) {\r\n    const component = this.#map.get(doc?.type);\r\n    return component ? component : EmptySheet;\r\n  }\r\n\r\n  static getByType(type) {\r\n    const component = this.#map.get(type);\r\n    console.log(type)\r\n    return component ? component : EmptySheet;\r\n  }\r\n\r\n  static set(type, component) {\r\n    this.#map.set(type, component);\r\n  }\r\n}\r\n//set your components\r\nexport const setSvelteComponents = () => {\r\n  DocTemplate.set(\"item\", ItemItemSheet);\r\n  DocTemplate.set(\"character\", ActorSheet);\r\n};\r\n","//@ts-expect-error\r\nexport const ARd20 = {};\r\nARd20.Attributes = {\r\n    str: \"ARd20.AttributeStr\",\r\n    dex: \"ARd20.AttributeDex\",\r\n    con: \"ARd20.AttributeCon\",\r\n    int: \"ARd20.AttributeInt\",\r\n    wis: \"ARd20.AttributeWis\",\r\n    cha: \"ARd20.AttributeCha\",\r\n};\r\nARd20.AttributeAbbreviations = {\r\n    str: \"ARd20.AttributeStrAbbr\",\r\n    dex: \"ARd20.AttributeDexAbbr\",\r\n    con: \"ARd20.AttributeConAbbr\",\r\n    int: \"ARd20.AttributeIntAbbr\",\r\n    wis: \"ARd20.AttributeWisAbbr\",\r\n    cha: \"ARd20.AttributeChaAbbr\",\r\n};\r\nARd20.CHARACTER_EXP_LEVELS = [0, 300, 900, 2700, 6500, 14000, 23000, 34000, 48000, 64000, 85000, 100000, 120000, 140000, 165000, 195000, 225000, 265000, 305000, 355000];\r\nARd20.SpellSchool = {\r\n    abj: \"ARd20.SchoolAbj\",\r\n    con: \"ARd20.SchoolCon\",\r\n    div: \"ARd20.SchoolDiv\",\r\n    enc: \"ARd20.SchoolEnc\",\r\n    evo: \"ARd20.SchoolEvo\",\r\n    ill: \"ARd20.SchoolIll\",\r\n    nec: \"ARd20.SchoolNec\",\r\n    trs: \"ARd20.SchoolTrs\",\r\n};\r\nARd20.Skills = {\r\n    acr: \"ARd20.SkillAcr\",\r\n    ani: \"ARd20.SkillAni\",\r\n    arc: \"ARd20.SkillArc\",\r\n    ath: \"ARd20.SkillAth\",\r\n    dec: \"ARd20.SkillDec\",\r\n    his: \"ARd20.SkillHis\",\r\n    ins: \"ARd20.SkillIns\",\r\n    itm: \"ARd20.SkillItm\",\r\n    inv: \"ARd20.SkillInv\",\r\n    med: \"ARd20.SkillMed\",\r\n    nat: \"ARd20.SkillNat\",\r\n    prc: \"ARd20.SkillPrc\",\r\n    prf: \"ARd20.SkillPrf\",\r\n    per: \"ARd20.SkillPer\",\r\n    rel: \"ARd20.SkillRel\",\r\n    slt: \"ARd20.SkillSlt\",\r\n    ste: \"ARd20.SkillSte\",\r\n    sur: \"ARd20.SkillSur\",\r\n};\r\nARd20.Rank = {\r\n    0: \"ARd20.Untrained\",\r\n    1: \"ARd20.Basic\",\r\n    2: \"ARd20.Expert\",\r\n    3: \"ARd20.Master\",\r\n    4: \"ARd20.Legend\",\r\n};\r\nARd20.Source = {\r\n    mar: \"ARd20.Martial\",\r\n    mag: \"ARd20.Magical\",\r\n    div: \"ARd20.Divine\",\r\n    pri: \"ARd20.Primal\",\r\n    psy: \"ARd20.Psyhic\",\r\n};\r\nARd20.WeaponProp = {\r\n    aff: \"ARd20.Affixed\",\r\n    awk: \"ARd20.Awkward\",\r\n    con: \"ARd20.Conceal\",\r\n    bra: \"ARd20.Brace\",\r\n    def: \"ARd20.Deflect\",\r\n    dis: \"ARd20.Disarm\",\r\n    dou: \"ARd20.Double Ended\",\r\n    ent: \"ARd20.Entangle\",\r\n    fin: \"ARd20.Finesse\",\r\n    fir: \"ARd20.Firearm\",\r\n    hea: \"ARd20.Heavy\",\r\n    lau: \"ARd20.Launch\",\r\n    lig: \"ARd20.Light\",\r\n    lun: \"ARd20.Lunge\",\r\n    mel: \"ARd20.Melee\",\r\n    one: \"ARd20.One-Handed\",\r\n    pen: \"ARd20.Penetrate\",\r\n    ran: \"ARd20.Ranged\",\r\n    rea: \"ARd20.Reach\",\r\n    rel: \"ARd20.Reload\",\r\n    sta: \"Ard20.Stagger\",\r\n    thr: \"ARd20.Thrown\",\r\n    tri: \"ARd20.Trip\",\r\n    two: \"ARd20.Two-Handed\",\r\n    ver: \"ARd20.Versatile\",\r\n};\r\nARd20.WeaponType = {\r\n    amb: \"ARd20.Ambush\",\r\n    axe: \"ARd20.Axe\",\r\n    blu: \"ARd20.Bludgeon\",\r\n    bow: \"ARd20.Bow\",\r\n    sli: \"ARd20.Sling\",\r\n    cbl: \"ARd20.Combat Blade\",\r\n    cro: \"ARd20.Crossbow\",\r\n    dbl: \"ARd20.Dueling Blade\",\r\n    fir: \"ARd20.Firearm\",\r\n    fla: \"ARd20.Flail\",\r\n    whi: \"ARd20.Whip\",\r\n    ham: \"ARd20.Hammer\",\r\n    pic: \"ARd20.Pick\",\r\n    pol: \"ARd20.Polearm\",\r\n    spe: \"ARd20.Spear\",\r\n    thr: \"ARd20.Throwing\",\r\n};\r\nARd20.AbilXP = [50, 50, 50, 50, 70, 90, 120, 150, 190, 290, 440, 660, 990, 1500, 2700, 4800, 8400, 14700, 25700, 51500, 103000, 206000, 412000, 824000, 2060000];\r\nARd20.SkillXP = {\r\n    0: [50, 80, 125, 185, 260, 350, 455, 575, 710, 860, 1025, 1205, 1400, 1610, 1835, 2075, 2330, 2600],\r\n    1: [115, 190, 295, 430, 595, 790, 1015, 1270, 1555, 1870, 2215, 2590, 2995, 3430, 3895, 4390, 4915, 5470],\r\n};\r\nARd20.DamageTypes = {\r\n    mag: \"ARd20.Magical\",\r\n    phys: \"ARd20.Physical\",\r\n};\r\nARd20.DamageSubTypes = {\r\n    acid: \"ARd20.DamageAcid\",\r\n    bludgeoning: \"ARd20.DamageBludgeoning\",\r\n    cold: \"ARd20.DamageCold\",\r\n    fire: \"ARd20.DamageFire\",\r\n    force: \"ARd20.DamageForce\",\r\n    lightning: \"ARd20.DamageLightning\",\r\n    necr: \"ARd20.DamageNecrotic\",\r\n    piercing: \"ARd20.DamagePiercing\",\r\n    poison: \"ARd20.DamagePoison\",\r\n    slashing: \"ARd20.DamageSlashing\",\r\n    radiant: \"ARd20.DamageRadiant\",\r\n    psychic: \"ARd20.DamagePsychic\",\r\n};\r\nARd20.ResistTypes = {\r\n    res: \"ARd20.Resistance\",\r\n    vul: \"Ard20.Vulnerability\",\r\n    imm: \"ARd20.Immunity\",\r\n};\r\nARd20.HPDice = [\"1d6\", \"1d8\", \"1d10\", \"1d12\", \"1d12+2\", \"1d12+4\", \"1d20\", \"1d20+2\", \"1d20+4\", \"1d20+6\", \"1d20+8\", \"1d20+10\", \"1d20+12\"];\r\nARd20.HeavyPoints = {\r\n    light: { chest: 3, gloves: 1, boots: 1, pants: 2, head: 1 },\r\n    medium: { chest: 5, gloves: 2, boots: 2, pants: 3, head: 2 },\r\n    heavy: { chest: 8, gloves: 3, boots: 3, pants: 5, head: 3 },\r\n};\r\nARd20.RollResult = {\r\n    0: \"ARd20.Fumble\",\r\n    1: \"ARd20.Fail\",\r\n    2: \"ARd20.Success\",\r\n    3: \"ARd20.Crit\",\r\n};\r\n","export default class ARd20SocketHandler {\r\n  //@ts-expect-error\r\n  static async updateActorData(data) {\r\n      console.log('socket data',data)\r\n      console.log('Socket Called, its GM:', game.user.isGM,' and its active: ',game.user.active)\r\n    if (!game.user.isGM) return;\r\n    // if the logged in user is the active GM with the lowest user id\r\n    const isResponsibleGM = game.users\r\n      .filter((user) => user.isGM && user.active)\r\n      .some((other) => other.data._id <= game.user.data._id);\r\n\r\n    if (!isResponsibleGM) return;\r\n    console.log('HERE GM ON SOCKET CALLING')\r\n    const token = await fromUuid(data.tokenId)\r\n    const actor = token?.actor;\r\n    //@ts-expect-error\r\n    if (actor) await actor.update(data.update);\r\n  }\r\n}\r\n","<script>\r\n  export let setting;\r\n  export let data;\r\n  function SubmitSetting(setting, data) {\r\n    game.settings.set(\"ard20\", setting, data);\r\n  }\r\n</script>\r\n\r\n<button class=\"submit\" on:click={() => SubmitSetting(setting, data)}>Submit</button>\r\n<style lang=\"scss\">\r\n  button.submit{\r\n    flex-basis: fit-content;\r\n}\r\n</style>","<svelte:options accessors={true} />\r\n\r\n<script>\r\n  import { onMount, tick } from \"svelte\";\r\n  import SettingsSubmitButton from \"../../general svelte components/SettingsSubmitButton.svelte\";\r\n  import { ApplicationShell } from \"@typhonjs-fvtt/runtime/svelte/component/core\";\r\n  export let elementRoot;\r\n  const setting = \"advancement-rate\"; //name of setting\r\n  let data = game.settings.get(\"ard20\", setting); //get setting\r\n  let funcList = Object.getOwnPropertyNames(math); //get all possible functions from math.js library\r\n  //create several Sets where we will store wrong variables\r\n  let formulaSet = {};\r\n  let spanDiv = {};\r\n  let formulaInput = {};\r\n  let variableInput = {};\r\n  let formulaSpan = {};\r\n  //creaet list of parameters\r\n  let paramArr = [\"attributes\", \"skills\", \"features\"];\r\n  for (let item of paramArr) {\r\n    spanDiv[item] = \"\";\r\n    formulaSet[item] = { set: new Set(), check: false };\r\n    formulaInput[item] = \"\";\r\n    variableInput[item] = \"\";\r\n    formulaSpan[item] = data.formulas[item];\r\n  }\r\n  //add to funcList variables\r\n  $: {\r\n    for (let item of Object.values(data.variables)) {\r\n      funcList.push(item.shortName);\r\n    }\r\n  }\r\n  //set position for divs with span\r\n\r\n  onMount(async () => {\r\n    for (let param of paramArr) {\r\n      console.log(data.formulas[param], param);\r\n      await validateInput(data.formulas[param], param);\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Check string for wrong things\r\n   * @param {string} val - original input\r\n   * @param {string} type - can be \"attributes\", \"skills\" or \"features\"\r\n   */\r\n  async function validateInput(val, type) {\r\n    console.log(val, type, \"ValidateInput function\");\r\n    formulaSpan[type] = val;\r\n    let ind = 0; //starting index\r\n\r\n    //create an array of variables/functions in formula field and their indexes\r\n    let checkArr = val.split(/[-./+\\*,^\\s\\(\\)]+/).map((item) => {\r\n      return { name: item, index: 0 };\r\n    });\r\n    for (let item of checkArr) {\r\n      item.index = val.indexOf(item.name, ind);\r\n      ind = item.index + 1;\r\n    }\r\n    formulaSet[type].set.clear();\r\n    for (let item of checkArr) {\r\n      if (item.name !== \"\" && isNaN(item.name)) {\r\n        let check = !funcList.includes(item.name);\r\n        if (check) {\r\n          formulaSet[type].set.add(item.name);\r\n\r\n          //get last index of changed word\r\n          let lastSpan =\r\n            formulaSpan[type].lastIndexOf(\"</span>\") > 0 ? formulaSpan[type].lastIndexOf(\"</span>\") + 8 : -1;\r\n\r\n          //get new index of word\r\n          let wordLastIndex = item.index + formulaSpan[type].length - val.length;\r\n          formulaSpan[type] = replaceStrAt(\r\n            formulaSpan[type],\r\n            Math.max(lastSpan, wordLastIndex),\r\n            `<span style=\"color:red\">${item.name}</span>`,\r\n            item.name.length\r\n          );\r\n        }\r\n      }\r\n    }\r\n    formulaSet[type].check = formulaSet[type].set.size > 0;\r\n    await tick();\r\n    changeDivPosition();\r\n  }\r\n  function changeDivPosition() {\r\n    for (let elem of elementRoot.querySelectorAll(\"input.transparent\")) {\r\n      let div = elem.nextElementSibling.style;\r\n      div.margin = getComputedStyle(elem).margin;\r\n      div.padding = getComputedStyle(elem).padding;\r\n      div.left = Math.ceil(elem.offsetLeft * 1.01) + \"px\";\r\n      div.top = Math.ceil(elem.offsetTop * 1.01) + \"px\";\r\n      div.border = getComputedStyle(elem).border;\r\n      div[\"border-color\"] = \"transparent\";\r\n      console.log(div.top, div.left);\r\n    }\r\n  }\r\n  /**\r\n   * Replace part of string at given index\r\n   * @param {string} str - String\r\n   * @param {number} index  - chosen start index\r\n   * @param {string} replacement - string which replaces old one\r\n   * @param {number} endLength - chosen end index\r\n   */\r\n  function replaceStrAt(str, index, replacement, endLength) {\r\n    if (index >= str.length) {\r\n      return str.valueOf();\r\n    }\r\n    return str.substring(0, index) + replacement + str.substring(index + endLength);\r\n  }\r\n</script>\r\n\r\n<ApplicationShell bind:elementRoot>\r\n  <div>\r\n    <div>\r\n      <label for=\"Custom Values\"> CustomValues </label>\r\n      <div class=\"grid grid-2col\">\r\n        {#each Object.values(data.variables) as variable}\r\n          <label for={variable.longName}>{variable.longName}</label>\r\n          <input bind:value={variable.shortName} placeholder=\"shortName\" />\r\n        {/each}\r\n      </div>\r\n    </div>\r\n    <div class=\"formula\">\r\n      {#each paramArr as param}\r\n        <div>\r\n          <label for=\"Attribute Formula\">Attribute Advancement Formula</label>\r\n          <input\r\n            class=\"transparent\"\r\n            type=\"text\"\r\n            on:input={() => {\r\n              validateInput(formulaInput[param].value, param);\r\n            }}\r\n            bind:this={formulaInput[param]}\r\n            bind:value={data.formulas[param]}\r\n          />\r\n          <div\r\n            class=\"span\"\r\n            bind:this={spanDiv[param]}\r\n            on:click={(e) => {\r\n              e.target.previousElementSibling.focus();\r\n            }}\r\n            on:dblclick={(e) => {\r\n              e.target.previousElementSibling.focus();\r\n              e.target.previousElementSibling.select();\r\n            }}\r\n          >\r\n            {@html formulaSpan[param]}\r\n          </div>\r\n          {#if formulaSet[param].check}\r\n            <div style=\"color:red\">\r\n              there is no such variable as {[...formulaSet[param].set].join(\", \")}\r\n            </div>\r\n          {/if}\r\n        </div>\r\n        <br />\r\n      {/each}\r\n    </div>\r\n    <SettingsSubmitButton {setting} {data} />\r\n  </div>\r\n</ApplicationShell>\r\n\r\n<style lang=\"scss\">\r\n  input.transparent {\r\n    color: transparent;\r\n    caret-color: black;\r\n  }\r\n  input.transparent::selection {\r\n    background: grey;\r\n    & + div.span {\r\n      font-weight: bold;\r\n      color: white;\r\n    }\r\n  }\r\n  div.span {\r\n    position: absolute;\r\n    pointer-events:none;\r\n  }\r\n</style>\r\n","import { SvelteApplication } from \"@typhonjs-fvtt/runtime/svelte/application\";\r\nimport AdvancementRateShell from \"./advancement-rate-shell.svelte\";\r\nexport class AdvRateSettingsShim extends FormApplication {\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  constructor(options = {}) {\r\n    super({}, options);\r\n\r\n    new AdvancementRateFormApp().render(true, { focus: true });\r\n  }\r\n\r\n  async _updateObject(event, formData) {}\r\n  render() {\r\n    this.close();\r\n  }\r\n}\r\nclass AdvancementRateFormApp extends SvelteApplication {\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      classes: [\"ard20\"],\r\n      title: \"Advancement Rate\",\r\n      minimizable:true,\r\n      resizable:true,\r\n      width: 600,\r\n      height: 600,\r\n      svelte: {\r\n        class: AdvancementRateShell,\r\n        target: document.body,\r\n      },\r\n    });\r\n  }\r\n}\r\n","<svelte:options accessors={true} />\r\n\r\n<script>\r\n  import SettingsSubmitButton from \"../../general svelte components/SettingsSubmitButton.svelte\";\r\n  import { ApplicationShell } from \"@typhonjs-fvtt/runtime/svelte/component/core\";\r\n  import { uuidv4 } from \"@typhonjs-fvtt/runtime/svelte/util\";\r\n  export let elementRoot;\r\n  const setting=\"feat\"\r\n  export let data = game.settings.get(\"ard20\", \"feat\");\r\n  console.log(data);\r\n\r\n  function addEntry(type) {\r\n    const name = `New ${type}`.slice(0, -1);\r\n    const id = uuidv4();\r\n    data[type] = [...data[type], { name: name, id: id }];\r\n    console.log(data);\r\n    data = data;\r\n  }\r\n  function deleteEntry(type, id) {\r\n    console.log(type);\r\n    const index = data[type].findIndex((entry) => entry.id === id);\r\n    if (index >= 0) {\r\n      console.log(data[type]);\r\n      data[type].splice(index, 1);\r\n      data = data;\r\n    }\r\n  }\r\n\r\n  async function Submit() {\r\n    await game.settings.set(\"ard20\", \"feat\", data);\r\n  }\r\n</script>\r\n\r\n<ApplicationShell bind:elementRoot>\r\n  <section class=\"sheet-body\">\r\n    <div class=\"flexcol\">\r\n      packs\r\n      {#each data.packs as pack (pack.id)}\r\n        <div class=\"grid grid-2col\">\r\n          <input type=\"text\" bind:value={pack.name} />\r\n          <button on:click={() => deleteEntry(\"packs\", pack.id)} class=\"minus far fa-minus-square\" />\r\n        </div>\r\n      {/each}\r\n      <button on:click={() => addEntry(\"packs\")} class=\"add far fa-plus-square\" />\r\n      <hr />\r\n      folders\r\n      {#each data.folders as folder (folder.id)}\r\n        <div class=\"grid grid-2col\">\r\n          <input type=\"text\" bind:value={folder.name} />\r\n          <button on:click={() => deleteEntry(\"folders\", folder.id)} class=\"minus far fa-minus-square\" />\r\n        </div>\r\n      {/each}\r\n      <button on:click={() => addEntry(\"folders\")} class=\"add far fa-plus-square\" />\r\n    </div>\r\n  </section>\r\n  <SettingsSubmitButton {setting} {data} />\r\n</ApplicationShell>\r\n","import { SvelteApplication } from \"@typhonjs-fvtt/runtime/svelte/application\";\r\nimport FeatSettingShell from './featSetting-shell.svelte'\r\nexport class FeatSettingsShim extends FormApplication {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    constructor(options = {}) {\r\n      super({}, options);\r\n  \r\n      new FeatSetting().render(true, { focus: true });\r\n    }\r\n  \r\n    async _updateObject(event, formData) {}\r\n    render() {\r\n      this.close();\r\n    }\r\n  }\r\n  class FeatSetting extends SvelteApplication {\r\n    static get defaultOptions() {\r\n      return foundry.utils.mergeObject(super.defaultOptions, {\r\n        classes: [\"ard20\"],\r\n        title: \"Folders and Packs with Features\",\r\n        minimizable:true,\r\n        resizable:true,\r\n        width: 400,\r\n        height: 600,\r\n        svelte: {\r\n          class: FeatSettingShell,\r\n          target: document.body,\r\n        },\r\n      });\r\n    }\r\n  }\r\n  ","<svelte:options accessors={true} />\r\n\r\n<script>\r\n  import SettingsSubmitButton from \"../../general svelte components/SettingsSubmitButton.svelte\";\r\n  import { uuidv4 } from \"@typhonjs-fvtt/runtime/svelte/util\";\r\n  import { ApplicationShell } from \"@typhonjs-fvtt/runtime/svelte/component/core\";\r\n  import { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\r\n  import { ARd20 } from \"../../helpers/config.js\";\r\n  const setting = \"proficiencies\"\r\n  let data = game.settings.get(\"ard20\", \"proficiencies\");\r\n  console.log(data);\r\n  function removeAllAll() {\r\n    for (const item of Object.values(data)) {\r\n      item.value = [];\r\n    }\r\n    console.log(data);\r\n    data = data;\r\n  }\r\n  function removeAll(type) {\r\n    data[type].value = [];\r\n    data = data;\r\n  }\r\n  function add(type) {\r\n    data[type].value = [\r\n      ...data[type].value,\r\n      { id: uuidv4(), name: `New ${type}`, type: Object.keys(selectArr[type])[0] },\r\n    ];\r\n    data = data;\r\n  }\r\n  function setDefaultGroup(type) {\r\n    console.log([...game.settings.settings].filter((set) => set[0] === \"ard20.proficiencies\")[0][1].default);\r\n    data[type].value = [\r\n      ...[...game.settings.settings].filter((set) => set[0] === \"ard20.proficiencies\")[0][1].default[type].value,\r\n    ];\r\n    data = data;\r\n  }\r\n  function setDefaultAll() {\r\n    console.log([...game.settings.settings].filter((set) => set[0] === \"ard20.proficiencies\")[0][1].default);\r\n    data = duplicate([...game.settings.settings].filter((set) => set[0] === \"ard20.proficiencies\")[0][1].default);\r\n  }\r\n  function remove(key, type) {\r\n    const index = data[type].value.findIndex((entry) => entry.id === key);\r\n    if (index >= 0) {\r\n      data[type].value.splice(index, 1);\r\n      data = data;\r\n    }\r\n  }\r\n  export let elementRoot;\r\n  let activeTabValue = \"weapon\";\r\n  const handleClick = (tabValue) => () => (activeTabValue = tabValue);\r\n  let selectArr = {\r\n    weapon: ARd20.WeaponType,\r\n    armor: { light: \"light\", medium: \"medium\", heavy: \"heavy\" },\r\n    tool: {},\r\n  };\r\n  async function Submit() {\r\n    await game.settings.set(\"ard20\", \"proficiencies\", data);\r\n  }\r\n</script>\r\n\r\n<ApplicationShell bind:elementRoot>\r\n  <div class=\"flexrow\">\r\n    <button on:click={() => removeAllAll()}>Remove All</button>\r\n    <button on:click={() => setDefaultAll()}>Reset All</button>\r\n  </div>\r\n  <ul>\r\n    {#each Object.values(data) as item}\r\n      <li class={activeTabValue === item.id ? \"active\" : \"\"}>\r\n        <span on:click={handleClick(item.id)}>{item.label}</span>\r\n      </li>\r\n    {/each}\r\n  </ul>\r\n\r\n  <div class=\"box\">\r\n    {#each Object.values(data) as item (item)}\r\n      {#if activeTabValue === item.id}\r\n        <div class=\"flexrow\">\r\n          <button on:click={() => add(item.id)}>Add {item.label}</button>\r\n          <button on:click={() => setDefaultGroup(item.id)}>Reset to default</button>\r\n          <button on:click={() => removeAll(item.id)}>Remove All {item.label}</button>\r\n        </div>\r\n        <hr />\r\n        <div>\r\n          {#each item.value as entry (entry.id)}\r\n            <div class=\"flexrow\">\r\n              <input bind:value={entry.name} />\r\n              <select bind:value={entry.type}>\r\n                {#each Object.entries(selectArr[item.id]) as opt}\r\n                  <option value={opt[0]}>{localize(opt[1])}</option>\r\n                {/each}\r\n              </select>\r\n              <button on:click={() => remove(entry.id, item.id)} class=\"minus far fa-minus-square\" />\r\n            </div>\r\n          {/each}\r\n        </div>\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n  <SettingsSubmitButton {setting} {data}/>\r\n</ApplicationShell>\r\n\r\n<style lang=\"scss\">\r\n  button {\r\n    max-height: 2em;\r\n  }\r\n  .box {\r\n    background-color: #c9c7b8;\r\n    margin-bottom: 10px;\r\n    padding: 10px;\r\n    border: 2px solid #dee2e6;\r\n    border-radius: 0 0 0.5rem 0.5rem;\r\n    border-top: 0;\r\n  }\r\n  ul {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding-left: 0;\r\n    margin-bottom: 0;\r\n    list-style: none;\r\n    border-bottom: 1px solid #dee2e6;\r\n    justify-content: space-evenly;\r\n    align-content: space-around;\r\n    max-height: 3em;\r\n  }\r\n  li {\r\n    margin-bottom: -0.5em;\r\n  }\r\n\r\n  span {\r\n    border: 1px solid transparent;\r\n    border-top-left-radius: 0.25rem;\r\n    border-top-right-radius: 0.25rem;\r\n    display: block;\r\n    padding: 0.5rem 1rem;\r\n    cursor: pointer;\r\n  }\r\n\r\n  span:hover {\r\n    border-color: #b5b3a4 #b5b3a4 #dee2e6;\r\n    background-color: #c9c7b8;\r\n  }\r\n\r\n  li.active > span {\r\n    color: rgb(0, 0, 0);\r\n    background-color: #c9c7b8;\r\n    border-left: 2px solid;\r\n    border-top: 2px solid;\r\n    border-right: 2px solid;\r\n    border-color: #dee2e6 #dee2e6 #c9c7b8;\r\n  }\r\n</style>\r\n","import { SvelteApplication } from \"@typhonjs-fvtt/runtime/svelte/application\";\r\nimport ProfSettingShell from './profSetting-shell.svelte'\r\nexport class ProfSettingsShim extends FormApplication {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    constructor(options = {}) {\r\n      super({}, options);\r\n  \r\n      new ProfSetting().render(true, { focus: true });\r\n    }\r\n  \r\n    async _updateObject(event, formData) {}\r\n    render() {\r\n      this.close();\r\n    }\r\n  }\r\n  class ProfSetting extends SvelteApplication {\r\n    static get defaultOptions() {\r\n      return foundry.utils.mergeObject(super.defaultOptions, {\r\n        classes: [\"ard20\"],\r\n        title: \"Sub-types for Proficiencies\",\r\n        minimizable:true,\r\n        resizable:true,\r\n        width: 600,\r\n        height: 800,\r\n        svelte: {\r\n          class: ProfSettingShell,\r\n          target: document.body,\r\n        },\r\n      });\r\n    }\r\n  }\r\n  ","<svelte:options accessors={true} />\r\n\r\n<script>\r\n  import SettingsSubmitButton from \"../../general svelte components/SettingsSubmitButton.svelte\";\r\n  import { ApplicationShell } from \"@typhonjs-fvtt/runtime/svelte/component/core\";\r\n  import { uuidv4 } from \"@typhonjs-fvtt/runtime/svelte/util\";\r\n  export let elementRoot;\r\n  const setting = \"profLevel\";\r\n  let data = game.settings.get(\"ard20\", \"profLevel\");\r\n  function addEntry() {\r\n    const key = \"newKey\";\r\n    const label = `New level`;\r\n    const id = uuidv4();\r\n    data = [...data, { key: key, label: label, id: id }];\r\n    console.log(data);\r\n    data = data;\r\n  }\r\n  function deleteEntry(id) {\r\n    const index = data.findIndex((entry) => entry.id === id);\r\n    if (index >= 0) {\r\n      data.splice(index, 1);\r\n      data = data;\r\n    }\r\n  }\r\n  async function Submit() {\r\n    await game.settings.set(\"ard20\", \"profLevel\", data);\r\n    game.actors.forEach((actor) => {\r\n      actor.prepareData();\r\n      actor._sheet.render(true);\r\n    });\r\n  }\r\n</script>\r\n\r\n<ApplicationShell bind:elementRoot>\r\n  <button on:click={addEntry}>Add level</button>\r\n  {#each data as setting}\r\n    <div class=\"grid grid-5col\">\r\n      <label for=\"setting.key\">Key:</label>\r\n      <input bind:value={setting.key} type=\"text\" />\r\n      <label for=\"setting.label\">Name</label>\r\n      <input bind:value={setting.label} type=\"text\" />\r\n      <button\r\n        class=\"minus far fa-minus-square\"\r\n        on:click={() => {\r\n          deleteEntry(setting.id);\r\n        }}\r\n      />\r\n    </div>\r\n  {/each}\r\n  <SettingsSubmitButton {setting} {data} />\r\n</ApplicationShell>\r\n","import { SvelteApplication } from \"@typhonjs-fvtt/runtime/svelte/application\";\r\nimport ProfLevelSettingShell from './profLevelSetting-shell.svelte'\r\nexport class ProfLevelSettingShim extends FormApplication {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    constructor(options = {}) {\r\n      super({}, options);\r\n  \r\n      new ProfLevelSetting().render(true, { focus: true });\r\n    }\r\n  \r\n    async _updateObject(event, formData) {}\r\n    render() {\r\n      this.close();\r\n    }\r\n  }\r\n  class ProfLevelSetting extends SvelteApplication {\r\n    static get defaultOptions() {\r\n      return foundry.utils.mergeObject(super.defaultOptions, {\r\n        classes: [\"ard20\"],\r\n        title: \"Levels of proficiencies\",\r\n        minimizable:true,\r\n        resizable:true,\r\n        width: 400,\r\n        height: 600,\r\n        svelte: {\r\n          class: ProfLevelSettingShell,\r\n          target: document.body,\r\n        },\r\n      });\r\n    }\r\n  }\r\n  ","import { AdvRateSettingsShim } from \"./advancement-rate/advancement-rate.js\";\r\nimport { FeatSettingsShim } from \"./FeatSetting/featSetting.js\";\r\nimport { ProfSettingsShim } from \"./ProfSetting/profSetting.js\";\r\nimport { ProfLevelSettingShim } from \"./ProfLevelsSetting/profLevelSetting.js\";\r\nexport const registerSystemSettings = function () {\r\n  game.settings.register(\"ard20\", \"proficiencies\", {\r\n    scope: \"world\",\r\n    config: false,\r\n    default: {\r\n      weapon: {\r\n        label: \"weapon\",\r\n        id: \"weapon\",\r\n        value: [\r\n          { name: \"Punch Dagger\", type: \"amb\", id: \"Punch Dagger\" },\r\n          { name: \"Whip Dagger\", type: \"amb\", id: \"Whip Dagger\" },\r\n          { name: \"Gauntlet\", type: \"amb\", id: \"Gauntlet\" },\r\n          { name: \"Hidden Blade\", type: \"amb\", id: \"Hidden Blade\" },\r\n          { name: \"Knucke Axe\", type: \"amb\", id: \"Knucke Axe\" },\r\n          { name: \"Side Baton\", type: \"amb\", id: \"Side Baton\" },\r\n          { name: \"Unarmed strike\", type: \"amb\", id: \"Unarmed strike\" },\r\n          { name: \"Battle Axe\", type: \"axe\", id: \"Battle Axe\" },\r\n          { name: \"Great Axe\", type: \"axe\", id: \"Great Axe\" },\r\n          { name: \"Handaxe\", type: \"axe\", id: \"Handaxe\" },\r\n          { name: \"Hook Sword\", type: \"axe\", id: \"Hook Sword\" },\r\n          { name: \"Khopesh\", type: \"axe\", id: \"Khopesh\" },\r\n          { name: \"Poleaxe\", type: \"axe\", id: \"Poleaxe\" },\r\n          { name: \"Tomahawk\", type: \"axe\", id: \"Tomahawk\" },\r\n          { name: \"Great club\", type: \"blu\", id: \"Great club\" },\r\n          { name: \"Heavy club\", type: \"blu\", id: \"Heavy club\" },\r\n          { name: \"Light Club\", type: \"blu\", id: \"Light Club\" },\r\n        ],\r\n      },\r\n      armor: { label: \"armor\", id: \"armor\", value: [] },\r\n      tool: { label: \"tool\", id: \"tool\", value: [] },\r\n    },\r\n    onChange: (value) => {\r\n      console.log(\"Настройка изменилась \", value);\r\n    },\r\n  });\r\n  game.settings.registerMenu(\"ard20\", \"gearProfManage\", {\r\n    name: \"SETTINGS.ProfManage\",\r\n    label: \"SETTINGS.ProfManage\",\r\n    type: ProfSettingsShim,\r\n    restricted: false,\r\n    icon: \"fab fa-buffer\",\r\n  });\r\n  game.settings.register(\"ard20\", \"feat\", {\r\n    scope: \"world\",\r\n    config: false,\r\n    default: {\r\n      packs: [],\r\n      folders: [],\r\n    },\r\n    onChange: (value) => {\r\n      console.log(\"Настройка изменилась\", value);\r\n    },\r\n  });\r\n\r\n  game.settings.registerMenu(\"ard20\", \"featManage\", {\r\n    name: \"SETTINGS.FeatureManage\",\r\n    label: \"SETTINGS.FeatureManage\",\r\n    type: FeatSettingsShim,\r\n    restricted: false,\r\n  });\r\n  game.settings.register(\"ard20\", \"advancement-rate\", {\r\n    scope: \"world\",\r\n    config: false,\r\n    default: {\r\n      variables: {\r\n        skillsCount: {\r\n          shortName: \"SC\",\r\n          longName: \"Skill Count\",\r\n        },\r\n        featuresCount: {\r\n          shortName: \"FC\",\r\n          longName: \"feature Count\",\r\n        },\r\n        skills: {\r\n          shortName: \"SV\",\r\n          longName: \"skill Value\",\r\n        },\r\n        features: {\r\n          shortName: \"FL\",\r\n          longName: \"Feature Level\",\r\n        },\r\n        attributes: {\r\n          shortName: \"AV\",\r\n          longName: \"Attribute Value\",\r\n        },\r\n      },\r\n      formulas: {\r\n        skills: \"SV\",\r\n        features: \"FL\",\r\n        attributes: \"max(floor((AV-10)/2)+2,1)\",\r\n      },\r\n    },\r\n    onChange: (value) => {\r\n      console.log(\"Настройка изменилась\", value);\r\n    },\r\n  });\r\n  game.settings.registerMenu(\"ard20\", \"advancementRateManage\", {\r\n    name: \"SETTINGS.AdvancementRateManage\",\r\n    label: \"SETTINGS.AdvancementRateManage\",\r\n    type: AdvRateSettingsShim,\r\n    restricted: false,\r\n  });\r\n  game.settings.register(\"ard20\", \"profLevel\", {\r\n    scope: \"world\",\r\n    config: false,\r\n    default: [\r\n      { key: \"untrained\", label: \"Untrained\", id: \"untrained\" },\r\n      { key: \"trained\", label: \"Trained\", id: \"trained\" },\r\n      { key: \"expert\", label: \"Expert\", id: \"expert\" },\r\n      { key: \"master\", label: \"Master\", id: \"master\" },\r\n      { key: \"legend\", label: \"Legend\", id: \"legend\" },\r\n    ],\r\n  });\r\n  game.settings.registerMenu(\"ard20\", \"profLevelMenu\", {\r\n    name: \"SETTINGS.profLevel\",\r\n    label: \"SETTINGS.profLevel\",\r\n    type: ProfLevelSettingShim,\r\n    restricted: false,\r\n  });\r\n  game.settings.register(\"ard20\", \"mainDiceType\", {\r\n    scope: \"world\",\r\n    choices:{\r\n      '1d20':'1d20',\r\n      '2d10':'2d10',\r\n      '3d6':'3d6'\r\n    },\r\n    config: true,\r\n    default: 0,\r\n    type: String,\r\n    name: \"Main dice-roll type\",\r\n    hint: \"chose main dice mechanic between 1d20, 2d10 and 3d6\",\r\n  });\r\n};\r\nclass ProfFormApp extends FormApplication {\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      classes: [\"ard20\"],\r\n      title: \"Armor/Weapon Proficiencies\",\r\n      template: \"systems/ard20/templates/app/prof-settings.html\",\r\n      id: \"prof-settings\",\r\n      width: 600,\r\n      height: \"auto\",\r\n      submitOnChange: true,\r\n      closeOnSubmit: false,\r\n      tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"weapons\" }],\r\n    });\r\n  }\r\n  //@ts-expect-error\r\n  getData() {\r\n    const sheetData = {\r\n      proficiencies: game.settings.get(\"ard20\", \"proficiencies\"),\r\n      config: CONFIG.ARd20,\r\n    };\r\n    return sheetData;\r\n  }\r\n  //@ts-expect-error\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n    html.find(\".add\").click(this._onAdd.bind(this));\r\n    html.find(\".minus\").click(this._Delete.bind(this));\r\n  }\r\n  //@ts-expect-error\r\n  async _onAdd(event) {\r\n    event.preventDefault();\r\n    const proficiencies = game.settings.get(\"ard20\", \"proficiencies\");\r\n    proficiencies.weapon.push({ name: \"name\", type: \"amb\" });\r\n    await game.settings.set(\"ard20\", \"proficiencies\", proficiencies);\r\n    this.render();\r\n  }\r\n  //@ts-expect-error\r\n  async _Delete(event) {\r\n    event.preventDefault();\r\n    const proficiencies = game.settings.get(\"ard20\", \"proficiencies\");\r\n    proficiencies.weapon.splice(event.currentTarget.dataset.key, 1);\r\n    await game.settings.set(\"ard20\", \"proficiencies\", proficiencies);\r\n    this.render();\r\n  }\r\n  //@ts-expect-error\r\n  async _updateObject(event, formData) {\r\n    const proficiencies = game.settings.get(\"ard20\", \"proficiencies\");\r\n    console.log(formData);\r\n    let dirty = false;\r\n    for (let [fieldName, value] of Object.entries(foundry.utils.flattenObject(formData))) {\r\n      const [type, index, propertyName] = fieldName.split(\".\");\r\n      //@ts-expect-error\r\n      if (proficiencies[type][index][propertyName] !== value) {\r\n        //log({index, propertyName, value});\r\n        //@ts-expect-error\r\n        proficiencies[type][index][propertyName] = value;\r\n        dirty = dirty || true;\r\n      }\r\n      if (dirty) {\r\n        await game.settings.set(\"ard20\", \"proficiencies\", proficiencies);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Highlight critical success or failure on d20 rolls\r\n */\r\n//@ts-expect-error\r\nexport const highlightCriticalSuccessFailure = function (message, html, data) {\r\n    if (!message.isRoll || !message.isContentVisible)\r\n        return;\r\n    // Highlight rolls where the first part is a d20 roll\r\n    const roll = message.roll;\r\n    if (!roll.dice.length)\r\n        return;\r\n    const d = roll.dice[0];\r\n    // Ensure it is an un-modified d20 roll\r\n    const isD20 = (d.faces === 20) && (d.values.length === 1);\r\n    if (!isD20)\r\n        return;\r\n    const isModifiedRoll = (\"success\" in d.results[0]) || d.options.marginSuccess || d.options.marginFailure;\r\n    if (isModifiedRoll)\r\n        return;\r\n    // Highlight successes and failures\r\n    const critical = d.options.critical || 20;\r\n    const fumble = d.options.fumble || 1;\r\n    if (d.total >= critical)\r\n        html.find(\".dice-total\").addClass(\"critical\");\r\n    else if (d.total <= fumble)\r\n        html.find(\".dice-total\").addClass(\"fumble\");\r\n    else if (d.options.target) {\r\n        if (roll.total >= d.options.target)\r\n            html.find(\".dice-total\").addClass(\"success\");\r\n        else\r\n            html.find(\".dice-total\").addClass(\"failure\");\r\n    }\r\n};\r\n/* -------------------------------------------- */\r\n/**\r\n * Optionally hide the display of chat card action buttons which cannot be performed by the user\r\n */\r\n//@ts-expect-error\r\nexport const displayChatActionButtons = function (message, html, data) {\r\n    const chatCard = html.find(\".ard20.chat-card\");\r\n    if (chatCard.length > 0) {\r\n        const flavor = html.find(\".flavor-text\");\r\n        if (flavor.text() === html.find(\".item-name\").text())\r\n            flavor.remove();\r\n        // If the user is the message author or the actor owner, proceed\r\n        let actor = game.actors.get(data.message.speaker.actor);\r\n        if (actor && actor.isOwner)\r\n            return;\r\n        else if (game.user.isGM || (data.author.id === game.user.id))\r\n            return;\r\n        // Otherwise conceal action buttons except for saving throw\r\n        const buttons = chatCard.find(\"button[data-action]\");\r\n        //@ts-expect-error\r\n        buttons.each((i, btn) => {\r\n            if (btn.dataset.action === \"save\")\r\n                return;\r\n            btn.style.display = \"none\";\r\n        });\r\n    }\r\n};\r\n/* -------------------------------------------- */\r\n/**\r\n * This function is used to hook into the Chat Log context menu to add additional options to each message\r\n * These options make it easy to conveniently apply damage to controlled tokens based on the value of a Roll\r\n *\r\n * @param {HTMLElement} html    The Chat Message being rendered\r\n * @param {Array} options       The Array of Context Menu options\r\n *\r\n * @return {Array}              The extended options Array including new context choices\r\n */\r\nexport const addChatMessageContextOptions = function (html, options) {\r\n    let canApply = (li) => {\r\n        //@ts-expect-error\r\n        const message = game.messages.get(li.data(\"messageId\"));\r\n        return message?.isRoll && message?.isContentVisible && canvas.tokens?.controlled.length;\r\n    };\r\n    options.push({\r\n        //@ts-expect-error\r\n        name: game.i18n.localize(\"ARd20.ChatContextDamage\"),\r\n        //@ts-expect-error\r\n        icon: '<i class=\"fas fa-user-minus\"></i>',\r\n        //@ts-expect-error\r\n        condition: canApply,\r\n        //@ts-expect-error\r\n        callback: li => applyChatCardDamage(li, 1)\r\n    }, {\r\n        name: game.i18n.localize(\"ARd20.ChatContextHealing\"),\r\n        icon: '<i class=\"fas fa-user-plus\"></i>',\r\n        condition: canApply,\r\n        //@ts-expect-error\r\n        callback: li => applyChatCardDamage(li, -1)\r\n    }, {\r\n        name: game.i18n.localize(\"ARd20.ChatContextDoubleDamage\"),\r\n        icon: '<i class=\"fas fa-user-injured\"></i>',\r\n        condition: canApply,\r\n        //@ts-expect-error\r\n        callback: li => applyChatCardDamage(li, 2)\r\n    }, {\r\n        name: game.i18n.localize(\"ARd20.ChatContextHalfDamage\"),\r\n        icon: '<i class=\"fas fa-user-shield\"></i>',\r\n        condition: canApply,\r\n        //@ts-expect-error\r\n        callback: li => applyChatCardDamage(li, 0.5)\r\n    });\r\n    return options;\r\n};\r\n/* -------------------------------------------- */\r\n/**\r\n * Apply rolled dice damage to the token or tokens which are currently controlled.\r\n * This allows for damage to be scaled by a multiplier to account for healing, critical hits, or resistance\r\n *\r\n * @param {HTMLElement} li      The chat entry which contains the roll data\r\n * @param {Number} multiplier   A damage multiplier to apply to the rolled damage.\r\n * @return {Promise}\r\n */\r\nfunction applyChatCardDamage(li, multiplier) {\r\n    //@ts-expect-error\r\n    const message = game.messages.get(li.data(\"messageId\"));\r\n    const roll = message.roll;\r\n    return Promise.all(canvas.tokens.controlled.map(t => {\r\n        const a = t.actor;\r\n        //@ts-expect-error\r\n        return a.applyDamage(roll.total, multiplier);\r\n    }));\r\n}\r\n/* -------------------------------------------- */\r\n","<svelte:options accessors={true} />\r\n\r\n<script>\r\n  import { ApplicationShell } from \"@typhonjs-fvtt/runtime/svelte/component/core\";\r\n  import {setContext} from \"svelte\"\r\n  import {DocTemplate} from \"../../helpers/templates.js\"\r\n  export let elementRoot;\r\n  export let storeDoc;\r\n  setContext('DocumentSheetObject',storeDoc)\r\n  console.log('document type: ', $storeDoc.type)\r\n</script>\r\n\r\n<ApplicationShell bind:elementRoot>\r\n  <svelte:component this={DocTemplate.get($storeDoc)} />\r\n</ApplicationShell>\r\n","import { SvelteApplication } from \"@typhonjs-fvtt/runtime/svelte/application\";\r\nimport { TJSDocument } from \"@typhonjs-fvtt/runtime/svelte/store\";\r\nimport { SessionStorage } from \"@typhonjs-fvtt/runtime/svelte/store\";\r\nimport DocumentShell from \"./DocumentShell.svelte\";\r\nimport { CharacterAdvancement } from \"../../helpers/Character Advancement/characterAdvancement.js\";\r\nconst storage = new SessionStorage();\r\nexport class SvelteDocumentSheet extends SvelteApplication {\r\n  /**\r\n   * Document store that monitors updates to any assigned document.\r\n   *\r\n   * @type {TJSDocument<foundry.abstract.Document>}\r\n   */\r\n  #storeDoc = new TJSDocument(void 0, { delete: this.close.bind(this) });\r\n\r\n  /**\r\n   * Holds the document unsubscription function.\r\n   *\r\n   * @type {Function}\r\n   */\r\n  #storeUnsubscribe;\r\n\r\n  constructor(object) {\r\n    super(object);\r\n\r\n    /**\r\n     * @member {object} document - Adds accessors to SvelteReactive to get / set the document associated with\r\n     *                             Document.\r\n     *\r\n     * @memberof SvelteReactive#\r\n     */\r\n    Object.defineProperty(this.reactive, \"document\", {\r\n      get: () => this.#storeDoc.get(),\r\n      set: (document) => {\r\n        this.#storeDoc.set(document);\r\n      },\r\n    });\r\n    this.reactive.document = object;\r\n    // By doing the above you can now easily set a new document by `this.reactive.document = <A DOCUMENT>`\r\n  }\r\n\r\n  /**\r\n   * Default Application options\r\n   *\r\n   * @returns {object} options - Application options.\r\n   * @see https://foundryvtt.com/api/Application.html#options\r\n   */\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      title: \"No Document Assigned\",\r\n      width: 800,\r\n      height: 600,\r\n      resizable: true,\r\n      minimizable: true,\r\n      dragDrop: [{dragSelector: \".item-list .item\", dropSelector: null}],\r\n      svelte: {\r\n        class: DocumentShell,\r\n        target: document.body,\r\n\r\n        // You can assign a function that is invoked with MyItemApp instance as `this`.\r\n        props: function () {\r\n          return { storeDoc: this.#storeDoc };\r\n        },\r\n      },\r\n    });\r\n  }\r\n  _getHeaderButtons() {\r\n    const buttons = super._getHeaderButtons();\r\n    let sheetConfig = storage.getItem(\"sheetConfig\");\r\n    buttons.unshift({\r\n      class: \"configure-sheet\",\r\n      icon: \"fas fa-cog\",\r\n      title: \"open sheet configurator\",\r\n      onclick: (ev) => this._onCofigureSheet(ev),\r\n    });\r\n    const canConfigure = game.user.isGM || (this.reactive.document.isOwner && game.user.can(\"TOKEN_CONFIGURE\"));\r\n    if (this.reactive.document.documentName === \"Actor\") {\r\n      if (canConfigure) {\r\n        buttons.splice(1, 0, {\r\n          label: this.token ? \"Token\" : \"TOKEN.TitlePrototype\",\r\n          class: \"configure-token\",\r\n          icon: \"fas fa-user-circle\",\r\n          onclick: (ev) => this._onConfigureToken(ev),\r\n        });\r\n      }\r\n      buttons.unshift({\r\n        class: \"character-progress\",\r\n        title: \"Character Advancement\",\r\n        label: \"Character Advancement\",\r\n        icon: \"fa-solid fa-book-sparkles\",\r\n        onclick: async (ev) => await this._onCharacterAdvancement(ev),\r\n      });\r\n    }\r\n    return buttons;\r\n  }\r\n  _onDrop(event){\r\n    console.log(event, 'onDrop event')\r\n  }\r\n  _onCofigureSheet(event) {\r\n    if (event) event.preventDefault();\r\n    new DocumentSheetConfig(this.reactive.document, {\r\n      top: this.position.top + 40,\r\n      left: this.position.left + (this.position.width - SvelteDocumentSheet.defaultOptions.width) / 2,\r\n    }).render(true);\r\n  }\r\n  _onConfigureToken(event) {\r\n    if (event) event.preventDefault();\r\n    const actor = this.reactive.document;\r\n    const token = actor.isToken ? actor.token : actor.prototypeToken;\r\n    new CONFIG.Token.prototypeSheetClass(token, {\r\n      left: Math.max(this.position.left - 560 - 10, 10),\r\n      top: this.position.top,\r\n    }).render(true);\r\n  }\r\n  async _onCharacterAdvancement(event) {\r\n    if (event) event.preventDefault();\r\n    const actor = this.reactive.document;\r\n    async function createAditionalData() {\r\n      //functions to get lists of available features and lists\r\n      async function getPacks() {\r\n        let pack_list = []; // array of feats from Compendium\r\n        let pack_name = [];\r\n        for (const val of game.settings.get(\"ard20\", \"feat\").packs) {\r\n          if (game.packs.filter((pack) => pack.metadata.label === val.name).length !== 0) {\r\n            let feat_list = [];\r\n            feat_list.push(Array.from(game.packs.filter((pack) => pack.metadata.label === val.name && pack.documentName === \"Item\")[0].index));\r\n            feat_list = feat_list.flat();\r\n            for (const feat of feat_list) {\r\n              const new_key = game.packs.filter((pack) => pack.metadata.label === val.name)[0].metadata.package + \".\" + val.name;\r\n              const doc = await game.packs.get(new_key).getDocument(feat.id);\r\n              const item = doc.toObject();\r\n              item.system = foundry.utils.deepClone(doc.system);\r\n              pack_list.push(item);\r\n              pack_name.push(item.name);\r\n            }\r\n            pack_list = pack_list.flat();\r\n          }\r\n        }\r\n        return {\r\n          pack_list,\r\n          pack_name,\r\n        };\r\n      }\r\n      function getFolders() {\r\n        let folder_list = []; // array of feats from game folders\r\n        let folder_name = [];\r\n        for (let val of game.settings.get(\"ard20\", \"feat\").folders) {\r\n          if (game.folders.filter((folder) => folder.data.name === val.name).length !== 0) {\r\n            let feat_list = [];\r\n            feat_list.push(game.folders.filter((folder) => folder.data.name === val.name && folder.data.type === \"Item\")[0].contents);\r\n            feat_list = feat_list.flat();\r\n            for (let feat of feat_list) {\r\n              console.log(\"item added from folder \", feat);\r\n              const item = feat.toObject();\r\n              item.system = foundry.utils.deepClone(feat.system);\r\n              folder_list.push(item);\r\n              folder_name.push(item.name);\r\n            }\r\n            folder_list = folder_list.flat();\r\n          }\r\n        }\r\n        return {\r\n          folder_list,\r\n          folder_name,\r\n        };\r\n      }\r\n      let raceList = await getRacesList();\r\n      let featList = await getFeaturesList();\r\n      let name_array = [];\r\n\r\n      async function getRacesList() {\r\n        const pack = await getPacks();\r\n        const folder = getFolders();\r\n        const pack_list = pack.pack_list;\r\n        const pack_name = pack.pack_name;\r\n        const folder_list = folder.folder_list;\r\n        let race_pack_list = [];\r\n        let race_folder_list = [];\r\n        pack_list.forEach((item) => {\r\n          if (item.type === \"race\") {\r\n            let raceItem = { ...item, chosen: false };\r\n            race_pack_list.push(raceItem);\r\n          }\r\n        });\r\n        folder_list.forEach((item) => {\r\n          if (item.type === \"race\") {\r\n            let raceItem = { ...item, chosen: false };\r\n            race_folder_list.push(raceItem);\r\n          }\r\n        });\r\n        return race_pack_list.concat(race_folder_list.filter((item) => !pack_name.includes(item.name)));\r\n      }\r\n      async function getFeaturesList() {\r\n        const pack = await getPacks();\r\n        const pack_list = pack.pack_list;\r\n        const pack_name = pack.pack_name;\r\n        const folder = getFolders();\r\n        const folder_list = folder.folder_list;\r\n        let feat_pack_list = [];\r\n        pack_list.forEach((item) => {\r\n          if (item.type === \"feature\") {\r\n            let FeatureItem = { ...item };\r\n            feat_pack_list.push(FeatureItem);\r\n          }\r\n        });\r\n        let feat_folder_list = [];\r\n        folder_list.forEach((item) => {\r\n          if (item.type === \"feature\") {\r\n            let FeatureItem = { ...item };\r\n            feat_folder_list.push(FeatureItem);\r\n          }\r\n        });\r\n        let temp_feat_list = feat_pack_list.concat(feat_folder_list.filter((item) => !pack_name.includes(item.name)));\r\n        let learnedFeatures = [];\r\n        actor.itemTypes.feature.forEach((item) => {\r\n          if (item.data.type === \"feature\") {\r\n            let FeatureItem = { ...item.data };\r\n            learnedFeatures.push(FeatureItem);\r\n          }\r\n        });\r\n        return { temp_feat_list, learnedFeatures };\r\n      }\r\n      for (let i of featList.learnedFeatures) {\r\n        name_array.push(i.name);\r\n      }\r\n      console.log(featList.temp_feat_list, \"featList.temp_feat_list\");\r\n      featList.temp_feat_list.forEach((v, k) => {\r\n        console.log(k, v);\r\n        if (name_array.includes(v.name)) {\r\n          console.log(\"this item is already learned\", featList.temp_feat_list[k]);\r\n          featList.temp_feat_list[k] = foundry.utils.deepClone(featList.learnedFeatures.filter((item) => item.name === v.name)[0]);\r\n        }\r\n      });\r\n      featList.temp_feat_list = featList.temp_feat_list.filter((item) => {\r\n        if (item.type === \"feature\") return !name_array.includes(item.name) || item.data.level.current !== item.data.level.max;\r\n      });\r\n      const obj = {\r\n        races: { list: raceList, chosen: \"\" },\r\n        count: {\r\n          //TODO: rework this for future where you can have more/less ranks\r\n          skills: { 0: 0, 1: 0, 2: 0, 3: 0, 4: 0 },\r\n          feats: { mar: 0, mag: 0, div: 0, pri: 0, psy: 0 },\r\n        },\r\n        feats: {\r\n          learned: featList.learnedFeatures,\r\n          awail: featList.temp_feat_list,\r\n        },\r\n        allow: {\r\n          attribute: duplicate(actor.system.isReady),\r\n          race: duplicate(actor.system.isReady),\r\n          final: duplicate(actor.system.isReady),\r\n        },\r\n      };\r\n      return obj;\r\n    }\r\n    const document = {\r\n      id: actor.id,\r\n      aditionalData: await createAditionalData(),\r\n    };\r\n  new CharacterAdvancement(document).render(true, { focus: true });\r\n  }\r\n  async close(options = {}) {\r\n    console.log(\"close \", options);\r\n    await super.close(options);\r\n\r\n    if (this.#storeUnsubscribe) {\r\n      this.#storeUnsubscribe();\r\n      this.#storeUnsubscribe = void 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles any changes to document.\r\n   *\r\n   * @param {foundry.abstract.Document}  doc -\r\n   *\r\n   * @param {object}                     options -\r\n   */\r\n  async #handleDocUpdate(doc, options) {\r\n    const { action, data, documentType } = options;\r\n\r\n    // I need to add a 'subscribe' action to TJSDocument so must check void.\r\n    if ((action === void 0 || action === \"update\") && doc) {\r\n      this.reactive.title = doc?.name ?? \"No Document Assigned\";\r\n    }\r\n  }\r\n\r\n  render(force = false, options = {}) {\r\n    console.log(this, force, options, \"render: this, force, options\");\r\n    if (!this.#storeUnsubscribe) {\r\n      this.#storeUnsubscribe = this.#storeDoc.subscribe(this.#handleDocUpdate.bind(this));\r\n    }\r\n    super.render(force, options);\r\n    return this;\r\n  }\r\n}\r\n\r\n","// Import document classes.\r\nimport { ARd20Actor } from \"./documents/actor.js\";\r\nimport { ARd20Item } from \"./documents/item.js\";\r\n// Import sheet classes.\r\nimport { ARd20ActorSheet } from \"./sheets/legacy/actor-sheet.js\";\r\nimport { ARd20ItemSheet } from \"./sheets/legacy/item-sheet.js\";\r\n// Import helper/utility classes and constants.\r\nimport { preloadHandlebarsTemplates, setSvelteComponents } from \"./helpers/templates.js\";\r\nimport { ARd20 } from \"./helpers/config.js\";\r\nimport ARd20SocketHandler from \"./helpers/socket.js\";\r\nimport { registerSystemSettings } from \"./settings/settings.js\";\r\nimport * as dice from \"./dice/dice.js\";\r\nimport * as chat from \"./helpers/chat.js\";\r\nimport {SvelteDocumentSheet} from \"../built/sheets/svelte/documentSheet.js\"\r\n\r\n/* -------------------------------------------- */\r\n/*  Init Hook                                   */\r\n/* -------------------------------------------- */\r\nexport function obj_entries(obj) {\r\n  return Object.entries(obj);\r\n}\r\nexport function arr_entries(arr) {\r\n  return Object.entries(arr);\r\n}\r\nexport function getValues(SourceObject, key) {\r\n  return SourceObject[key];\r\n}\r\nexport function obj_keys(obj) {\r\n  return Object.keys(obj);\r\n}\r\nexport function array_keys(obj) {\r\n  return Object.keys(obj);\r\n}\r\nHooks.once(\"init\", async function () {\r\n  // Add utility classes to the global game object so that they're more easily\r\n  // accessible in global contexts.\r\n  if (game instanceof Game) {\r\n    game.ard20 = {\r\n      documents: {\r\n        ARd20Actor,\r\n        ARd20Item,\r\n      },\r\n      rollItemMacro,\r\n      config: ARd20,\r\n      dice: dice,\r\n    };\r\n    // Add custom constants for configuration.\r\n    CONFIG.ARd20 = ARd20;\r\n    //@ts-expect-error\r\n    CONFIG.Dice.DamageRoll = dice.DamageRoll;\r\n    //@ts-expect-error\r\n    CONFIG.Dice.D20Roll = dice.D20Roll;\r\n    CONFIG.Dice.rolls.push(dice.D20Roll);\r\n    CONFIG.Dice.rolls.push(dice.DamageRoll);\r\n    game.socket.on(\"system.ard20\", (data) => {\r\n      if (data.operation === \"updateActorData\") ARd20SocketHandler.updateActorData(data);\r\n    });\r\n\r\n    /**\r\n     * Set an initiative formula for the system\r\n     * @type {String}\r\n     */\r\n    CONFIG.Combat.initiative = {\r\n      formula: \"1d20 + @abilities.dex.mod\",\r\n      decimals: 2,\r\n    };\r\n    // Define custom Document classes\r\n    CONFIG.Actor.documentClass = ARd20Actor;\r\n    CONFIG.Item.documentClass = ARd20Item;\r\n    // Register sheet application classes\r\n    Actors.unregisterSheet(\"core\", ActorSheet);\r\n    Actors.registerSheet(\"ard20\", ARd20ActorSheet, { makeDefault: false });\r\n    Actors.registerSheet(\"ard20\", SvelteDocumentSheet, { makeDefault: true });\r\n    Items.unregisterSheet(\"core\", ItemSheet);\r\n    //@ts-expect-error\r\n    Items.registerSheet(\"ard20\", ARd20ItemSheet, { makeDefault: false });\r\n    Items.registerSheet(\"ard20\", SvelteDocumentSheet, { makeDefault: true });\r\n    registerSystemSettings();\r\n\r\n    //register Svelte components for Actor/Item types\r\n    setSvelteComponents()\r\n\r\n    // Preload Handlebars templates.\r\n    return preloadHandlebarsTemplates();\r\n  } else {\r\n    throw new Error(\"game not initialized yet!\");\r\n  }\r\n});\r\n/* -------------------------------------------- */\r\n/*  Handlebars Helpers                          */\r\n/* -------------------------------------------- */\r\n// If you need to add Handlebars helpers, here are a few useful examples:\r\nHandlebars.registerHelper(\"concat\", function () {\r\n  var outStr = \"\";\r\n  for (var arg in arguments) {\r\n    if (typeof arguments[arg] != \"object\") {\r\n      outStr += arguments[arg];\r\n    }\r\n  }\r\n  return outStr;\r\n});\r\nHandlebars.registerHelper(\"toLowerCase\", function (str) {\r\n  return str.toLowerCase();\r\n});\r\nHandlebars.registerHelper(\"add\", function (value1, value2) {\r\n  return Number(value1) + Number(value2);\r\n});\r\n/* -------------------------------------------- */\r\n/*  Ready Hook                                  */\r\n/* -------------------------------------------- */\r\nHooks.once(\"ready\", async function () {\r\n  //check if typhonjs module is installed and activated\r\n  if (!game.modules.get(\"typhonjs\")) {\r\n    ui.notifications.error(\"typhonjs module is not install, please install it!\");\r\n  } else if (!game.modules.get(\"typhonjs\").active) {\r\n    ui.notifications.error(\"typhonjs module is not active!\");\r\n    const moduleSettings = game.settings.get('core','moduleConfiguration')\r\n    moduleSettings[\"typhonjs\"] = true\r\n    await game.settings.set('core','moduleConfiguration',moduleSettings)\r\n  }\r\n  // Wait to register hotbar drop hook on ready so that modules could register earlier if they want to\r\n  Hooks.on(\"hotbarDrop\", (bar, data, slot) => createItemMacro(data, slot));\r\n});\r\n/* -------------------------------------------- */\r\n/*  Hotbar Macros                               */\r\n/* -------------------------------------------- */\r\n/**\r\n * Create a Macro from an Item drop.\r\n * Get an existing item macro if one exists, otherwise create a new one.\r\n * @param {Object} data     The dropped data\r\n * @param {number} slot     The hotbar slot to use\r\n * @returns {Promise}\r\n */\r\nasync function createItemMacro(data, slot) {\r\n  if (game instanceof Game) {\r\n    //@ts-expect-error\r\n    if (data.type !== \"Item\") return;\r\n    if (!(\"data\" in data) && ui.notifications instanceof Notifications) return ui.notifications.warn(\"You can only create macro buttons for owned Items\");\r\n    //@ts-expect-error\r\n    const item = data.data;\r\n    // Create the macro command\r\n    const command = `game.ard20.rollItemMacro(\"${item.name}\");`;\r\n    let macroList = game.macros.contents.filter((m) => m.name === item.name && m?.command === command);\r\n    let macroCheck = macroList.length !== 0 ? macroList[0] : null;\r\n    if (macroCheck !== null) {\r\n      let macro = await Macro.create({\r\n        name: item.name,\r\n        type: \"script\",\r\n        img: item.img,\r\n        command: command,\r\n        flags: { \"ard20.itemMacro\": true },\r\n      });\r\n      if (macro instanceof Macro) {\r\n        game.user?.assignHotbarMacro(macro, slot);\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n/**\r\n * Create a Macro from an Item drop.\r\n * Get an existing item macro if one exists, otherwise create a new one.\r\n * @param {string} itemName\r\n * @return {Promise}\r\n */\r\nexport function rollItemMacro(itemName) {\r\n  if (game instanceof Game) {\r\n    const speaker = ChatMessage.getSpeaker();\r\n    let actor;\r\n    if (speaker.token) actor = game.actors.tokens[speaker.token];\r\n    if (!actor && typeof speaker.actor === \"string\") actor = game.actors.get(speaker.actor);\r\n    const item = actor ? actor.items.find((i) => i.name === itemName) : null;\r\n    if (!item) return ui.notifications.warn(`Your controlled Actor does not have an item named ${itemName}`);\r\n    // Trigger the item roll\r\n    //@ts-expect-error\r\n    return item.roll();\r\n  }\r\n}\r\nHooks.on(\"renderChatMessage\", (app, html, data) => {\r\n  // Display action buttons\r\n  chat.displayChatActionButtons(app, html, data);\r\n  // Highlight critical success or failure die\r\n  chat.highlightCriticalSuccessFailure(app, html, data);\r\n  // Optionally collapse the content\r\n});\r\nHooks.on(\"getChatLogEntryContext\", chat.addChatMessageContextOptions);\r\n//@ts-expect-error\r\nHooks.on(\"renderChatLog\", (app, html, data) => ARd20Item.chatListeners(html));\r\n//@ts-expect-error\r\nHooks.on(\"renderChatPopout\", (app, html, data) => ARd20Item.chatListeners(html));\r\n"],"names":["D20Roll","Roll","constructor","formula","data","options","configureModifiers","hasAdvantage","advantageMode","ADV_MODE","ADVANTAGE","hasDisadvantage","DISADVANTAGE","d20","terms","mainDice","game","settings","get","modifiers","number","push","advantage","disadvantage","critical","fumble","targetValue","target","_formula","getFormula","toMessage","messageData","_evaluated","evaluate","async","flavor","i18n","localize","rollMode","configureDialog","title","defaultRollMode","canMult","defaultAction","NORMAL","mRoll","chooseModifier","defaultAttribute","template","content","renderTemplate","EVALUATION_TEMPLATE","rollModes","CONFIG","Dice","attributes","ARd20","Attributes","defaultButton","Promise","resolve","Dialog","buttons","label","callback","html","_onDialogSubmit","normal","default","close","render","form","querySelector","console","log","bonus","value","OperatorTerm","operator","concat","attribute","abl","findSplice","t","term","NumericTerm","mod","checked","DamageRoll","undefined","configureDamage","isCritical","critBonus","i","entries","damageType","DiceTerm","baseNumber","faces","oper","num","splice","cb","criticalBonusDice","alter","multiplyNumeric","criticalMultiplier","damType","defaultCritical","allowCritical","condition","forEach","part","ind","fromData","roll","simplifyRollFormula","constantFirst","some","_isUnsupportedTerm","rollableTerms","constantTerms","operators","constantFormula","rollableFormula","constantPart","safeEval","err","warn","parts","filterJoin","diceTerm","includes","d20Roll","fastForward","event","dialogOptions","chatMessage","speaker","mainDie","Die","isFF","_determineAdvantageMode","join","configured","defaultAbility","item","ability","shiftKey","altKey","ctrlKey","metaKey","damageRoll","_determineCriticalMode","ARd20Actor","Actor","prepareData","items","prepareFinalAttributes","prepareDerivedData","actorData","system","_prepareCharacterData","_prepareNpcData","type","advancement","def_stats","defences","stats","def_dam","damage","proficiencies","mobility","itemTypes","armor","equipped","key","obj_keys","phys","ph","res","immune","parseInt","mag","mg","Object","total","Math","floor","dexMod","dex","min","levels","CHARACTER_EXP_LEVELS","xp","used","level","level_min","bar_max","bar_min","reflex","int","fortitude","str","con","will","wis","cha","dr","obj_entries","DamageSubTypes","max","isNaN","name","profLevelSetting","maxProfLevel","length","skill","skills","Skills","rankName","weapon","map","setting","speed","race","cr","getRollData","rollAttributeTest","attributeId","attr","rollData","foundry","utils","mergeObject","format","ChatMessage","getSpeaker","actor","rollSkill","skillId","skl","getValues","proficiency","ARd20Item","Item","itemData","labels","_prepareSpellData","_prepareWeaponData","_prepareFeatureData","_prepareRaceData","_prepareArmorData","hasAttack","_prepareAttack","hasDamage","_prepareDamage","isOwned","flags","_setTypeAndSubtype","common","sub_type_array","filter","prof","core","sourceId","id","exec","sub_type","Rank","source","Source","has","initial","current","n","k","round","Number","abs","toPrecision","sign","basicCost","AdvancedCost","req","values","pass","Array","from","v","logic","HeavyPoints","slot","abil","getProperty","prof_bonus","pr","levelName","atkMod","attack","prop","baseDamage","subPart","subKey","DamageTypes","deepClone","damageDie","createMessage","iData","targets","user","displayCard","chatListeners","on","_onChatCardAction","bind","_onChatCardToggleContent","_rollDamage","trigger","preventDefault","element","closest","classList","toggle","stopImmediatePropagation","button","currentTarget","card","messageId","dataset","message","messages","action","targetUuid","targetId","isTargetted","isGM","isAuthor","_getChatCardActor","storedData","getFlag","parent","itemId","ui","notifications","error","spellLevel","dam","rollDamage","versatile","$","find","replaceWith","update","outerHTML","rollFormula","_getChatCardTargets","token","scene","canvas","rollAbilitySave","rollToolCheck","ard20","AbilityTemplate","fromItem","drawPreview","disabled","header","style","display","_applyDamage","tData","tHealth","tActor","tokenId","obj","socket","emit","operation","fromUuid","health","damHTML","append","remove","actorId","actors","tokens","controlled","character","getActiveTokens","Boolean","atk","dc","atkHTML","dmgHTML","result","hit","dmg","dieResultCss","def","atkRoll","rollAttack","dmgRoll","keys","reroll","size","templateData","uuid","getChatData","owner","isOwner","chatData","_id","CONST","CHAT_MESSAGE_TYPES","OTHER","chatFlavor","applyRollMode","create","htmlOptions","getAttackToHit","rollConfig","width","d","c","a","b","altkey","attackBonus","toHit","test","onManageActiveEffect","li","effect","effectId","effects","createEmbeddedDocuments","icon","origin","effectType","sheet","delete","prepareActiveEffectCategories","categories","temporary","passive","inactive","e","_getSourceName","isTemporary","create_if_block_1","create_if_block","activeTab","AttributeComp","CharacterAdvancement","TJSDialog","document","modal","draggable","class","CharacterAdvancementShell","props","height","ARd20ActorSheet","ActorSheet","defaultOptions","classes","tabs","navSelector","contentSelector","getData","context","config","_prepareItems","gear","features","weapons","spells","img","DEFAULT_TOKEN","isActive","toggleClass","toggleTitle","activateListeners","select2","click","_onToggleItem","ev","parents","isEditable","_onItemCreate","slideUp","_onRollAttributeTest","_onRollSkillCheck","_OnAdvanceMenu","_onItemRoll","handler","_onDragStart","each","contains","setAttribute","addEventListener","app","object","createAditionalData","getPacks","pack_list","pack_name","val","packs","pack","metadata","feat_list","documentName","index","flat","feat","new_key","package","doc","getDocument","toObject","getFolders","folder_list","folder_name","folders","folder","contents","raceList","getRacesList","featList","getFeaturesList","name_array","race_pack_list","race_folder_list","raceItem","chosen","feat_pack_list","FeatureItem","feat_folder_list","temp_feat_list","learnedFeatures","feature","_objectSpread","races","list","count","feats","mar","div","pri","psy","learned","awail","allow","duplicate","isReady","final","aditionalData","itemid","parentElement","capitalize","_onRoll","rollType","_onDrop","JSON","parse","dataTransfer","allowed","Hooks","call","_onDropActiveEffect","_onDropActor","_onDropItem","_onDropFolder","FeatRequirements","FormApplication","InitializeData","reqValues","reqLogic","formApp","subtype_list","input","inputElement","previousElement","maxLevel","getFeats","arr","rank","assign","type_list","indexOf","featAwail","featCurrent","entity","_onAdd","_Delete","sub_list","defaultValue","fill","_onChangeInput","order","expandObject","_getSubmitData","_updateObject","formData","ARd20ItemSheet","ItemSheet","path","updateData","fd","FormDataExtended","editors","sub","flattenObject","edit","formatSelection","state","text","optgroup","subtype","match","url","formatResult","dropdownAutoWidth","templateSelection","templateResult","escapeMarkup","m","evt","params","originalEvent","stopPropagation","_FeatReq","_onDamageControl","partsPath","damTypePath","damagePart","_onSubmit","args","_tabs","active","position","preloadHandlebarsTemplates","loadTemplates","DocTemplate","component","EmptySheet","getByType","set","Map","setSvelteComponents","ItemItemSheet","AttributeAbbreviations","SpellSchool","abj","enc","evo","ill","nec","trs","acr","ani","arc","ath","dec","his","ins","itm","inv","med","nat","prc","prf","per","rel","slt","ste","sur","WeaponProp","aff","awk","bra","dis","dou","ent","fin","fir","hea","lau","lig","lun","mel","one","pen","ran","rea","sta","thr","tri","two","ver","WeaponType","amb","axe","blu","bow","sli","cbl","cro","dbl","fla","whi","ham","pic","pol","spe","AbilXP","SkillXP","acid","bludgeoning","cold","fire","force","lightning","necr","piercing","poison","slashing","radiant","psychic","ResistTypes","vul","imm","HPDice","light","chest","gloves","boots","pants","head","medium","heavy","RollResult","ARd20SocketHandler","updateActorData","isResponsibleGM","users","other","AdvRateSettingsShim","AdvancementRateFormApp","focus","SvelteApplication","minimizable","resizable","svelte","AdvancementRateShell","body","FeatSettingsShim","FeatSetting","FeatSettingShell","ProfSettingsShim","ProfSetting","ProfSettingShell","ProfLevelSettingShim","ProfLevelSetting","ProfLevelSettingShell","registerSystemSettings","register","scope","tool","onChange","registerMenu","restricted","variables","skillsCount","shortName","longName","featuresCount","formulas","choices","String","hint","ProfFormApp","submitOnChange","closeOnSubmit","sheetData","dirty","fieldName","propertyName","split","highlightCriticalSuccessFailure","isRoll","isContentVisible","dice","isD20","isModifiedRoll","results","marginSuccess","marginFailure","addClass","displayChatActionButtons","chatCard","author","btn","addChatMessageContextOptions","canApply","applyChatCardDamage","multiplier","all","applyDamage","storage","SessionStorage","SvelteDocumentSheet","TJSDocument","defineProperty","reactive","dragDrop","dragSelector","dropSelector","DocumentShell","storeDoc","_getHeaderButtons","getItem","unshift","onclick","_onCofigureSheet","canConfigure","can","_onConfigureToken","_onCharacterAdvancement","DocumentSheetConfig","top","left","isToken","prototypeToken","Token","prototypeSheetClass","subscribe","documentType","arr_entries","SourceObject","array_keys","once","Game","documents","rollItemMacro","rolls","Combat","initiative","decimals","documentClass","Actors","unregisterSheet","registerSheet","makeDefault","Items","Error","Handlebars","registerHelper","outStr","arg","arguments","toLowerCase","value1","value2","modules","moduleSettings","bar","createItemMacro","Notifications","command","macroList","macros","macroCheck","macro","Macro","assignHotbarMacro","itemName","chat"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMA,OAAN,SAAsBC,IAAtB,CAA2B;AACxCC,EAAAA,WAAW,CAACC,OAAD,EAAUC,IAAV,EAAgBC,OAAO,GAAG,EAA1B,EAA8B;AACvC,IAAA,KAAA,CAAMF,OAAN,EAAeC,IAAf,EAAqBC,OAArB,CAAA,CAAA;AACA;AACJ;AACA;;AACI,IAAA,IAAA,CAAKC,kBAAL,EAAA,CAAA;AACD,GAAA;AACD;;AACA;AACF;AACA;AACA;;;AACkB,EAAA,IAAZC,YAAY,GAAG;AACjB;AACA,IAAO,OAAA,IAAA,CAAKF,OAAL,CAAaG,aAAb,KAA+BR,OAAO,CAACS,QAAR,CAAiBC,SAAvD,CAAA;AACD,GAAA;AACD;AACF;AACA;AACA;;;AACqB,EAAA,IAAfC,eAAe,GAAG;AACpB;AACA,IAAO,OAAA,IAAA,CAAKN,OAAL,CAAaG,aAAb,KAA+BR,OAAO,CAACS,QAAR,CAAiBG,YAAvD,CAAA;AACD,GAAA;AACD;;AACA;;AACA;;AACA;AACF;AACA;AACA;;;AACEN,EAAAA,kBAAkB,GAAG;AACnB,IAAA,MAAMO,GAAG,GAAG,IAAA,CAAKC,KAAL,CAAW,CAAX,CAAZ,CAAA;AACA,IAAA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,OAAlB,EAA2B,cAA3B,CAAjB,CAFmB;;AAInBL,IAAAA,GAAG,CAACM,SAAJ,GAAgB,EAAhB,CAJmB;;AAMnB,IAAI,IAAA,IAAA,CAAKZ,YAAT,EAAuB;AACrB;AACAM,MAAAA,GAAG,CAACO,MAAJ,GAAaL,QAAQ,CAAC,CAAD,CAAR,GAAc,CAA3B,CAFqB;;AAIrBF,MAAAA,GAAG,CAACM,SAAJ,CAAcE,IAAd,CAAoB,CAAA,EAAA,EAAIR,GAAG,CAACO,MAAJ,GAAa,CAAE,CAAA,CAAvC,EAJqB;;AAMrBP,MAAAA,GAAG,CAACR,OAAJ,CAAYiB,SAAZ,GAAwB,IAAxB,CAAA;AACD,KAPD,MAOO,IAAI,IAAKX,CAAAA,eAAT,EAA0B;AAC/B;AACAE,MAAAA,GAAG,CAACO,MAAJ,GAAaL,QAAQ,CAAC,CAAD,CAAR,GAAc,CAA3B,CAF+B;;AAI/BF,MAAAA,GAAG,CAACM,SAAJ,CAAcE,IAAd,CAAoB,CAAA,EAAA,EAAIR,GAAG,CAACO,MAAJ,GAAa,CAAE,CAAA,CAAvC,EAJ+B;;AAM/BP,MAAAA,GAAG,CAACR,OAAJ,CAAYkB,YAAZ,GAA2B,IAA3B,CAN+B;AAQhC,KARM,MAQAV,GAAG,CAACO,MAAJ,GAAaL,QAAQ,CAAC,CAAD,CAAR,GAAc,CAA3B,CArBY;AAuBnB;;;AACA,IAAA,IAAI,KAAKV,OAAL,CAAamB,QAAjB,EAA2BX,GAAG,CAACR,OAAJ,CAAYmB,QAAZ,GAAuB,IAAKnB,CAAAA,OAAL,CAAamB,QAApC,CAxBR;;AA0BnB,IAAA,IAAI,KAAKnB,OAAL,CAAaoB,MAAjB,EAAyBZ,GAAG,CAACR,OAAJ,CAAYoB,MAAZ,GAAqB,IAAKpB,CAAAA,OAAL,CAAaoB,MAAlC,CA1BN;;AA4BnB,IAAA,IAAI,KAAKpB,OAAL,CAAaqB,WAAjB,EAA8Bb,GAAG,CAACR,OAAJ,CAAYsB,MAAZ,GAAqB,IAAKtB,CAAAA,OAAL,CAAaqB,WAAlC,CA5BX;AA8BnB;;AACA,IAAKE,IAAAA,CAAAA,QAAL,GAAgB,IAAK1B,CAAAA,WAAL,CAAiB2B,UAAjB,CAA4B,IAAKf,CAAAA,KAAjC,CAAhB,CAAA;AACD,GAAA;AACD;;AACA;;;AACe,EAATgB,MAAAA,SAAS,CAACC,WAAW,GAAG,EAAf,EAAmB1B,OAAO,GAAG,EAA7B,EAAiC;AAAA,IAAA,IAAA,iBAAA,CAAA;;AAC9C;AACA,IAAA,IAAI,CAAC,IAAK2B,CAAAA,UAAV,EAAsB,MAAM,IAAA,CAAKC,QAAL,CAAc;AAAEC,MAAAA,KAAK,EAAE,IAAA;AAAT,KAAd,CAAN,CAFwB;AAI9C;;AACAH,IAAAA,WAAW,CAACI,MAAZ,GAAqBJ,WAAW,CAACI,MAAZ,IAAsB,IAAK9B,CAAAA,OAAL,CAAa8B,MAAxD,CAL8C;;AAO9C,IAAA,IAAI,KAAK5B,YAAT,EAAuBwB,WAAW,CAACI,MAAZ,IAAuB,CAAInB,EAAAA,EAAAA,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB,iBAAnB,CAAsC,CAAA,CAAA,CAAjE,CAAvB;AAAA,SAEK,IAAI,IAAK1B,CAAAA,eAAT,EAA0BoB,WAAW,CAACI,MAAZ,IAAuB,CAAA,EAAA,EAAInB,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB,oBAAnB,CAAyC,CAAA,CAAA,CAApE,CATe;AAW9C;;AACAhC,IAAAA,OAAO,CAACiC,QAAR,GAAmBjC,CAAAA,iBAAAA,GAAAA,OAAO,CAACiC,QAA3B,MAAuC,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,iBAAA,GAAA,IAAA,CAAKjC,OAAL,CAAaiC,QAApD,CAAA;AACA,IAAA,OAAO,MAAMR,SAAN,CAAgBC,WAAhB,EAA6B1B,OAA7B,CAAP,CAAA;AACD,GAAA;AACD;;AACA;;AACA;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;;;AACqB,EAAA,MAAfkC,eAAe,CACnB;AACEC,IAAAA,KADF;AAEEC,IAAAA,eAFF;AAGEC,IAAAA,OAHF;AAIEC,IAAAA,aAAa,GAAG3C,OAAO,CAACS,QAAR,CAAiBmC,MAJnC;AAKEC,IAAAA,KALF;AAMEC,IAAAA,cAAc,GAAG,KANnB;AAOEC,IAAAA,gBAPF;AAQEC,IAAAA,QAAAA;AARF,GAAA,GASI,EAVe,EAWnB3C,OAAO,GAAG,EAXS,EAYnB;AACA;AACA;AACA,IAAA,MAAM4C,OAAO,GAAG,MAAMC,cAAc,CAACF,QAAD,KAAA,IAAA,IAACA,QAAD,KAAA,KAAA,CAAA,GAACA,QAAD,GAAa,IAAA,CAAK9C,WAAL,CAAiBiD,mBAA9B,EAAmD;AACrFhD,MAAAA,OAAO,EAAG,CAAE,EAAA,IAAA,CAAKA,OAAQ,CAD4D,SAAA,CAAA;AAErF;AACAsC,MAAAA,eAHqF;AAIrFW,MAAAA,SAAS,EAAEC,MAAM,CAACC,IAAP,CAAYF,SAJ8D;AAKrFN,MAAAA,cALqF;AAMrFC,MAAAA,gBANqF;AAOrFQ,MAAAA,UAAU,EAAEF,MAAM,CAACG,KAAP,CAAaC,UAP4D;AAQrF;AACAf,MAAAA,OATqF;AAUrFG,MAAAA,KAAAA;AAVqF,KAAnD,CAApC,CAAA;AAYA,IAAIa,IAAAA,aAAa,GAAG,QAApB,CAAA;;AACA,IAAA,QAAQf,aAAR;AACE,MAAA,KAAK3C,OAAO,CAACS,QAAR,CAAiBC,SAAtB;AACEgD,QAAAA,aAAa,GAAG,WAAhB,CAAA;AACA,QAAA,MAAA;;AACF,MAAA,KAAK1D,OAAO,CAACS,QAAR,CAAiBG,YAAtB;AACE8C,QAAAA,aAAa,GAAG,cAAhB,CAAA;AACA,QAAA,MAAA;AANJ,KAhBA;;;AAyBA,IAAA,OAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9B,MAAA,IAAIC,MAAJ,CACE;AACE;AACArB,QAAAA,KAFF;AAGES,QAAAA,OAHF;AAIEa,QAAAA,OAAO,EAAE;AACPxC,UAAAA,SAAS,EAAE;AACTyC,YAAAA,KAAK,EAAE/C,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB,iBAAnB,CADE;AAET2B,YAAAA,QAAQ,EAAGC,IAAD,IAAUL,OAAO,CAAC,IAAKM,CAAAA,eAAL,CAAqBD,IAArB,EAA2BjE,OAAO,CAACS,QAAR,CAAiBC,SAA5C,CAAD,CAAA;AAFlB,WADJ;AAKPyD,UAAAA,MAAM,EAAE;AACNJ,YAAAA,KAAK,EAAE/C,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB,cAAnB,CADD;AAEN2B,YAAAA,QAAQ,EAAGC,IAAD,IAAUL,OAAO,CAAC,IAAKM,CAAAA,eAAL,CAAqBD,IAArB,EAA2BjE,OAAO,CAACS,QAAR,CAAiBmC,MAA5C,CAAD,CAAA;AAFrB,WALD;AASPrB,UAAAA,YAAY,EAAE;AACZwC,YAAAA,KAAK,EAAE/C,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB,oBAAnB,CADK;AAEZ2B,YAAAA,QAAQ,EAAGC,IAAD,IAAUL,OAAO,CAAC,IAAKM,CAAAA,eAAL,CAAqBD,IAArB,EAA2BjE,OAAO,CAACS,QAAR,CAAiBG,YAA5C,CAAD,CAAA;AAFf,WAAA;AATP,SAJX;AAkBEwD,QAAAA,OAAO,EAAEV,aAlBX;AAmBEW,QAAAA,KAAK,EAAE,MAAMT,OAAO,CAAC,IAAD,CAAA;AAnBtB,OADF,EAsBEvD,OAtBF,CAuBEiE,CAAAA,MAvBF,CAuBS,IAvBT,CAAA,CAAA;AAwBD,KAzBM,CAAP,CAAA;AA0BD,GAAA;AACD;;AACA;AACF;AACA;AACA;AACA;AACA;AACE;;;AACAJ,EAAAA,eAAe,CAACD,IAAD,EAAOzD,aAAP,EAAsB;AAAA,IAAA,IAAA,eAAA,EAAA,WAAA,CAAA;;AACnC,IAAM+D,MAAAA,IAAI,GAAGN,IAAI,CAAC,CAAD,CAAJ,CAAQO,aAAR,CAAsB,MAAtB,CAAb,CAAA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,CAAA,CAAA;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkB,OAAlB,CAAA,CAAA;;AACA,IAAA,IAAIA,IAAI,CAACI,KAAL,CAAWC,KAAf,EAAsB;AACpB,MAAA,MAAMD,KAAK,GAAG,IAAI1E,IAAJ,CAASsE,IAAI,CAACI,KAAL,CAAWC,KAApB,EAA2B,IAAA,CAAKxE,IAAhC,CAAd,CAAA;AACA,MAAA,IAAI,EAAEuE,KAAK,CAAC7D,KAAN,CAAY,CAAZ,CAA0B+D,YAAAA,YAA5B,CAAJ,EAA+C,KAAK/D,KAAL,CAAWO,IAAX,CAAgB,IAAIwD,YAAJ,CAAiB;AAAEC,QAAAA,QAAQ,EAAE,GAAA;AAAZ,OAAjB,CAAhB,CAAA,CAAA;AAC/C,MAAKhE,IAAAA,CAAAA,KAAL,GAAa,IAAA,CAAKA,KAAL,CAAWiE,MAAX,CAAkBJ,KAAK,CAAC7D,KAAxB,CAAb,CAAA;AACD,KARkC;;;AAUnC,IAAA,IAAA,CAAA,eAAA,GAAIyD,IAAI,CAACS,SAAT,MAAI,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,IAAA,eAAA,CAAgBJ,KAApB,EAA2B;AACzB;AACA,MAAA,MAAMK,GAAG,GAAG,IAAK7E,CAAAA,IAAL,CAAUmD,UAAV,CAAqBgB,IAAI,CAACS,SAAL,CAAeJ,KAApC,CAAZ,CAAA;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ,EAHyB;;AAKzB,MAAA,IAAA,CAAKnE,KAAL,CAAWoE,UAAX,CAAuBC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAW,MAAxC,EAAgD,IAAIC,WAAJ,CAAgB;AAAEjE,QAAAA,MAAM,EAAE6D,GAAG,CAACK,GAAAA;AAAd,OAAhB,CAAhD,EALyB;;AAOzB,MAAKjF,IAAAA,CAAAA,OAAL,CAAa8B,MAAb,IAAwB,CAAA,EAAA,EAAInB,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmBgB,MAAM,CAACG,KAAP,CAAaC,UAAb,CAAwBc,IAAI,CAACS,SAAL,CAAeJ,KAAvC,CAAnB,CAAkE,CAA9F,CAAA,CAAA,CAAA;AACD,KAAA;AACD;AACJ;AACA;AACA;AACA;AACA;AACI;AACA;;;AACA,IAAA,IAAA,CAAKvE,OAAL,CAAaG,aAAb,GAA6BA,aAA7B,CA3BmC;;AA6BnC,IAAKH,IAAAA,CAAAA,OAAL,CAAaiC,QAAb,GAAwBiC,IAAI,CAACjC,QAAL,CAAcsC,KAAtC,CA7BmC;;AA+BnC,IAAKvE,IAAAA,CAAAA,OAAL,CAAawC,KAAb,GAAA,CAAA,WAAA,GAAqB0B,IAAI,CAAC1B,KAA1B,MAAqB,IAAA,IAAA,WAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,WAAA,CAAY0C,OAAjC,CAAA;AACA,IAAA,IAAA,CAAKjF,kBAAL,EAAA,CAAA;AACA,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AA5MuC,CAAA;AA8M1C;;AACA;AACA;AACA;AACA;;AACAN,OAAO,CAACS,QAAR,GAAmB;AACjBmC,EAAAA,MAAM,EAAE,CADS;AAEjBlC,EAAAA,SAAS,EAAE,CAFM;AAGjBE,EAAAA,YAAY,EAAE,CAAC,CAAA;AAHE,CAAnB,CAAA;AAKA;AACA;AACA;AACA;;AACAZ,OAAO,CAACmD,mBAAR,GAA8B,+CAA9B;;ACzOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMqC,UAAN,SAAyBvF,IAAzB,CAA8B;AACzC;AACAC,EAAAA,WAAW,CAACC,OAAD,EAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AAChC,IAAA,KAAA,CAAMF,OAAN,EAAeC,IAAf,EAAqBC,OAArB,EADgC;AAGhC;;AACA,IAAI,IAAA,IAAA,CAAKA,OAAL,CAAamB,QAAb,KAA0BiE,SAA9B,EACI,KAAKC,eAAL,EAAA,CAAA;AACP,GAAA;AACD;;AACA;AACJ;AACA;AACA;;;AACkB,EAAA,IAAVC,UAAU,GAAG;AACb;AACA,IAAO,OAAA,IAAA,CAAKtF,OAAL,CAAamB,QAApB,CAAA;AACH,GAAA;AACD;;AACA;;AACA;;AACA;AACJ;AACA;AACA;;;AACIkE,EAAAA,eAAe,GAAG;AACd,IAAIE,IAAAA,SAAS,GAAG,CAAhB,CAAA;;AACA,IAAA,KAAK,IAAI,CAACC,CAAD,EAAIT,IAAJ,CAAT,IAAsB,IAAA,CAAKtE,KAAL,CAAWgF,OAAX,EAAtB,EAA4C;AACxC,MAAA,IAAI,EAAEV,IAAI,YAAYP,YAAlB,CAAJ,EAAqC;AACjC;AACAO,QAAAA,IAAI,CAAC/E,OAAL,CAAa0F,UAAb,GAA0BF,CAAC,KAAK,CAAN,IAAW,IAAK/E,CAAAA,KAAL,CAAW+E,CAAC,GAAG,CAAf,CAAA,YAA6BhB,YAAxC,GAAuD,KAAKxE,OAAL,CAAa0F,UAAb,CAAwBF,CAAC,GAAG,CAA5B,CAAvD,GAAwF,KAAKxF,OAAL,CAAa0F,UAAb,CAAwBF,CAAxB,CAAlH,CAAA;AACH,OAJuC;;;AAMxC,MAAIT,IAAAA,IAAI,YAAYY,QAApB,EAA8B;AAAA,QAAA,IAAA,qBAAA,CAAA;;AAC1B;AACAZ,QAAAA,IAAI,CAAC/E,OAAL,CAAa4F,UAAb,4BAA0Bb,IAAI,CAAC/E,OAAL,CAAa4F,UAAvC,MAAqDb,IAAAA,IAAAA,qBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAAA,GAAAA,IAAI,CAAChE,MAA1D,CAF0B;AAG1B;;AACAgE,QAAAA,IAAI,CAAChE,MAAL,GAAcgE,IAAI,CAAC/E,OAAL,CAAa4F,UAA3B,CAAA;;AACA,QAAI,IAAA,IAAA,CAAKN,UAAT,EAAqB;AACjBC,UAAAA,SAAS,IAAIR,IAAI,CAAChE,MAAL,GAAcgE,IAAI,CAACc,KAAhC,CAAA;AACA,UAAI,IAAA,CAACC,IAAD,EAAOC,GAAP,IAAc,CAAC,IAAIvB,YAAJ,CAAiB;AAAEC,YAAAA,QAAQ,EAAE,GAAA;AAAZ,WAAjB,CAAD,EAAsC,IAAIO,WAAJ,CAAgB;AAAEjE,YAAAA,MAAM,EAAEwE,SAAV;AAAqBvF,YAAAA,OAAO,EAAE;AAAE8B,cAAAA,MAAM,EAAE,MAAA;AAAV,aAAA;AAA9B,WAAhB,CAAtC,CAAlB,CAAA;AACA,UAAKrB,IAAAA,CAAAA,KAAL,CAAWuF,MAAX,CAAkB,CAAlB,EAAqB,CAArB,EAAwBF,IAAxB,CAAA,CAAA;AACA,UAAKrF,IAAAA,CAAAA,KAAL,CAAWuF,MAAX,CAAkB,CAAlB,EAAqB,CAArB,EAAwBD,GAAxB,CAAA,CAJiB;;AAMjB,UAAA,IAAIE,EAAE,GAAG,IAAA,CAAKjG,OAAL,CAAakG,iBAAb,IAAkCV,CAAC,KAAK,CAAxC,GAA4C,IAAKxF,CAAAA,OAAL,CAAakG,iBAAzD,GAA6E,CAAtF,CAAA;AACAnB,UAAAA,IAAI,CAACoB,KAAL,CAAW,CAAX,EAAcF,EAAd,EAPiB;;AASjBlB,UAAAA,IAAI,CAAC/E,OAAL,CAAamB,QAAb,GAAwB,IAAxB,CAAA;AACH,SAAA;AACJ,OAhBD;AAkBA;AAlBA,WAmBK,IAAI,KAAKnB,OAAL,CAAaoG,eAAb,IAAgCrB,IAAI,YAAYC,WAApD,EAAiE;AAAA,QAAA,IAAA,sBAAA,CAAA;;AAClE;AACAD,QAAAA,IAAI,CAAC/E,OAAL,CAAa4F,UAAb,6BAA0Bb,IAAI,CAAC/E,OAAL,CAAa4F,UAAvC,MAAqDb,IAAAA,IAAAA,sBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,sBAAAA,GAAAA,IAAI,CAAChE,MAA1D,CAFkE;AAGlE;;AACAgE,QAAAA,IAAI,CAAChE,MAAL,GAAcgE,IAAI,CAAC/E,OAAL,CAAa4F,UAA3B,CAAA;;AACA,QAAI,IAAA,IAAA,CAAKN,UAAT,EAAqB;AAAA,UAAA,IAAA,qBAAA,CAAA;;AACjB;AACAP,UAAAA,IAAI,CAAChE,MAAL,IAAe,CAAA,qBAAA,GAAA,IAAA,CAAKf,OAAL,CAAaqG,kBAA5B,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAkD,CAAlD,CAFiB;;AAIjBtB,UAAAA,IAAI,CAAC/E,OAAL,CAAamB,QAAb,GAAwB,IAAxB,CAAA;AACH,SAAA;AACJ,OAAA;AACJ,KAvCa;;;AAyCd,IAAKI,IAAAA,CAAAA,QAAL,GAAgB,IAAK1B,CAAAA,WAAL,CAAiB2B,UAAjB,CAA4B,IAAKf,CAAAA,KAAjC,CAAhB,CAAA;AACH,GAAA;AACD;;AACA;;;AACAgB,EAAAA,SAAS,CAACC,WAAW,GAAG,EAAf,EAAmB1B,OAAO,GAAG,EAA7B,EAAiC;AAAA,IAAA,IAAA,iBAAA,CAAA;;AACtC;AACA0B,IAAAA,WAAW,CAACI,MAAZ,GAAqBJ,WAAW,CAACI,MAAZ,IAAsB,IAAA,CAAK9B,OAAL,CAAa8B,MAAxD,CAAA;;AACA,IAAI,IAAA,IAAA,CAAKwD,UAAT,EAAqB;AACjB,MAAM5B,MAAAA,KAAK,GAAG/C,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB,mBAAnB,CAAd,CADiB;;AAGjBN,MAAAA,WAAW,CAACI,MAAZ,GAAqBJ,WAAW,CAACI,MAAZ,GAAsB,CAAEJ,EAAAA,WAAW,CAACI,MAAO,CAAA,EAAA,EAAI4B,KAAM,CAAA,CAAA,CAArD,GAA0DA,KAA/E,CAAA;AACH,KAPqC;;;AAStC1D,IAAAA,OAAO,CAACiC,QAAR,GAAmBjC,CAAAA,iBAAAA,GAAAA,OAAO,CAACiC,QAA3B,MAAuC,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,iBAAA,GAAA,IAAA,CAAKjC,OAAL,CAAaiC,QAApD,CAAA;AACA,IAAA,OAAO,MAAMR,SAAN,CAAgBC,WAAhB,EAA6B1B,OAA7B,CAAP,CAAA;AACH,GAAA;AACD;;AACA;;AACA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;;;AACqB,EAAA,MAAfkC,eAAe,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,eAAT;AAA0BC,IAAAA,OAA1B;AAAmCiE,IAAAA,OAAnC;AAA4C9D,IAAAA,KAA5C;AAAmD+D,IAAAA,eAAe,GAAG,KAArE;AAA4E5D,IAAAA,QAA5E;AAAsF6D,IAAAA,aAAa,GAAG,IAAA;AAAtG,GAAA,GAA+G,EAAhH,EAAoHxG,OAAO,GAAG,EAA9H,EAAkI;AACnJ;AACA;AACA,IAAA,MAAM4C,OAAO,GAAG,MAAMC,cAAc,CAACF,QAAD,KAAA,IAAA,IAACA,QAAD,KAAA,KAAA,CAAA,GAACA,QAAD,GAAa,IAAA,CAAK9C,WAAL,CAAiBiD,mBAA9B,EAAmD;AACnFhD,MAAAA,OAAO,EAAG,CAAE,EAAA,IAAA,CAAKA,OAAQ,CAD0D,SAAA,CAAA;AAEnFsC,MAAAA,eAFmF;AAGnFW,MAAAA,SAAS,EAAEC,MAAM,CAACC,IAAP,CAAYF,SAH4D;AAInFV,MAAAA,OAJmF;AAKnFiE,MAAAA,OALmF;AAMnF9D,MAAAA,KAAAA;AANmF,KAAnD,CAApC,CAHmJ;;AAYnJ,IAAA,OAAO,IAAIc,OAAJ,CAAaC,OAAD,IAAa;AAC5B,MAAA,IAAIC,MAAJ,CAAW;AACPrB,QAAAA,KADO;AAEPS,QAAAA,OAFO;AAGPa,QAAAA,OAAO,EAAE;AACLtC,UAAAA,QAAQ,EAAE;AACN;AACAsF,YAAAA,SAAS,EAAED,aAFL;AAGN9C,YAAAA,KAAK,EAAE/C,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB,mBAAnB,CAHD;AAIN2B,YAAAA,QAAQ,EAAGC,IAAD,IAAUL,OAAO,CAAC,IAAKM,CAAAA,eAAL,CAAqBD,IAArB,EAA2B,IAA3B,CAAD,CAAA;AAJrB,WADL;AAOLE,UAAAA,MAAM,EAAE;AACJJ,YAAAA,KAAK,EAAE/C,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmBwE,aAAa,GAAG,cAAH,GAAoB,YAApD,CADH;AAEJ7C,YAAAA,QAAQ,EAAGC,IAAD,IAAUL,OAAO,CAAC,IAAKM,CAAAA,eAAL,CAAqBD,IAArB,EAA2B,KAA3B,CAAD,CAAA;AAFvB,WAAA;AAPH,SAHF;AAePG,QAAAA,OAAO,EAAEwC,eAAe,GAAG,UAAH,GAAgB,QAfjC;AAgBPvC,QAAAA,KAAK,EAAE,MAAMT,OAAO,CAAC,IAAD,CAAA;AAhBb,OAAX,EAiBGvD,OAjBH,CAiBYiE,CAAAA,MAjBZ,CAiBmB,IAjBnB,CAAA,CAAA;AAkBH,KAnBM,CAAP,CAAA;AAoBH,GAAA;AACD;;AACA;AACJ;AACA;AACA;AACA;AACA;AACI;;;AACAJ,EAAAA,eAAe,CAACD,IAAD,EAAO0B,UAAP,EAAmB;AAAA,IAAA,IAAA,WAAA,CAAA;;AAC9B,IAAA,MAAMpB,IAAI,GAAGN,IAAI,CAAC,CAAD,CAAJ,CAAQO,aAAR,CAAsB,MAAtB,CAAb,CAD8B;;AAG9B,IAAA,IAAID,IAAI,CAACI,KAAL,CAAWC,KAAf,EAAsB;AAClB,MAAA,MAAMD,KAAK,GAAG,IAAI1E,IAAJ,CAASsE,IAAI,CAACI,KAAL,CAAWC,KAApB,EAA2B,IAAA,CAAKxE,IAAhC,CAAd,CAAA;AACA,MAAA,IAAI,EAAEuE,KAAK,CAAC7D,KAAN,CAAY,CAAZ,CAA0B+D,YAAAA,YAA5B,CAAJ,EACI,KAAK/D,KAAL,CAAWO,IAAX,CAAgB,IAAIwD,YAAJ,CAAiB;AAAEC,QAAAA,QAAQ,EAAE,GAAA;AAAZ,OAAjB,CAAhB,CAAA,CAAA;AACJ,MAAKhE,IAAAA,CAAAA,KAAL,GAAa,IAAA,CAAKA,KAAL,CAAWiE,MAAX,CAAkBJ,KAAK,CAAC7D,KAAxB,CAAb,CAAA;AACH,KAR6B;AAU9B;;;AACA,IAAA,IAAA,CAAKT,OAAL,CAAamB,QAAb,GAAwBmE,UAAxB,CAX8B;;AAa9B,IAAKtF,IAAAA,CAAAA,OAAL,CAAaiC,QAAb,GAAwBiC,IAAI,CAACjC,QAAL,CAAcsC,KAAtC,CAb8B;;AAe9B,IAAA,IAAA,CAAKvE,OAAL,CAAa0F,UAAb,CAAwBgB,OAAxB,CAAgC,CAACC,IAAD,EAAOC,GAAP,KAAgB,IAAA,CAAK5G,OAAL,CAAa0F,UAAb,CAAwBkB,GAAxB,CAAA,GAA+B1C,IAAI,CAAE,CAAA,WAAA,EAAa0C,GAAI,CAAA,CAAnB,CAAJ,GAA4BD,IAAI,CAACzC,IAAI,CAAE,cAAa0C,GAAI,CAAA,CAAnB,CAAJ,CAA0BrC,KAA3B,CAAhC,GAAoEoC,IAAI,CAAC,CAAD,CAAvJ,EAf8B;;AAiB9B,IAAK3G,IAAAA,CAAAA,OAAL,CAAawC,KAAb,GAAA,CAAA,WAAA,GAAqB0B,IAAI,CAAC1B,KAA1B,MAAqB,IAAA,IAAA,WAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,WAAA,CAAY0C,OAAjC,CAAA;AACA,IAAA,IAAA,CAAKG,eAAL,EAAA,CAAA;AACA,IAAA,OAAO,IAAP,CAAA;AACH,GAAA;AACD;;AACA;AACA;;;AACe,EAARwB,OAAAA,QAAQ,CAAC9G,IAAD,EAAO;AAClB,IAAM+G,MAAAA,IAAI,GAAG,KAAMD,CAAAA,QAAN,CAAe9G,IAAf,CAAb,CADkB;;AAGlB+G,IAAAA,IAAI,CAACvF,QAAL,GAAgB,IAAA,CAAKC,UAAL,CAAgBsF,IAAI,CAACrG,KAArB,CAAhB,CAAA;AACA,IAAA,OAAOqG,IAAP,CAAA;AACH,GAAA;;AAvKwC,CAAA;AAyK7C;AACA;AACA;AACA;;AACA3B,UAAU,CAACrC,mBAAX,GAAiC,+CAAjC;;ACvLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASiE,mBAAT,CAA6BjH,OAA7B,EAAsCC,IAAtC,EAA4CC,OAAO,GAAG;AAAEgH,EAAAA,aAAa,EAAE,KAAA;AAAjB,CAAtD,EAAgF;AACrF,EAAMF,MAAAA,IAAI,GAAG,IAAIlH,IAAJ,CAASE,OAAT,EAAkBC,IAAlB,CAAb,CADqF;;AAErF,EAAA,MAAMU,KAAK,GAAGqG,IAAI,CAACrG,KAAnB,CAFqF;AAIrF;;AACA,EAAIA,IAAAA,KAAK,CAACwG,IAAN,CAAWC,kBAAX,CAAJ,EAAoC,OAAOJ,IAAI,CAAChH,OAAZ,CAAA;AACpC,EAAA,MAAMqH,aAAa,GAAG,EAAtB,CANqF;;AAOrF,EAAA,MAAMC,aAAa,GAAG,EAAtB,CAPqF;;AAQrF,EAAA,IAAIC,SAAS,GAAG,EAAhB,CARqF;;AASrF,EAAA,KAAK,IAAItC,IAAT,IAAiBtE,KAAjB,EAAwB;AACtB;AACA,IAAIsE,IAAAA,IAAI,YAAYP,YAApB,EAAkC6C,SAAS,CAACrG,IAAV,CAAe+D,IAAf,CAAA,CAAlC;AAAA,SAEK;AACH;AACA,MAAIA,IAAAA,IAAI,YAAYY,QAApB,EAA8B;AAC5B;AACAwB,QAAAA,aAAa,CAACnG,IAAd,CAAmB,GAAGqG,SAAtB,EAF4B;;AAG5BF,QAAAA,aAAa,CAACnG,IAAd,CAAmB+D,IAAnB,EAH4B;AAI7B,OAJD;AAAA,WAKK;AACH;AACAqC,QAAAA,aAAa,CAACpG,IAAd,CAAmB,GAAGqG,SAAtB,EAFG;;AAGHD,QAAAA,aAAa,CAACpG,IAAd,CAAmB+D,IAAnB,EAHG;AAIJ,OAXE;;;AAYHsC,MAAAA,SAAS,GAAG,EAAZ,CAZG;AAaJ,KAAA;AACF,GAAA;;AACD,EAAMC,MAAAA,eAAe,GAAG1H,IAAI,CAAC4B,UAAL,CAAgB4F,aAAhB,CAAxB,CA5BqF;;AA6BrF,EAAMG,MAAAA,eAAe,GAAG3H,IAAI,CAAC4B,UAAL,CAAgB2F,aAAhB,CAAxB,CA7BqF;AA8BrF;;AACA,EAAIK,IAAAA,YAAY,GAAGpC,SAAnB,CAAA;;AACA,EAAA,IAAIkC,eAAJ,EAAqB;AACnB,IAAI,IAAA;AACFE,MAAAA,YAAY,GAAG5H,IAAI,CAAC6H,QAAL,CAAcH,eAAd,CAAf,CAAA;AACD,KAFD,CAEE,OAAOI,GAAP,EAAY;AACZtD,MAAAA,OAAO,CAACuD,IAAR,CAAc,CAAA,iCAAA,EAAmCL,eAAgB,CAAjE,uBAAA,CAAA,CAAA,CAAA;AACD,KAAA;AACF,GAtCoF;;;AAwCrF,EAAA,MAAMM,KAAK,GAAG5H,OAAO,CAACgH,aAAR,GAAwB,CAACQ,YAAD,EAAeD,eAAf,CAAxB,GAA0D,CAACA,eAAD,EAAkBC,YAAlB,CAAxE,CAxCqF;;AA0CrF,EAAO,OAAA,IAAI5H,IAAJ,CAASgI,KAAK,CAACC,UAAN,CAAiB,KAAjB,CAAT,CAAA,CAAkC/H,OAAzC,CAAA;AACD,CAAA;AACD;;AACA;AACA;AACA;AACA;AACA;;AACA,SAASoH,kBAAT,CAA4BnC,IAA5B,EAAkC;AAChC,EAAA,MAAM+C,QAAQ,GAAG/C,IAAI,YAAYY,QAAjC,CAAA;AACA,EAAA,MAAMlB,QAAQ,GAAGM,IAAI,YAAYP,YAAhB,IAAgC,CAAC,GAAD,EAAM,GAAN,EAAWuD,QAAX,CAAoBhD,IAAI,CAACN,QAAzB,CAAjD,CAAA;AACA,EAAA,MAAM1D,MAAM,GAAGgE,IAAI,YAAYC,WAA/B,CAAA;AACA,EAAA,OAAO,EAAE8C,QAAQ,IAAIrD,QAAZ,IAAwB1D,MAA1B,CAAP,CAAA;AACD,CAAA;AACD;;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,eAAeiH,OAAf,CAAuB;AAC5B;AACAJ,EAAAA,KAAK,GAAG,EAFoB;AAG5B;AACA7H,EAAAA,IAAI,GAAG,EAJqB;AAK5B;AACAkB,EAAAA,SAN4B;AAO5B;AACAC,EAAAA,YAR4B;AAS5B;AACAE,EAAAA,MAAM,GAAG,CAVmB;AAW5B;AACAD,EAAAA,QAAQ,GAAG,EAZiB;AAa5B;AACAE,EAAAA,WAd4B;AAe5B;AACAoB,EAAAA,cAAc,GAAG,KAhBW;AAiB5B;AACAwF,EAAAA,WAAW,GAAG,KAlBc;AAmB5B;AACAC,EAAAA,KApB4B;AAqB5B;AACAvF,EAAAA,QAtB4B;AAuB5B;AACAR,EAAAA,KAxB4B;AAyB5B;AACAgG,EAAAA,aA1B4B;AA2B5B;AACAC,EAAAA,WAAW,GAAG,IA5Bc;AA6B5B;AACA1G,EAAAA,WAAW,GAAG,EA9Bc;AA+B5B;AACAO,EAAAA,QAhC4B;AAiC5B;AACAoG,EAAAA,OAlC4B;AAmC5B;AACArI,EAAAA,OApC4B;AAqC5B;AACA8B,EAAAA,MAtC4B;AAuC5B;AACAO,EAAAA,OAxC4B;AAyC5B;AACAG,EAAAA,KA1C4B;;AAAA,CAAA,GA4C1B,EA5CG,EA4CC;AACN;AACA,EAAA,MAAM8F,OAAO,GAAG,IAAIC,GAAJ,CAAQ5H,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,OAAlB,EAA2B,cAA3B,CAAR,CAAhB,CAFM;;AAGNO,EAAAA,MAAM,GAAGkH,OAAO,CAACvH,MAAjB,CAAA;AACAI,EAAAA,QAAQ,GAAGmH,OAAO,CAACvH,MAAR,GAAiBuH,OAAO,CAACzC,KAApC,CAAA;;AACA,EAAM,MAAA;AAAE1F,IAAAA,aAAF;AAAiBqI,IAAAA,IAAAA;AAAjB,GAAA,GAA0BC,uBAAuB,CAAC;AAAExH,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2B+G,IAAAA,WAA3B;AAAwCC,IAAAA,KAAAA;AAAxC,GAAD,CAAvD,CAAA;;AACA,EAAA,MAAMpI,OAAO,GAAG,CAACwI,OAAO,CAACxI,OAAT,CAAA,CAAkB4E,MAAlB,CAAyBkD,KAAzB,CAAA,CAAgCc,IAAhC,CAAqC,KAArC,CAAhB,CAAA;AAEA,EAAA,MAAMtG,eAAe,GAAGH,QAAQ,IAAItB,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAA0B,UAA1B,CAApC,CAAA;;AACA,EAAA,IAAI4B,cAAc,IAAI,CAAC+F,IAAvB,EAA6B;AAC3BzI,IAAAA,IAAI,CAAC,KAAD,CAAJ,GAAc,MAAd,CAAA;AACD,GAXK;AAaN;;;AACA,EAAA,MAAM+G,IAAI,GAAG,IAAI9D,MAAM,CAACC,IAAP,CAAYtD,OAAhB,CAAwBG,OAAxB,EAAiCC,IAAjC,EAAuC;AAClD+B,IAAAA,MAAM,EAAEA,MAAM,IAAIK,KADgC;AAElDhC,IAAAA,aAFkD;AAGlDiC,IAAAA,eAHkD;AAIlDjB,IAAAA,QAJkD;AAKlDC,IAAAA,MALkD;AAMlDC,IAAAA,WANkD;AAOlDmB,IAAAA,KAAAA;AAPkD,GAAvC,CAAb,CAdM;;AAwBN,EAAI,IAAA,CAACgG,IAAL,EAAW;AAAA,IAAA,IAAA,UAAA,CAAA;;AACT,IAAA,MAAMG,UAAU,GAAG,MAAM7B,IAAI,CAAC5E,eAAL,CACvB;AACEC,MAAAA,KADF;AAEEM,MAAAA,cAFF;AAGEL,MAAAA,eAAe,EAAEA,eAHnB;AAIEE,MAAAA,aAAa,EAAEnC,aAJjB;AAKEyI,MAAAA,cAAc,EAAE7I,IAAF,KAAEA,IAAAA,IAAAA,IAAF,KAAEA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAAA,UAAAA,GAAAA,IAAI,CAAE8I,IAAR,MAAE,IAAA,IAAA,UAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,UAAA,CAAYC,OAL9B;AAMEnG,MAAAA,QANF;AAOEN,MAAAA,OAPF;AAQEG,MAAAA,KAAAA;AARF,KADuB,EAWvB2F,aAXuB,CAAzB,CAAA;AAaA,IAAA,IAAIQ,UAAU,KAAK,IAAnB,EAAyB,OAAO,IAAP,CAAA;AAC1B,GAvCK;;;AAyCN,EAAM7B,MAAAA,IAAI,CAAClF,QAAL,CAAc;AAAEC,IAAAA,KAAK,EAAE,IAAA;AAAT,GAAd,CAAN,CAzCM;;AA2CN,EAAA,IAAIwG,OAAJ,EAAa;AACXjE,IAAAA,OAAO,CAACuD,IAAR,CACG,CADH,sIAAA,CAAA,CAAA,CAAA;AAGAjG,IAAAA,WAAW,CAAC2G,OAAZ,GAAsBA,OAAtB,CAAA;AACD,GAAA;;AACD,EAAA,IAAIvB,IAAI,IAAIsB,WAAZ,EAAyB,MAAMtB,IAAI,CAACrF,SAAL,CAAeC,WAAf,EAA4B1B,OAA5B,CAAN,CAAA;AACzB,EAAA,OAAO8G,IAAP,CAAA;AACD,CAAA;AACD;;AACA;AACA;AACA;AACA;AACA;;AACA,SAAS2B,uBAAT,CAAiC;AAAEP,EAAAA,KAAF;AAASjH,EAAAA,SAAS,GAAG,KAArB;AAA4BC,EAAAA,YAAY,GAAG,KAA3C;AAAkD+G,EAAAA,WAAW,GAAG,KAAA;AAAhE,CAAA,GAA0E,EAA3G,EAA+G;AAC7G,EAAMO,MAAAA,IAAI,GAAGP,WAAW,IAAKC,KAAK,KAAKA,KAAK,CAACa,QAAN,IAAkBb,KAAK,CAACc,MAAxB,IAAkCd,KAAK,CAACe,OAAxC,IAAmDf,KAAK,CAACgB,OAA9D,CAAlC,CAD6G;;AAG7G,EAAA,IAAI/I,aAAa,GAAG6C,MAAM,CAACC,IAAP,CAAYtD,OAAZ,CAAoBS,QAApB,CAA6BmC,MAAjD,CAH6G;;AAK7G,EAAItB,IAAAA,SAAS,IAAIiH,KAAJ,KAAA,IAAA,IAAIA,KAAJ,KAAIA,KAAAA,CAAAA,IAAAA,KAAK,CAAEc,MAAxB,EAAgC7I,aAAa,GAAG6C,MAAM,CAACC,IAAP,CAAYtD,OAAZ,CAAoBS,QAApB,CAA6BC,SAA7C,CAAhC;AAAA,OAEK,IAAIa,YAAY,IAAIgH,KAAJ,KAAIA,IAAAA,IAAAA,KAAJ,KAAIA,KAAAA,CAAAA,IAAAA,KAAK,CAAEe,OAAvB,IAAkCf,KAAlC,KAAkCA,IAAAA,IAAAA,KAAlC,KAAkCA,KAAAA,CAAAA,IAAAA,KAAK,CAAEgB,OAA7C,EAAsD/I,aAAa,GAAG6C,MAAM,CAACC,IAAP,CAAYtD,OAAZ,CAAoBS,QAApB,CAA6BG,YAA7C,CAAA;AAC3D,EAAO,OAAA;AAAEiI,IAAAA,IAAF;AAAQrI,IAAAA,aAAAA;AAAR,GAAP,CAAA;AACD,CAAA;AACD;;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,eAAegJ,UAAf,CAA0B;AAC/B;AACAvB,EAAAA,KAAK,GAAG,EAFuB;AAG/B;AACA7H,EAAAA,IAJ+B;AAIzB;AACN;AACAoB,EAAAA,QAAQ,GAAG,KANoB;AAO/B;AACAmF,EAAAA,OAR+B;AAS/B;AACAZ,EAAAA,UAV+B;AAW/B;AACAQ,EAAAA,iBAZ+B;AAa/B;AACAG,EAAAA,kBAd+B;AAe/B;AACAD,EAAAA,eAhB+B;AAgBd;AACjB;AACA6B,EAAAA,WAAW,GAAG,KAlBiB;AAmB/B;AACAC,EAAAA,KApB+B;AAqB/B;AACA1B,EAAAA,aAAa,GAAG,IAtBe;AAuB/B;AACA7D,EAAAA,QAxB+B;AAyB/B;AACAR,EAAAA,KA1B+B;AA2B/B;AACAgG,EAAAA,aA5B+B;AA4BhB;AACf;AACAC,EAAAA,WAAW,GAAG,KA9BiB;AA+B/B;AACA1G,EAAAA,WAAW,GAAG,EAhCiB;AAiC/B;AACAO,EAAAA,QAlC+B;AAmC/B;AACAoG,EAAAA,OApC+B;AAqC/B;AACAhG,EAAAA,OAtC+B;AAuC/B;AACAP,EAAAA,MAxC+B;AAyC/B;AACAU,EAAAA,KA1C+B;;AAAA,CAAA,GA4C7B,EA5CG,EA4CC;AACN4B,EAAAA,OAAO,CAACC,GAAR,CAAYhC,OAAZ,EADM;;AAGN,EAAA,MAAMD,eAAe,GAAGH,QAAQ,IAAItB,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAA0B,UAA1B,CAApC,CAHM;;AAKN,EAAA,MAAMf,OAAO,GAAG8H,KAAK,CAACc,IAAN,CAAW,KAAX,CAAhB,CAAA;;AACA,EAAM,MAAA;AAAEpD,IAAAA,UAAF;AAAckD,IAAAA,IAAAA;AAAd,GAAA,GAAuBY,sBAAsB,CAAC;AAAEjI,IAAAA,QAAF;AAAY8G,IAAAA,WAAZ;AAAyBC,IAAAA,KAAAA;AAAzB,GAAD,CAAnD,CANM;;;AAQN,EAAA,MAAMpB,IAAI,GAAG,IAAI9D,MAAM,CAACC,IAAP,CAAYkC,UAAhB,CAA2BrF,OAA3B,EAAoCC,IAApC,EAA0C;AACrD+B,IAAAA,MAAM,EAAEA,MAAM,IAAIK,KADmC;AAErDhB,IAAAA,QAAQ,EAAEmE,UAF2C;AAGrDY,IAAAA,iBAHqD;AAIrDG,IAAAA,kBAJqD;AAKrDD,IAAAA,eALqD;AAMrDE,IAAAA,OANqD;AAOrD9D,IAAAA,KAPqD;AAQrDkD,IAAAA,UAAAA;AARqD,GAA1C,CAAb,CARM;;AAmBN,EAAI,IAAA,CAAC8C,IAAL,EAAW;AACT,IAAA,MAAMG,UAAU,GAAG,MAAM7B,IAAI,CAAC5E,eAAL,CACvB;AACEC,MAAAA,KADF;AAEEC,MAAAA,eAAe,EAAEA,eAFnB;AAGEmE,MAAAA,eAAe,EAAEjB,UAHnB;AAIE3C,MAAAA,QAJF;AAKE6D,MAAAA,aALF;AAMEhE,MAAAA,KANF;AAOEH,MAAAA,OAPF;AAQEiE,MAAAA,OAAAA;AARF,KADuB,EAWvB6B,aAXuB,CAAzB,CAAA;AAaA,IAAA,IAAIQ,UAAU,KAAK,IAAnB,EAAyB,OAAO,IAAP,CAAA;AAC1B,GAlCK;;;AAoCN,EAAM7B,MAAAA,IAAI,CAAClF,QAAL,CAAc;AAAEC,IAAAA,KAAK,EAAE,IAAA;AAAT,GAAd,CAAN,CApCM;;AAsCN,EAAA,IAAIwG,OAAJ,EAAa;AACXjE,IAAAA,OAAO,CAACuD,IAAR,CACG,CADH,yIAAA,CAAA,CAAA,CAAA;AAGAjG,IAAAA,WAAW,CAAC2G,OAAZ,GAAsBA,OAAtB,CAAA;AACD,GAAA;;AACD,EAAIvB,IAAAA,IAAI,IAAIsB,WAAZ,EAAyB,MAAMtB,IAAI,CAACrF,SAAL,CAAeC,WAAf,CAAN,CAAA;AACzB,EAAA,OAAOoF,IAAP,CAAA;AACD,CAAA;AACD;;AACA;AACA;AACA;AACA;AACA;;AACA,SAASsC,sBAAT,CAAgC;AAAElB,EAAAA,KAAF;AAAS/G,EAAAA,QAAQ,GAAG,KAApB;AAA2B8G,EAAAA,WAAW,GAAG,KAAA;AAAzC,CAAA,GAAmD,EAAnF,EAAuF;AACrF,EAAMO,MAAAA,IAAI,GAAGP,WAAW,IAAKC,KAAK,KAAKA,KAAK,CAACa,QAAN,IAAkBb,KAAK,CAACc,MAAxB,IAAkCd,KAAK,CAACe,OAAxC,IAAmDf,KAAK,CAACgB,OAA9D,CAAlC,CAAA;AACA,EAAIhB,IAAAA,KAAJ,KAAIA,IAAAA,IAAAA,KAAJ,KAAIA,KAAAA,CAAAA,IAAAA,KAAK,CAAEc,MAAX,EAAmB7H,QAAQ,GAAG,IAAX,CAAA;AACnB,EAAO,OAAA;AAAEqH,IAAAA,IAAF;AAAQlD,IAAAA,UAAU,EAAEnE,QAAAA;AAApB,GAAP,CAAA;AACD;;;;;;;;;;;AC1VD;AACA;AACA;AACA;;AACO,MAAMkI,UAAN,SAAyBC,KAAzB,CAA+B;AACpC;;AACA;AACAC,EAAAA,WAAW,GAAG;AACZ;AACA;AACA;AACA;AACA,IAAA,KAAA,CAAMA,WAAN,EAAA,CAAA;AACA,IAAKC,IAAAA,CAAAA,KAAL,CAAW9C,OAAX,CAAoBmC,IAAD,IAAUA,IAAI,CAACY,sBAAL,EAA7B,CAAA,CAAA;AACD,GAAA;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEC,EAAAA,kBAAkB,GAAG;AACnB,IAAA,MAAMC,SAAS,GAAG,IAAKC,CAAAA,MAAvB,CADmB;AAGnB;;AACA,IAAKC,IAAAA,CAAAA,qBAAL,CAA2BF,SAA3B,CAAA,CAAA;;AACA,IAAKG,IAAAA,CAAAA,eAAL,CAAqBH,SAArB,CAAA,CAAA;AACD,GAAA;AACD;AACF;AACA;;;AACEE,EAAAA,qBAAqB,CAACF,SAAD,EAAY;AAAA,IAAA,IAAA,qBAAA,CAAA;;AAC/B,IAAA,IAAI,KAAKI,IAAL,KAAc,WAAlB,EAA+B,OADA;;AAG/B,IAAA,MAAM7G,UAAU,GAAGyG,SAAS,CAACzG,UAA7B,CAAA;AACA,IAAA,MAAM8G,WAAW,GAAGL,SAAS,CAACK,WAA9B,CAAA;AACA,IAAA,MAAMC,SAAS,GAAGN,SAAS,CAACO,QAAV,CAAmBC,KAArC,CAAA;AACA,IAAA,MAAMC,OAAO,GAAGT,SAAS,CAACO,QAAV,CAAmBG,MAAnC,CAAA;AACA,IAAA,MAAMC,aAAa,GAAGX,SAAS,CAACW,aAAhC,CAAA;AACAX,IAAAA,SAAS,CAACY,QAAV,CAAmBhG,KAAnB,GAA2B,CAA3B,CAAA;AACA,IAAA,IAAA,CAAKiG,SAAL,CAAeC,KAAf,CAAqB/D,OAArB,CAA8BmC,IAAD,IAAU;AACrC,MAAA,IAAIA,IAAI,CAACkB,IAAL,KAAc,OAAlB,EAA2B;AACzB,QAAA,IAAIlB,IAAI,CAACe,MAAL,CAAYc,QAAhB,EAA0B;AACxB,UAAK,KAAA,IAAIC,GAAT,IAAgBC,QAAQ,CAACR,OAAO,CAACS,IAAT,CAAxB,EAAwC;AACtC,YAAIC,IAAAA,EAAE,GAAGjC,IAAI,CAACe,MAAL,CAAYmB,GAAZ,CAAgBF,IAAhB,CAAqBF,GAArB,CAAT,CAAA;AACAP,YAAAA,OAAO,CAACS,IAAR,CAAaF,GAAb,CAAkBrG,CAAAA,KAAlB,IAA2B,CAACwG,EAAE,CAACE,MAAJ,GAAaC,QAAQ,CAACH,EAAE,CAACvG,KAAJ,CAArB,GAAkC,CAA7D,CAAA;AACD,WAAA;;AACD,UAAK,KAAA,IAAIoG,GAAT,IAAgBC,QAAQ,CAACR,OAAO,CAACc,GAAT,CAAxB,EAAuC;AACrC,YAAIC,IAAAA,EAAE,GAAGtC,IAAI,CAACe,MAAL,CAAYmB,GAAZ,CAAgBG,GAAhB,CAAoBP,GAApB,CAAT,CAAA;AACAP,YAAAA,OAAO,CAACc,GAAR,CAAYP,GAAZ,CAAiBrG,CAAAA,KAAjB,IAA0B,CAAC6G,EAAE,CAACH,MAAJ,GAAaC,QAAQ,CAACE,EAAE,CAAC5G,KAAJ,CAArB,GAAkC,CAA5D,CAAA;AACD,WAAA;;AACDoF,UAAAA,SAAS,CAACY,QAAV,CAAmBhG,KAAnB,IAA4BsE,IAAI,CAACe,MAAL,CAAYW,QAAZ,CAAqBhG,KAAjD,CAAA;AACD,SAAA;AACF,OAAA;AACF,KAdD,CAAA,CAAA;AAeAoF,IAAAA,SAAS,CAACY,QAAV,CAAmBhG,KAAnB,IAA4BoF,SAAS,CAACY,QAAV,CAAmBjG,KAA/C,CAxB+B;;AA0B/B,IAAA,KAAK,IAAI,CAACqG,GAAD,EAAKhG,SAAL,CAAT,IAA4ByG,MAAM,CAAC3F,OAAP,CAAevC,UAAf,CAA5B,EAAwD;AAAA,MAAA,IAAA,mBAAA,CAAA;;AACtDkB,MAAAA,OAAO,CAACC,GAAR,CAAYsG,GAAZ,EAAgBhG,SAAhB,EADsD;;AAGtDA,MAAAA,SAAS,CAAC0G,KAAV,GAAkB1G,SAAS,CAACJ,KAAV,GAAkBI,SAAS,CAACL,KAA9C,CAAA;AACAK,MAAAA,SAAS,CAACM,GAAV,GAAgBqG,IAAI,CAACC,KAAL,CAAW,CAAC5G,SAAS,CAACJ,KAAV,GAAkB,EAAnB,IAAyB,CAApC,CAAhB,CAAA;AACAI,MAAAA,SAAS,CAACjB,KAAV,GAAA,CAAA,mBAAA,GAAkB/C,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmBgB,MAAM,CAACG,KAAP,CAAaC,UAAb,CAAwBuH,GAAxB,CAAnB,CAAlB,qEAAsEA,GAAtE,CAAA;AACD,KAAA;;AACD,IAAIa,IAAAA,MAAM,GACR7B,SAAS,CAACY,QAAV,CAAmBhG,KAAnB,GAA2B,EAA3B,GACIrB,UAAU,CAACuI,GAAX,CAAexG,GADnB,GAEI0E,SAAS,CAACY,QAAV,CAAmBhG,KAAnB,GAA2B,EAA3B,GACA+G,IAAI,CAACI,GAAL,CAAS,CAAT,EAAYxI,UAAU,CAACuI,GAAX,CAAexG,GAA3B,CADA,GAEAqG,IAAI,CAACI,GAAL,CAAS,CAAT,EAAYxI,UAAU,CAACuI,GAAX,CAAexG,GAA3B,CALN,CAjC+B;;AAwC/B,IAAA,MAAM0G,MAAM,GAAG3I,MAAM,CAACG,KAAP,CAAayI,oBAA5B,CAAA;;AACA,IAAA,IAAI5B,WAAW,CAAC6B,EAAZ,CAAeC,IAAnB,EAAyB;AAAA,MAAA,IAAA,oBAAA,CAAA;;AACvB9B,MAAAA,WAAW,CAAC6B,EAAZ,CAAeC,IAAf,GAAA,CAAA,oBAAA,GAAsB9B,WAAW,CAAC6B,EAAZ,CAAeC,IAArC,MAAA,IAAA,IAAA,oBAAA,KAAA,KAAA,CAAA,GAAA,oBAAA,GAA6C,CAA7C,CAAA;AACD,KAAA;;AACD,IAAK,KAAA,IAAItG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,MAAIwE,IAAAA,WAAW,CAAC6B,EAAZ,CAAeC,IAAf,IAAuBH,MAAM,CAACnG,CAAC,GAAG,CAAL,CAA7B,IAAwCwE,WAAW,CAAC6B,EAAZ,CAAeC,IAAf,GAAsBH,MAAM,CAACnG,CAAD,CAAxE,EAA6E;AAC3EwE,QAAAA,WAAW,CAAC+B,KAAZ,GAAoBvG,CAApB,CAAA;AACAwE,QAAAA,WAAW,CAAC6B,EAAZ,CAAeE,KAAf,GAAuBJ,MAAM,CAACnG,CAAD,CAA7B,CAAA;AACAwE,QAAAA,WAAW,CAAC6B,EAAZ,CAAeG,SAAf,GAA2BL,MAAM,CAACnG,CAAC,GAAG,CAAL,CAAjC,CAAA;AACD,OAAA;AACF,KAAA;;AACDwE,IAAAA,WAAW,CAAC6B,EAAZ,CAAeI,OAAf,GAAyBjC,WAAW,CAAC6B,EAAZ,CAAeE,KAAf,GAAuB/B,WAAW,CAAC6B,EAAZ,CAAeG,SAA/D,CAAA;AACAhC,IAAAA,WAAW,CAAC6B,EAAZ,CAAeK,OAAf,GAAyBlC,WAAW,CAAC6B,EAAZ,CAAeC,IAAf,GAAsB9B,WAAW,CAAC6B,EAAZ,CAAeG,SAA9D,CAAA;AACA/B,IAAAA,SAAS,CAACkC,MAAV,CAAiB5H,KAAjB,GAAyB,EAAA,GAAK,CAAI0F,GAAAA,SAAS,CAACkC,MAAV,CAAiBJ,KAA1B,GAAkCP,MAAlC,GAA2CtI,UAAU,CAACkJ,GAAX,CAAenH,GAA1D,GAAgEgF,SAAS,CAACkC,MAAV,CAAiB7H,KAA1G,CAAA;AACA2F,IAAAA,SAAS,CAACkC,MAAV,CAAiBzI,KAAjB,GAAyB,QAAzB,CAAA;AACAuG,IAAAA,SAAS,CAACoC,SAAV,CAAoB9H,KAApB,GACE,EAAK,GAAA,CAAA,GAAI0F,SAAS,CAACoC,SAAV,CAAoBN,KAA7B,GAAqC7I,UAAU,CAACoJ,GAAX,CAAerH,GAApD,GAA0D/B,UAAU,CAACqJ,GAAX,CAAetH,GAAzE,GAA+EgF,SAAS,CAACoC,SAAV,CAAoB/H,KADrG,CAAA;AAEA2F,IAAAA,SAAS,CAACoC,SAAV,CAAoB3I,KAApB,GAA4B,WAA5B,CAAA;AACAuG,IAAAA,SAAS,CAACuC,IAAV,CAAejI,KAAf,GACE,EAAK,GAAA,CAAA,GAAI0F,SAAS,CAACuC,IAAV,CAAeT,KAAxB,GAAgC7I,UAAU,CAACuJ,GAAX,CAAexH,GAA/C,GAAqD/B,UAAU,CAACwJ,GAAX,CAAezH,GAApE,GAA0EgF,SAAS,CAACuC,IAAV,CAAelI,KAD3F,CAAA;AAEA2F,IAAAA,SAAS,CAACuC,IAAV,CAAe9I,KAAf,GAAuB,MAAvB,CAAA;;AACA,IAAA,KAAK,IAAI,CAACiH,GAAD,EAAMgC,EAAN,CAAT,IAAsBC,WAAW,CAAC5J,MAAM,CAACG,KAAP,CAAa0J,cAAd,CAAjC,EAAgE;AAAA,MAAA,IAAA,gBAAA,EAAA,iBAAA,EAAA,iBAAA,EAAA,iBAAA,EAAA,oBAAA,CAAA;;AAC9D,MAAA,IAAI,EAAElC,GAAG,KAAK,OAAR,IAAmBA,GAAG,KAAK,SAA3B,IAAwCA,GAAG,KAAK,SAAlD,CAAJ,EAAkE;AAAA,QAAA,IAAA,iBAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,oBAAA,CAAA;;AAChEP,QAAAA,OAAO,CAACS,IAAR,CAAaF,GAAb,CAAA,CAAkBpG,KAAlB,GACE,CAAA6F,iBAAAA,GAAAA,OAAO,CAACS,IAAR,CAAaF,GAAb,CAAA,MAAA,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,IAAA,iBAAA,CAAmBpG,KAAnB,IAA4B,EAAC6F,CAAAA,kBAAAA,GAAAA,OAAO,CAACS,IAAR,CAAaF,GAAb,CAAD,MAAC,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,IAAA,kBAAA,CAAmBK,MAApB,CAA5B,GACIM,IAAI,CAACwB,GAAL,CAASC,KAAK,CAAA,CAAA,kBAAA,GAAC3C,OAAO,CAACS,IAAR,CAAaF,GAAb,CAAD,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAC,kBAAmBpG,CAAAA,KAApB,CAAL,GAAkC,CAAlC,GAAsC6F,OAAO,CAACS,IAAR,CAAaF,GAAb,CAAkBpG,CAAAA,KAAjE,CAA0E6F,IAAAA,CAAAA,kBAAAA,GAAAA,OAAO,CAACS,IAAR,CAAaF,GAAb,CAA1E,MAA0E,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,kBAAA,CAAmBrG,KAA7F,CADJ,GAEI,CAHN,CAAA;AAIA8F,QAAAA,OAAO,CAACS,IAAR,CAAaF,GAAb,CAAA,CAAkBqC,IAAlB,GAAA,CAAA,oBAAA,GACErM,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmBgB,MAAM,CAACG,KAAP,CAAa0J,cAAb,CAA4BlC,GAA5B,CAAnB,CADF,MAAA,IAAA,IAAA,oBAAA,KAAA,KAAA,CAAA,GAAA,oBAAA,GAC0D3H,MAAM,CAACG,KAAP,CAAa0J,cAAb,CAA4BlC,GAA5B,CAD1D,CAAA;AAED,OAAA;;AACDP,MAAAA,OAAO,CAACc,GAAR,CAAYP,GAAZ,CAAA,CAAiBpG,KAAjB,GACE,CAAA6F,gBAAAA,GAAAA,OAAO,CAACc,GAAR,CAAYP,GAAZ,CAAA,MAAA,IAAA,IAAA,gBAAA,KAAA,KAAA,CAAA,IAAA,gBAAA,CAAkBpG,KAAlB,IAA2B,EAAC6F,CAAAA,iBAAAA,GAAAA,OAAO,CAACc,GAAR,CAAYP,GAAZ,CAAD,MAAC,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,IAAA,iBAAA,CAAkBK,MAAnB,CAA3B,GACIM,IAAI,CAACwB,GAAL,CAASC,KAAK,CAAA,CAAA,iBAAA,GAAC3C,OAAO,CAACc,GAAR,CAAYP,GAAZ,CAAD,MAAA,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAC,iBAAkBpG,CAAAA,KAAnB,CAAL,GAAiC,CAAjC,GAAqC6F,OAAO,CAACc,GAAR,CAAYP,GAAZ,CAAiBpG,CAAAA,KAA/D,CAAwE6F,IAAAA,CAAAA,iBAAAA,GAAAA,OAAO,CAACc,GAAR,CAAYP,GAAZ,CAAxE,MAAwE,IAAA,IAAA,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,iBAAA,CAAkBrG,KAA1F,CADJ,GAEI,CAHN,CAAA;AAIA8F,MAAAA,OAAO,CAACc,GAAR,CAAYP,GAAZ,CAAA,CAAiBqC,IAAjB,GAAA,CAAA,oBAAA,GAAwBrM,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmBgB,MAAM,CAACG,KAAP,CAAa0J,cAAb,CAA4BlC,GAA5B,CAAnB,CAAxB,MAAA,IAAA,IAAA,oBAAA,KAAA,KAAA,CAAA,GAAA,oBAAA,GAAgF3H,MAAM,CAACG,KAAP,CAAa0J,cAAb,CAA4BlC,GAA5B,CAAhF,CAAA;AACD,KAAA;;AACD,IAAMsC,MAAAA,gBAAgB,GAAGtM,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,OAAlB,EAA2B,WAA3B,CAAzB,CAAA;AACA,IAAMqM,MAAAA,YAAY,GAAGD,gBAAgB,CAACE,MAAjB,GAA0B,CAA/C,CA7E+B;;AA+E/B,IAAA,KAAK,IAAI,CAACxC,GAAD,EAAMyC,KAAN,CAAT,IAAyBR,WAAW,CAACjD,SAAS,CAAC0D,MAAX,CAApC,EAAwD;AAAA,MAAA,IAAA,oBAAA,CAAA;;AACtDD,MAAAA,KAAK,CAACrB,KAAN,GAAcqB,KAAK,CAACrB,KAAN,GAAcmB,YAAd,GAA6BE,KAAK,CAACrB,KAAnC,GAA2CmB,YAAzD,CAAA;AACAE,MAAAA,KAAK,CAAC7I,KAAN,GAAc6I,KAAK,CAACrB,KAAN,GAAc,CAAd,GAAkBqB,KAAK,CAAC9I,KAAtC,CAAA;AACA8I,MAAAA,KAAK,CAACJ,IAAN,GAAarM,CAAAA,oBAAAA,GAAAA,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmBgB,MAAM,CAACG,KAAP,CAAamK,MAAb,CAAoB3C,GAApB,CAAnB,CAAb,MAA6D3H,IAAAA,IAAAA,oBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,oBAAAA,GAAAA,MAAM,CAACG,KAAP,CAAamK,MAAb,CAAoB3C,GAApB,CAA7D,CAAA;AACAyC,MAAAA,KAAK,CAACG,QAAN,GAAiBN,gBAAgB,CAACG,KAAK,CAACrB,KAAP,CAAhB,CAA8BrI,KAA/C,CAAA;AACD,KAAA;;AACD4G,IAAAA,aAAa,CAACkD,MAAd,GAAuB7M,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,OAAlB,EAA2B,eAA3B,CAA4C2M,CAAAA,MAA5C,CAAmDjJ,KAAnD,CAAyDkJ,GAAzD,CAA6D,CAACC,OAAD,EAAU/C,GAAV,KAAkB;AAAA,MAAA,IAAA,qBAAA,EAAA,sBAAA,EAAA,sBAAA,EAAA,sBAAA,CAAA;;AACpG,MAAO,OAAA;AACLqC,QAAAA,IAAI,EAAEU,OAAO,CAACV,IADT;AAELjD,QAAAA,IAAI,EAAE2D,OAAO,CAAC3D,IAFT;AAGLxF,QAAAA,KAAK,EAAA,CAAA,qBAAA,GAAA,CAAA,sBAAA,GAAE+F,aAAa,CAACkD,MAAd,CAAqB7C,GAArB,CAAF,MAAE,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAA2BpG,KAA7B,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAsC,CAHtC;AAILgJ,QAAAA,QAAQ,EAAEN,gBAAgB,CAAC3C,CAAAA,sBAAAA,GAAAA,CAAAA,sBAAAA,GAAAA,aAAa,CAACkD,MAAd,CAAqB7C,GAArB,CAAD,2DAAC,sBAA2BpG,CAAAA,KAA5B,MAAqC,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,sBAAA,GAAA,CAArC,CAAhB,CAAwDb,KAAAA;AAJ7D,OAAP,CAAA;AAMD,KAPsB,CAAvB,CAAA;AAQAiG,IAAAA,SAAS,CAACgE,KAAV,CAAgBpJ,KAAhB,GAAwB,CAAKiG,CAAAA,qBAAAA,GAAAA,IAAAA,CAAAA,SAAL,CAAeoD,IAAf,CAAoB,CAApB,CAAwB7D,MAAAA,IAAAA,IAAAA,qBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAAA,CAAAA,IAAxB,MAAiC,MAAjC,GAA0C,IAAA,CAAKS,SAAL,CAAeoD,IAAf,CAAoB,CAApB,CAAA,CAAuBhE,MAAvB,CAA8B+D,KAAxE,GAAgF,CAAxG,CAAA;AACAhE,IAAAA,SAAS,CAACgE,KAAV,CAAgBpJ,KAAhB,IAAyBrB,UAAU,CAACuI,GAAX,CAAexG,GAAf,GAAqB0E,SAAS,CAACgE,KAAV,CAAgBrJ,KAA9D,CAAA;AACD,GAAA;AACD;AACF;AACA;;;AACEwF,EAAAA,eAAe,CAACH,SAAD,EAAY;AACzB;AACA,IAAA,IAAI,KAAKI,IAAL,KAAc,KAAlB,EAAyB,OAFA;;AAIzB,IAAA,MAAMhK,IAAI,GAAG4J,SAAb,CAJyB;;AAMzB5J,IAAAA,IAAI,CAAC8L,EAAL,GAAU9L,IAAI,CAAC8N,EAAL,GAAU9N,IAAI,CAAC8N,EAAf,GAAoB,GAA9B,CAAA;AACD,GAAA;AACD;AACF;AACA;;;AACEC,EAAAA,WAAW,GAAG;AACZ,IAAA,MAAM/N,IAAI,GAAG,KAAA,CAAM+N,WAAN,EAAb,CADY;;AAGZ,IAAA,OAAO/N,IAAP,CAAA;AACD,GAAA;AACD;AACF;AACA;AACA;AACA;AACA;AACA;;;AACEgO,EAAAA,iBAAiB,CAACC,WAAD,EAAchO,OAAd,EAAuB;AAAA,IAAA,IAAA,cAAA,CAAA;;AACtC,IAAA,MAAM0D,KAAK,GAAG/C,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmBgB,MAAM,CAACG,KAAP,CAAaC,UAAb,CAAwB4K,WAAxB,CAAnB,CAAd,CAAA;AACA,IAAMrE,MAAAA,SAAS,GAAG,IAAA,CAAKC,MAAvB,CAAA;AACA,IAAA,MAAM1G,UAAU,GAAGyG,SAAS,CAACzG,UAA7B,CAAA;AACA,IAAA,MAAM+K,IAAI,GAAG/K,UAAU,CAAC8K,WAAD,CAAvB,CAJsC;;AAMtC,IAAA,MAAMpG,KAAK,GAAG,CAAC,MAAD,CAAd,CAAA;AACA,IAAA,MAAM7H,IAAI,GAAG;AAAEkF,MAAAA,GAAG,EAAEgJ,IAAI,CAAChJ,GAAAA;AAAZ,KAAb,CAPsC;;AAStC,IAAA,IAAI,CAAAjF,OAAO,KAAP,IAAA,IAAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,cAAA,GAAAA,OAAO,CAAE4H,KAAT,MAAA,IAAA,IAAA,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,cAAA,CAAgBuF,MAAhB,IAAyB,CAA7B,EAAgC;AAC9BvF,MAAAA,KAAK,CAAC5G,IAAN,CAAW,GAAGhB,OAAO,CAAC4H,KAAtB,CAAA,CAAA;AACD,KAXqC;;;AAatC,IAAMsG,MAAAA,QAAQ,GAAGC,OAAO,CAACC,KAAR,CAAcC,WAAd,CAA0BrO,OAA1B,EAAmC;AAClD4H,MAAAA,KAAK,EAAEA,KAD2C;AAElD7H,MAAAA,IAAI,EAAEA,IAF4C;AAGlDoC,MAAAA,KAAK,EAAExB,IAAI,CAACoB,IAAL,CAAUuM,MAAV,CAAiB,4BAAjB,EAA+C;AAAE3J,QAAAA,SAAS,EAAEjB,KAAAA;AAAb,OAA/C,CAH2C;AAIlDhC,MAAAA,WAAW,EAAE;AACX2G,QAAAA,OAAO,EAAErI,OAAO,CAACqI,OAAR,IAAmBkG,WAAW,CAACC,UAAZ,CAAuB;AAAEC,UAAAA,KAAK,EAAE,IAAA;AAAT,SAAvB,CAAnB,IAA8D,IAAA,CAAKzB,IADjE;AAEX,QAAoB,kBAAA,EAAA;AAAEjD,UAAAA,IAAI,EAAE,WAAR;AAAqBiE,UAAAA,WAAAA;AAArB,SAAA;AAFT,OAAA;AAJqC,KAAnC,CAAjB,CAbsC;;AAuBtC,IAAOhG,OAAAA,OAAO,CAACkG,QAAD,CAAd,CAAA;AACD,GAAA;AACD;AACF;AACA;AACA;AACA;AACA;AACA;;;AACEQ,EAAAA,SAAS,CAACC,OAAD,EAAU3O,OAAV,EAAmB;AAAA,IAAA,IAAA,eAAA,CAAA;;AAC1BoE,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCsK,OAAhC,EAAyC,aAAzC,EAAwD3O,OAAxD,EAAiE,aAAjE,CAAA,CAAA;AACA,IAAA,MAAM4O,GAAG,GAAGC,SAAS,CAAC,IAAKjF,CAAAA,MAAL,CAAYyD,MAAb,EAAqBsB,OAArB,CAArB,CAF0B;;AAI1B,IAAA,MAAM/G,KAAK,GAAG,CAAC,cAAD,EAAiB,MAAjB,CAAd,CAAA;AACA,IAAA,MAAM7H,IAAI,GAAG;AAAEmD,MAAAA,UAAU,EAAE,IAAK4K,CAAAA,WAAL,GAAmB5K,UAAjC;AAA6C4L,MAAAA,WAAW,EAAEF,GAAG,CAACrK,KAAAA;AAA9D,KAAb,CAL0B;;AAO1B,IAAI,IAAA,CAAA,CAAA,eAAA,GAAAvE,OAAO,CAAC4H,KAAR,oEAAeuF,MAAf,IAAwB,CAA5B,EAA+B;AAC7BvF,MAAAA,KAAK,CAAC5G,IAAN,CAAW,GAAGhB,OAAO,CAAC4H,KAAtB,CAAA,CAAA;AACD,KATyB;;;AAW1B,IAAMsG,MAAAA,QAAQ,GAAGC,OAAO,CAACC,KAAR,CAAcC,WAAd,CAA0BrO,OAA1B,EAAmC;AAClD4H,MAAAA,KAAK,EAAEA,KAD2C;AAElD7H,MAAAA,IAAI,EAAEA,IAF4C;AAGlDoC,MAAAA,KAAK,EAAExB,IAAI,CAACoB,IAAL,CAAUuM,MAAV,CAAiB,wBAAjB,EAA2C;AAChDlB,QAAAA,KAAK,EAAEzM,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB6M,SAAS,CAAC7L,MAAM,CAACG,KAAP,CAAamK,MAAd,EAAsBqB,OAAtB,CAA5B,CAAA;AADyC,OAA3C,CAH2C;AAMlDjN,MAAAA,WAAW,EAAE;AACX2G,QAAAA,OAAO,EAAErI,OAAO,CAACqI,OAAR,IAAmBkG,WAAW,CAACC,UAAZ,CAAuB;AAAEC,UAAAA,KAAK,EAAE,IAAA;AAAT,SAAvB,CADjB;AAEX,QAAoB,kBAAA,EAAA;AAAE1E,UAAAA,IAAI,EAAE,OAAR;AAAiB4E,UAAAA,OAAAA;AAAjB,SAAA;AAFT,OANqC;AAUlDlM,MAAAA,cAAc,EAAE,IAAA;AAVkC,KAAnC,CAAjB,CAX0B;;AAwB1B,IAAOuF,OAAAA,OAAO,CAACkG,QAAD,CAAd,CAAA;AACD,GAAA;;AAjNmC;;ACJtC;AACA;AACA;AACA;;AACO,MAAMa,SAAN,SAAwBC,IAAxB,CAA6B;AAClC;AACF;AACA;AACEzF,EAAAA,WAAW,GAAG;AACZ;AACA;AACA,IAAA,KAAA,CAAMA,WAAN,EAAA,CAAA;AACD,GAAA;;AACDG,EAAAA,kBAAkB,GAAG;AACnB,IAAA,KAAA,CAAMA,kBAAN,EAAA,CAAA;AACA,IAAMuF,MAAAA,QAAQ,GAAG,IAAA,CAAKrF,MAAtB,CAAA;AACA,IAAKsF,IAAAA,CAAAA,MAAL,GAAc,EAAd,CAAA;;AACA,IAAKC,IAAAA,CAAAA,iBAAL,CAAuBF,QAAvB,CAAA,CAAA;;AACA,IAAKG,IAAAA,CAAAA,kBAAL,CAAwBH,QAAxB,CAAA,CAAA;;AACA,IAAKI,IAAAA,CAAAA,mBAAL,CAAyBJ,QAAzB,CAAA,CAAA;;AACA,IAAKK,IAAAA,CAAAA,gBAAL,CAAsBL,QAAtB,CAAA,CAAA;;AACA,IAAKM,IAAAA,CAAAA,iBAAL,CAAuBN,QAAvB,CAAA,CAAA;;AACA,IAAA,IAAIA,QAAQ,CAACO,SAAb,EAAwB,IAAKC,CAAAA,cAAL,CAAoBR,QAApB,CAAA,CAAA;AACxB,IAAA,IAAIA,QAAQ,CAACS,SAAb,EAAwB,IAAKC,CAAAA,cAAL,CAAoBV,QAApB,CAAA,CAAA;AACxB,IAAA,IAAI,CAAC,IAAA,CAAKW,OAAV,EAAmB,KAAKnG,sBAAL,EAAA,CAAA;AACpB,GAAA;AACD;AACF;AACA;;;AACE0F,EAAAA,iBAAiB,CAACF,QAAD,EAAW;AAC1B,IAAA,IAAIA,QAAQ,CAAClF,IAAT,KAAkB,OAAtB,EAA+B,OAAA;AAEhC,GAAA;AACD;AACF;AACA;;;AACEqF,EAAAA,kBAAkB,CAACH,QAAD,EAAW;AAC3B,IAAA,IAAIA,QAAQ,CAAClF,IAAT,KAAkB,QAAtB,EAAgC,OAAA;AAChC,IAAMhK,MAAAA,IAAI,GAAGkP,QAAb,CAAA;AACA,IAAMY,MAAAA,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;AACA9P,IAAAA,IAAI,CAACyP,SAAL,GAAiBzP,IAAI,CAACyP,SAAL,IAAkB,IAAnC,CAAA;AACAzP,IAAAA,IAAI,CAAC2P,SAAL,GAAiB3P,IAAI,CAAC2P,SAAL,IAAkB,IAAnC,CAL2B;;AAO3B,IAAA,IAAA,CAAKI,kBAAL,CAAwB/P,IAAxB,EAA8B8P,KAA9B,CAAA,CAAA;;AACA,IAAA,KAAK,MAAM9D,KAAX,IAAoBpL,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,OAAlB,EAA2B,WAA3B,CAApB,EAA6D;AAAA,MAAA,IAAA,qBAAA,CAAA;;AAC3Dd,MAAAA,IAAI,CAACsK,MAAL,CAAY0F,MAAZ,CAAmBhE,KAAK,CAACpB,GAAzB,CAAA,GAAA,CAAA,qBAAA,GAAgC5K,IAAI,CAACsK,MAAL,CAAY0F,MAAZ,CAAmBhE,KAAK,CAACpB,GAAzB,CAAhC,MAAiE,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAA;AAC/D7K,QAAAA,OAAO,EAAE,EADsD;AAE/D8H,QAAAA,KAAK,EAAE,CAAC,CAAC,EAAD,EAAK,CAAC,EAAD,EAAK,EAAL,CAAL,CAAD,CAAA;AAFwD,OAAjE,CAAA;AAID,KAAA;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACG,GAAA;AACD;AACF;AACA;;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;;;AACAkI,EAAAA,kBAAkB,CAAC/P,IAAD,EAAO8P,KAAP,EAAc;AAAA,IAAA,IAAA,WAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA;;AAC9B9P,IAAAA,IAAI,CAACiQ,cAAL,GAAsBrP,IAAI,CAACC,QAAL,CACnBC,GADmB,CACf,OADe,EACN,eADM,CAEnB2M,CAAAA,MAFmB,CAEZjJ,KAFY,CAEN0L,MAFM,CAEEC,IAAD,IAAUA,IAAI,CAACnG,IAAL,KAAchK,IAAI,CAACgK,IAAL,CAAUxF,KAFnC,CAAtB,CAAA;;AAGA,IAAA,IAAA,CAAA,WAAA,GAAIsL,KAAK,CAACM,IAAV,MAAI,IAAA,IAAA,WAAA,KAAA,KAAA,CAAA,IAAA,WAAA,CAAYC,QAAhB,EAA0B;AAAA,MAAA,IAAA,WAAA,CAAA;;AACxB,MAAA,MAAMC,EAAE,GAAG,WAAYC,CAAAA,IAAZ,CAAiBT,KAAK,CAACM,IAAN,CAAWC,QAA5B,CAAsC,CAAA,CAAtC,CAAX,CAAA;AACA,MAAMvH,MAAAA,IAAI,GAAGlI,CAAAA,WAAAA,GAAAA,IAAI,CAAC6I,KAAR,gDAAG,WAAY3I,CAAAA,GAAZ,CAAgBwP,EAAhB,CAAb,CAAA;;AACA,MAAA,IAAI,CAAAxH,IAAI,KAAJ,IAAA,IAAAA,IAAI,KAAA,KAAA,CAAJ,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAEkB,IAAN,MAAe,QAAnB,EAA6B;AAC3BhK,QAAAA,IAAI,CAACwQ,QAAL,GAAgBxQ,IAAI,CAACwQ,QAAL,KAAkBnL,SAAlB,GAA8ByD,IAAI,CAACe,MAAL,CAAY2G,QAA1C,GAAqDxQ,IAAI,CAACwQ,QAA1E,CAAA;AACD,OAAA;AACF,KAAA;;AACDxQ,IAAAA,IAAI,CAACwQ,QAAL,GACExQ,IAAI,CAACiQ,cAAL,CAAoBC,MAApB,CAA4BC,IAAD,IAAUA,IAAI,CAAClD,IAAL,KAAcjN,IAAI,CAACwQ,QAAxD,CAAkEpD,CAAAA,MAAlE,KAA6E,CAA7E,GACIpN,IAAI,CAACiQ,cAAL,CAAoB,CAApB,EAAuBhD,IAD3B,GAEIjN,IAAI,CAACwQ,QAAL,IAAiBxQ,IAAI,CAACiQ,cAAL,CAAoB,CAApB,EAAuBhD,IAH9C,CAAA;AAIAjN,IAAAA,IAAI,CAAC+O,WAAL,CAAiB9B,IAAjB,GAAA,CAAA,mBAAA,GACErM,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB6M,SAAS,CAAC7L,MAAM,CAACG,KAAP,CAAaqN,IAAd,EAAoBzQ,IAAI,CAAC+O,WAAL,CAAiB/C,KAArC,CAA5B,CADF,MAAA,IAAA,IAAA,mBAAA,KAAA,KAAA,CAAA,GAAA,mBAAA,GAEE8C,SAAS,CAAC7L,MAAM,CAACG,KAAP,CAAaqN,IAAd,EAAoBzQ,IAAI,CAAC+O,WAAL,CAAiB/C,KAArC,CAFX,CAAA;AAGAhM,IAAAA,IAAI,CAACgK,IAAL,CAAUiD,IAAV,GAAA,CAAA,oBAAA,GACErM,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB6M,SAAS,CAAC7L,MAAM,CAACG,KAAP,CAAaqN,IAAd,EAAoBzQ,IAAI,CAACgK,IAAL,CAAUxF,KAA9B,CAA5B,CADF,MAAA,IAAA,IAAA,oBAAA,KAAA,KAAA,CAAA,GAAA,oBAAA,GAEEsK,SAAS,CAAC7L,MAAM,CAACG,KAAP,CAAaqN,IAAd,EAAoBzQ,IAAI,CAACgK,IAAL,CAAUxF,KAA9B,CAFX,CAAA;AAGD,GAAA;AACD;AACF;AACA;;;AACE8K,EAAAA,mBAAmB,CAACJ,QAAD,EAAW;AAC5B,IAAA,IAAIA,QAAQ,CAAClF,IAAT,KAAkB,SAAtB,EAAiC,OAAA;AACjC,IAAA,MAAMhK,IAAI,GAAGkP,QAAb,CAF4B;;AAI5BlP,IAAAA,IAAI,CAAC0Q,MAAL,CAAY/M,KAAZ,GAAoB,EAApB,CAAA;AACA3D,IAAAA,IAAI,CAAC0Q,MAAL,CAAYlM,KAAZ,CAAkBmC,OAAlB,CAA0B,CAACnC,KAAD,EAAQoG,GAAR,KAAgB;AACxC,MAAA,IAAIjH,KAAK,GAAG/C,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB6M,SAAS,CAAC7L,MAAM,CAACG,KAAP,CAAauN,MAAd,EAAsBnM,KAAtB,CAA5B,CAAZ,CAAA;AACAxE,MAAAA,IAAI,CAAC0Q,MAAL,CAAY/M,KAAZ,IAAqBiH,GAAG,KAAK,CAAR,GAAYjH,KAAZ,GAAqB,CAAA,KAAA,EAAOA,KAAM,CAAvD,CAAA,CAAA;AACD,KAHD,EAL4B;AAU5B;;AACA3D,IAAAA,IAAI,CAACgM,KAAL,CAAW4E,GAAX,GAAiB5Q,IAAI,CAACgM,KAAL,CAAW4E,GAAX,KAAmBvL,SAAnB,GAA+BrF,IAAI,CAACgM,KAAL,CAAW4E,GAA1C,GAAgD,KAAjE,CAAA;AACA5Q,IAAAA,IAAI,CAACgM,KAAL,CAAWe,GAAX,GAAiB/M,IAAI,CAACgM,KAAL,CAAW4E,GAAX,GAAiB5Q,IAAI,CAACgM,KAAL,CAAWe,GAAX,IAAkB,CAAnC,GAAuC,CAAxD,CAAA;AACA/M,IAAAA,IAAI,CAACgM,KAAL,CAAW6E,OAAX,GAAqBtF,IAAI,CAACI,GAAL,CAAS3L,IAAI,CAACgM,KAAL,CAAWe,GAApB,EAAyB/M,IAAI,CAACgM,KAAL,CAAW6E,OAApC,CAArB,CAAA;AACA7Q,IAAAA,IAAI,CAACgM,KAAL,CAAW8E,OAAX,GAAqB,IAAKjB,CAAAA,OAAL,GAAetE,IAAI,CAACwB,GAAL,CAAS/M,IAAI,CAACgM,KAAL,CAAW6E,OAApB,EAA6B,CAA7B,CAAf,GAAiD,CAAtE,CAd4B;;AAgB5B,IAAA,IAAI7Q,IAAI,CAACgM,KAAL,CAAWe,GAAX,GAAiB,CAArB,EAAwB;AACtB,MAAA,IAAIgE,CAAC,GAAG,CAAC,EAAA,GAAK/Q,IAAI,CAACgM,KAAL,CAAWe,GAAjB,IAAwB/M,IAAI,CAACgM,KAAL,CAAWe,GAA3C,CAAA;AACA,MAAA,IAAIiE,CAAC,GAAG,GAAOzF,GAAAA,IAAI,CAAC0F,KAAL,CAAWC,MAAM,CAAC,CAAC3F,IAAI,CAAC4F,GAAL,CAASJ,CAAT,CAAc,GAAA,GAAf,EAAoBK,WAApB,CAAgC,EAAhC,CAAD,CAAjB,CAAA,GAA0D,GAA3D,GAAkE7F,IAAI,CAAC8F,IAAL,CAAUN,CAAV,CAAhF,CAAA;;AACA,MAAA,IAAI/Q,IAAI,CAAC8L,EAAL,CAAQwF,SAAR,CAAkBlE,MAAlB,GAA2BpN,IAAI,CAACgM,KAAL,CAAWe,GAA1C,EAA+C;AAC7C,QAAA,KAAK,IAAItH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzF,IAAI,CAACgM,KAAL,CAAWe,GAA/B,EAAoCtH,CAAC,EAArC,EAAyC;AACvCzF,UAAAA,IAAI,CAAC8L,EAAL,CAAQwF,SAAR,CAAkBrQ,IAAlB,CAAuBsK,IAAI,CAAC0F,KAAL,CAAYjR,IAAI,CAAC8L,EAAL,CAAQwF,SAAR,CAAkB7L,CAAC,GAAG,CAAtB,CAAA,GAA2BuL,CAA5B,GAAiC,CAA5C,CAAA,GAAiD,CAAxE,CAAA,CAAA;AACAhR,UAAAA,IAAI,CAAC8L,EAAL,CAAQyF,YAAR,CAAqBtQ,IAArB,CAA0BjB,IAAI,CAAC8L,EAAL,CAAQwF,SAAR,CAAkB7L,CAAlB,CAA1B,CAAA,CAAA;AACD,SAAA;AACF,OALD,MAKO;AACL,QAAA,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzF,IAAI,CAACgM,KAAL,CAAWe,GAA/B,EAAoCtH,CAAC,EAArC,EAAyC;AAAA,UAAA,IAAA,qBAAA,CAAA;;AACvCzF,UAAAA,IAAI,CAAC8L,EAAL,CAAQwF,SAAR,CAAkB7L,CAAlB,CAAuB8F,GAAAA,IAAI,CAAC0F,KAAL,CAAYjR,IAAI,CAAC8L,EAAL,CAAQwF,SAAR,CAAkB7L,CAAC,GAAG,CAAtB,CAAA,GAA2BuL,CAA5B,GAAiC,CAA5C,CAAA,GAAiD,CAAxE,CAAA;AACAhR,UAAAA,IAAI,CAAC8L,EAAL,CAAQyF,YAAR,CAAqB9L,CAArB,CAAA,GAAA,CAAA,qBAAA,GAA0BzF,IAAI,CAAC8L,EAAL,CAAQyF,YAAR,CAAqB9L,CAArB,CAA1B,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAqDzF,IAAI,CAAC8L,EAAL,CAAQwF,SAAR,CAAkB7L,CAAlB,CAArD,CAAA;AACD,SAAA;AACF,OAAA;AACF,KAAA;;AACD,IAAA,KAAK,IAAI,CAACmF,GAAD,EAAM4G,GAAN,CAAT,IAAuBnG,MAAM,CAAC3F,OAAP,CAAe1F,IAAI,CAACwR,GAAL,CAASC,MAAxB,CAAvB,EAAwD;AACtDD,MAAAA,GAAG,CAACE,IAAJ,GAAWC,KAAK,CAACC,IAAN,CAAW;AAAExE,QAAAA,MAAM,EAAEpN,IAAI,CAACgM,KAAL,CAAWe,GAAAA;AAArB,OAAX,EAAwCtH,CAAD,IAAY,KAAnD,CAAX,CAAA;;AACA,MAAQ+L,QAAAA,GAAG,CAACxH,IAAZ;AACE,QAAA,KAAK,SAAL;AACE,UAAA,KAAK,IAAI,CAACY,IAAD,EAAMiH,CAAN,CAAT,IAAqBhF,WAAW,CAAC5J,MAAM,CAACG,KAAP,CAAaC,UAAd,CAAhC,EAA2D;AACzD,YAAImO,IAAAA,GAAG,CAACvE,IAAJ,KAAarM,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmBgB,MAAM,CAACG,KAAP,CAAaC,UAAb,CAAwBuH,IAAxB,CAAnB,CAAjB,EAAmE4G,GAAG,CAAChN,KAAJ,GAAYoG,IAAZ,CAAA;AACpE,WAAA;;AACD,UAAA,MAAA;;AACF,QAAA,KAAK,OAAL;AACE,UAAA,KAAK,IAAI,CAACA,KAAD,EAAMiH,CAAN,CAAT,IAAqBhF,WAAW,CAAC5J,MAAM,CAACG,KAAP,CAAamK,MAAd,CAAhC,EAAuD;AACrD,YAAIiE,IAAAA,GAAG,CAACvE,IAAJ,KAAarM,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmBgB,MAAM,CAACG,KAAP,CAAamK,MAAb,CAAoB3C,KAApB,CAAnB,CAAjB,EAA+D4G,GAAG,CAAChN,KAAJ,GAAYoG,KAAZ,CAAA;AAChE,WAAA;;AACD,UAAA,MAAA;AAVJ,OAAA;AAYD,KAAA;;AACD,IAAK,KAAA,IAAInF,CAAC,GAAGzF,IAAI,CAACwR,GAAL,CAASM,KAAT,CAAe1E,MAA5B,EAAoCpN,IAAI,CAACgM,KAAL,CAAWe,GAAX,GAAiB/M,IAAI,CAACwR,GAAL,CAASM,KAAT,CAAe1E,MAApE,EAA4E3H,CAAC,EAA7E,EAAiF;AAC/E,MAAIA,IAAAA,CAAC,KAAK,CAAV,EAAa;AACXzF,QAAAA,IAAI,CAACwR,GAAL,CAASM,KAAT,CAAe7Q,IAAf,CAAoB,GAApB,CAAA,CAAA;AACD,OAFD,MAEO;AACLjB,QAAAA,IAAI,CAACwR,GAAL,CAASM,KAAT,CAAe7Q,IAAf,CAAoBjB,IAAI,CAACwR,GAAL,CAASM,KAAT,CAAerM,CAAC,GAAG,CAAnB,CAApB,CAAA,CAAA;AACD,OAAA;AACF,KAAA;;AACD,IAAK,KAAA,IAAIA,CAAC,GAAGzF,IAAI,CAACwR,GAAL,CAASM,KAAT,CAAe1E,MAA5B,EAAoCpN,IAAI,CAACgM,KAAL,CAAWe,GAAX,GAAiB/M,IAAI,CAACwR,GAAL,CAASM,KAAT,CAAe1E,MAApE,EAA4E3H,CAAC,EAA7E,EAAiF;AAC/EzF,MAAAA,IAAI,CAACwR,GAAL,CAASM,KAAT,CAAe7L,MAAf,CAAsBjG,IAAI,CAACwR,GAAL,CAASM,KAAT,CAAe1E,MAAf,GAAwB,CAA9C,EAAiD,CAAjD,CAAA,CAAA;AACD,KAAA;AACF,GAAA;AACD;AACF;AACA;;;AACEmC,EAAAA,gBAAgB,CAACL,QAAD,EAAW;AACzB,IAAA,IAAIA,QAAQ,CAAClF,IAAT,KAAkB,MAAtB,EAA8B,OAAA;AAC/B,GAAA;AACD;AACF;AACA;;;AACEwF,EAAAA,iBAAiB,CAACN,QAAD,EAAW;AAAA,IAAA,IAAA,oBAAA,CAAA;;AAC1B,IAAA,IAAIA,QAAQ,CAAClF,IAAT,KAAkB,OAAtB,EAA+B,OAAA;AAC/B,IAAMhK,MAAAA,IAAI,GAAGkP,QAAb,CAAA;;AACA,IAAA,KAAK,IAAI,CAACtE,GAAD,EAAMgC,EAAN,CAAT,IAAsBC,WAAW,CAAC5J,MAAM,CAACG,KAAP,CAAa0J,cAAd,CAAjC,EAAgE;AAC9D,MAAA,IAAI,EAAElC,GAAG,KAAK,OAAR,IAAmBA,GAAG,KAAK,SAA3B,IAAwCA,GAAG,KAAK,SAAlD,CAAJ,EAAkE;AAChE5K,QAAAA,IAAI,CAACgL,GAAL,CAASF,IAAT,CAAcF,GAAd,CAAmBpG,CAAAA,KAAnB,GAA2B0G,QAAQ,CAAClL,IAAI,CAACgL,GAAL,CAASF,IAAT,CAAcF,GAAd,CAAmBpG,CAAAA,KAApB,CAAR,IAAsC,CAAjE,CAAA;AACAxE,QAAAA,IAAI,CAACgL,GAAL,CAASF,IAAT,CAAcF,GAAd,CAAmBpG,CAAAA,KAAnB,IAA4BxE,IAAI,CAACgL,GAAL,CAASF,IAAT,CAAcF,GAAd,CAAA,CAAmBpG,KAAnB,KAA6B,KAA7B,GAAqCxE,IAAI,CAACgL,GAAL,CAASF,IAAT,CAAcF,GAAd,CAAmBrG,CAAAA,KAAxD,GAAgE,EAA5F,CAAA;AACD,OAAA;;AACDvE,MAAAA,IAAI,CAACgL,GAAL,CAASG,GAAT,CAAaP,GAAb,CAAkBpG,CAAAA,KAAlB,GAA0B0G,QAAQ,CAAClL,IAAI,CAACgL,GAAL,CAASG,GAAT,CAAaP,GAAb,CAAkBpG,CAAAA,KAAnB,CAAR,IAAqC,CAA/D,CAAA;AACAxE,MAAAA,IAAI,CAACgL,GAAL,CAASG,GAAT,CAAaP,GAAb,CAAkBpG,CAAAA,KAAlB,IAA2BxE,IAAI,CAACgL,GAAL,CAASG,GAAT,CAAaP,GAAb,CAAA,CAAkBpG,KAAlB,KAA4B,KAA5B,GAAoCxE,IAAI,CAACgL,GAAL,CAASG,GAAT,CAAaP,GAAb,CAAkBrG,CAAAA,KAAtD,GAA8D,EAAzF,CAAA;AACD,KAAA;;AACDvE,IAAAA,IAAI,CAACwK,QAAL,CAAchG,KAAd,2BAAsBxE,IAAI,CAACwK,QAAL,CAAchG,KAApC,MAAA,IAAA,IAAA,oBAAA,KAAA,KAAA,CAAA,GAAA,oBAAA,GAA6CvB,MAAM,CAACG,KAAP,CAAa2O,WAAb,CAAyB/R,IAAI,CAACgK,IAA9B,CAAoChK,CAAAA,IAAI,CAACgS,IAAzC,CAA7C,CAAA;AACAhS,IAAAA,IAAI,CAACwK,QAAL,CAAchG,KAAd,IAAuBxE,IAAI,CAACwK,QAAL,CAAcjG,KAArC,CAAA;AACD,GAAA;AACD;AACF;AACA;;;AACEmF,EAAAA,sBAAsB,GAAG;AACvB,IAAA,MAAMwF,QAAQ,GAAG,IAAKrF,CAAAA,MAAtB,CADuB;;AAGvB,IAAA,MAAMoI,IAAI,GAAI/C,QAAQ,CAAC+C,IAAT,GAAgB,EAA9B,CAAA;;AACA,IAAA,KAAK,IAAI,CAACjB,CAAD,EAAIa,CAAJ,CAAT,IAAmBhF,WAAW,CAAC5J,MAAM,CAACG,KAAP,CAAaC,UAAd,CAA9B,EAAyD;AACvD4O,MAAAA,IAAI,CAACjB,CAAD,CAAJ,GAAU,IAAKnB,CAAAA,OAAL,GAAeqC,WAAW,CAAC,KAAKxD,KAAL,CAAW7E,MAAZ,EAAqB,CAAA,gBAAA,EAAkBmH,CAAE,CAAzC,IAAA,CAAA,CAA1B,GAA4E,IAAtF,CAAA;AACD,KAAA;;AACD,IAAImB,IAAAA,UAAU,GAAG,CAAjB,CAAA;;AACA,IAAA,IAAIjD,QAAQ,CAAClF,IAAT,KAAkB,QAAtB,EAAgC;AAAA,MAAA,IAAA,WAAA,CAAA;;AAC9B,MAAMhK,MAAAA,IAAI,GAAGkP,QAAb,CAAA;AACAlP,MAAAA,IAAI,CAAC+O,WAAL,CAAiB/C,KAAjB,GAAyB,IAAA,CAAK6D,OAAL,GAAA,CAAA,WAAA,GACrB,KAAKnB,KADgB,MAAA,IAAA,IAAA,WAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GACrB,WAAY7E,CAAAA,MAAZ,CAAmBU,aAAnB,CAAiCkD,MAAjC,CAAwCyC,MAAxC,CAAgDkC,EAAD,IAAQA,EAAE,CAACnF,IAAH,KAAYjN,IAAI,CAACwQ,QAAxE,CAAkF,CAAA,CAAlF,CAAqFhM,CAAAA,KADhE,GAErB,CAFJ,CAAA;AAGAxE,MAAAA,IAAI,CAAC+O,WAAL,CAAiBsD,SAAjB,GAA6BzR,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,OAAlB,EAA2B,WAA3B,CAAwCd,CAAAA,IAAI,CAAC+O,WAAL,CAAiB/C,KAAzD,CAAA,CAAgErI,KAA7F,CAAA;AACA3D,MAAAA,IAAI,CAAC+O,WAAL,CAAiBnE,GAAjB,GAAuBhK,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,OAAlB,EAA2B,WAA3B,CAAwCd,CAAAA,IAAI,CAAC+O,WAAL,CAAiB/C,KAAzD,CAAA,CAAgEpB,GAAvF,CAAA;AACAuH,MAAAA,UAAU,GAAGnS,IAAI,CAAC+O,WAAL,CAAiB/C,KAAjB,GAAyB,CAAtC,CAAA;AACD,KAAA;;AACD,IAAIkD,IAAAA,QAAQ,CAACO,SAAb,EAAwB,IAAA,CAAKC,cAAL,CAAoBR,QAApB,EAA8BiD,UAA9B,EAA0CF,IAA1C,CAAA,CAAA;AACxB,IAAI/C,IAAAA,QAAQ,CAACS,SAAb,EAAwB,KAAKC,cAAL,CAAoBV,QAApB,EAA8B+C,IAA9B,CAAA,CAAA;AACzB,GAAA;;AACDvC,EAAAA,cAAc,CAACR,QAAD,EAAWiD,UAAX,EAAuBF,IAAvB,EAA6B;AACzC,IAAMjS,MAAAA,IAAI,GAAGkP,QAAb,CAAA;AACA,IAAA,IAAI,CAAClP,IAAI,CAACyP,SAAV,EAAqB,OAFoB;;AAIzC,IAAIvK,IAAAA,GAAG,GAAGgK,QAAQ,CAAClF,IAAT,KAAkB,QAAlB,IAA8BiI,IAAI,KAAK5M,SAAvC,GAAmD4M,IAAI,CAACvG,GAAxD,GAA8D1L,IAAI,CAACsS,MAA7E,CAJyC;;AAMzCtS,IAAAA,IAAI,CAACuS,MAAL,GAAc;AACZxS,MAAAA,OAAO,EAAE,OAAA,GAAUoS,UAAV,GAAuB,GAAvB,GAA6BjN,GAD1B;AAEZ2C,MAAAA,KAAK,EAAE,CAAC3C,GAAD,EAAMiN,UAAN,CAAA;AAFK,KAAd,CAAA;AAID,GAAA;;AACDvC,EAAAA,cAAc,CAACV,QAAD,EAAW+C,IAAX,EAAiB;AAC7B,IAAMjS,MAAAA,IAAI,GAAGkP,QAAb,CAAA;AACA,IAAA,IAAI,CAAClP,IAAI,CAAC2P,SAAV,EAAqB,OAAA;AACrB,IAAUT,QAAQ,CAAClF,IAAT,KAAkB,QAAlB,IAA8BiI,IAAI,KAAK5M,SAAvC,GAAmD4M,IAAI,CAAC1F,GAAxD,GAA8D,EAAxE;AACA,IAAA,MAAMiG,IAAI,GAAGtD,QAAQ,CAAClF,IAAT,KAAkB,QAAlB,GAA8B,CAAgBhK,cAAAA,EAAAA,IAAI,CAAC+O,WAAL,CAAiBnE,GAAI,CAAA,MAAA,CAAnE,GAA6E,cAA1F,CAAA;AACA,IAAI6H,IAAAA,UAAU,GAAGP,WAAW,CAAClS,IAAD,EAAOwS,IAAP,CAA5B,CAL6B;;AAO7BxS,IAAAA,IAAI,CAACsK,MAAL,CAAYwG,OAAZ,GAAsB;AACpB/Q,MAAAA,OAAO,EAAE,EADW;AAEpB8H,MAAAA,KAAK,EAAE4K,UAAAA;AAFa,KAAtB,CAAA;AAIAA,IAAAA,UAAU,KAAA,IAAV,IAAAA,UAAU,WAAV,GAAAA,KAAAA,CAAAA,GAAAA,UAAU,CAAE9L,OAAZ,CAAoB,CAACC,IAAD,EAAOgE,GAAP,KAAe;AACjCvG,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CsC,IAA7C,EADiC;;AAGjC5G,MAAAA,IAAI,CAACsK,MAAL,CAAYwG,OAAZ,CAAoB/Q,OAApB,IAA+B6G,IAAI,CAAC,CAAD,CAAJ,GAAW,CAA1C,CAAA,CAAA,CAAA;AACAA,MAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQD,OAAR,CAAgB,CAAC+L,OAAD,EAAUC,MAAV,KAAqB;AACnC3S,QAAAA,IAAI,CAACsK,MAAL,CAAYwG,OAAZ,CAAoB/Q,OAApB,IACEa,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmBgB,MAAM,CAACG,KAAP,CAAawP,WAAb,CAAyBF,OAAO,CAAC,CAAD,CAAhC,CAAnB,IACC,CAAG9R,CAAAA,EAAAA,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmBgB,MAAM,CAACG,KAAP,CAAa0J,cAAb,CAA4B4F,OAAO,CAAC,CAAD,CAAnC,CAAnB,CAA4D,CAFlE,CAAA,CAAA;AAGA1S,QAAAA,IAAI,CAACsK,MAAL,CAAYwG,OAAZ,CAAoB/Q,OAApB,IAA+B4S,MAAM,KAAK/L,IAAI,CAAC,CAAD,CAAJ,CAAQwG,MAAR,GAAiB,CAA5B,GAAgC,GAAhC,GAAsC,UAArE,CAAA;AACD,OALD,CAAA,CAAA;AAMApN,MAAAA,IAAI,CAACsK,MAAL,CAAYwG,OAAZ,CAAoB/Q,OAApB,IAA+B6K,GAAG,KAAK6H,UAAU,CAACrF,MAAX,GAAoB,CAA5B,GAAgC,EAAhC,GAAqC,aAApE,CAAA;AACD,KAXD,CAAA,CAAA;AAYD,GAAA;AACD;AACF;AACA;AACA;AACE;;;AACAW,EAAAA,WAAW,GAAG;AACZ;AACA,IAAA,IAAI,CAAC,IAAA,CAAKW,KAAV,EAAiB,OAAO,IAAP,CAAA;AACjB,IAAA,MAAMP,QAAQ,GAAG,IAAA,CAAKO,KAAL,CAAWX,WAAX,EAAjB,CAAA;AACA,IAAA,MAAM4B,SAAS,GAAG,IAAK9F,CAAAA,MAAL,CAAY8F,SAA9B,CAAA;AACA,IAAA,MAAMF,SAAS,GAAG,IAAA,CAAK5F,MAAL,CAAY4F,SAA9B,CALY;;AAOZtB,IAAAA,QAAQ,CAACrF,IAAT,GAAgBsF,OAAO,CAACC,KAAR,CAAcwE,SAAd,CAAwB,IAAA,CAAKhJ,MAA7B,CAAhB,CAPY;;AASZsE,IAAAA,QAAQ,CAAC2E,SAAT,GAAqBnD,SAAS,GAAG,IAAA,CAAK9F,MAAL,CAAYS,MAAZ,CAAmBwG,OAAnB,CAA2BjJ,KAA3B,CAAiC,CAAjC,CAAH,GAAyC,IAAvE,CATY;;AAWZsG,IAAAA,QAAQ,CAACjJ,GAAT,GAAeuK,SAAS;AAEpB,IAAK5F,IAAAA,CAAAA,MAAL,CAAY0I,MAAZ,CAAmB1K,KAAnB,CAAyB,CAAzB,CAFoB,GAGpB8H,SAAS;AAET,IAAA,IAAA,CAAK9F,MAAL,CAAYS,MAAZ,CAAmBwG,OAAnB,CAA2BjJ,KAA3B,CAAiC,CAAjC,CAFS,GAGT,IANJ,CAXY;;AAmBZsG,IAAAA,QAAQ,CAACgC,IAAT,GAAgBV,SAAS,GAAG,IAAK5F,CAAAA,MAAL,CAAY0I,MAAZ,CAAmB1K,KAAnB,CAAyB,CAAzB,CAAH,GAAiC,IAA1D,CAAA;AACA,IAAA,OAAOsG,QAAP,CAAA;AACD,GAAA;AACD;AACF;AACA;AACA;AACA;AACE;;;AACU,EAAA,MAAJpH,IAAI,CAAC;AAAE5E,IAAAA,eAAe,GAAG,IAApB;AAA0BD,IAAAA,QAA1B;AAAoCyN,IAAAA,SAAS,GAAG,KAAhD;AAAuDF,IAAAA,SAAS,GAAG,KAAnE;AAA0EsD,IAAAA,aAAa,GAAG,IAAA;AAA1F,GAAD,EAAmG;AAC3G,IAAIjK,IAAAA,IAAI,GAAG,IAAX,CAAA;AACA,IAAWA,IAAI,CAACwH,GAAhB;AACA,IAAA,MAAM0C,KAAK,GAAG,IAAKnJ,CAAAA,MAAnB,CAH2G;;AAI3G,IAAM6E,MAAAA,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;AACA,IAAcA,KAAH,KAAA,IAAA,IAAGA,KAAH,KAAGA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,KAAK,CAAE7E,OAArB;AACA8F,IAAAA,SAAS,GAAGqD,KAAK,CAACrD,SAAN,IAAmBA,SAA/B,CAAA;AACAF,IAAAA,SAAS,GAAGuD,KAAK,CAACvD,SAAN,IAAmBA,SAA/B,CAP2G;;AAS3G,IAAgBjB,WAAW,CAACC,UAAZ,CAAuB;AAAEC,MAAAA,KAAK,EAAEA,KAAAA;AAAT,KAAvB,EAAhB;AACA,IAAc,IAAKzB,CAAAA,KAVwF;;AAY3G,IAAA,MAAMgG,OAAO,GAAGtB,KAAK,CAACC,IAAN,CAAWhR,IAAI,CAACsS,IAAL,CAAUD,OAArB,CAAhB,CAZ2G;;AAc3G,IAAMxQ,MAAAA,KAAK,GAAG,IAAKoH,CAAAA,MAAL,CAAYpH,KAAZ,IAAqB,KAAnC,CAd2G;;AAgB3G,IAAOqG,OAAAA,IAAI,CAACqK,WAAL,CAAiB;AAAEjR,MAAAA,QAAF;AAAY6Q,MAAAA,aAAZ;AAA2BtD,MAAAA,SAA3B;AAAsCE,MAAAA,SAAtC;AAAiDsD,MAAAA,OAAjD;AAA0DxQ,MAAAA,KAAAA;AAA1D,KAAjB,CAAP,CAAA;AACD,GAAA;AACD;;AACA;;AACA;;;AACoB,EAAb2Q,OAAAA,aAAa,CAACvP,IAAD,EAAO;AACzBA,IAAAA,IAAI,CAACwP,EAAL,CAAQ,OAAR,EAAiB,sBAAjB,EAAyC,IAAA,CAAKC,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzC,CAAA,CAAA;AACA1P,IAAAA,IAAI,CAACwP,EAAL,CAAQ,OAAR,EAAiB,YAAjB,EAA+B,IAAA,CAAKG,wBAAL,CAA8BD,IAA9B,CAAmC,IAAnC,CAA/B,CAAA,CAAA;AACA1P,IAAAA,IAAI,CAACwP,EAAL,CAAQ,OAAR,EAAiB,qCAAjB,EAAwD,IAAA,CAAKI,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAxD,CAAA,CAAA;AACA1P,IAAAA,IAAI,CAAC6P,OAAL,CAAa,OAAb,CAAA,CAAA;AACA7P,IAAAA,IAAI,CAACwP,EAAL,CAAQ,OAAR,EAAiB,8BAAjB,EAAiD,UAAUlL,KAAV,EAAiB;AAAA,MAAA,IAAA,qBAAA,CAAA;;AAChEA,MAAAA,KAAK,CAACwL,cAAN,EAAA,CAAA;AACA,MAAA,MAAMC,OAAO,GAAG,IAAA,CAAKC,OAAL,CAAa,YAAb,CAAhB,CAAA;AACA,MAAA,CAAA,qBAAA,GAAAD,OAAO,CAACxP,aAAR,CAAsB,0BAAtB,iFAAmD0P,SAAnD,CAA6DC,MAA7D,CAAoE,OAApE,EAA6E5L,KAAK,CAAC6B,IAAN,IAAc,YAA3F,CAAA,CAAA;AACD,KAJD,CAAA,CAAA;AAKD,GAAA;AACD;;AACA;AACF;AACA;AACA;AACA;AACA;AACE;;;AAC8B,EAAjBsJ,aAAAA,iBAAiB,CAACnL,KAAD,EAAQ;AACpC9D,IAAAA,OAAO,CAACC,GAAR,CAAY6D,KAAZ,CAAA,CAAA;AACAA,IAAAA,KAAK,CAAC6L,wBAAN,EAAA,CAFoC;;AAIpC,IAAA,MAAMC,MAAM,GAAG9L,KAAK,CAAC+L,aAArB,CAAA;AACA,IAAA,MAAMC,IAAI,GAAGF,MAAM,CAACJ,OAAP,CAAe,YAAf,CAAb,CAAA;AACA,IAAMO,MAAAA,SAAS,GAAGD,IAAI,CAACN,OAAL,CAAa,UAAb,CAAA,CAAyBQ,OAAzB,CAAiCD,SAAnD,CAAA;AACA,IAAME,MAAAA,OAAO,GAAG1T,IAAI,CAAC2T,QAAL,CAAczT,GAAd,CAAkBsT,SAAlB,CAAhB,CAAA;AACA,IAAA,MAAMI,MAAM,GAAGP,MAAM,CAACI,OAAP,CAAeG,MAA9B,CAAA;AACA,IAAA,MAAMC,UAAU,GAAGR,MAAM,CAACJ,OAAP,CAAe,UAAf,CAAA,CAA2BQ,OAA3B,CAAmCK,QAAtD,CAToC;;AAWpC,IAAA,MAAMC,WAAW,GAAGH,MAAM,KAAK,MAA/B,CAAA;AACA,IAAA,IAAI,EAAEG,WAAW,IAAI/T,IAAI,CAACsS,IAAL,CAAU0B,IAAzB,IAAiCN,OAAO,CAACO,QAA3C,CAAJ,EAA0D,OAZtB;;AAcpC,IAAA,MAAMnG,KAAK,GAAG,MAAM,KAAKoG,iBAAL,CAAuBX,IAAvB,CAApB,CAAA;AACA,IAAA,IAAI,CAACzF,KAAL,EAAY,OAfwB;;AAiBpC,IAAMqG,MAAAA,UAAU,GAAGT,OAAO,CAACU,OAAR,CAAgB,OAAhB,EAAyB,UAAzB,CAAnB,CAjBoC;;AAmBpC,IAAMlM,MAAAA,IAAI,GAAGiM,UAAU,GAAG,IAAI,IAAJ,CAASA,UAAT,EAAqB;AAAEE,MAAAA,MAAM,EAAEvG,KAAAA;AAAV,KAArB,CAAH,GAA6CA,KAAK,CAACjF,KAAN,CAAY3I,GAAZ,CAAgBqT,IAAI,CAACE,OAAL,CAAaa,MAA7B,CAApE,CAAA;;AACA,IAAI,IAAA,CAACpM,IAAL,EAAW;AACT,MAAA,OAAOqM,EAAE,CAACC,aAAH,CAAiBC,KAAjB,CACLzU,IAAI,CAACoB,IAAL,CAAUuM,MAAV,CAAiB,2BAAjB,EAA8C;AAAEzF,QAAAA,IAAI,EAAEqL,IAAI,CAACE,OAAL,CAAaa,MAArB;AAA6BjI,QAAAA,IAAI,EAAEyB,KAAK,CAACzB,IAAAA;AAAzC,OAA9C,CADK,CAAP,CAAA;AAGD,KAAA;;AACD,IAAA,MAAMqI,UAAU,GAAGpK,QAAQ,CAACiJ,IAAI,CAACE,OAAL,CAAaiB,UAAd,CAAR,IAAqC,IAAxD,CAzBoC;;AA2BpC,IAAA,QAAQd,MAAR;AACE,MAAA,KAAK,QAAL,CAAA;AACA,MAAA,KAAK,WAAL;AACE,QAAA,IAAIe,GAAG,GAAG,MAAMzM,IAAI,CAAC0M,UAAL,CAAgB;AAC9BpU,UAAAA,QAAQ,EAAE+G,KAAK,CAACc,MADc;AAE9Bd,UAAAA,KAAK,EAAEA,KAFuB;AAG9BmN,UAAAA,UAAU,EAAEA,UAHkB;AAI9BG,UAAAA,SAAS,EAAEjB,MAAM,KAAK,WAAA;AAJQ,SAAhB,CAAhB,CADF;;AAQE,QAAM3Q,MAAAA,IAAI,GAAG6R,CAAC,CAACpB,OAAO,CAACtU,IAAR,CAAa6C,OAAd,CAAd,CAAA;AACA0S,QAAAA,GAAG,GAAG,MAAMA,GAAG,CAACrR,MAAJ,EAAZ,CATF;;AAWE,QAAA,IAAIuQ,UAAJ,EAAgB;AACd5Q,UAAAA,IAAI,CAAC8R,IAAL,CAAW,mBAAkBlB,UAAW,CAAA,EAAA,CAAxC,CAA6CkB,CAAAA,IAA7C,CAAkD,QAAlD,CAA4DC,CAAAA,WAA5D,CAAwEL,GAAxE,CAAA,CAAA;AACD,SAFD,MAEO;AACL1R,UAAAA,IAAI,CAAC8R,IAAL,CAAU,cAAV,CAAA,CAA0BA,IAA1B,CAA+B,QAA/B,CAAA,CAAyCC,WAAzC,CAAqDL,GAArD,CAAA,CAAA;AACD,SAfH;;;AAiBE,QAAMjB,MAAAA,OAAO,CAACuB,MAAR,CAAe;AAAEhT,UAAAA,OAAO,EAAEgB,IAAI,CAAC,CAAD,CAAJ,CAAQiS,SAAAA;AAAnB,SAAf,CAAN,CAAA;AACA,QAAA,MAAA;;AACF,MAAA,KAAK,SAAL;AACE,QAAMhN,MAAAA,IAAI,CAACiN,WAAL,CAAiB;AAAE5N,UAAAA,KAAF;AAASmN,UAAAA,UAAAA;AAAT,SAAjB,CAAN,CAAA;AACA,QAAA,MAAA;;AACF,MAAA,KAAK,MAAL;AACE,QAAA,MAAMrC,OAAO,GAAG,IAAA,CAAK+C,mBAAL,CAAyB7B,IAAzB,CAAhB,CAAA;;AACA,QAAA,KAAK,IAAI8B,KAAT,IAAkBhD,OAAlB,EAA2B;AACzB;AACA,UAAA,MAAM3K,OAAO,GAAGkG,WAAW,CAACC,UAAZ,CAAuB;AAAEyH,YAAAA,KAAK,EAAEC,MAAM,CAACD,KAAhB;AAAuBD,YAAAA,KAAK,EAAEA,KAAAA;AAA9B,WAAvB,CAAhB,CAFyB;;AAIzB,UAAMA,MAAAA,KAAK,CAACvH,KAAN,CAAY0H,eAAZ,CAA4BnC,MAAM,CAACI,OAAP,CAAetL,OAA3C,EAAoD;AAAEZ,YAAAA,KAAF;AAASG,YAAAA,OAAAA;AAAT,WAApD,CAAN,CAAA;AACD,SAAA;;AACD,QAAA,MAAA;;AACF,MAAA,KAAK,WAAL;AACE,QAAMQ,MAAAA,IAAI,CAACuN,aAAL,CAAmB;AAAElO,UAAAA,KAAAA;AAAF,SAAnB,CAAN,CAAA;AACA,QAAA,MAAA;;AACF,MAAA,KAAK,eAAL;AACE;AACA,QAAA,MAAMvF,QAAQ,GAAGhC,IAAI,CAAC0V,KAAL,CAAWH,MAAX,CAAkBI,eAAlB,CAAkCC,QAAlC,CAA2C1N,IAA3C,CAAjB,CAAA;AACA,QAAA,IAAIlG,QAAJ,EAAcA,QAAQ,CAAC6T,WAAT,EAAA,CAAA;AACd,QAAA,MAAA;AAxCJ,KA3BoC;;;AAsEpCxC,IAAAA,MAAM,CAACyC,QAAP,GAAkB,KAAlB,CAAA;AACD,GAAA;AACD;;AACA;AACF;AACA;AACA;AACA;;;AACiC,EAAxBlD,OAAAA,wBAAwB,CAACrL,KAAD,EAAQ;AACrCA,IAAAA,KAAK,CAACwL,cAAN,EAAA,CAAA;AACA,IAAA,MAAMgD,MAAM,GAAGxO,KAAK,CAAC+L,aAArB,CAAA;AACA,IAAA,MAAMC,IAAI,GAAGwC,MAAM,CAAC9C,OAAP,CAAe,YAAf,CAAb,CAAA;AACA,IAAA,MAAMhR,OAAO,GAAGsR,IAAI,CAAC/P,aAAL,CAAmB,eAAnB,CAAhB,CAAA;AACAvB,IAAAA,OAAO,CAAC+T,KAAR,CAAcC,OAAd,GAAwBhU,OAAO,CAAC+T,KAAR,CAAcC,OAAd,KAA0B,MAA1B,GAAmC,OAAnC,GAA6C,MAArE,CAAA;AACD,GAAA;;AACiB,EAAZC,MAAAA,YAAY,CAACvB,GAAD,EAAMwB,KAAN,EAAaC,OAAb,EAAsBC,MAAtB,EAA8BC,OAA9B,EAAuC;AACvD,IAAA,IAAI1S,KAAK,GAAG+Q,GAAG,CAACjK,KAAhB,CAAA;AACAjH,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCE,KAAlC,CAAA,CAAA;AACA+Q,IAAAA,GAAG,CAAC7U,KAAJ,CAAUiG,OAAV,CAAmB3B,IAAD,IAAU;AAC1B,MAAA,IAAI,EAAEA,IAAI,YAAYP,YAAlB,CAAJ,EAAqC;AACnC,QAAA,IAAIkB,UAAU,GAAGX,IAAI,CAAC/E,OAAL,CAAa0F,UAA9B,CAAA;AACA,QAAA,IAAIqF,GAAG,GAAG+L,KAAK,CAAC5M,QAAN,CAAeG,MAAf,CAAsB3E,UAAU,CAAC,CAAD,CAAhC,CAAA,CAAqCA,UAAU,CAAC,CAAD,CAA/C,CAAV,CAAA;AACA,QAAIqF,IAAAA,GAAG,CAAChB,IAAJ,KAAa,KAAjB,EAAwB3F,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAA,CAAA;AACxBD,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCE,KAAlC,CAAA,CAAA;AACAA,QAAAA,KAAK,IAAIwG,GAAG,CAAChB,IAAJ,KAAa,KAAb,GAAqBhF,IAAI,CAACsG,KAA1B,GAAkCC,IAAI,CAACI,GAAL,CAASX,GAAG,CAACxG,KAAb,EAAoBQ,IAAI,CAACsG,KAAzB,CAA3C,CAAA;AACAjH,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBE,KAAlB,CAAA,CAAA;AACD,OAAA;AACF,KATD,CAAA,CAAA;AAUAH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EAAmB,eAAnB,CAAA,CAAA;AACAwS,IAAAA,OAAO,IAAIxS,KAAX,CAAA;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB0S,OAAxB,CAAA,CAAA;AACA,IAAIG,IAAAA,GAAG,GAAG,EAAV,CAAA;AACAA,IAAAA,GAAG,CAAC,mBAAD,CAAH,GAA2BH,OAA3B,CAAA;;AACA,IAAA,IAAIpW,IAAI,CAACsS,IAAL,CAAU0B,IAAd,EAAoB;AAClBvQ,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAA,CAAA;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY2S,MAAZ,CAAA,CAAA;AACA,MAAA,MAAMA,MAAM,CAACpB,MAAP,CAAcsB,GAAd,CAAN,CAAA;AACD,KAJD,MAIO;AACL9S,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAA,CAAA;AACA1D,MAAAA,IAAI,CAACwW,MAAL,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC;AAC/BC,QAAAA,SAAS,EAAE,iBADoB;AAE/BJ,QAAAA,OAAO,EAAEA,OAFsB;AAG/BrB,QAAAA,MAAM,EAAEsB,GAHuB;AAI/B3S,QAAAA,KAAK,EAAEA,KAAAA;AAJwB,OAAjC,CAAA,CAAA;AAMD,KAAA;AACF,GAAA;;AACuB,EAAXiP,aAAAA,WAAW,CAACtL,KAAD,EAAQ;AAC9BA,IAAAA,KAAK,CAAC6L,wBAAN,EAAA,CAAA;AACA,IAAA,MAAMJ,OAAO,GAAGzL,KAAK,CAAC+L,aAAtB,CAAA;AACA,IAAA,MAAMC,IAAI,GAAGP,OAAO,CAACC,OAAR,CAAgB,YAAhB,CAAb,CAAA;AACA,IAAA,MAAMS,OAAO,GAAG1T,IAAI,CAAC2T,QAAL,CAAczT,GAAd,CAAkBqT,IAAI,CAACN,OAAL,CAAa,UAAb,EAAyBQ,OAAzB,CAAiCD,SAAnD,CAAhB,CAAA;AACA,IAAMK,MAAAA,UAAU,GAAGb,OAAO,CAACC,OAAR,CAAgB,YAAhB,CAAA,CAA8BQ,OAA9B,CAAsCK,QAAzD,CAAA;AACA,IAAMuB,MAAAA,KAAK,GAAG,MAAMsB,QAAQ,CAAC9C,UAAD,CAA5B,CAN8B;;AAQ9B,IAAMwC,MAAAA,MAAM,GAAGhB,KAAH,KAAA,IAAA,IAAGA,KAAH,KAAGA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,KAAK,CAAEvH,KAAtB,CAAA;AACA,IAAA,MAAMqI,KAAK,GAAGE,MAAM,CAACpN,MAArB,CAAA;AACA,IAAA,IAAImN,OAAO,GAAGD,KAAK,CAACS,MAAN,CAAahT,KAA3B,CAAA;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY0S,OAAZ,EAAqB,eAArB,EAX8B;;AAa9B,IAAA,MAAMtI,KAAK,GAAG,MAAM,KAAKoG,iBAAL,CAAuBX,IAAvB,CAApB,CAAA;AACA,IAAA,IAAI,CAACzF,KAAL,EAAY,OAdkB;;AAgB9B,IAAMqG,MAAAA,UAAU,GAAGT,OAAO,CAACU,OAAR,CAAgB,OAAhB,EAAyB,UAAzB,CAAnB,CAhB8B;;AAkB9B,IAAMlM,MAAAA,IAAI,GAAGiM,UAAU,GAAG,IAAI,IAAJ,CAASA,UAAT,EAAqB;AAAEE,MAAAA,MAAM,EAAEvG,KAAAA;AAAV,KAArB,CAAH,GAA6CA,KAAK,CAACjF,KAAN,CAAY3I,GAAZ,CAAgBqT,IAAI,CAACE,OAAL,CAAaa,MAA7B,CAApE,CAAA;;AACA,IAAI,IAAA,CAACpM,IAAL,EAAW;AACT,MAAA,OAAOqM,EAAE,CAACC,aAAH,CAAiBC,KAAjB,CACLzU,IAAI,CAACoB,IAAL,CAAUuM,MAAV,CAAiB,2BAAjB,EAA8C;AAAEzF,QAAAA,IAAI,EAAEqL,IAAI,CAACE,OAAL,CAAaa,MAArB;AAA6BjI,QAAAA,IAAI,EAAEyB,KAAK,CAACzB,IAAAA;AAAzC,OAA9C,CADK,CAAP,CAAA;AAGD,KAAA;;AACD,IAAA,MAAMsI,GAAG,GAAG,MAAMzM,IAAI,CAAC0M,UAAL,CAAgB;AAChCrN,MAAAA,KAAK,EAAEA,KADyB;AAEhC7F,MAAAA,OAAO,EAAE,KAAA;AAFuB,KAAhB,CAAlB,CAAA;AAIA,IAAMuB,MAAAA,IAAI,GAAG6R,CAAC,CAACpB,OAAO,CAACtU,IAAR,CAAa6C,OAAd,CAAd,CAAA;AACA,IAAA,IAAI4U,OAAO,GAAG,MAAMlC,GAAG,CAACrR,MAAJ,EAApB,CAAA;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAAC8R,IAAL,CAAW,CAAmBlB,iBAAAA,EAAAA,UAAW,IAAzC,CAA8CkB,CAAAA,IAA9C,CAAmD,cAAnD,CAAA,CAAmE,CAAnE,CAAZ,CAAA,CAAA;AACA9R,IAAAA,IAAI,CAAC8R,IAAL,CAAW,oBAAmBlB,UAAW,CAAA,EAAA,CAAzC,CAA8CkB,CAAAA,IAA9C,CAAmD,cAAnD,CAAmE+B,CAAAA,MAAnE,CAA0ED,OAA1E,CAAA,CAAA;AACA5T,IAAAA,IAAI,CAAC8R,IAAL,CAAW,CAAmBlB,iBAAAA,EAAAA,UAAW,CAAzC,EAAA,CAAA,CAAA,CAA8CkB,IAA9C,CAAmD,SAAnD,CAAA,CAA8DgC,MAA9D,EAAA,CAAA;AACAtT,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAAC,CAAD,CAAhB,CAAA,CAAA;AACA,IAAMyQ,MAAAA,OAAO,CAACuB,MAAR,CAAe;AAAEhT,MAAAA,OAAO,EAAEgB,IAAI,CAAC,CAAD,CAAJ,CAAQiS,SAAAA;AAAnB,KAAf,CAAN,CAAA;AACA,IAAA,MAAMhN,IAAI,CAACgO,YAAL,CAAkBvB,GAAlB,EAAuBwB,KAAvB,EAA8BC,OAA9B,EAAuCC,MAAvC,EAA+CxC,UAA/C,CAAN,CAAA;AACD,GAAA;AACD;;AACA;AACF;AACA;AACA;AACA;AACA;;;AACgC,EAAjBK,aAAAA,iBAAiB,CAACX,IAAD,EAAO;AACnC;AACA,IAAA,IAAIA,IAAI,CAACE,OAAL,CAAa6C,OAAjB,EAA0B;AACxB,MAAMjB,MAAAA,KAAK,GAAG,MAAMsB,QAAQ,CAACpD,IAAI,CAACE,OAAL,CAAa6C,OAAd,CAA5B,CAAA;AACA,MAAA,IAAI,CAACjB,KAAL,EAAY,OAAO,IAAP,CAFY;;AAIxB,MAAOA,OAAAA,KAAK,CAACvH,KAAb,CAAA;AACD,KAPkC;;;AASnC,IAAA,MAAMkJ,OAAO,GAAGzD,IAAI,CAACE,OAAL,CAAauD,OAA7B,CAAA;AACA,IAAOhX,OAAAA,IAAI,CAACiX,MAAL,CAAY/W,GAAZ,CAAgB8W,OAAhB,KAA4B,IAAnC,CAAA;AACD,GAAA;AACD;;AACA;AACF;AACA;AACA;AACA;AACA;;;AAC4B,EAAnB5B,OAAAA,mBAAmB,CAAC7B,IAAD,EAAO;AAC/B,IAAA,IAAIlB,OAAO,GAAGkD,MAAM,CAAC2B,MAAP,CAAcC,UAAd,CAAyB7H,MAAzB,CAAiCnL,CAAD,IAAO,CAAC,CAACA,CAAC,CAAC2J,KAA3C,CAAd,CAD+B;;AAG/B,IAAI,IAAA,CAACuE,OAAO,CAAC7F,MAAT,IAAmBxM,IAAI,CAACsS,IAAL,CAAU8E,SAAjC,EAA4C/E,OAAO,GAAGA,OAAO,CAACtO,MAAR,CAAe/D,IAAI,CAACsS,IAAL,CAAU8E,SAAV,CAAoBC,eAApB,EAAf,CAAV,CAAA;AAC5C,IAAA,IAAI,CAAChF,OAAO,CAAC7F,MAAb,EAAqB+H,EAAE,CAACC,aAAH,CAAiBxN,IAAjB,CAAsBhH,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB,4BAAnB,CAAtB,CAAA,CAAA;AACrB,IAAA,OAAOgR,OAAP,CAAA;AACD,GAAA;AACD;AACF;AACA;AACA;AACA;;;AACmB,EAAA,MAAXE,WAAW,CAAC;AAChB;AACAjR,IAAAA,QAFgB;AAGhB6Q,IAAAA,aAAa,GAAG,IAHA;AAIhBtD,IAAAA,SAAS,GAAGyI,OAAO,EAJH;AAKhBvI,IAAAA,SAAS,GAAGuI,OAAO,EALH;AAMhBjF,IAAAA,OAAO,GAAG,EANM;AAOhBxQ,IAAAA,KAAK,GAAGyV,OAAO,EAAA;AAPC,GAAA,GAQd,EARa,EAQT;AAAA,IAAA,IAAA,qBAAA,EAAA,mBAAA,CAAA;;AACN;AACA,IAAIC,IAAAA,GAAG,GAAG,EAAV,CAAA;AACA,IAAIC,IAAAA,EAAE,GAAG,EAAT,CAAA;AACA,IAAIC,IAAAA,OAAO,GAAG,EAAd,CAAA;AACA,IAAIC,IAAAA,OAAO,GAAG,EAAd,CAAA;AACA,IAAIC,IAAAA,MAAM,GAAG,EAAb,CAAA;AACA,IAAIC,IAAAA,GAAG,GAAG,EAAV,CAAA;AACA,IAAIC,IAAAA,GAAG,GAAG,EAAV,CAAA;AACA,IAAA,IAAIC,YAAY,GAAG,EAAnB,CATM;;AAWN,IAAMC,MAAAA,GAAG,GAAG,CAAA,qBAAA,GAAA,CAAA,mBAAA,GAAA,IAAA,CAAK9O,MAAL,CAAY0I,MAAf,MAAG,IAAA,IAAA,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,mBAAA,CAAoBoG,GAAvB,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAA8B,QAAvC,CAAA;AACA,IAAA,MAAM1C,KAAK,GAAG,IAAKvH,CAAAA,KAAL,CAAWuH,KAAzB,CAAA;;AACA,IAAA,IAAIhD,OAAO,CAAC7F,MAAR,KAAmB,CAAvB,EAA0B;AACxB;AACA,MAAIwL,IAAAA,OAAO,GAAGnJ,SAAS,GAAG,MAAM,IAAKoJ,CAAAA,UAAL,CAAgBpW,KAAhB,EAAuB;AAAEH,QAAAA,OAAO,EAAE,IAAA;AAAX,OAAvB,CAAT,GAAqD,IAA5E,CAAA;AACA,MAAIwW,IAAAA,OAAO,GAAGnJ,SAAS,IAAI,CAACF,SAAd,GAA0B,MAAM,IAAK+F,CAAAA,UAAL,CAAgB;AAAElT,QAAAA,OAAO,EAAE,IAAA;AAAX,OAAhB,CAAhC,GAAqE,IAAnF,CAAA;;AACA,MAAA,KAAK,IAAI,CAACsI,GAAD,EAAMrJ,MAAN,CAAT,IAA0B8J,MAAM,CAAC3F,OAAP,CAAeuN,OAAf,CAA1B,EAAmD;AACjD,QAAA,IAAI2F,OAAJ,EAAa;AACXnW,UAAAA,KAAK,GAAGmW,OAAO,CAAC3Y,OAAR,CAAgBwC,KAAxB,CADW;;AAGX2V,UAAAA,EAAE,CAACxN,GAAD,CAAF,GAAUrJ,MAAM,CAACmN,KAAP,CAAa7E,MAAb,CAAoBM,QAApB,CAA6BC,KAA7B,CAAmCuO,GAAnC,CAAwCnU,CAAAA,KAAlD,CAHW;;AAKX2T,UAAAA,GAAG,CAACvN,GAAD,CAAH,GAAW6E,SAAS,GAAIpE,MAAM,CAAC0N,IAAP,CAAYZ,GAAZ,EAAiB/K,MAAjB,KAA4B,CAA5B,IAAiC,CAAC3K,KAAlC,GAA0CmW,OAA1C,GAAoD,MAAMA,OAAO,CAACI,MAAR,EAA9D,GAAkF,IAAtG,CALW;;AAOX3U,UAAAA,OAAO,CAACC,GAAR,CAAY6T,GAAG,CAACvN,GAAD,CAAf,CAAA,CAPW;;AASXyN,UAAAA,OAAO,CAACzN,GAAD,CAAP,GAAe6E,SAAS,GAAG,MAAM0I,GAAG,CAACvN,GAAD,CAAH,CAAS1G,MAAT,EAAT,GAA6B,IAArD,CATW;;AAWX,UAAA,IAAIzD,GAAG,GAAG0X,GAAG,CAACvN,GAAD,CAAH,GAAWuN,GAAG,CAACvN,GAAD,CAAH,CAASlK,KAAT,CAAe,CAAf,CAAX,GAA+B,IAAzC,CAXW;;AAaXyX,UAAAA,GAAG,CAACvN,GAAD,CAAH,GAAWuN,GAAG,CAACvN,GAAD,CAAH,CAASU,KAApB,CAbW;;AAeXoN,UAAAA,YAAY,CAAC9N,GAAD,CAAZ,GACEnK,GAAG,CAAC6K,KAAJ,IAAa7K,GAAG,CAACR,OAAJ,CAAYmB,QAAzB,GAAoC,SAApC,GAAgDX,GAAG,CAAC6K,KAAJ,IAAa7K,GAAG,CAACR,OAAJ,CAAYoB,MAAzB,GAAkC,WAAlC,GAAgD,WADlG,CAfW;;AAkBXkX,UAAAA,MAAM,CAAC3N,GAAD,CAAN,GAAcuN,GAAG,CAACvN,GAAD,CAAH,GAAWwN,EAAE,CAACxN,GAAD,CAAb,GAAqB,KAArB,GAA6B,MAA3C,CAlBW;;AAoBX4N,UAAAA,GAAG,CAAC5N,GAAD,CAAH,GAAW2N,MAAM,CAAC3N,GAAD,CAAN,KAAgB,KAAhB,GAAwB,IAAxB,GAA+B,KAA1C,CAAA;AACD,SArBD,MAqBO;AACLnI,UAAAA,KAAK,GAAGqW,OAAO,CAAC7Y,OAAR,CAAgBwC,KAAxB,CADK;;AAGLgW,UAAAA,GAAG,CAAC7N,GAAD,CAAH,GAAW+E,SAAS,GAAItE,MAAM,CAAC0N,IAAP,CAAYN,GAAZ,EAAiBrL,MAAjB,KAA4B,CAA5B,IAAiC,CAAC3K,KAAlC,GAA0CqW,OAA1C,GAAoD,MAAMA,OAAO,CAACE,MAAR,EAA9D,GAAkF,IAAtG,CAHK;;AAKLV,UAAAA,OAAO,CAAC1N,GAAD,CAAP,GAAe+E,SAAS,GAAG,MAAM8I,GAAG,CAAC7N,GAAD,CAAH,CAAS1G,MAAT,EAAT,GAA6B,IAArD,CAAA;AACD,SAAA;AACF,OAAA;AACF,KAlCD,MAkCO;AACL;AACAiU,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS1I,SAAS,GAAG,MAAM,IAAKoJ,CAAAA,UAAL,CAAgBpW,KAAhB,CAAT,GAAkC,IAApD,CAFK;;AAILA,MAAAA,KAAK,GAAG0V,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,CAAOlY,OAAP,CAAewC,KAAxB,GAAgC,KAAxC,CAJK;;AAML4V,MAAAA,OAAO,CAAC,CAAD,CAAP,GAAa5I,SAAS,GAAG,MAAM0I,GAAG,CAAC,CAAD,CAAH,CAAOjU,MAAP,EAAT,GAA2B,IAAjD,CAAA;AACD,KAtDK;;;AAwDN,IAAoB+O,OAAO,CAACgG,IAAR,KAAiB,CAAjB,GAAsBxW,KAAK,GAAG,aAAH,GAAmB,WAA9C,GAA6D,WAAjF;AACA,IAAA,MAAMyW,YAAY,GAAG;AACnB;AACAxK,MAAAA,KAAK,EAAE,IAAKA,CAAAA,KAAL,CAAW7E,MAFC;AAGnBqN,MAAAA,OAAO,EAAE,CAAAjB,KAAK,KAAL,IAAA,IAAAA,KAAK,KAAA,KAAA,CAAL,GAAAA,KAAAA,CAAAA,GAAAA,KAAK,CAAEkD,IAAP,KAAe,IAHL;AAInBrQ,MAAAA,IAAI,EAAE,IAJa;AAKnB9I,MAAAA,IAAI,EAAE,IAAKoZ,CAAAA,WAAL,EALa;AAMnB;AACAjK,MAAAA,MAAM,EAAE,IAAA,CAAKA,MAPM;AAQnBM,MAAAA,SARmB;AASnBE,MAAAA,SATmB;AAUnBwI,MAAAA,GAVmB;AAWnBE,MAAAA,OAXmB;AAYnBpF,MAAAA,OAZmB;AAanB;AACAoG,MAAAA,KAAK,EAAE,IAAA,CAAK3K,KAAL,CAAW4K,OAAX,IAAsB1Y,IAAI,CAACsS,IAAL,CAAU0B,IAdpB;AAenBwD,MAAAA,EAfmB;AAgBnBG,MAAAA,MAhBmB;AAiBnBC,MAAAA,GAjBmB;AAkBnBF,MAAAA,OAlBmB;AAmBnBI,MAAAA,YAAAA;AAnBmB,KAArB,CAAA;AAqBA,IAAM7U,MAAAA,IAAI,GAAG,MAAMf,cAAc,CAAE,yDAAF,EAA4DoW,YAA5D,CAAjC,CA9EM;;AAgFN,IAAA,MAAMK,QAAQ,GAAG;AACfrG,MAAAA,IAAI,EAAEtS,IAAI,CAACsS,IAAL,CAAUlT,IAAV,CAAewZ,GADN;AAEfxP,MAAAA,IAAI,EAAEyP,KAAK,CAACC,kBAAN,CAAyBC,KAFhB;AAGf9W,MAAAA,OAAO,EAAEgB,IAHM;AAIf;AACA9B,MAAAA,MAAM,EAAE,IAAK8H,CAAAA,MAAL,CAAY+P,UAAZ,IAA0B,KAAK3M,IALxB;AAMf;AACA3E,MAAAA,OAAO,EAAEkG,WAAW,CAACC,UAAZ,CAAuB;AAAEC,QAAAA,KAAK,EAAE,IAAA,CAAKA,KAAd;AAAqBuH,QAAAA,KAAAA;AAArB,OAAvB,CAPM;AAQfnG,MAAAA,KAAK,EAAE;AAAE,QAAkB,gBAAA,EAAA,IAAA;AAApB,OAAA;AARQ,KAAjB,CAhFM;;AA2FN;AACJ;AACA;AACA;AACI;;AACAtB,IAAAA,WAAW,CAACqL,aAAZ,CAA0BN,QAA1B,EAAoCrX,QAAQ,IAAItB,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAA0B,UAA1B,CAAhD,EAhGM;;AAkGN,IAAOiS,OAAAA,aAAa,GAAGvE,WAAW,CAACsL,MAAZ,CAAmBP,QAAnB,CAAH,GAAkCA,QAAtD,CAAA;AACD,GAAA;AACD;AACF;AACA;AACA;AACA;;;AACEH,EAAAA,WAAW,CAACW,WAAW,GAAG,EAAf,EAAmB;AAC5B,IAAA,MAAM/Z,IAAI,GAAGoO,OAAO,CAACC,KAAR,CAAcwE,SAAd,CAAwB,IAAKhJ,CAAAA,MAA7B,CAAb,CAD4B;;AAO5B;AACJ;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,IAAA,OAAO7J,IAAP,CAAA;AACD,GAAA;AACD;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;;AACE;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;;;AACkB,EAAA,MAAV6Y,UAAU,CAACpW,KAAK,GAAGyV,OAAO,EAAhB,EAAoB5V,OAAO,GAAG4V,OAAO,EAArC,EAAyCjY,OAAO,GAAG,EAAnD,EAAuD;AAAA,IAAA,IAAA,cAAA,CAAA;;AACrEoE,IAAAA,OAAO,CAACC,GAAR,CAAYhC,OAAZ,CAAA,CAAA;AACA,IAAiB,IAAKuH,CAAAA,OAF+C;;AAIrE,IAAc,IAAK6E,CAAAA,KAAL,CAAWoB,KAAX,CAAiBwG,KAAjB,IAA0B,GAAxC;AACA,IAAA,IAAIlU,KAAK,GAAI,CAAE,EAAA,IAAA,CAAK6K,IAAK,CAAKrM,GAAAA,EAAAA,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB,kBAAnB,CAAuC,CAArE,CAAA,CAAA;AACA,IAAM,MAAA;AAAE4F,MAAAA,KAAF;AAASsG,MAAAA,QAAAA;AAAT,KAAsB,GAAA,IAAA,CAAK6L,cAAL,EAA5B,CAAA;AACA,IAAM/G,MAAAA,OAAO,GAAGrS,IAAI,CAACsS,IAAL,CAAUD,OAA1B,CAPqE;;AASrE,IAAI,IAAA,CAAA,CAAA,cAAA,GAAAhT,OAAO,CAAC4H,KAAR,kEAAeuF,MAAf,IAAwB,CAA5B,EAA+B;AAC7B;AACAvF,MAAAA,KAAK,CAAC5G,IAAN,CAAW,GAAGhB,OAAO,CAAC4H,KAAtB,CAAA,CAAA;AACD,KAAA;;AACD,IAAA,IAAIoS,UAAU,GAAG;AACfpS,MAAAA,KAAK,EAAEA,KADQ;AAEf6G,MAAAA,KAAK,EAAE,IAAA,CAAKA,KAFG;AAGf1O,MAAAA,IAAI,EAAEmO,QAHS;AAIf/L,MAAAA,KAAK,EAAEA,KAJQ;AAKfL,MAAAA,MAAM,EAAEK,KALO;AAMfgG,MAAAA,aAAa,EAAE;AACb8R,QAAAA,KAAK,EAAE,GAAA;AADM,OANA;AASf7R,MAAAA,WAAW,EAAE,IATE;AAUfpI,MAAAA,OAAO,EAAE;AACP6Z,QAAAA,MAAM,EAAE,KAAA;AADD,OAVM;AAafxY,MAAAA,WAAW,EAAE2R,OAbE;AAcf3Q,MAAAA,OAAO,EAAEA,OAdM;AAefG,MAAAA,KAAK,EAAEA,KAAAA;AAfQ,KAAjB,CAbqE;;AA+BrEwX,IAAAA,UAAU,GAAG3L,WAAW,CAAC2L,UAAD,EAAaha,OAAb,CAAxB,CA/BqE;;AAiCrE,IAAA,MAAM8G,IAAI,GAAG,MAAMkB,OAAO,CAACgS,UAAD,CAA1B,CAAA;AACA,IAAA,IAAIlT,IAAI,KAAK,KAAb,EAAoB,OAAO,IAAP,CAAA;AACpB,IAAA,OAAOA,IAAP,CAAA;AACD,GAAA;;AACDyO,EAAAA,UAAU,CAAC;AACTpU,IAAAA,QAAQ,GAAG,KADF;AAET+G,IAAAA,KAAK,GAAG,IAFC;AAGTmN,IAAAA,UAAU,GAAG,IAHJ;AAITG,IAAAA,SAAS,GAAG,KAJH;AAKTxV,IAAAA,OAAO,GAAG,EALD;AAMTwC,IAAAA,KAAK,GAAGyV,OAAO,EANN;AAOT5V,IAAAA,OAAO,GAAG4V,OAAO,EAAA;AAPR,GAAA,GAQP,EARM,EAQF;AAAA,IAAA,IAAA,IAAA,CAAA;;AACN7T,IAAAA,OAAO,CAACC,GAAR,CAAYhC,OAAZ,CAAA,CAAA;AACA,IAAM0Q,MAAAA,KAAK,GAAG,IAAA,CAAKnJ,MAAnB,CAAA;AACA,IAAc,IAAA,CAAK6E,KAAL,CAAW7E,OAHnB;;AAKN,IAAMhC,MAAAA,KAAK,GAAGmL,KAAK,CAAC1I,MAAN,CAAawG,OAAb,CAAqBjJ,KAArB,CAA2B6F,GAA3B,CAAgCyM,CAAD,IAAOA,CAAC,CAAC,CAAD,CAAvC,CAAd,CALM;;AAON,IAAM5T,MAAAA,OAAO,GAAGyM,KAAK,CAAC1I,MAAN,CAAawG,OAAb,CAAqBjJ,KAArB,CAA2B6F,GAA3B,CAAgCyM,CAAD,IAC7CA,CAAC,CAAC,CAAD,CAAD,CAAKzM,GAAL,CAAS,CAAC0M,CAAD,EAAIvT,GAAJ,KAAY;AACnB;AACA,MAAIwT,IAAAA,CAAC,GAAGzZ,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmBgB,MAAM,CAACG,KAAP,CAAawP,WAAb,CAAyBwH,CAAC,CAAC,CAAD,CAA1B,CAAnB,CAAR,CAFmB;;AAInB,MAAA,IAAIE,CAAC,GAAG1Z,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmBgB,MAAM,CAACG,KAAP,CAAa0J,cAAb,CAA4BsN,CAAC,CAAC,CAAD,CAA7B,CAAnB,CAAR,CAAA;AACA,MAAA,IAAIjD,GAAG,GAAG;AAAEvM,QAAAA,GAAG,EAAE/D,GAAP;AAAYlD,QAAAA,KAAK,EAAG,CAAE0W,EAAAA,CAAE,IAAGC,CAAE,CAAA,CAAA;AAA7B,OAAV,CAAA;AACA,MAAA,OAAOnD,GAAP,CAAA;AACD,KAPD,CADc,CAAhB,CAPM;;AAkBNlX,IAAAA,OAAO,CAAC0F,UAAR,GAAqBqN,KAAK,CAAC1I,MAAN,CAAawG,OAAb,CAAqBjJ,KAArB,CAA2B6F,GAA3B,CAAgCyM,CAAD,IAAOA,CAAC,CAAC,CAAD,CAAvC,CAArB,CAAA;AACA,IAAM1K,MAAAA,SAAS,GAAG,KAAlB,CAAA;AACA,IAAA,MAAME,SAAS,GAAG,IAAlB,CApBM;;AAsBN,IAAMxB,MAAAA,QAAQ,GAAG,IAAKJ,CAAAA,WAAL,CAAiB0B,SAAjB,EAA4BE,SAA5B,CAAjB,CAAA;AACA,IAAA,MAAMsK,UAAU,GAAG;AACjBvL,MAAAA,KAAK,EAAE,IAAA,CAAKA,KADK;AAEjB;AACAtN,MAAAA,QAAQ,EAAEA,CAAAA,IAAAA,GAAAA,QAAF,KAAEA,IAAAA,IAAAA,QAAF,cAAEA,QAAF,GAAc+G,KAAd,KAAA,IAAA,IAAcA,KAAd,KAAcA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,KAAK,CAAEoS,MAArB,uCAA+B,KAHtB;AAIjBva,MAAAA,IAAI,EAAEmO,QAJW;AAKjBhG,MAAAA,KAAK,EAAEA,KALU;AAMjBN,MAAAA,KAAK,EAAEA,KANU;AAOjBvF,MAAAA,OAAO,EAAEA,OAPQ;AAQjBiE,MAAAA,OAAO,EAAEA,OARQ;AASjB9D,MAAAA,KAAK,EAAEA,KAAAA;AATU,KAAnB,CAvBM;;AAmCN,IAAO2G,OAAAA,UAAU,CAACkF,WAAW,CAAC2L,UAAD,EAAaha,OAAb,CAAZ,CAAjB,CAAA;AACD,GAAA;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE+Z,EAAAA,cAAc,GAAG;AACf,IAAM9K,MAAAA,QAAQ,GAAG,IAAA,CAAKrF,MAAtB,CAAA;AACA,IAAM4F,MAAAA,SAAS,GAAG,IAAlB,CAAA;AACA,IAAA,MAAME,SAAS,GAAG,KAAlB,CAHe;AAKf;;AACA,IAAMxB,MAAAA,QAAQ,GAAG,IAAKJ,CAAAA,WAAL,CAAiB0B,SAAjB,EAA4BE,SAA5B,CAAjB,CAAA;AACAtL,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB6J,QAAzB,EAPe;;AASf,IAAA,MAAMtG,KAAK,GAAG,EAAd,CATe;AAWf;;AACA,IAAIqH,IAAAA,QAAQ,CAACsL,WAAb,EAA0B;AACxB;AACA3S,MAAAA,KAAK,CAAC5G,IAAN,CAAWiO,QAAQ,CAACsL,WAApB,EAFwB;;AAIxB,MAAA,IAAA,CAAKrL,MAAL,CAAYsL,KAAZ,GAAoBvL,QAAQ,CAACsL,WAA7B,CAAA;AACD,KAjBc;;;AAmBf,IAAA,IAAI,CAAC,IAAA,CAAK3K,OAAV,EAAmB,OAAO;AAAE1B,MAAAA,QAAF;AAAYtG,MAAAA,KAAAA;AAAZ,KAAP,CAnBJ;;AAqBfA,IAAAA,KAAK,CAAC5G,IAAN,CAAW,OAAX,EAAoB,MAApB,CAAA,CAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;;AACA,IAAA,MAAM8F,IAAI,GAAG,IAAIlH,IAAJ,CAASgI,KAAK,CAACc,IAAN,CAAW,GAAX,CAAT,EAA0BwF,QAA1B,CAAb,CApDe;;AAsDf,IAAMpO,MAAAA,OAAO,GAAGiH,mBAAmB,CAACD,IAAI,CAAChH,OAAN,CAAnC,CAtDe;;AAwDf,IAAA,IAAA,CAAKoP,MAAL,CAAYsL,KAAZ,GAAoB,CAAC,QAAQC,IAAR,CAAa3a,OAAb,CAAD,GAA0B,CAAIA,EAAAA,EAAAA,OAAQ,EAAtC,GAA0CA,OAA9D,CAxDe;;AA0Df,IAAO,OAAA;AAAEoO,MAAAA,QAAF;AAAYtG,MAAAA,KAAAA;AAAZ,KAAP,CAAA;AACD,GAAA;;AAhzBiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNpC;AACA;AACA;AACA;AACA;AACO,SAAS8S,oBAAT,CAA8BxS,KAA9B,EAAqCkR,KAArC,EAA4C;AAC/ClR,EAAAA,KAAK,CAACwL,cAAN,EAAA,CAAA;AACA,EAAA,MAAM0G,CAAC,GAAGlS,KAAK,CAAC+L,aAAhB,CAF+C;;AAI/C,EAAA,MAAM0G,EAAE,GAAGP,CAAC,CAACxG,OAAF,CAAU,IAAV,CAAX,CAAA;AACA,EAAMgH,MAAAA,MAAM,GAAGD,EAAE,CAACvG,OAAH,CAAWyG,QAAX,GAAsBzB,KAAK,CAAC0B,OAAN,CAAcja,GAAd,CAAkB8Z,EAAE,CAACvG,OAAH,CAAWyG,QAA7B,CAAtB,GAA+D,IAA9E,CAL+C;;AAO/C,EAAA,QAAQT,CAAC,CAAChG,OAAF,CAAUG,MAAlB;AACI,IAAA,KAAK,QAAL;AACI,MAAA,OAAO6E,KAAK,CAAC2B,uBAAN,CAA8B,cAA9B,EAA8C,CAAC;AAC9CrX,QAAAA,KAAK,EAAE,YADuC;AAE9CsX,QAAAA,IAAI,EAAE,oBAFwC;AAG9CC,QAAAA,MAAM,EAAE7B,KAAK,CAACF,IAHgC;AAI9C,QAAmByB,iBAAAA,EAAAA,EAAE,CAACvG,OAAH,CAAW8G,UAAX,KAA0B,WAA1B,GAAwC,CAAxC,GAA4C9V,SAJjB;AAK9CqR,QAAAA,QAAQ,EAAEkE,EAAE,CAACvG,OAAH,CAAW8G,UAAX,KAA0B,UAAA;AALU,OAAD,CAA9C,CAAP,CAAA;;AAOJ,IAAA,KAAK,MAAL;AACI,MAAA,OAAON,MAAM,CAACO,KAAP,CAAalX,MAAb,CAAoB,IAApB,CAAP,CAAA;;AACJ,IAAA,KAAK,QAAL;AACI,MAAO2W,OAAAA,MAAM,CAACQ,MAAP,EAAP,CAAA;;AACJ,IAAA,KAAK,QAAL;AACI,MAAOR,OAAAA,MAAM,CAAChF,MAAP,CAAc;AAAEa,QAAAA,QAAQ,EAAE,CAACmE,MAAM,CAAC7a,IAAP,CAAY0W,QAAAA;AAAzB,OAAd,CAAP,CAAA;AAdR,GAAA;AAgBH,CAAA;AACD;AACA;AACA;AACA;AACA;;AACO,SAAS4E,6BAAT,CAAuCP,OAAvC,EAAgD;AACnD;AACA,EAAA,MAAMQ,UAAU,GAAG;AACfC,IAAAA,SAAS,EAAE;AACPxR,MAAAA,IAAI,EAAE,WADC;AAEPrG,MAAAA,KAAK,EAAE,mBAFA;AAGPoX,MAAAA,OAAO,EAAE,EAAA;AAHF,KADI;AAMfU,IAAAA,OAAO,EAAE;AACLzR,MAAAA,IAAI,EAAE,SADD;AAELrG,MAAAA,KAAK,EAAE,iBAFF;AAGLoX,MAAAA,OAAO,EAAE,EAAA;AAHJ,KANM;AAWfW,IAAAA,QAAQ,EAAE;AACN1R,MAAAA,IAAI,EAAE,UADA;AAENrG,MAAAA,KAAK,EAAE,kBAFD;AAGNoX,MAAAA,OAAO,EAAE,EAAA;AAHH,KAAA;AAXK,GAAnB,CAFmD;;AAoBnD,EAAA,KAAK,IAAIY,CAAT,IAAcZ,OAAd,EAAuB;AACnB;AACAY,IAAAA,CAAC,CAACC,cAAF,EAAA,CAFmB;AAGnB;;;AACA,IAAA,IAAID,CAAC,CAAC3b,IAAF,CAAO0W,QAAX,EACI6E,UAAU,CAACG,QAAX,CAAoBX,OAApB,CAA4B9Z,IAA5B,CAAiC0a,CAAjC,EADJ;AAAA,SAGK,IAAIA,CAAC,CAACE,WAAN,EACDN,UAAU,CAACC,SAAX,CAAqBT,OAArB,CAA6B9Z,IAA7B,CAAkC0a,CAAlC,EADC;AAAA,SAIDJ,UAAU,CAACE,OAAX,CAAmBV,OAAnB,CAA2B9Z,IAA3B,CAAgC0a,CAAhC,CAAA,CAAA;AACP,GAAA;;AACD,EAAA,OAAOJ,UAAP,CAAA;AACH;;;;;;;;;;;;;4CCuB2D,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;;;GAAlE,MAA+G,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;6CAArD,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;4CAGP,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;;;GAAnE,MAA+G,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;6CAApD,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;AAJhE,CAAA,IAAA,SAAA,WAAA,GAAG,QAAK,SAAS,IAAAO,mBAAA,CAAA,GAAA,CAAA,CAAA;AAGjB,CAAA,IAAA,SAAA,WAAA,GAAG,QAAK,SAAS,IAAAC,iBAAA,CAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;AAHjB,GAAA,YAAA,GAAG,QAAK,SAAS,EAAA;;;;;;;;;;;;;AAGjB,GAAA,YAAA,GAAG,QAAK,SAAS,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;OA3FT,GAAG,EAAA,GAAA,OAAA,CAAA;OACH,GAAG,EAAA,GAAA,OAAA,CAAA;OACH,IAAI,EAAA,GAAA,OAAA,CAAA;OACJ,OAAO,EAAA,GAAA,OAAA,CAAA;OACP,IAAI,EAAA,GAAA,OAAA,CAAA;OACT,GAAG,GAAG,UAAU,CAAC,iBAAiB,CAAA,CAAA;;OAClC,OAAO,GAAG,UAAU,CAAC,iBAAiB,CAAA,CAAA;;KACxC,QAAQ,CAAA;OACD,SAAS,EAAA,GAAA,OAAA,CAAA;;UAqBX,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAA;EAC7B,GAAG,CAAC,MAAM,CAAE,KAAK,IAAA;WACP,IAAI;SACL,YAAY;AACf,KAAA,KAAK,CAAC,UAAU,CAAC,OAAO,CAAE,CAAA,KAAK,IAAI,CAAC,CAAA;;SAEjC,QAAQ;AACX,KAAA,KAAK,CAAC,MAAM,CAAC,OAAO,CAAE,CAAA,KAAK,IAAI,CAAC,CAAA;;SAE7B,UAAU;KACb,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAA,CAAE,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,CAAA;;;;AAGnD,GAAA,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,IAAI,IAAI,CAAA;AACjC,GAAA,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,IAAI,IAAI,CAAA;UACzB,KAAK,CAAA;;;EAEd,OAAO,CAAC,MAAM,CAAE,SAAS,IAAA;GACvB,SAAS,CAAC,IAAI,CAAS,EAAA,IAAI,EAAW,OAAO,EAAE,KAAK,EAAE,IAAI,EAAA,CAAA,CAAA;UACnD,SAAS,CAAA;;;;UAGX,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAA;EAC7B,GAAG,CAAC,MAAM,CAAE,KAAK,IAAA;WACP,IAAI;SACL,YAAY;AACf,KAAA,KAAK,CAAC,UAAU,CAAC,OAAO,CAAE,CAAA,KAAK,IAAI,CAAC,CAAA;;SAEjC,QAAQ;AACX,KAAA,KAAK,CAAC,MAAM,CAAC,OAAO,CAAE,CAAA,KAAK,IAAI,CAAC,CAAA;;SAE7B,UAAU;KACb,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAA,CAAE,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,CAAA;;;;AAGjD,GAAA,IAAA,KAAK,IAAI,CAAC,CAAA;;AACd,GAAA,QAAQ,CAAC,OAAO,CAAE,CAAA,MAAM,EAAE,GAAG,KAAA;AAC3B,IAAA,KAAK,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,IAAI,MAAM,CAAC,OAAO,KAAK,OAAO,IAAI,GAAG,GAAG,KAAK;MAAG,GAAG;MAAG,KAAK,CAAA;;;AAErF,GAAA,IAAA,KAAK,IAAI,CAAC,EAAA;IACZ,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,IAAI,QAAQ,CAAC,KAAK,CAAA,CAAE,KAAK,CAAA;IAClD,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAA,CAAE,KAAK,CAAA;WAC1C,KAAK,CAAA;;;;EAGhB,OAAO,CAAC,MAAM,CAAE,SAAS,IAAA;AACnB,GAAA,IAAA,KAAK,IAAI,CAAC,CAAA;;AACd,GAAA,SAAS,CAAC,OAAO,CAAE,CAAA,MAAM,EAAE,GAAG,KAAA;AAC5B,IAAA,KAAK,GAAG,MAAM,CAAC,IAAI,KAAK,IAAI,IAAI,MAAM,CAAC,OAAO,KAAK,OAAO,IAAI,GAAG,GAAG,KAAK;MAAG,GAAG;MAAG,KAAK,CAAA;;;AAErF,GAAA,IAAA,KAAK,IAAI,CAAC,EAAA;AACZ,IAAA,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAA,CAAA;AACzB,IAAA,SAAS,GAAG,SAAS,CAAA;;;UAEhB,SAAS,CAAA;;;;6BAMgE,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAA,CAAA;+BAGrB,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAA,CAAA;;;;;;;;;;;;;GAnF1G;YACS,IAAI;UACL,YAAY;AACf,MAAA,YAAA,CAAA,CAAA,EAAA,QAAQ,GACN,IAAI,CAAC,IAAI,CAAE,CAAA,OAAO,CAAE,CAAA,KAAK,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAE,CAAA,OAAO,CAAE,CAAA,KAAK,KAAK,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAA,CAAA;;UAEvG,QAAQ;AACX,MAAA,YAAA,CAAA,CAAA,EAAA,QAAQ,GACN,IAAI,CAAC,IAAI,CAAE,CAAA,OAAO,CAAE,CAAA,KAAK,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAE,CAAA,OAAO,CAAE,CAAA,KAAK,KAAK,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAA,CAAA;;UAEvG,UAAU;AACb,MAAA,OAAO,CAAC,GAAG,CAAC,GAAG,EAAC,GAAG,CAAA,CAAA;AACnB,MAAA,YAAA,CAAA,CAAA,EAAA,QAAQ,GACN,IAAI,CAAC,IAAI,CAAA,CAAE,OAAO,CAAE,CAAA,MAAM,CAAC,KAAK,CAAC,OAAO,KAAK,GAAG,IAChD,IAAI,CAAC,IAAI,CAAE,CAAA,OAAO,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,KAAK,GAAG,IAChD,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAA,CAAA;;;;AAGpC,IAAA,YAAA,CAAA,CAAA,EAAA,SAAS,GAAG,QAAQ,GAAG,GAAG,GAAC,IAAI,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACuCyB,CAAA,IAAA,OAAA,WAAA,GAAG,IAAC,CAAC,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;mEAAlD,GAAI,CAAA,EAAA,CAAA,CAAA,GAAA,gBAAA,CAAA,CAAA,CAAA;;;GAAf,MAAqE,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;AAAb,GAAA,IAAA,KAAA,WAAA,CAAA,IAAA,OAAA,MAAA,OAAA,WAAA,GAAG,IAAC,CAAC,CAAA,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA;;;;;;;;;;;;;AAIC,CAAA,IAAA,SAAA,WAAA,GAAG,IAAC,CAAC,CAAA,CAAE,MAAM,CAAC,MAAM,CAAC,KAAK,GAAA,EAAA,CAAA;;;;;;;;mEAA7E,GAAI,CAAA,EAAA,CAAA,CAAA,GAAA,gBAAA,CAAA,CAAA,CAAA;;;GAAf,MAA+F,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;AAAjC,GAAA,IAAA,KAAA,WAAA,CAAA,IAAA,SAAA,MAAA,SAAA,WAAA,GAAG,IAAC,CAAC,CAAA,CAAE,MAAM,CAAC,MAAM,CAAC,KAAK,GAAA,EAAA,CAAA,EAAA,EAAA,CAAA,SAAA,GAAA,SAAA;;;;;;;;;;;;;;;;;;;sBAKlE,GAAO,CAAA,CAAA,CAAA;AAAW,IAAA,OAAA,UAAA,GAAG,IAAC,CAAC,CAAA;;;;;;;;;;kDADlC,GAAI,CAAA,EAAA,CAAA,CAAA,GAAA,gBAAA,CAAA,CAAA,CAAA;;;GAAf,MAEK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;uEADiB,GAAO,CAAA,CAAA,CAAA,CAAA;AAAW,GAAA,IAAA,KAAA,WAAA,CAAA,EAAA,oBAAA,CAAA,OAAA,WAAA,GAAG,IAAC,CAAC,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAM1C,CAAA,IAAA,OAAA,WAAA,GAAG,IAAC,CAAC,CAAA,CAAE,MAAM,CAAC,KAAK,CAAC,OAAO,GAAA,EAAA,CAAA;;;;;;;;;;mEADnB,GAAI,CAAA,EAAA,CAAA,CAAA,GAAA,gBAAA,CAAA,CAAA,CAAA;;;GAAf,MAEK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;AADF,GAAA,IAAA,KAAA,WAAA,CAAA,IAAA,OAAA,MAAA,OAAA,WAAA,GAAG,IAAC,CAAC,CAAA,CAAE,MAAM,CAAC,KAAK,CAAC,OAAO,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA;;;;;;;;;;;;;AAK0B,CAAA,IAAA,OAAA,WAAA,GAAG,IAAC,CAAC,CAAA,CAAE,MAAM,CAAC,KAAK,CAAC,GAAG,GAAA,EAAA,CAAA;;;;;;;;;;mEAApE,GAAI,CAAA,EAAA,CAAA,CAAA,GAAA,gBAAA,CAAA,CAAA,CAAA;;;GAAf,MAAsF,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;AAA9B,GAAA,IAAA,KAAA,WAAA,CAAA,IAAA,OAAA,MAAA,OAAA,WAAA,GAAG,IAAC,CAAC,CAAA,CAAE,MAAM,CAAC,KAAK,CAAC,GAAG,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA;;;;;;;;;;;;;uBAIvB,GAAG,CAAA,CAAA,CAAA,CAAC,CAAC,CAAA,CAAE,QAAQ,GAAA,EAAA,CAAA;;;;;;;;;;mEAA5D,GAAI,CAAA,EAAA,CAAA,CAAA,GAAA,gBAAA,CAAA,CAAA,CAAA;;;GAAf,MAA8E,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;2DAAtB,GAAG,CAAA,CAAA,CAAA,CAAC,CAAC,CAAA,CAAE,QAAQ,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA;;;;;;;;;;;;;uBAIf,GAAG,CAAA,CAAA,CAAA,CAAC,CAAC,CAAA,CAAE,KAAK,GAAA,EAAA,CAAA;;;;;;;;;;mEAAzD,GAAI,CAAA,EAAA,CAAA,CAAA,GAAA,gBAAA,CAAA,CAAA,CAAA;;;GAAf,MAA2E,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;2DAAnB,GAAG,CAAA,CAAA,CAAA,CAAC,CAAC,CAAA,CAAE,KAAK,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;sBAK9C,GAAO,CAAA,CAAA,CAAA;AAAW,IAAA,OAAA,UAAA,GAAG,IAAC,CAAC,CAAA;;;;;;;;;kDADlC,GAAI,CAAA,EAAA,CAAA,CAAA,GAAA,gBAAA,CAAA,CAAA,CAAA;;;GAAf,MAEK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;uEADiB,GAAO,CAAA,CAAA,CAAA,CAAA;AAAW,GAAA,IAAA,KAAA,WAAA,CAAA,EAAA,oBAAA,CAAA,OAAA,WAAA,GAAG,IAAC,CAAC,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAKW,GAAM,CAAA,CAAA,CAAA,CAAA,CAAA;kDAAnD,GAAI,CAAA,EAAA,CAAA,CAAA,GAAA,gBAAA,CAAA,CAAA,CAAA;;;GAAf,MAAqE,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;sDAAb,GAAM,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;qBAIN,GAAI,CAAA,CAAA,CAAA,CAAA,CAAA;kDAAjD,GAAI,CAAA,EAAA,CAAA,CAAA,GAAA,gBAAA,CAAA,CAAA,CAAA;;;GAAf,MAAmE,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;iDAAX,GAAI,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;4BAGX,GAAW,CAAA,CAAA,CAAA,CAAA,CAAA;;AAA3B,GAAA,IAAA,CAAA,EAAA,EAAA,SAAA,EAAA,gBAAA,aAAA,GAAK,IAAC,MAAM,CAAA,CAAA;;;GAA7C,MAAmE,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;8DAAlB,GAAW,CAAA,CAAA,CAAA,CAAA,CAAA;;AAA3B,GAAA,IAAA,KAAA,aAAA,EAAA,IAAA,gBAAA,MAAA,gBAAA,aAAA,GAAK,IAAC,MAAM,CAAA,EAAA;;;;;;;;;;;;4BA/C1C,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,MAAM,CAAA,CAAA;;2BAIrB,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,QAAQ,CAAA,CAAA;;2BAIvB,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,UAAU,CAAA,CAAA;;2BAMzB,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,OAAO,CAAA,CAAA;;2BAMtB,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,WAAW,CAAA,CAAA;;2BAI1B,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,MAAM,CAAA,CAAA;;2BAIrB,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,OAAO,CAAA,CAAA;;2BAItB,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,UAAU,CAAA,CAAA;;2BAMzB,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,KAAK,CAAA,CAAA;;2BAIpB,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,MAAM,CAAA,CAAA;;AAIrB,CAAA,IAAA,OAAA,WAAA,GAAG,QAAK,CAAC,cAAI,GAAK,CAAC,CAAA,CAAA,CAAA,QAAQ,CAAC,aAAa,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iDA/CkD,GAAY,CAAA,EAAA,CAAA,GAAA,GAAA,CAAA,CAAA;;;;;GAA9G,MAkDK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;oDAjDE,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,MAAM,CAAA,CAAA;;;;;;;;;;;;;;;mDAIrB,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,QAAQ,CAAA,CAAA;;;;;;;;;;;;;;;mDAIvB,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,UAAU,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;mDAMzB,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,OAAO,CAAA,CAAA;;;;;;;;;;;;;;;mDAMtB,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,WAAW,CAAA,CAAA;;;;;;;;;;;;;;;mDAI1B,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,MAAM,CAAA,CAAA;;;;;;;;;;;;;;;mDAIrB,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,OAAO,CAAA,CAAA;;;;;;;;;;;;;;;mDAItB,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,UAAU,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;mDAMzB,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,KAAK,CAAA,CAAA;;;;;;;;;;;;;;;mDAIpB,GAAK,CAAA,CAAA,CAAA,CAAC,QAAQ,CAAC,MAAM,CAAA,CAAA;;;;;;;;;;;;;;;AAIrB,GAAA,IAAA,KAAA,kBAAA,EAAA,EAAA,OAAA,WAAA,GAAG,QAAK,CAAC,cAAI,GAAK,CAAC,CAAA,CAAA,CAAA,QAAQ,CAAC,aAAa,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA7GnC,GAAG,EAAA,GAAA,OAAA,CAAA;OACH,GAAG,EAAA,GAAA,OAAA,CAAA;OACH,GAAG,EAAA,GAAA,OAAA,CAAA;OACH,IAAI,EAAA,GAAA,OAAA,CAAA;OACJ,WAAW,EAAA,GAAA,OAAA,CAAA;OACX,OAAO,EAAA,GAAA,OAAA,CAAA;OACP,KAAK,EAAA,GAAA,OAAA,CAAA;;;OAEV,YAAY,GAAG,UAAU,CAAC,yBAAyB,CAAA,CAAA;;OACnD,aAAa,GAAG,UAAU,CAAC,qBAAqB,CAAA,CAAA;OAChD,OAAO,GAAG,UAAU,CAAC,yBAAyB,CAAA,CAAA;;AAC9C,CAAA,MAAA,QAAQ,GAAG,UAAU,CAAC,kBAAkB,EAAE,QAAQ,CAAA;KACpD,SAAS,GAAA,EAAA,CAAA;KACT,IAAI,CAAA;KACJ,GAAG,CAAA;AACH,CAAA,IAAA,YAAY,GAAG,GAAG,GAAG,KAAK,CAAC,MAAM,CAAA;;SAC7B,OAAO;OACR,YAAY;GACf,GAAG,GAAG,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAA,CAAA,CAAG,KAAK,CAAA;;OAEtC,QAAQ;GACX,GAAG,GAAG,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAA,CAAA,CAAG,KAAK,CAAA;;OAEtC,UAAU;AACb,GAAA,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,CAAA,CAAA,CAAA;AAChC,GAAA,GAAG,GAAG,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAG,CAAA,CAAA,MAAM,CAAC,KAAK,CAAC,OAAO,CAAA;AAC5D,GAAA,GAAG,GAAG,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAG,CAAA,CAAA,MAAM,CAAC,KAAK,CAAC,GAAG,CAAA;;;;AAwBnD,CAAA,SAAA,UAAU,CAAC,GAAG,EAAA;AAChB,EAAA,IAAA,CAAA,GAAG,CAAC,CAAC,CAAE,CAAA,WAAW,SAAS,EAAE,CAAA;AAClC,EAAA,YAAA,CAAA,CAAA,EAAA,WAAW,GAAG,GAAG,CAAC,CAAC,EAAE,WAAW,CAAA,CAAA;;;KAE9B,MAAM,CAAA;AAIN,CAAA,IAAA,IAAI,GAAG,GAAG,KAAK,MAAM,CAAC,MAAM,CAAC,IAAI,CAAA,CAAE,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG,EAAE,CAAA;AAOxB,CAAA,MAAA,iBAAA,GAAA,MAAA,UAAU,CAAC,GAAG,CAAA,CAAA;AAId,CAAA,MAAA,mBAAA,GAAA,MAAA,UAAU,CAAC,GAAG,CAAA,CAAA;AAId,CAAA,MAAA,mBAAA,GAAA,MAAA,UAAU,CAAC,GAAG,CAAA,CAAA;AAMd,CAAA,MAAA,mBAAA,GAAA,MAAA,UAAU,CAAC,GAAG,CAAA,CAAA;AAMd,CAAA,MAAA,mBAAA,GAAA,MAAA,UAAU,CAAC,GAAG,CAAA,CAAA;AAId,CAAA,MAAA,mBAAA,GAAA,MAAA,UAAU,CAAC,GAAG,CAAA,CAAA;AAId,CAAA,MAAA,mBAAA,GAAA,MAAA,UAAU,CAAC,GAAG,CAAA,CAAA;AAId,CAAA,MAAA,mBAAA,GAAA,MAAA,UAAU,CAAC,GAAG,CAAA,CAAA;AAMd,CAAA,MAAA,mBAAA,GAAA,MAAA,UAAU,CAAC,GAAG,CAAA,CAAA;AAId,CAAA,MAAA,mBAAA,GAAA,MAAA,UAAU,CAAC,GAAG,CAAA,CAAA;;;AA7ChC,EAAA,QAAQ,CAAC,QAAQ,GAAA,IAAA,CAAA,YAAA,CAAA;;AAAoB,EAAA,QAAQ,CAAC,OAAO,GAAA,IAAA,CAAA,WAAA,CAAA;;;;;;;;;;;;;;;;GAjCzE;cACW,GAAG,EAAE,QAAQ,CAAA,IAAK,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,kBAAkB,CAAA,CAAE,SAAS,CAAA,EAAA;aACzE,GAAG;WACJ,YAAY;AACf,OAAA,YAAA,CAAA,EAAA,EAAA,SAAS,CAAC,QAAQ,CAAC,SAAS,IAAI,OAAO,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,CAAE,CAAA,KAAK,GAAG,CAAC,EAAA,SAAA,CAAA,CAAA;;WAE/D,QAAQ;AACX,OAAA,YAAA,CAAA,EAAA,EAAA,SAAS,CAAC,QAAQ,CAAC,SAAS,IAAI,OAAO,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,CAAE,CAAA,KAAK,GAAG,CAAC,EAAA,SAAA,CAAA,CAAA;;WAE/D,UAAU;AACb,OAAA,YAAA,CAAA,EAAA,EAAA,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAI,GAAA,OAAO,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,EAAA,SAAA,CAAA,CAAA;;WAE9E,aAAa;AAChB,OAAA,YAAA,CAAA,EAAA,EAAA,SAAS,CAAC,QAAQ,CAAC,SAAS,IAAI,CAAC,EAAA,SAAA,CAAA,CAAA;;WAE9B,eAAe;AAClB,OAAA,YAAA,CAAA,EAAA,EAAA,SAAS,CAAC,QAAQ,CAAC,SAAS,IAAI,CAAC,EAAA,SAAA,CAAA,CAAA;;;;;oBAGvC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAA,EAAG,SAAS,CAAA,CAAA,CAAA;;;;;AAOnD,OAAO,GAAG,CAAC,CAAC,CAAE,CAAA,GAAG,KAAK,SAAS,EAAA;AAC7B,IAAA,YAAA,CAAA,CAAA,EAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAE,CAAA,GAAG,GAAG,CAAC,GAAA,CAAA,EAAM,GAAG,CAAC,CAAC,EAAE,GAAG,CAAA,CAAA,GAAA,CAAA,CAAA,EAAS,GAAG,CAAC,CAAC,EAAE,GAAG,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBCPR,GAAE,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA;;;kCAA5B,GAAO,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;GAAzB,MAAqD,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;8DAAT,GAAE,CAAA,EAAA,CAAA,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;AAOxC,EAAA,IAAA,YAAA,GAAK,gBAAC,GAAO,CAAA,CAAA,CAAA,CAAA;;;gBAGd,GAAI,CAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AAHH,GAAA,IAAA,KAAA,sBAAA,CAAA,EAAA,kBAAA,CAAA,IAAA,aAAA,GAAK,gBAAC,GAAO,CAAA,CAAA,CAAA,CAAA,CAAA;;;uEAGd,GAAI,CAAA,EAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAZK,CAAA,IAAA,WAAA,GAAA,CAAA,eAAA,GAAQ,IAAC,OAAO,CAAA,EAAA,CAAA,CAAA;;;;;;;;;;;8BACzB,GAAK,CAAA,CAAA,CAAA,CAAA;;;kCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;AAMD,CAAA,IAAA,UAAA,GAAA,MAAM,CAAC,OAAO,WAAC,GAAK,gBAAC,GAAO,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;;;gCAAjC,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAeF,GAAW,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;AAhBY,GAAA,SAAA,CAAA,KAAA,EAAA,eAAA,EAAA,IAAI,gBAAC,GAAQ,CAAA,CAAA,CAAA,CAAC,SAAS,gBAAG,GAAQ,IAAC,WAAW,GAAA,IAAA,CAAA,CAAA;;;;;;;;GAT/E,MA2BM,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;GA1BJ,MAqBQ,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;GApBN,MAMQ,CAAA,KAAA,EAAA,OAAA,CAAA,CAAA;GALN,MAIK,CAAA,OAAA,EAAA,EAAA,CAAA,CAAA;;;;;;;;GAEP,MAYQ,CAAA,KAAA,EAAA,KAAA,CAAA,CAAA;;;;;;;GAEV,MAGM,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;GAFJ,MAA4C,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;GAC5C,MAAwB,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;;;;6BArBb,GAAK,CAAA,CAAA,CAAA,CAAA;;;iCAAV,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;wCAAJ,MAAI,CAAA;;;AADU,GAAA,IAAA,KAAA,gBAAA,EAAA,IAAA,WAAA,MAAA,WAAA,GAAA,CAAA,eAAA,GAAQ,IAAC,OAAO,CAAA,EAAA,CAAA,CAAA,EAAA;;;;;AAO3B,IAAA,UAAA,GAAA,MAAM,CAAC,OAAO,WAAC,GAAK,gBAAC,GAAO,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;;;+BAAjC,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;wBAAJ,MAAI,EAAA,CAAA,GAAA,WAAA,CAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;AADqB,IAAA,SAAA,CAAA,KAAA,EAAA,eAAA,EAAA,IAAI,gBAAC,GAAQ,CAAA,CAAA,CAAA,CAAC,SAAS,gBAAG,GAAQ,IAAC,WAAW,GAAA,IAAA,CAAA,CAAA;;;4EAgBrE,GAAW,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;kCAfb,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;OArDC,OAAO,EAAA,GAAA,OAAA,CAAA;OACZ,OAAO,GAAG,UAAU,CAAC,yBAAyB,CAAA,CAAA;;OAC9C,IAAI,GAAG,UAAU,CAAC,iBAAiB,CAAA,CAAA;;OACnC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAA,CAAA;KACnD,OAAO,CAAA;KACP,KAAK,CAAA;KACL,WAAW,CAAA;KACX,GAAG,CAAA;;;SAEC,OAAO;OACR,YAAY;AACf,GAAA,OAAO,GAAG,YAAY,CAAA;GACtB,KAAK,GAAA,CAAI,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,CAAA,CAAA;AAC/D,GAAA,WAAW,GAAG,EAAE,CAAA;AAChB,GAAA,GAAG,GAAG,EAAE,CAAA;;OAEL,QAAQ;AACX,GAAA,OAAO,GAAG,QAAQ,CAAA;GAClB,KAAK,GAAA,CAAI,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,CAAA,CAAA;AACvD,GAAA,WAAW,GAAG,EAAE,CAAA;AAChB,GAAA,GAAG,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAA;;OAEtB,UAAU;AACb,GAAA,OAAO,GAAG,UAAU,CAAA;AACpB,GAAA,KAAK,GAAI,CAAA,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,CAAA,CAAA;AAC/E,GAAA,WAAW,GAAG,EAAE,CAAA;AAChB,GAAA,GAAG,GAAG,CAAC,CAAA;;;;AAGP,CAAA,IAAA,OAAO,GAAG,GAAG,GAAG,KAAK,CAAC,MAAM,CAAA;;AAM1B,CAAA,MAAA,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAE,OAAO,IAAA;AAC7B,EAAA,OAAA,OAAO,CAAC,KAAK,CAAA;;;;AASM,EAAA,QAAQ,CAAC,WAAW,GAAA,IAAA,CAAA,YAAA,CAAA;;;;;;;;;;;;;;;GAf/C;cACW,GAAG,EAAE,IAAI,CAAK,IAAA,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,CAAA,EAAA;AACrD,KAAA,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAE,CAAA,IAAI,CAAC,KAAK,GAAG,EAAE,IAAI,CAAC,CAAA,CAAA;;;;;;GAM9C,KAAA,IAAA,CAAY,GAAG,EAAE,KAAK,CAAA,IAAK,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAA,EAAA;AACrD,IAAA,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBhC,CAAA,IAAA,QAAA,WAAA,GAAG,IAAC,KAAK,GAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;wEANH,GAAS,CAAA,CAAA,CAAA,aAAK,GAAG,CAAA,CAAA,CAAA,CAAC,EAAE;KAAG,QAAQ;KAAG,EAAE,CAAA,GAAA,gBAAA,CAAA,CAAA,CAAA;;;GAA/C,MAQK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;GAPH,MAMO,CAAA,EAAA,EAAA,IAAA,CAAA,CAAA;;;;;;;;;;;AADJ,GAAA,IAAA,KAAA,YAAA,CAAA,IAAA,QAAA,MAAA,QAAA,WAAA,GAAG,IAAC,KAAK,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;+GANH,GAAS,CAAA,CAAA,CAAA,aAAK,GAAG,CAAA,CAAA,CAAA,CAAC,EAAE;KAAG,QAAQ;KAAG,EAAE,CAAA,GAAA,gBAAA,CAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;AAcrB,CAAA,IAAA,YAAA,WAAA,GAAG,IAAC,SAAS,CAAA;;;AAAW,EAAA,OAAA,EAAA,KAAA,EAAA,EAAA,OAAA,UAAA,GAAG,IAAC,EAAE,EAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;AAAN,GAAA,IAAA,KAAA,YAAA,CAAA,EAAA,uBAAA,CAAA,OAAA,WAAA,GAAG,IAAC,EAAE,CAAA;;AAA9B,GAAA,IAAA,YAAA,MAAA,YAAA,WAAA,GAAG,IAAC,SAAS,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBADlC,GAAG,CAAA,CAAA,CAAA,CAAC,EAAE,mBAAK,GAAS,CAAA,CAAA,CAAA,IAAAA,iBAAA,CAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;eAApB,GAAG,CAAA,CAAA,CAAA,CAAC,EAAE,mBAAK,GAAS,CAAA,CAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAdpB,GAAI,CAAA,CAAA,CAAA,CAAA;;;kCAAT,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;2BAaC,GAAI,CAAA,CAAA,CAAA,CAAA;;;gCAAT,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;iDAD8B,GAAU,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA;;;;GAbhD,MAYK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;GACL,MAMM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;4BAlBG,GAAI,CAAA,CAAA,CAAA,CAAA;;;iCAAT,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;wCAAJ,MAAI,CAAA;;;;0BAaC,GAAI,CAAA,CAAA,CAAA,CAAA;;;+BAAT,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;wBAAJ,MAAI,EAAA,CAAA,GAAA,WAAA,CAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;kDAD8B,GAAU,CAAA,CAAA,CAAA,GAAA,IAAA,CAAA,CAAA;;;;;;kCAC5C,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAxBK,IAAI,GAAA,EAAA,EAAA,GAAA,OAAA,CAAA;OACJ,SAAS,EAAA,GAAA,OAAA,CAAA;OACd,IAAI,GAAG,UAAU,CAAC,iBAAiB,CAAA,CAAA;;OACnC,OAAO,GAAG,UAAU,CAAC,yBAAyB,CAAA,CAAA;;KAChD,UAAU,CAAA;;;kBAWN,SAAS,GAAG,GAAG,CAAC,EAAE,CAAA,CAAA;;;;AAQ4C,EAAA,QAAQ,CAAC,SAAS,GAAA,IAAA,CAAA,YAAA,CAAA;;;;;;;;;;;GAlBvF;AACC,IAAA,YAAA,CAAA,CAAA,EAAA,UAAU,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAA,CAAA,CAAG,MAAM,GAAG,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,WAAW,IAAI,GAAG,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC0EhG,CAAA,IAAA,QAAA,kBAAA,GAAU,CAAC,CAAA,CAAA,CAAA,WAAW,CAAC,EAAE,CAAC,GAAG,GAAA,EAAA,CAAA;;;;;AAG5B,CAAA,IAAA,QAAA,kBAAA,GAAU,CAAC,CAAA,CAAA,CAAA,WAAW,CAAC,EAAE,CAAC,IAAI,GAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;aAJrC,UACK,CAAA,CAAA;;;;aAEL,WACM,CAAA,CAAA;;;;;;;;;GAJX,MAEM,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;;;;GACN,MAEM,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;;;;;;GAEN,MAAiD,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;qDAA/B,GAAU,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;AANjB,GAAA,IAAA,CAAA,CAAA,OAAA,IAAA,KAAA,kBAAA,CAAA,KAAA,QAAA,MAAA,QAAA,kBAAA,GAAU,CAAC,CAAA,CAAA,CAAA,WAAW,CAAC,EAAE,CAAC,GAAG,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;AAG5B,GAAA,IAAA,CAAA,CAAA,OAAA,IAAA,KAAA,kBAAA,CAAA,KAAA,QAAA,MAAA,QAAA,kBAAA,GAAU,CAAC,CAAA,CAAA,CAAA,WAAW,CAAC,EAAE,CAAC,IAAI,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;AApClC,MAAAC,WAAS,GAAG,YAAY,CAAA;;;;;OA1CnB,QAAQ,EAAA,GAAA,OAAA,CAAA;;;OAEb,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAA,CAAA;;SACjC,WAAW,EAAA,GAAK,UAAU,CAAC,UAAU,CAAA,CAAA;;;AAEvC,CAAA,MAAA,OAAO,GAAG,QAAQ,CAAA,EAAA,CAAA,CAAA;;;CACxB,UAAU,CAAC,iBAAiB,EAAE,OAAO,CAAA,CAAA;;;CAErC,UAAU,CAAC,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,kBAAkB,CAAA,CAAA,CAAA;;CAC5E,UAAU,CAAC,cAAc,EAAE,MAAM,CAAA,CAAA;AACjC,CAAA,UAAU,CAAC,yBAAyB,EAAE,KAAK,CAAC,MAAM,CAAA,CAAA;AAClD,CAAA,UAAU,CAAC,eAAe,EAAE,QAAQ,CAAC,EAAE,CAAA,CAAA;AACvC,CAAA,UAAU,CAAC,qBAAqB,EAAE,QAAQ,CAAC,aAAa,CAAA,CAAA;;;;AAIlD,CAAA,MAAA,SAAS,GAAG,QAAQ,CAAA;AACxB,EAAA,UAAU,EAAE,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAA;AAC7C,EAAA,MAAM,EAAE,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAA;AACrC,EAAA,WAAW,EAAE,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAA;AAC/C,EAAA,aAAa,EAAE,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAA;AACnD,EAAA,MAAM,EAAE,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAA;AACrC,EAAA,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAA;EACvC,QAAQ,EAAE,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAA;;;;;AAElD,CAAA,MAAA,iBAAiB,GAAC,QAAQ,CAAA;AAC9B,EAAA,SAAS,EAAC,CAAC;AACX,EAAA,QAAQ,EAAC,CAAC;AACV,EAAA,OAAO,EAAC,CAAC;AACT,EAAA,WAAW,EAAC,CAAC;;;CAEf,UAAU,CAAC,yBAAyB,EAAC,iBAAiB,CAAA,CAAA;CACtD,UAAU,CAAC,iBAAiB,EAAE,SAAS,CAAA,CAAA;;;;OAIjC,IAAI,GAAA;;AACN,GAAA,KAAK,EAAE,YAAY;AAAE,GAAA,EAAE,EAAE,YAAY;AAAE,GAAA,SAAS,EAAEC,UAAa;;;AAC/D,GAAA,KAAK,EAAE,QAAQ;AAAE,GAAA,EAAE,EAAE,QAAQ;AAAE,GAAA,SAAS,EAAEA,UAAa;;;AACvD,GAAA,KAAK,EAAE,UAAU;AAAE,GAAA,EAAE,EAAE,UAAU;AAAE,GAAA,SAAS,EAAEA,UAAa;;;;CAKpD,UAAU,CAAC,eAAe,EAAA;CACf,UAAU,CAAC,qBAAqB,EAAA;;;gBAEvC,UAAU,GAAA;QACjB,SAAS,GAAA,EAAA,CAAA;AACf,EAAA,SAAS,CAAC,mBAAmB,CAAI,GAAA,UAAU,CAAC,UAAU,CAAA;AACtD,EAAA,SAAS,CAAC,eAAe,CAAI,GAAA,UAAU,CAAC,MAAM,CAAA;AAC9C,EAAA,SAAS,CAAC,uBAAuB,CAAA,GAAI,UAAU,CAAC,WAAW,CAAC,EAAE,CAAA;EAC9D,SAAS,CAAC,gBAAgB,CAAA,GAAI,IAAI,CAAA;AAClC,EAAA,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAA,CAAA;MAC3B,KAAK,GAAA,EAAK,GAAG,EAAA,EAAA,EAAM,KAAK,EAAA,EAAA,EAAA,CAAA;;AAC5B,EAAA,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAE,OAAO,IAAA;AAC5B,GAAA,MAAA,SAAS,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAA;AACxC,GAAA,MAAA,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAA;;AAC7C,GAAA,IAAA,SAAS,GAAG,YAAY,EAAA;AACtB,IAAA,IAAA,YAAY,GAAG,CAAC,EAAA;AAClB,KAAA,KAAK,CAAC,KAAK,GAAA,CAAA,GAAO,KAAK,CAAC,KAAK,EAAE,OAAO,CAAA,CAAA;;AAEtC,KAAA,KAAK,CAAC,GAAG,GAAA,CAAA,GAAO,KAAK,CAAC,GAAG,EAAE,OAAO,CAAA,CAAA;;;;;AAIxC,EAAA,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,iBAAiB,CAAA,CAAA;QAC9B,KAAK,CAAC,MAAM,CAAC,SAAS,CAAA,CAAA;AACxB,EAAA,IAAA,KAAK,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAA,MAAQ,KAAK,CAAC,uBAAuB,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAA,CAAA;AACjF,EAAA,IAAA,KAAK,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,EAAA,MAAQ,KAAK,CAAC,uBAAuB,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,CAAA,CAAA;AACjF,EAAA,WAAW,CAAC,KAAK,EAAA,CAAA;;;;;;;;;AA3BnB,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;AChD9B,MAAMC,oBAAN,SAAmCC,SAAnC,CAA6C;AAClDrc,EAAAA,WAAW,CAACsc,QAAD,EAAW;AACpB,IACE,KAAA,CAAA;AACEha,MAAAA,KAAK,EAAE,uBADT;AAEEkO,MAAAA,EAAE,EAAE,SAFN;AAGE+L,MAAAA,KAAK,EAAE,IAHT;AAIEC,MAAAA,SAAS,EAAE,KAJb;AAKEzZ,MAAAA,OAAO,EAAE;AACP0Z,QAAAA,KAAK,EAAEC,aADA;AAEPC,QAAAA,KAAK,EAAE;AACLL,UAAAA,QAAAA;AADK,SAAA;AAFA,OAAA;AALX,KADF,EAaE;AACElC,MAAAA,KAAK,EAAE,GADT;AAEEwC,MAAAA,MAAM,EAAE,GAAA;AAFV,KAbF,CAAA,CAAA;AAkBD,GAAA;;AApBiD;;ACCpD;AACA;AACA;AACA;;AACO,MAAMC,eAAN,SAA8BC,UAA9B,CAAyC;AAC9C;AACyB,EAAA,WAAdC,cAAc,GAAG;AAC1B,IAAA,OAAOvO,WAAW,CAAC,KAAMuO,CAAAA,cAAP,EAAuB;AACvCC,MAAAA,OAAO,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,CAD8B;AAEvCla,MAAAA,QAAQ,EAAE,gDAF6B;AAGvCsX,MAAAA,KAAK,EAAE,GAHgC;AAIvCwC,MAAAA,MAAM,EAAE,GAJ+B;AAKvCK,MAAAA,IAAI,EAAE,CAAC;AAAEC,QAAAA,WAAW,EAAE,aAAf;AAA8BC,QAAAA,eAAe,EAAE,aAA/C;AAA8DpM,QAAAA,OAAO,EAAE,MAAA;AAAvE,OAAD,CAAA;AALiC,KAAvB,CAAlB,CAAA;AAOD,GAAA;AACD;;;AACY,EAAA,IAARjO,QAAQ,GAAG;AACb,IAAA,OAAQ,uCAAsC,IAAK8L,CAAAA,KAAL,CAAW1O,IAAX,CAAgBgK,IAAK,CAAnE,WAAA,CAAA,CAAA;AACD,GAAA;AACD;;AACA;;;AACAkT,EAAAA,OAAO,GAAG;AACR;AACA;AACA;AACA;AACA,IAAA,MAAMC,OAAO,GAAG,KAAA,CAAMD,OAAN,EAAhB,CALQ;;AAOR,IAAA,MAAMtT,SAAS,GAAG,IAAK8E,CAAAA,KAAvB,CAPQ;AASR;;AACAyO,IAAAA,OAAO,CAACnd,IAAR,GAAe4J,SAAS,CAACC,MAAzB,CAVQ;;AAYRsT,IAAAA,OAAO,CAACrN,KAAR,GAAgBlG,SAAS,CAACkG,KAA1B,CAZQ;;AAcRqN,IAAAA,OAAO,CAACC,MAAR,GAAiBna,MAAM,CAACG,KAAxB,CAdQ;;AAgBR+Z,IAAAA,OAAO,CAACvI,IAAR,GAAehU,IAAI,CAACsS,IAAL,CAAU0B,IAAzB,CAhBQ;;AAkBR,IAAA,IAAIhL,SAAS,CAACI,IAAV,KAAmB,WAAvB,EAAoC;AAClC;AACA,MAAKqT,IAAAA,CAAAA,aAAL,CAAmBF,OAAnB,CAAA,CAAA;;AACA,MAAKrT,IAAAA,CAAAA,qBAAL,CAA2BqT,OAA3B,CAAA,CAAA;AACD,KAtBO;AAwBR;;;AACA,IAAA,IAAIvT,SAAS,CAACI,IAAV,KAAmB,KAAvB,EAA8B;AAC5B;AACA,MAAKqT,IAAAA,CAAAA,aAAL,CAAmBF,OAAnB,CAAA,CAAA;AACD,KA5BO;AA8BR;;;AACAA,IAAAA,OAAO,CAAChP,QAAR,GAAmBgP,OAAO,CAACzO,KAAR,CAAcX,WAAd,EAAnB,CA/BQ;AAiCR;;AACAoP,IAAAA,OAAO,CAACpC,OAAR,GAAkBO,6BAA6B,CAAC,IAAK5M,CAAAA,KAAL,CAAWqM,OAAZ,CAA/C,CAAA;AACA,IAAA,OAAOoC,OAAP,CAAA;AACD,GAAA;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACE;;;AACArT,EAAAA,qBAAqB,CAACqT,OAAD,EAAU;AAC7B;AACA,IAAA,KAAK,IAAI,CAACnM,CAAD,EAAIa,CAAJ,CAAT,IAAmBhF,WAAW,CAACsQ,OAAO,CAACnd,IAAR,CAAamD,UAAd,CAA9B,EAAyD;AAAA,MAAA,IAAA,mBAAA,CAAA;;AACvD;AACA0O,MAAAA,CAAC,CAAClO,KAAF,GAAA,CAAA,mBAAA,GAAU/C,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB6M,SAAS,CAAC7L,MAAM,CAACG,KAAP,CAAaC,UAAd,EAA0B2N,CAA1B,CAA5B,CAAV,MAAA,IAAA,IAAA,mBAAA,KAAA,KAAA,CAAA,GAAA,mBAAA,GAAuEA,CAAvE,CAAA;AACD,KAAA;AACD;AACJ;AACA;AACA;AACA;;AACG,GAAA;AACD;AACF;AACA;AACA;AACA;AACA;AACA;;;AACEqM,EAAAA,aAAa,CAACF,OAAD,EAAU;AACrB;AACA,IAAMG,MAAAA,IAAI,GAAG,EAAb,CAAA;AACA,IAAMC,MAAAA,QAAQ,GAAG,EAAjB,CAAA;AACA,IAAMC,MAAAA,OAAO,GAAG,EAAhB,CAAA;AACA,IAAM9S,MAAAA,KAAK,GAAG,EAAd,CAAA;AACA,IAAA,MAAM+S,MAAM,GAAG;AACb,MAAA,CAAA,EAAG,EADU;AAEb,MAAA,CAAA,EAAG,EAFU;AAGb,MAAA,CAAA,EAAG,EAHU;AAIb,MAAA,CAAA,EAAG,EAJU;AAKb,MAAA,CAAA,EAAG,EALU;AAMb,MAAA,CAAA,EAAG,EANU;AAOb,MAAA,CAAA,EAAG,EAPU;AAQb,MAAA,CAAA,EAAG,EARU;AASb,MAAA,CAAA,EAAG,EATU;AAUb,MAAG,CAAA,EAAA,EAAA;AAVU,KAAf,CANqB;;AAmBrB,IAAA,KAAK,IAAIhY,CAAT,IAAc0X,OAAO,CAAC1T,KAAtB,EAA6B;AAC3B;AACAhE,MAAAA,CAAC,CAACiY,GAAF,GAAQjY,CAAC,CAACiY,GAAF,IAASC,aAAjB,CAF2B;;AAI3B,MAAA,IAAIlY,CAAC,CAACuE,IAAF,KAAW,MAAf,EAAuB;AACrBsT,QAAAA,IAAI,CAACrc,IAAL,CAAUwE,CAAV,CAAA,CAAA;AACD,OAFD;AAAA,WAIK,IAAIA,CAAC,CAACuE,IAAF,KAAW,SAAf,EAA0B;AAC7BuT,QAAAA,QAAQ,CAACtc,IAAT,CAAcwE,CAAd,CAAA,CAAA;AACD,OAFI;AAAA,WAIA,IAAIA,CAAC,CAACuE,IAAF,KAAW,OAAf,EAAwB;AAC3B;AACA,QAAA,IAAIvE,CAAC,CAACzF,IAAF,CAAOsV,UAAP,IAAqBjQ,SAAzB,EAAoC;AAClC;AACAoY,UAAAA,MAAM,CAAChY,CAAC,CAACzF,IAAF,CAAOsV,UAAR,CAAN,CAA0BrU,IAA1B,CAA+BwE,CAA/B,CAAA,CAAA;AACD,SAAA;AACF,OANI,MAME,IAAIA,CAAC,CAACuE,IAAF,KAAW,OAAX,IAAsBvE,CAAC,CAACuE,IAAF,KAAW,QAArC,EAA+C;AACpD,QAAM4T,MAAAA,QAAQ,GAAG1L,WAAW,CAACzM,CAAC,CAACzF,IAAH,EAAS,UAAT,CAA5B,CADoD;;AAGpDyF,QAAAA,CAAC,CAACoY,WAAF,GAAgBD,QAAQ,GAAG,QAAH,GAAc,EAAtC,CAHoD;;AAKpDnY,QAAAA,CAAC,CAACqY,WAAF,GAAgBld,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB2b,QAAQ,GAAG,gBAAH,GAAsB,kBAAjD,CAAhB,CALoD;;AAOpDnY,QAAAA,CAAC,CAACzF,IAAF,CAAO2K,QAAP,GAAkB,CAACiT,QAAnB,CAAA;AACA,QAAA,IAAInY,CAAC,CAACuE,IAAF,KAAW,OAAf,EAAwBU,KAAK,CAACzJ,IAAN,CAAWwE,CAAX,CAAxB,CAAA,KACK+X,OAAO,CAACvc,IAAR,CAAawE,CAAb,CAAA,CAAA;AACN,OAAA;AACF,KAhDoB;AAkDrB;;;AACA0X,IAAAA,OAAO,CAACG,IAAR,GAAeA,IAAf,CAnDqB;;AAqDrBH,IAAAA,OAAO,CAACI,QAAR,GAAmBA,QAAnB,CArDqB;;AAuDrBJ,IAAAA,OAAO,CAACM,MAAR,GAAiBA,MAAjB,CAvDqB;;AAyDrBN,IAAAA,OAAO,CAACK,OAAR,GAAkBA,OAAlB,CAzDqB;;AA2DrBL,IAAAA,OAAO,CAACzS,KAAR,GAAgBA,KAAhB,CAAA;AACD,GAAA;AACD;;AACA;;;AACAqT,EAAAA,iBAAiB,CAACla,IAAD,EAAO;AACtB,IAAA,KAAA,CAAMka,iBAAN,CAAwBla,IAAxB,CAAA,CADsB;;AAGtB6R,IAAAA,CAAC,CAAC,UAAD,EAAa7R,IAAb,CAAD,CAAoBma,OAApB,EAAA,CAHsB;;AAKtBna,IAAAA,IAAI,CAAC8R,IAAL,CAAU,cAAV,CAA0BsI,CAAAA,KAA1B,CAAgC,IAAA,CAAKC,aAAL,CAAmB3K,IAAnB,CAAwB,IAAxB,CAAhC,CAAA,CAAA;AACA1P,IAAAA,IAAI,CAAC8R,IAAL,CAAU,YAAV,CAAwBsI,CAAAA,KAAxB,CAA+BE,EAAD,IAAQ;AACpC,MAAA,MAAMvD,EAAE,GAAGlF,CAAC,CAACyI,EAAE,CAACjK,aAAJ,CAAD,CAAoBkK,OAApB,CAA4B,OAA5B,CAAX,CAAA;AACA,MAAA,MAAMtV,IAAI,GAAG,IAAK4F,CAAAA,KAAL,CAAWjF,KAAX,CAAiB3I,GAAjB,CAAqB8Z,EAAE,CAAC5a,IAAH,CAAQ,QAAR,CAArB,CAAb,CAAA;AACA8I,MAAAA,IAAI,CAACsS,KAAL,CAAWlX,MAAX,CAAkB,IAAlB,CAAA,CAAA;AACD,KAJD,EANsB;AAYtB;;AACA,IAAA,IAAI,CAAC,IAAA,CAAKma,UAAV,EAAsB,OAbA;;AAetBxa,IAAAA,IAAI,CAAC8R,IAAL,CAAU,cAAV,EAA0BsI,KAA1B,CAAgC,IAAKK,CAAAA,aAAL,CAAmB/K,IAAnB,CAAwB,IAAxB,CAAhC,EAfsB;;AAiBtB1P,IAAAA,IAAI,CAAC8R,IAAL,CAAU,cAAV,CAA0BsI,CAAAA,KAA1B,CAAiCE,EAAD,IAAQ;AACtC,MAAA,MAAMvD,EAAE,GAAGlF,CAAC,CAACyI,EAAE,CAACjK,aAAJ,CAAD,CAAoBkK,OAApB,CAA4B,OAA5B,CAAX,CAAA;AACA,MAAA,MAAMtV,IAAI,GAAG,IAAK4F,CAAAA,KAAL,CAAWjF,KAAX,CAAiB3I,GAAjB,CAAqB8Z,EAAE,CAAC5a,IAAH,CAAQ,QAAR,CAArB,CAAb,CAAA;AACA8I,MAAAA,IAAI,CAACuS,MAAL,EAAA,CAAA;AACAT,MAAAA,EAAE,CAAC2D,OAAH,CAAW,GAAX,EAAgB,MAAM,IAAKra,CAAAA,MAAL,CAAY,KAAZ,CAAtB,CAAA,CAAA;AACD,KALD,EAjBsB;;AAwBtBL,IAAAA,IAAI,CAAC8R,IAAL,CAAU,iBAAV,CAAA,CAA6BsI,KAA7B,CAAoCE,EAAD,IAAQxD,oBAAoB,CAACwD,EAAD,EAAK,KAAKzP,KAAV,CAA/D,EAxBsB;;AA0BtB7K,IAAAA,IAAI,CAAC8R,IAAL,CAAU,iBAAV,CAA6BsI,CAAAA,KAA7B,CAAmC,IAAA,CAAKO,oBAAL,CAA0BjL,IAA1B,CAA+B,IAA/B,CAAnC,CAAA,CAAA;AACA1P,IAAAA,IAAI,CAAC8R,IAAL,CAAU,aAAV,EAAyBsI,KAAzB,CAA+B,IAAKQ,CAAAA,iBAAL,CAAuBlL,IAAvB,CAA4B,IAA5B,CAA/B,EA3BsB;;AA6BtB1P,IAAAA,IAAI,CAAC8R,IAAL,CAAU,gBAAV,EAA4BsI,KAA5B,CAAkC,IAAKS,CAAAA,cAAL,CAAoBnL,IAApB,CAAyB,IAAzB,CAAlC,EA7BsB;;AA+BtB1P,IAAAA,IAAI,CAAC8R,IAAL,CAAU,YAAV,EAAwBsI,KAAxB,CAA8B,IAAKU,CAAAA,WAAL,CAAiBpL,IAAjB,CAAsB,IAAtB,CAA9B,EA/BsB;;AAiCtB,IAAA,IAAI,IAAK7E,CAAAA,KAAL,CAAW4K,OAAf,EAAwB;AACtB,MAAIsF,IAAAA,OAAO,GAAIT,EAAD,IAAQ,KAAKU,YAAL,CAAkBV,EAAlB,CAAtB,CAAA;;AACAta,MAAAA,IAAI,CAAC8R,IAAL,CAAU,SAAV,CAAA,CAAqBmJ,IAArB,CAA0B,CAACrZ,CAAD,EAAImV,EAAJ,KAAW;AACnC,QAAIA,IAAAA,EAAE,CAAC9G,SAAH,CAAaiL,QAAb,CAAsB,kBAAtB,CAAJ,EAA+C,OAAA;AAC/CnE,QAAAA,EAAE,CAACoE,YAAH,CAAgB,WAAhB,EAA6B,MAA7B,CAAA,CAAA;AACApE,QAAAA,EAAE,CAACqE,gBAAH,CAAoB,WAApB,EAAiCL,OAAjC,EAA0C,KAA1C,CAAA,CAAA;AACD,OAJD,CAAA,CAAA;AAKD,KAAA;AACF,GAAA;AACD;AACF;AACA;;;AACsB,EAAdF,MAAAA,cAAc,CAACvW,KAAD,EAAQ;AAAA,IAAA,IAAA,eAAA,EAAA,IAAA,CAAA;;AAC1BA,IAAAA,KAAK,CAACwL,cAAN,EAAA,CAAA;AACA,IAAA,MAAMM,MAAM,GAAG9L,KAAK,CAAC+L,aAArB,CAAA;AACA,IAAA,IAAIgL,GAAJ,CAAA;AACA7a,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK6a,MAAjB,CAAA,CAAA;AACA,IAAA,MAAMzQ,KAAK,GAAG,IAAKyQ,CAAAA,MAAnB,CAL0B;;AAO1B,IAAA,QAAA,CAAA,eAAA,GAAQlL,MAAM,CAACI,OAAf,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAQ,gBAAgBG,MAAxB;AACE,MAAA,KAAK,KAAL;AACE,QAAA,eAAe4K,mBAAf,GAAqC;AACnC;AACA,UAAA,eAAeC,QAAf,GAA0B;AACxB,YAAA,IAAIC,SAAS,GAAG,EAAhB,CADwB;;AAExB,YAAIC,IAAAA,SAAS,GAAG,EAAhB,CAAA;;AACA,YAAA,KAAK,MAAMC,GAAX,IAAkB5e,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,OAAlB,EAA2B,MAA3B,CAAA,CAAmC2e,KAArD,EAA4D;AAC1D,cAAI7e,IAAAA,IAAI,CAAC6e,KAAL,CAAWvP,MAAX,CAAmBwP,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAchc,KAAd,KAAwB6b,GAAG,CAACvS,IAAxD,CAA8DG,CAAAA,MAA9D,KAAyE,CAA7E,EAAgF;AAC9E,gBAAIwS,IAAAA,SAAS,GAAG,EAAhB,CAAA;AACAA,gBAAAA,SAAS,CAAC3e,IAAV,CACE0Q,KAAK,CAACC,IAAN,CACEhR,IAAI,CAAC6e,KAAL,CAAWvP,MAAX,CAAmBwP,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAchc,KAAd,KAAwB6b,GAAG,CAACvS,IAA5B,IAAoCyS,IAAI,CAACG,YAAL,KAAsB,MAAtF,CAAA,CAA8F,CAA9F,CAAA,CACGC,KAFL,CADF,CAAA,CAAA;AAMAF,gBAAAA,SAAS,GAAGA,SAAS,CAACG,IAAV,EAAZ,CAAA;;AACA,gBAAA,KAAK,MAAMC,IAAX,IAAmBJ,SAAnB,EAA8B;AAC5B,kBAAA,MAAMK,OAAO,GACXrf,IAAI,CAAC6e,KAAL,CAAWvP,MAAX,CAAmBwP,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAchc,KAAd,KAAwB6b,GAAG,CAACvS,IAAxD,CAA8D,CAAA,CAA9D,CAAiE0S,CAAAA,QAAjE,CAA0EO,OAA1E,GAAoF,GAApF,GAA0FV,GAAG,CAACvS,IADhG,CAAA;AAEA,kBAAA,MAAMkT,GAAG,GAAG,MAAMvf,IAAI,CAAC6e,KAAL,CAAW3e,GAAX,CAAemf,OAAf,EAAwBG,WAAxB,CAAoCJ,IAAI,CAAC1P,EAAzC,CAAlB,CAAA;AACA,kBAAA,MAAMxH,IAAI,GAAGqX,GAAG,CAACE,QAAJ,EAAb,CAAA;AACAvX,kBAAAA,IAAI,CAAC9I,IAAL,GAAYoO,OAAO,CAACC,KAAR,CAAcwE,SAAd,CAAwBsN,GAAG,CAACtW,MAA5B,CAAZ,CAAA;AACAyV,kBAAAA,SAAS,CAACre,IAAV,CAAe6H,IAAf,CAAA,CAAA;AACAyW,kBAAAA,SAAS,CAACte,IAAV,CAAe6H,IAAI,CAACmE,IAApB,CAAA,CAAA;AACD,iBAAA;;AACDqS,gBAAAA,SAAS,GAAGA,SAAS,CAACS,IAAV,EAAZ,CAAA;AACD,eAAA;AACF,aAAA;;AACD,YAAO,OAAA;AACLT,cAAAA,SADK;AAELC,cAAAA,SAAAA;AAFK,aAAP,CAAA;AAID,WAAA;;AACD,UAAA,SAASe,UAAT,GAAsB;AACpB,YAAA,IAAIC,WAAW,GAAG,EAAlB,CADoB;;AAEpB,YAAIC,IAAAA,WAAW,GAAG,EAAlB,CAAA;;AACA,YAAA,KAAK,IAAIhB,GAAT,IAAgB5e,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,OAAlB,EAA2B,MAA3B,CAAA,CAAmC2f,OAAnD,EAA4D;AAC1D,cAAI7f,IAAAA,IAAI,CAAC6f,OAAL,CAAavQ,MAAb,CAAqBwQ,MAAD,IAAYA,MAAM,CAAC1gB,IAAP,CAAYiN,IAAZ,KAAqBuS,GAAG,CAACvS,IAAzD,CAA+DG,CAAAA,MAA/D,KAA0E,CAA9E,EAAiF;AAC/E,gBAAIwS,IAAAA,SAAS,GAAG,EAAhB,CAAA;AACAA,gBAAAA,SAAS,CAAC3e,IAAV,CACEL,IAAI,CAAC6f,OAAL,CAAavQ,MAAb,CAAqBwQ,MAAD,IAAYA,MAAM,CAAC1gB,IAAP,CAAYiN,IAAZ,KAAqBuS,GAAG,CAACvS,IAAzB,IAAiCyT,MAAM,CAAC1gB,IAAP,CAAYgK,IAAZ,KAAqB,MAAtF,CAA8F,CAAA,CAA9F,EACG2W,QAFL,CAAA,CAAA;AAIAf,gBAAAA,SAAS,GAAGA,SAAS,CAACG,IAAV,EAAZ,CAAA;;AACA,gBAAA,KAAK,IAAIC,IAAT,IAAiBJ,SAAjB,EAA4B;AAC1Bvb,kBAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC0b,IAAvC,CAAA,CAAA;AACA,kBAAA,MAAMlX,IAAI,GAAGkX,IAAI,CAACK,QAAL,EAAb,CAAA;AACAvX,kBAAAA,IAAI,CAAC9I,IAAL,GAAYoO,OAAO,CAACC,KAAR,CAAcwE,SAAd,CAAwBmN,IAAI,CAACnW,MAA7B,CAAZ,CAAA;AACA0W,kBAAAA,WAAW,CAACtf,IAAZ,CAAiB6H,IAAjB,CAAA,CAAA;AACA0X,kBAAAA,WAAW,CAACvf,IAAZ,CAAiB6H,IAAI,CAACmE,IAAtB,CAAA,CAAA;AACD,iBAAA;;AACDsT,gBAAAA,WAAW,GAAGA,WAAW,CAACR,IAAZ,EAAd,CAAA;AACD,eAAA;AACF,aAAA;;AACD,YAAO,OAAA;AACLQ,cAAAA,WADK;AAELC,cAAAA,WAAAA;AAFK,aAAP,CAAA;AAID,WAAA;;AACD,UAAA,IAAII,QAAQ,GAAG,MAAMC,YAAY,EAAjC,CAAA;AACA,UAAA,IAAIC,QAAQ,GAAG,MAAMC,eAAe,EAApC,CAAA;AACA,UAAIC,IAAAA,UAAU,GAAG,EAAjB,CAAA;;AAEA,UAAA,eAAeH,YAAf,GAA8B;AAC5B,YAAA,MAAMnB,IAAI,GAAG,MAAML,QAAQ,EAA3B,CAAA;AACA,YAAMqB,MAAAA,MAAM,GAAGJ,UAAU,EAAzB,CAAA;AACA,YAAA,MAAMhB,SAAS,GAAGI,IAAI,CAACJ,SAAvB,CAAA;AACA,YAAA,MAAMC,SAAS,GAAGG,IAAI,CAACH,SAAvB,CAAA;AACA,YAAA,MAAMgB,WAAW,GAAGG,MAAM,CAACH,WAA3B,CAAA;AACA,YAAIU,IAAAA,cAAc,GAAG,EAArB,CAAA;AACA,YAAIC,IAAAA,gBAAgB,GAAG,EAAvB,CAAA;AACA5B,YAAAA,SAAS,CAAC3Y,OAAV,CAAmBmC,IAAD,IAAU;AAC1B,cAAA,IAAIA,IAAI,CAACkB,IAAL,KAAc,MAAlB,EAA0B;AACxB,gBAAImX,IAAAA,QAAQ,qCAAQrY,IAAR,CAAA,EAAA,EAAA,EAAA;AAAcsY,kBAAAA,MAAM,EAAE,KAAA;AAAtB,iBAAZ,CAAA,CAAA;;AACAH,gBAAAA,cAAc,CAAChgB,IAAf,CAAoBkgB,QAApB,CAAA,CAAA;AACD,eAAA;AACF,aALD,CAAA,CAAA;AAMAZ,YAAAA,WAAW,CAAC5Z,OAAZ,CAAqBmC,IAAD,IAAU;AAC5B,cAAA,IAAIA,IAAI,CAACkB,IAAL,KAAc,MAAlB,EAA0B;AACxB,gBAAImX,IAAAA,QAAQ,qCAAQrY,IAAR,CAAA,EAAA,EAAA,EAAA;AAAcsY,kBAAAA,MAAM,EAAE,KAAA;AAAtB,iBAAZ,CAAA,CAAA;;AACAF,gBAAAA,gBAAgB,CAACjgB,IAAjB,CAAsBkgB,QAAtB,CAAA,CAAA;AACD,eAAA;AACF,aALD,CAAA,CAAA;AAMA,YAAOF,OAAAA,cAAc,CAACtc,MAAf,CAAsBuc,gBAAgB,CAAChR,MAAjB,CAAyBpH,IAAD,IAAU,CAACyW,SAAS,CAACvX,QAAV,CAAmBc,IAAI,CAACmE,IAAxB,CAAnC,CAAtB,CAAP,CAAA;AACD,WAAA;;AACD,UAAA,eAAe8T,eAAf,GAAiC;AAC/B,YAAA,MAAMrB,IAAI,GAAG,MAAML,QAAQ,EAA3B,CAAA;AACA,YAAA,MAAMC,SAAS,GAAGI,IAAI,CAACJ,SAAvB,CAAA;AACA,YAAA,MAAMC,SAAS,GAAGG,IAAI,CAACH,SAAvB,CAAA;AACA,YAAMmB,MAAAA,MAAM,GAAGJ,UAAU,EAAzB,CAAA;AACA,YAAA,MAAMC,WAAW,GAAGG,MAAM,CAACH,WAA3B,CAAA;AACA,YAAIc,IAAAA,cAAc,GAAG,EAArB,CAAA;AACA/B,YAAAA,SAAS,CAAC3Y,OAAV,CAAmBmC,IAAD,IAAU;AAC1B,cAAA,IAAIA,IAAI,CAACkB,IAAL,KAAc,SAAlB,EAA6B;AAC3B,gBAAIsX,IAAAA,WAAW,GAAQxY,cAAAA,CAAAA,EAAAA,EAAAA,IAAR,CAAf,CAAA;;AACAuY,gBAAAA,cAAc,CAACpgB,IAAf,CAAoBqgB,WAApB,CAAA,CAAA;AACD,eAAA;AACF,aALD,CAAA,CAAA;AAMA,YAAIC,IAAAA,gBAAgB,GAAG,EAAvB,CAAA;AACAhB,YAAAA,WAAW,CAAC5Z,OAAZ,CAAqBmC,IAAD,IAAU;AAC5B,cAAA,IAAIA,IAAI,CAACkB,IAAL,KAAc,SAAlB,EAA6B;AAC3B,gBAAIsX,IAAAA,WAAW,GAAQxY,cAAAA,CAAAA,EAAAA,EAAAA,IAAR,CAAf,CAAA;;AACAyY,gBAAAA,gBAAgB,CAACtgB,IAAjB,CAAsBqgB,WAAtB,CAAA,CAAA;AACD,eAAA;AACF,aALD,CAAA,CAAA;AAMA,YAAIE,IAAAA,cAAc,GAAGH,cAAc,CAAC1c,MAAf,CACnB4c,gBAAgB,CAACrR,MAAjB,CAAyBpH,IAAD,IAAU,CAACyW,SAAS,CAACvX,QAAV,CAAmBc,IAAI,CAACmE,IAAxB,CAAnC,CADmB,CAArB,CAAA;AAGA,YAAIwU,IAAAA,eAAe,GAAG,EAAtB,CAAA;AACA/S,YAAAA,KAAK,CAACjE,SAAN,CAAgBiX,OAAhB,CAAwB/a,OAAxB,CAAiCmC,IAAD,IAAU;AACxC,cAAA,IAAIA,IAAI,CAAC9I,IAAL,CAAUgK,IAAV,KAAmB,SAAvB,EAAkC;AAChC,gBAAA,IAAIsX,WAAW,GAAAK,cAAA,CAAA,EAAA,EAAQ7Y,IAAI,CAAC9I,IAAb,CAAf,CAAA;;AACAyhB,gBAAAA,eAAe,CAACxgB,IAAhB,CAAqBqgB,WAArB,CAAA,CAAA;AACD,eAAA;AACF,aALD,CAAA,CAAA;AAMA,YAAO,OAAA;AAAEE,cAAAA,cAAF;AAAkBC,cAAAA,eAAAA;AAAlB,aAAP,CAAA;AACD,WAAA;;AACD,UAAA,KAAK,IAAIhc,CAAT,IAAcqb,QAAQ,CAACW,eAAvB,EAAwC;AACtCT,YAAAA,UAAU,CAAC/f,IAAX,CAAgBwE,CAAC,CAACwH,IAAlB,CAAA,CAAA;AACD,WAAA;;AACD5I,UAAAA,OAAO,CAACC,GAAR,CAAYwc,QAAQ,CAACU,cAArB,EAAqC,yBAArC,CAAA,CAAA;AACAV,UAAAA,QAAQ,CAACU,cAAT,CAAwB7a,OAAxB,CAAgC,CAACkL,CAAD,EAAIb,CAAJ,KAAU;AACxC3M,YAAAA,OAAO,CAACC,GAAR,CAAY0M,CAAZ,EAAea,CAAf,CAAA,CAAA;;AACA,YAAImP,IAAAA,UAAU,CAAChZ,QAAX,CAAoB6J,CAAC,CAAC5E,IAAtB,CAAJ,EAAiC;AAC/B5I,cAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4Cwc,QAAQ,CAACU,cAAT,CAAwBxQ,CAAxB,CAA5C,CAAA,CAAA;AACA8P,cAAAA,QAAQ,CAACU,cAAT,CAAwBxQ,CAAxB,CAAA,GAA6B5C,OAAO,CAACC,KAAR,CAAcwE,SAAd,CAC3BiO,QAAQ,CAACW,eAAT,CAAyBvR,MAAzB,CAAiCpH,IAAD,IAAUA,IAAI,CAACmE,IAAL,KAAc4E,CAAC,CAAC5E,IAA1D,CAAgE,CAAA,CAAhE,CAD2B,CAA7B,CAAA;AAGD,aAAA;AACF,WARD,CAAA,CAAA;AASA6T,UAAAA,QAAQ,CAACU,cAAT,GAA0BV,QAAQ,CAACU,cAAT,CAAwBtR,MAAxB,CAAgCpH,IAAD,IAAU;AACjE,YAAA,IAAIA,IAAI,CAACkB,IAAL,KAAc,SAAlB,EACE,OAAO,CAACgX,UAAU,CAAChZ,QAAX,CAAoBc,IAAI,CAACmE,IAAzB,CAAD,IAAmCnE,IAAI,CAAC9I,IAAL,CAAUgM,KAAV,CAAgB8E,OAAhB,KAA4BhI,IAAI,CAAC9I,IAAL,CAAUgM,KAAV,CAAgBe,GAAtF,CAAA;AACH,WAHyB,CAA1B,CAAA;AAIA,UAAA,MAAMoK,GAAG,GAAG;AACVyK,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEjB,QAAR;AAAkBQ,cAAAA,MAAM,EAAE,EAAA;AAA1B,aADG;AAEVU,YAAAA,KAAK,EAAE;AACL;AACAxU,cAAAA,MAAM,EAAE;AAAE,gBAAA,CAAA,EAAG,CAAL;AAAQ,gBAAA,CAAA,EAAG,CAAX;AAAc,gBAAA,CAAA,EAAG,CAAjB;AAAoB,gBAAA,CAAA,EAAG,CAAvB;AAA0B,gBAAG,CAAA,EAAA,CAAA;AAA7B,eAFH;AAGLyU,cAAAA,KAAK,EAAE;AAAEC,gBAAAA,GAAG,EAAE,CAAP;AAAU7W,gBAAAA,GAAG,EAAE,CAAf;AAAkB8W,gBAAAA,GAAG,EAAE,CAAvB;AAA0BC,gBAAAA,GAAG,EAAE,CAA/B;AAAkCC,gBAAAA,GAAG,EAAE,CAAA;AAAvC,eAAA;AAHF,aAFG;AAOVJ,YAAAA,KAAK,EAAE;AACLK,cAAAA,OAAO,EAAEtB,QAAQ,CAACW,eADb;AAELY,cAAAA,KAAK,EAAEvB,QAAQ,CAACU,cAAAA;AAFX,aAPG;AAWVc,YAAAA,KAAK,EAAE;AACL1d,cAAAA,SAAS,EAAE2d,SAAS,CAAC7T,KAAK,CAAC7E,MAAN,CAAa2Y,OAAd,CADf;AAEL3U,cAAAA,IAAI,EAAE0U,SAAS,CAAC7T,KAAK,CAAC7E,MAAN,CAAa2Y,OAAd,CAFV;AAGLC,cAAAA,KAAK,EAAEF,SAAS,CAAC7T,KAAK,CAAC7E,MAAN,CAAa2Y,OAAd,CAAA;AAHX,aAAA;AAXG,WAAZ,CAAA;AAiBA,UAAA,OAAOrL,GAAP,CAAA;AACD,SAAA;;AACD,QAAA,MAAMiF,QAAQ,GAAG;AACf9L,UAAAA,EAAE,EAAE5B,KAAK,CAAC4B,EADK;AAEfoS,UAAAA,aAAa,EAAE,MAAMtD,mBAAmB,EAAA;AAFzB,SAAjB,CAAA;AAIAF,QAAAA,GAAG,GAAG,IAAIhD,oBAAJ,CAAyBE,QAAzB,CAAN,CAAA;AACA,QAAA,MAAA;AA/JJ,KAAA;;AAiKA,IAAA,CAAA,IAAA,GAAA8C,GAAG,MAAA,IAAH,IAAKhb,IAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAAA,CAAAA,MAAL,CAAY,IAAZ,CAAA,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;;;AACEga,EAAAA,aAAa,CAAC/V,KAAD,EAAQ;AACnBA,IAAAA,KAAK,CAACwL,cAAN,EAAA,CADmB;;AAGnB,IAAA,MAAMgP,MAAM,GAAGxa,KAAK,CAAC+L,aAAN,CAAoBL,OAApB,CAA4B,OAA5B,CAAA,CAAqCQ,OAArC,CAA6Ca,MAA5D,CAAA;AACA,IAAA,MAAMpM,IAAI,GAAG,IAAK4F,CAAAA,KAAL,CAAWjF,KAAX,CAAiB3I,GAAjB,CAAqB6hB,MAArB,CAAb,CAJmB;;AAMnB,IAAMzU,MAAAA,IAAI,GAAG,eAAb,CAAA;AACA,IAAOpF,OAAAA,IAAI,CAAC+M,MAAL,CAAY;AAAE,MAAC3H,CAAAA,IAAD,GAAQ,CAACgE,WAAW,CAACpJ,IAAI,CAAC9I,IAAN,EAAYkO,IAAZ,CAAA;AAAtB,KAAZ,CAAP,CAAA;AACD,GAAA;;AACDsQ,EAAAA,oBAAoB,CAACrW,KAAD,EAAQ;AAC1BA,IAAAA,KAAK,CAACwL,cAAN,EAAA,CAD0B;;AAG1B,IAAI/O,IAAAA,SAAS,GAAGuD,KAAK,CAAC+L,aAAN,CAAoB0O,aAApB,CAAkCvO,OAAlC,CAA0CzP,SAA1D,CAAA;AACA,IAAA,OAAO,KAAK8J,KAAL,CAAWV,iBAAX,CAA6BpJ,SAA7B,EAAwC;AAAEuD,MAAAA,KAAK,EAAEA,KAAAA;AAAT,KAAxC,CAAP,CAAA;AACD,GAAA;;AACDsW,EAAAA,iBAAiB,CAACtW,KAAD,EAAQ;AACvBA,IAAAA,KAAK,CAACwL,cAAN,EAAA,CADuB;;AAGvB,IAAItG,IAAAA,KAAK,GAAGlF,KAAK,CAAC+L,aAAN,CAAoB0O,aAApB,CAAkCvO,OAAlC,CAA0ChH,KAAtD,CAAA;AACA,IAAA,OAAO,KAAKqB,KAAL,CAAWC,SAAX,CAAqBtB,KAArB,EAA4B;AAAElF,MAAAA,KAAK,EAAEA,KAAAA;AAAT,KAA5B,CAAP,CAAA;AACD,GAAA;;AACDwW,EAAAA,WAAW,CAACxW,KAAD,EAAQ;AACjBA,IAAAA,KAAK,CAACwL,cAAN,EAAA,CAAA;AACAtP,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAFiB;;AAIjB,IAAA,MAAMgM,EAAE,GAAGnI,KAAK,CAAC+L,aAAN,CAAoBL,OAApB,CAA4B,OAA5B,CAAA,CAAqCQ,OAArC,CAA6Ca,MAAxD,CAAA;AACA,IAAMpM,MAAAA,IAAI,GAAG,IAAA,CAAK4F,KAAL,CAAWjF,KAAX,CAAiB3I,GAAjB,CAAqBwP,EAArB,CAAb,CAAA;AACA,IAAA,MAAMb,SAAS,GAAG3G,IAAI,CAACe,MAAL,CAAY4F,SAA9B,CAAA;AACA,IAAME,MAAAA,SAAS,GAAG7G,IAAI,CAACe,MAAL,CAAY8F,SAA9B,CAPiB;;AASjB,IAAA,IAAI7G,IAAJ,EAAU,OAAOA,IAAI,CAAC/B,IAAL,CAAU;AAAE0I,MAAAA,SAAF;AAAaE,MAAAA,SAAAA;AAAb,KAAV,CAAP,CAAA;AACX,GAAA;AACD;AACF;AACA;AACA;AACA;;;AACqB,EAAb2O,MAAAA,aAAa,CAACnW,KAAD,EAAQ;AACzBA,IAAAA,KAAK,CAACwL,cAAN,EAAA,CAAA;AACA,IAAA,MAAMgD,MAAM,GAAGxO,KAAK,CAAC+L,aAArB,CAFyB;AAIzB;;AACA,IAAMlK,MAAAA,IAAI,GAAG2M,MAAM,CAACtC,OAAP,CAAerK,IAA5B,CALyB;AAOzB;;AACA,IAAMhK,MAAAA,IAAI,GAAGuiB,SAAS,CAAC5L,MAAM,CAACtC,OAAR,CAAtB,CARyB;;AAUzB,IAAMpH,MAAAA,IAAI,GAAI,CAAMjD,IAAAA,EAAAA,IAAI,CAAC6Y,UAAL,EAAkB,CAAtC,CAAA,CAVyB;;AAYzB,IAAA,MAAM3T,QAAQ,GAAG;AACfjC,MAAAA,IAAI,EAAEA,IADS;AAEfjD,MAAAA,IAAI,EAAEA,IAFS;AAGfhK,MAAAA,IAAI,EAAEA,IAAAA;AAHS,KAAjB,CAZyB;;AAkBzB,IAAA,OAAOkP,QAAQ,CAAClP,IAAT,CAAc,MAAd,CAAP,CAlByB;;AAoBzB,IAAA,OAAO,MAAMiP,IAAI,CAAC6K,MAAL,CAAY5K,QAAZ,EAAsB;AAAE+F,MAAAA,MAAM,EAAE,IAAKvG,CAAAA,KAAAA;AAAf,KAAtB,CAAb,CAAA;AACD,GAAA;AACD;AACF;AACA;AACA;AACA;;;AACEoU,EAAAA,OAAO,CAAC3a,KAAD,EAAQ;AACbA,IAAAA,KAAK,CAACwL,cAAN,EAAA,CAAA;AACA,IAAA,MAAMC,OAAO,GAAGzL,KAAK,CAAC+L,aAAtB,CAFa;;AAIb,IAAA,MAAMG,OAAO,GAAGT,OAAO,CAACS,OAAxB,CAJa;;AAMb,IAAIA,IAAAA,OAAO,CAAC0O,QAAZ,EAAsB;AACpB,MAAA,IAAI1O,OAAO,CAAC0O,QAAR,IAAoB,MAAxB,EAAgC;AAC9B;AACA,QAAMJ,MAAAA,MAAM,GAAG/O,OAAO,CAACC,OAAR,CAAgB,OAAhB,CAAA,CAAyBQ,OAAzB,CAAiCa,MAAhD,CAAA;AACA,QAAA,MAAMpM,IAAI,GAAG,IAAK4F,CAAAA,KAAL,CAAWjF,KAAX,CAAiB3I,GAAjB,CAAqB6hB,MAArB,CAAb,CAH8B;;AAK9B,QAAA,IAAI7Z,IAAJ,EAAU,OAAOA,IAAI,CAAC/B,IAAL,EAAP,CAAA;AACX,OAAA;AACD;AACN;AACA;AACA;AACA;;AACK,KAAA;AACF,GAAA;AACD;AACF;AACA;;;AACe,EAAPic,MAAAA,OAAO,CAAC7a,KAAD,EAAQ;AACnB,IAAA,IAAI,CAACvH,IAAI,CAACsS,IAAL,CAAU0B,IAAf,EAAqB;AACnBO,MAAAA,EAAE,CAACC,aAAH,CAAiBC,KAAjB,CAAuB,oEAAvB,CAAA,CAAA;AACA,MAAA,OAAA;AACD,KAJkB;;;AAMnB,IAAA,IAAIrV,IAAJ,CAAA;;AACA,IAAI,IAAA;AACFA,MAAAA,IAAI,GAAGijB,IAAI,CAACC,KAAL,CAAW/a,KAAK,CAACgb,YAAN,CAAmBjG,OAAnB,CAA2B,YAA3B,CAAX,CAAP,CAAA;AACD,KAFD,CAEE,OAAOvV,GAAP,EAAY;AACZ,MAAA,OAAO,KAAP,CAAA;AACD,KAAA;;AACD,IAAM+G,MAAAA,KAAK,GAAG,IAAA,CAAKA,KAAnB,CAAA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,IAAA,MAAM0U,OAAO,GAAGC,KAAK,CAACC,IAAN,CAAW,oBAAX,EAAiC5U,KAAjC,EAAwC,IAAxC,EAA8C1O,IAA9C,CAAhB,CAAA;AACA,IAAA,IAAIojB,OAAO,KAAK,KAAhB,EAAuB,OAtBJ;;AAwBnB,IAAQpjB,QAAAA,IAAI,CAACgK,IAAb;AACE,MAAA,KAAK,cAAL;AACE,QAAA,OAAO,KAAKuZ,mBAAL,CAAyBpb,KAAzB,EAAgCnI,IAAhC,CAAP,CAAA;;AACF,MAAA,KAAK,OAAL;AACE,QAAA,OAAO,KAAKwjB,YAAL,CAAkBrb,KAAlB,EAAyBnI,IAAzB,CAAP,CAAA;;AACF,MAAA,KAAK,MAAL;AACE,QAAA,OAAO,KAAKyjB,WAAL,CAAiBtb,KAAjB,EAAwBnI,IAAxB,CAAP,CAAA;;AACF,MAAA,KAAK,QAAL;AACE,QAAA,OAAO,KAAK0jB,aAAL,CAAmBvb,KAAnB,EAA0BnI,IAA1B,CAAP,CAAA;AARJ,KAAA;AAUD,GAAA;;AAte6C;;ACJzC,MAAM2jB,gBAAN,SAA+BC,eAA/B,CAA+C;AACzB,EAAA,WAAd/G,cAAc,GAAG;AACxB,IAAOzO,OAAAA,OAAO,CAACC,KAAR,CAAcC,WAAd,CAA0B,KAAA,CAAMuO,cAAhC,EAAgD;AACnDC,MAAAA,OAAO,EAAE,CAAC,OAAD,CAD0C;AAEnD1a,MAAAA,KAAK,EAAE,sBAF4C;AAGnDQ,MAAAA,QAAQ,EAAE,0CAHyC;AAInD0N,MAAAA,EAAE,EAAE,UAJ+C;AAKnD4J,MAAAA,KAAK,EAAE,GAL4C;AAMnDwC,MAAAA,MAAM,EAAE,MAAA;AAN2C,KAAhD,CAAP,CAAA;AAQH,GAAA;;AACY,EAAA,MAAPQ,OAAO,GAAG;AACZ,IAAA,IAAA,CAAKjd,OAAL,CAAaD,IAAb,GAAoB,CAAC,IAAA,CAAKmE,IAAN,GAAc,MAAM,IAAK0f,CAAAA,cAAL,EAApB,GAA6C,IAAA,CAAK5jB,OAAL,CAAaD,IAA9E,CADY;;AAGZ,IAAA,MAAMkZ,YAAY,GAAG,IAAKjZ,CAAAA,OAAL,CAAaD,IAAlC,CAAA;AACA,IAAA,MAAMwR,GAAG,GAAG0H,YAAY,CAAC1H,GAAzB,CAAA;AACA,IAAA,MAAMsS,SAAS,GAAGtS,GAAG,CAACC,MAAtB,CAAA;AACA,IAAA,MAAMsS,QAAQ,GAAGvS,GAAG,CAACM,KAArB,CAAA;AACA,IAAA,MAAM9R,IAAI,GAAGkZ,YAAY,CAAClZ,IAA1B,CAAA;AACA,IAAA,IAAIgkB,OAAO,GAAG9K,YAAY,CAAC8K,OAA3B,CAAA;AACA3f,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EATY;;AAWZ,IAAI0c,IAAAA,UAAU,GAAG,EAAjB,CAAA;;AACA,IAAA,KAAK,IAAIvb,CAAT,IAAczF,IAAd,EAAoB;AAChBghB,MAAAA,UAAU,CAAC/f,IAAX,CAAgBwE,CAAC,CAACwH,IAAlB,CAAA,CAAA;AACH,KAdW;;;AAgBZ6W,IAAAA,SAAS,CAACnd,OAAV,CAAkB,CAACnC,KAAD,EAAQsb,KAAR,KAAkB;AAAA,MAAA,IAAA,qBAAA,EAAA,eAAA,EAAA,sBAAA,EAAA,gBAAA,EAAA,sBAAA,EAAA,sBAAA,CAAA;;AAChC;AACAgE,MAAAA,SAAS,CAAChE,KAAD,CAAT,CAAiB9V,IAAjB,GAAwBga,CAAAA,qBAAAA,GAAAA,OAAxB,KAAwBA,IAAAA,IAAAA,OAAxB,KAAwBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAAA,eAAAA,GAAAA,OAAO,CAAEvS,MAAjC,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,sBAAA,GAAwB,eAAkBqO,CAAAA,KAAlB,CAAxB,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAwB,sBAA0B9V,CAAAA,IAAlD,yEAA2D8Z,SAAS,CAAChE,KAAD,CAAT,CAAiB9V,IAAjB,IAAyB,WAApF,CAFgC;;AAIhC,MAAIia,IAAAA,YAAY,GAAGjkB,IAAI,CAACkQ,MAAL,CAAapH,IAAD,IAAUA,IAAI,CAACkB,IAAL,KAAc8Z,SAAS,CAAChE,KAAD,CAAT,CAAiB9V,IAArD,CAAnB,CAJgC;;AAMhC8Z,MAAAA,SAAS,CAAChE,KAAD,CAAT,CAAiB7S,IAAjB,GACIgX,YAAY,CAAC/T,MAAb,CAAqBpH,IAAD,IAAU;AAAA,QAAA,IAAA,gBAAA,EAAA,qBAAA,CAAA;;AAC1BA,QAAAA,IAAI,CAACmE,IAAL,MAAA,CAAA,gBAAA,GAAc+W,OAAO,CAACvS,MAAtB,MAAA,IAAA,IAAA,gBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,qBAAA,GAAc,gBAAiBqO,CAAAA,KAAjB,CAAd,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAc,sBAAyB7S,IAAvC,CAAA,CAAA;AACH,OAFD,CAEGG,CAAAA,MAFH,GAEY,CAFZ,GAGM,CAAA4W,CAAAA,gBAAAA,GAAAA,OAAO,CAACvS,MAAR,MAAiBqO,IAAAA,IAAAA,gBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,gBAAAA,CAAAA,KAAjB,CAAwB7S,CAAAA,IAAxB,KAAgC6W,SAAS,CAAChE,KAAD,CAAT,CAAiB7S,IAHvD,GAIM6W,SAAS,CAAChE,KAAD,CAAT,CAAiB7S,IAAjB,IAAyBgX,YAAY,CAAC,CAAD,CAAZ,CAAgBhX,IALnD,CAAA;AAMA6W,MAAAA,SAAS,CAAChE,KAAD,CAAT,CAAiBmE,YAAjB,GAAgCA,YAAY,CAACvW,GAAb,CAAkB5E,IAAD,IAAUA,IAAI,CAACmE,IAAhC,CAAhC,CAAA;AACA6W,MAAAA,SAAS,CAAChE,KAAD,CAAT,CAAiBoE,KAAjB,GAAyBF,CAAAA,sBAAAA,GAAAA,CAAAA,sBAAAA,GAAAA,OAAO,CAACvS,MAAR,CAAeqO,KAAf,CAAzB,MAAyB,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,sBAAA,CAAuBoE,KAAhD,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,sBAAA,GAA0DJ,SAAS,CAAChE,KAAD,CAAT,CAAiBoE,KAAjB,IAA0B,EAApF,CAAA;AACAJ,MAAAA,SAAS,CAAChE,KAAD,CAAT,CAAiBtb,KAAjB,GAAyBxE,IAAI,CAACkQ,MAAL,CAAapH,IAAD,IAAUA,IAAI,CAACmE,IAAL,KAAc6W,SAAS,CAAChE,KAAD,CAAT,CAAiB7S,IAArD,CAAA,CAA2D,CAA3D,CAAA,CAA8DzI,KAAvF,CAAA;;AACA,MAAK,KAAA,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK0Z,MAAL,CAAYnf,IAAZ,CAAiBA,IAAjB,CAAsBgM,KAAtB,CAA4Be,GAAhD,EAAqDtH,CAAC,EAAtD,EAA0D;AAAA,QAAA,IAAA,qBAAA,CAAA;;AACtD,QAAI0e,IAAAA,YAAY,GAAGL,SAAS,CAAChE,KAAD,CAAT,CAAiBoE,KAAjB,CAAuBze,CAAvB,CAAnB,CAAA;AACA,QAAA,IAAI2e,eAAe,GAAA,CAAA,qBAAA,GAAGN,SAAS,CAAChE,KAAD,CAAT,CAAiBoE,KAAjB,CAAuBze,CAAC,GAAG,CAA3B,CAAH,yEAAoC,CAAvD,CAAA;;AACA,QAAA,QAAQqe,SAAS,CAAChE,KAAD,CAAT,CAAiB9V,IAAzB;AACI,UAAA,KAAK,OAAL;AACIma,YAAAA,YAAY,GAAGA,YAAY,GAAG,CAAf,GAAmB,CAAnB,GAAuBA,YAAY,IAAI,CAAtD,CAAA;AACA,YAAA,MAAA;;AACJ,UAAA,KAAK,WAAL;AACIA,YAAAA,YAAY,GAAGA,YAAY,IAAI,EAA/B,CAAA;AACA,YAAA,MAAA;;AACJ,UAAA,KAAK,SAAL;AACI,YAAA,MAAME,QAAQ,GAAGP,SAAS,CAAChE,KAAD,CAAT,CAAiBtb,KAAlC,CAAA;AACA2f,YAAAA,YAAY,GAAG5Y,IAAI,CAACI,GAAL,CAASwY,YAAT,EAAuBE,QAAvB,CAAf,CAAA;AATR,SAAA;;AAWAF,QAAAA,YAAY,GAAG5Y,IAAI,CAACwB,GAAL,CAASoX,YAAT,EAAuBC,eAAvB,CAAf,CAAA;AACAN,QAAAA,SAAS,CAAChE,KAAD,CAAT,CAAiBoE,KAAjB,CAAuBze,CAAvB,CAAA,GAA4B0e,YAA5B,CAAA;AACH,OAAA;AACJ,KAhCD,CAAA,CAAA;AAiCAJ,IAAAA,QAAQ,CAACpd,OAAT,CAAiB,CAACnC,KAAD,EAAQsb,KAAR,KAAkB;AAAA,MAAA,IAAA,oBAAA,EAAA,cAAA,CAAA;;AAC/BiE,MAAAA,QAAQ,CAACjE,KAAD,CAAR,GAAA,CAAA,oBAAA,GAAA,CAAA,cAAA,GAAkBkE,OAAO,CAAClS,KAA1B,MAAkB,IAAA,IAAA,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,cAAA,CAAgBgO,KAAhB,CAAlB,MAAA,IAAA,IAAA,oBAAA,KAAA,KAAA,CAAA,GAAA,oBAAA,GAA4CiE,QAAQ,CAACjE,KAAD,CAApD,CAAA;AACH,KAFD,CAAA,CAAA;AAGA5G,IAAAA,YAAY,CAAC8K,OAAb,GAAuBxS,GAAvB,CAAA;AACAnN,IAAAA,OAAO,CAACC,GAAR,CAAY4U,YAAZ,CAAA,CAAA;AACA,IAAA,OAAOA,YAAP,CAAA;AACH,GAAA;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACwB,EAAA,MAAd2K,cAAc,GAAG;AACnB,IAAI,IAAA,IAAA,CAAK1f,IAAT,EACI,OAAA;AACJE,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAA,CAAA;AACA,IAAA,MAAMwc,QAAQ,GAAG,MAAM,IAAA,CAAKwD,QAAL,EAAvB,CAAA;AACA,IAAA,MAAMhF,SAAS,GAAGwB,QAAQ,CAACxB,SAA3B,CAAA;AACA,IAAA,MAAMiB,WAAW,GAAGO,QAAQ,CAACP,WAA7B,CAAA;AACA,IAAoBO,QAAQ,CAACN,YAA7B;AACA,IAAA,MAAMxgB,IAAI,GAAG,EAAb,CARmB;;AASnB,IAAA,KAAK,IAAI,CAACgR,CAAD,EAAIa,CAAJ,CAAT,IAAmBxG,MAAM,CAAC3F,OAAP,CAAezC,MAAM,CAACG,KAAP,CAAaC,UAA5B,CAAnB,EAA4D;AAAA,MAAA,IAAA,mBAAA,CAAA;;AACxDrD,MAAAA,IAAI,CAACiB,IAAL,CAAU;AACNgM,QAAAA,IAAI,yBAAErM,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB6M,SAAS,CAAC7L,MAAM,CAACG,KAAP,CAAaC,UAAd,EAA0B2N,CAA1B,CAA5B,CAAF,qEAA+DA,CAD7D;AAENxM,QAAAA,KAAK,EAAEwM,CAFD;AAGNhH,QAAAA,IAAI,EAAE,WAAA;AAHA,OAAV,CAAA,CAAA;AAKH,KAAA;;AACD,IAAA,KAAK,IAAI,CAACgH,CAAD,EAAIa,CAAJ,CAAT,IAAmBhF,WAAW,CAAC5J,MAAM,CAACG,KAAP,CAAamK,MAAd,CAA9B,EAAqD;AAAA,MAAA,IAAA,oBAAA,CAAA;;AACjDvN,MAAAA,IAAI,CAACiB,IAAL,CAAU;AACNgM,QAAAA,IAAI,0BAAErM,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB6M,SAAS,CAAC7L,MAAM,CAACG,KAAP,CAAamK,MAAd,EAAsByD,CAAtB,CAA5B,CAAF,uEAA2DA,CADzD;AAENxM,QAAAA,KAAK,EAAEwM,CAFD;AAGNhH,QAAAA,IAAI,EAAE,OAAA;AAHA,OAAV,CAAA,CAAA;AAKH,KAAA;;AACD,IAAA,MAAMua,GAAG,GAAGlZ,MAAM,CAACoG,MAAP,CAAcxO,MAAM,CAACG,KAAP,CAAaqN,IAA3B,EAAiCP,MAAjC,CAAwC,CAAC1L,KAAD,EAAQsb,KAAR,KAAkB;AAClE,MAAA,IAAIA,KAAK,KAAK,CAAd,EACI,OAAO7c,MAAM,CAACG,KAAP,CAAaqN,IAAb,CAAkBqP,KAAlB,CAAP,CAAA;AACP,KAHW,CAAZ,CAAA;AAIA,IAAM0E,MAAAA,IAAI,GAAGnZ,MAAM,CAACoZ,MAAP,CAAc,EAAd,EAAkBF,GAAlB,CAAb,CAAA;AACA,IAAA,MAAMrL,YAAY,GAAG;AACjB8K,MAAAA,OAAO,EAAE;AACLvS,QAAAA,MAAM,EAAE,EADH;AAELK,QAAAA,KAAK,EAAE,EAAA;AAFF,OADQ;AAKjBN,MAAAA,GAAG,EAAEpD,OAAO,CAACC,KAAR,CAAcwE,SAAd,CAAwB,IAAKsM,CAAAA,MAAL,CAAYnf,IAAZ,CAAiBA,IAAjB,CAAsBwR,GAA9C,CALY;AAMjBkT,MAAAA,SAAS,EAAE,CAAC,WAAD,EAAc,OAAd,EAAuB,SAAvB,CANM;AAOjB1E,MAAAA,IAAI,EAAE;AACFqC,QAAAA,KAAK,EAAE/C,SAAS,CAAC3a,MAAV,CAAiB4b,WAAW,CAACrQ,MAAZ,CAAoBpH,IAAD,IAAUwW,SAAS,CAACqF,OAAV,CAAkB7b,IAAlB,CAA0B,GAAA,CAAvD,CAAjB,CADL;AAEFgI,QAAAA,OAAO,EAAE,IAAKqO,CAAAA,MAAL,CAAYnf,IAAZ,CAAiBA,IAAjB,CAAsBwR,GAAtB,CAA0BC,MAA1B,CAAiCvB,MAAjC,CAAyCpH,IAAD,IAAUA,IAAI,CAACkB,IAAL,KAAc,SAAhE,CAAA;AAFP,OAPW;AAWjBhK,MAAAA,IAAI,EAAEA,IAXW;AAYjBwkB,MAAAA,IAAI,EAAEA,IAAAA;AAZW,KAArB,CAAA;AAiBA,IAAA,MAAMI,SAAS,GAAG1L,YAAY,CAAC8G,IAAb,CAAkBqC,KAApC,CAAA;AACA,IAAA,MAAMwC,WAAW,GAAG3L,YAAY,CAAC8G,IAAb,CAAkBlP,OAAtC,CAAA;AACA,IAAIkQ,IAAAA,UAAU,GAAG,EAAjB,CAAA;;AACA,IAAA,KAAK,IAAIvb,CAAT,IAAcof,WAAd,EAA2B;AACvB7D,MAAAA,UAAU,CAAC/f,IAAX,CAAgBwE,CAAC,CAACwH,IAAlB,CAAA,CAAA;AACH,KAAA;;AACD2X,IAAAA,SAAS,CAACje,OAAV,CAAkB,CAACmC,IAAD,EAAOgX,KAAP,KAAiB;AAC/B,MAAIhX,IAAAA,IAAI,CAACmE,IAAL,KAAc,KAAKkS,MAAL,CAAYlS,IAA9B,EAAoC;AAChC5I,QAAAA,OAAO,CAACC,GAAR,CAAYwE,IAAI,CAACmE,IAAjB,EAAuB,2BAAvB,CAAA,CAAA;AACA2X,QAAAA,SAAS,CAAC3e,MAAV,CAAiB6Z,KAAjB,EAAwB,CAAxB,CAAA,CAAA;AACH,OAHD,MAIK,IAAIkB,UAAU,CAAChZ,QAAX,CAAoBc,IAAI,CAACmE,IAAzB,CAAJ,EAAoC;AACrC5I,QAAAA,OAAO,CAACC,GAAR,CAAYwE,IAAI,CAACmE,IAAjB,EAAuB,+BAAvB,EAAwD6S,KAAxD,CAAA,CAAA;AACAhX,QAAAA,IAAI,CAACob,KAAL,GAAaW,WAAW,CAACA,WAAW,CAACF,OAAZ,CAAoBE,WAAW,CAAC3U,MAAZ,CAAoB8P,IAAD,IAAUA,IAAI,CAAC/S,IAAL,KAAcnE,IAAI,CAACmE,IAAhD,CAAA,CAAsD,CAAtD,CAApB,CAAD,CAAX,CAA2FiX,KAAxG,CAAA;AACAU,QAAAA,SAAS,CAAC3e,MAAV,CAAiB6Z,KAAjB,EAAwB,CAAxB,CAAA,CAAA;AACH,OAAA;;AACD,MAAA,IAAI8E,SAAS,CAAC1U,MAAV,CAAkB8P,IAAD,IAAUA,IAAI,CAAC/S,IAAL,KAAcnE,IAAI,CAACmE,IAA9C,EAAoDG,MAApD,KAA+D,CAAnE,EAAsE;AAClEpN,QAAAA,IAAI,CAACiB,IAAL,CAAU;AAAEgM,UAAAA,IAAI,EAAEnE,IAAI,CAACmE,IAAb;AAAmBjD,UAAAA,IAAI,EAAE,SAAzB;AAAoCxF,UAAAA,KAAK,EAAEsE,IAAI,CAACtE,KAAAA;AAAhD,SAAV,CAAA,CAAA;AACH,OAAA;AACJ,KAbD,CAAA,CAAA;AAcA,IAAA,OAAO0U,YAAP,CAAA;AACH,GAAA;AACD;AACJ;AACA;AACA;;;AACkB,EAAA,MAARoL,QAAQ,GAAG;AACb,IAAIhF,IAAAA,SAAS,GAAG,EAAhB,CAAA;AACA,IAAIiB,IAAAA,WAAW,GAAG,EAAlB,CAAA;AACA,IAAIC,IAAAA,WAAW,GAAG,EAAlB,CAAA;AACA,IAAA,MAAMf,KAAK,GAAG7e,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,OAAlB,EAA2B,MAA3B,CAAA,CAAmC2e,KAAjD,CAAA;AACA,IAAA,MAAMgB,OAAO,GAAG7f,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,OAAlB,EAA2B,MAA3B,CAAA,CAAmC2f,OAAnD,CAAA;;AACA,IAAA,KAAK,IAAI7V,GAAT,IAAgB6U,KAAhB,EAAuB;AACnB,MAAA,IAAI7e,IAAI,CAAC6e,KAAL,CAAWvP,MAAX,CAAmBwP,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAchc,KAAd,KAAwBiH,GAApD,EAAyDwC,MAAzD,KAAoE,CAAxE,EAA2E;AACvE,QAAIwS,IAAAA,SAAS,GAAG,EAAhB,CAAA;AACAA,QAAAA,SAAS,CAAC3e,IAAV,CAAe0Q,KAAK,CAACC,IAAN,CAAWhR,IAAI,CAAC6e,KAAL,CAAWvP,MAAX,CAAmBwP,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAchc,KAAd,KAAwBiH,GAAxB,IAA+B8U,IAAI,CAACC,QAAL,CAAcmF,MAAd,KAAyB,MAApF,CAAA,CAA4F,CAA5F,CAAA,CAA+FhF,KAA1G,CAAf,CAAA,CAAA;AACAF,QAAAA,SAAS,GAAGA,SAAS,CAACG,IAAV,EAAZ,CAAA;;AACA,QAAA,KAAK,IAAIC,IAAT,IAAiBJ,SAAjB,EAA4B;AACxB,UAAII,IAAAA,IAAI,YAAYhR,SAApB,EAA+B;AAC3B,YAAMiR,MAAAA,OAAO,GAAGrf,IAAI,CAAC6e,KAAL,CAAWvP,MAAX,CAAmBwP,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAchc,KAAd,KAAwBiH,GAApD,CAAA,CAAyD,CAAzD,CAAA,CAA4D+U,QAA5D,CAAqEO,OAArE,GAA+E,GAA/E,GAAqFtV,GAArG,CAAA;AACA,YAAA,MAAMuV,GAAG,GAAG,MAAMvf,IAAI,CAAC6e,KAAL,CAAW3e,GAAX,CAAemf,OAAf,EAAwBG,WAAxB,CAAoCJ,IAAI,CAAC1P,EAAzC,CAAlB,CAAA;;AACA,YAAI6P,IAAAA,GAAG,YAAYnR,SAAnB,EAA8B;AAC1B,cAAA,IAAImR,GAAG,CAACngB,IAAJ,CAASgK,IAAT,KAAkB,SAAtB,EAAiC;AAC7B,gBAAA,IAAIlB,IAAI,GAAGqX,GAAG,CAACE,QAAJ,EAAX,CAAA;AACAvX,gBAAAA,IAAI,CAAC9I,IAAL,GAAYmgB,GAAG,CAACngB,IAAJ,CAASA,IAArB,CAAA;AACA,gBAAA,MAAM0hB,OAAO,GAAG;AACZzU,kBAAAA,IAAI,EAAEnE,IAAI,CAACmE,IADC;AAEZjD,kBAAAA,IAAI,EAAE,SAFM;AAGZka,kBAAAA,KAAK,EAAE,EAHK;AAIZxS,kBAAAA,IAAI,EAAE,EAJM;AAKZuS,kBAAAA,YAAY,EAAE,EALF;AAMZzf,kBAAAA,KAAK,EAAEsE,IAAI,CAAC9I,IAAL,CAAUgM,KAAV,CAAgBe,GAAAA;AANX,iBAAhB,CAAA;AAQAuS,gBAAAA,SAAS,CAACre,IAAV,CAAeygB,OAAf,CAAA,CAAA;AACH,eAAA;AACJ,aAAA;AACJ,WAAA;AACJ,SAAA;AACJ,OAAA;AACJ,KAAA;;AACD,IAAA,KAAK,IAAI9W,GAAT,IAAgB6V,OAAhB,EAAyB;AACrB,MAAA,IAAI7f,IAAI,CAAC6f,OAAL,CAAavQ,MAAb,CAAqBwQ,MAAD,IAAYA,MAAM,CAAC1gB,IAAP,CAAYiN,IAAZ,KAAqBrC,GAArD,EAA0DwC,MAA1D,KAAqE,CAAzE,EAA4E;AACxE,QAAIwS,IAAAA,SAAS,GAAG,EAAhB,CAAA;AACAA,QAAAA,SAAS,CAAC3e,IAAV,CAAeL,IAAI,CAAC6f,OAAL,CAAavQ,MAAb,CAAqBwQ,MAAD,IAAYA,MAAM,CAAC1gB,IAAP,CAAYiN,IAAZ,KAAqBrC,GAArB,IAA4B8V,MAAM,CAAC1gB,IAAP,CAAYgK,IAAZ,KAAqB,MAAjF,CAAyF,CAAA,CAAzF,EAA4F2W,QAA3G,CAAA,CAAA;AACAf,QAAAA,SAAS,GAAGA,SAAS,CAACG,IAAV,EAAZ,CAAA;;AACA,QAAA,KAAK,IAAIC,IAAT,IAAiBJ,SAAjB,EAA4B;AACxB,UAAII,IAAAA,IAAI,YAAYhR,SAAhB,IAA6BgR,IAAI,CAAChgB,IAAL,CAAUgK,IAAV,KAAmB,SAApD,EAA+D;AAC3D3F,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC0b,IAAvC,CAAA,CAAA;AACA,YAAA,MAAMlX,IAAI,GAAGkX,IAAI,CAACK,QAAL,EAAb,CAAA;AACAvX,YAAAA,IAAI,CAAC9I,IAAL,GAAYoO,OAAO,CAACC,KAAR,CAAcwE,SAAd,CAAwBmN,IAAI,CAAChgB,IAAL,CAAUA,IAAlC,CAAZ,CAAA;AACA,YAAA,MAAM0hB,OAAO,GAAG;AACZzU,cAAAA,IAAI,EAAEnE,IAAI,CAACmE,IADC;AAEZjD,cAAAA,IAAI,EAAE,SAFM;AAGZka,cAAAA,KAAK,EAAE,EAHK;AAIZxS,cAAAA,IAAI,EAAE,EAJM;AAKZuS,cAAAA,YAAY,EAAE,EALF;AAMZzf,cAAAA,KAAK,EAAEsE,IAAI,CAAC9I,IAAL,CAAUgM,KAAV,CAAgBe,GAAAA;AANX,aAAhB,CAAA;AAQAwT,YAAAA,WAAW,CAACtf,IAAZ,CAAiBygB,OAAjB,CAAA,CAAA;AACAlB,YAAAA,WAAW,CAACvf,IAAZ,CAAiB6H,IAAI,CAACmE,IAAtB,CAAA,CAAA;AACH,WAAA;AACJ,SAAA;AACJ,OAAA;AACJ,KAAA;;AACD,IAAO,OAAA;AAAEqS,MAAAA,SAAF;AAAaiB,MAAAA,WAAb;AAA0BC,MAAAA,WAAAA;AAA1B,KAAP,CAAA;AACH,GAAA;;AACDzC,EAAAA,iBAAiB,CAACla,IAAD,EAAO;AACpB,IAAMka,KAAAA,CAAAA,iBAAN,CAAwBla,IAAxB,CAAA,CAAA;AACAA,IAAAA,IAAI,CAAC8R,IAAL,CAAU,cAAV,EAA0BtC,EAA1B,CAA6B,OAA7B,EAAsC,KAAK0R,MAAL,CAAYxR,IAAZ,CAAiB,IAAjB,CAAtC,CAAA,CAAA;AACA1P,IAAAA,IAAI,CAAC8R,IAAL,CAAU,cAAV,EAA0BtC,EAA1B,CAA6B,OAA7B,EAAsC,KAAK2R,OAAL,CAAazR,IAAb,CAAkB,IAAlB,CAAtC,CAAA,CAAA;AACH,GAAA;AACD;AACJ;AACA;AACA;;;AACgB,EAANwR,MAAAA,MAAM,CAAC5c,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACwL,cAAN,EAAA,CAAA;AACA,IAAA,MAAMnC,GAAG,GAAG,IAAA,CAAKvR,OAAL,CAAaD,IAAb,CAAkBwR,GAA9B,CAAA;AACA,IAAA,IAAIyT,QAAQ,GAAG,EAAf,CAHgB;;AAIhB,IAAA,KAAK,IAAI,CAACjU,CAAD,EAAIvL,CAAJ,CAAT,IAAmBoH,WAAW,CAAC5J,MAAM,CAACG,KAAP,CAAaC,UAAd,CAA9B,EAAyD;AACrD4hB,MAAAA,QAAQ,CAAChkB,IAAT,CAAc+P,CAAd,CAAA,CAAA;AACH,KANe;;;AAQhB,IAAA,MAAMqT,QAAQ,GAAG,IAAKlF,CAAAA,MAAL,CAAYnf,IAAZ,CAAiBA,IAAjB,CAAsBgM,KAAtB,CAA4Be,GAA7C,CARgB;;AAUhB,IAAA,MAAMmY,YAAY,GAAG;AACjBjY,MAAAA,IAAI,EAAE,UADW;AAEjBjD,MAAAA,IAAI,EAAE,WAFW;AAGjB0H,MAAAA,IAAI,EAAE,IAAIC,KAAJ,CAAU0S,QAAV,CAAoBc,CAAAA,IAApB,CAAyB,KAAzB,CAHW;AAIjBlB,MAAAA,YAAY,EAAEgB,QAJG;AAKjBzgB,MAAAA,KAAK,EAAE,KALU;AAMjB0f,MAAAA,KAAK,EAAE,IAAIvS,KAAJ,CAAU0S,QAAV,CAAA,CAAoBc,IAApB,CAAyB,EAAzB,CAAA;AANU,KAArB,CAAA;AAQA3T,IAAAA,GAAG,CAACC,MAAJ,CAAWxQ,IAAX,CAAgBikB,YAAhB,CAAA,CAAA;AACA,IAAA,IAAA,CAAKhhB,MAAL,EAAA,CAAA;AACH,GAAA;AACD;AACJ;AACA;AACA;;;AACiB,EAAP8gB,MAAAA,OAAO,CAAC7c,KAAD,EAAQ;AACjBA,IAAAA,KAAK,CAACwL,cAAN,EAAA,CAAA;AACA,IAAA,MAAMnC,GAAG,GAAG,IAAA,CAAKvR,OAAL,CAAaD,IAAb,CAAkBwR,GAA9B,CAAA;AACAA,IAAAA,GAAG,CAACC,MAAJ,CAAWxL,MAAX,CAAkBkC,KAAK,CAAC+L,aAAN,CAAoBG,OAApB,CAA4BzJ,GAA9C,EAAmD,CAAnD,CAAA,CAAA;AACA,IAAA,IAAA,CAAK1G,MAAL,EAAA,CAAA;AACH,GAAA;AACD;AACJ;AACA;AACA;;;AACIkhB,EAAAA,cAAc,CAACjd,KAAD,EAAQ;AAClB,IAAMid,KAAAA,CAAAA,cAAN,CAAqBjd,KAArB,CAAA,CAAA;;AACA,IAAA,MAAMnI,IAAI,GAAG,IAAKC,CAAAA,OAAL,CAAaD,IAA1B,CAAA;AACA,IAAA,MAAMgkB,OAAO,GAAGhkB,IAAI,CAACgkB,OAArB,CAAA;AACA,IAAMhT,MAAAA,CAAC,GAAG7I,KAAK,CAAC+L,aAAN,CAAoBG,OAApB,CAA4BzJ,GAAtC,CAAA;AACA,IAAMnF,MAAAA,CAAC,GAAG0C,KAAK,CAAC+L,aAAN,CAAoBG,OAApB,CAA4BgR,KAAtC,CAAA;AACAhhB,IAAAA,OAAO,CAACC,GAAR,CAAY8J,OAAO,CAACC,KAAR,CAAciX,YAAd,CAA2B,IAAKC,CAAAA,cAAL,EAA3B,CAAZ,CAAA,CAAA;AACA,IAAA,MAAM/T,GAAG,GAAGpD,OAAO,CAACC,KAAR,CAAciX,YAAd,CAA2B,IAAKC,CAAAA,cAAL,EAA3B,CAAA,CAAkD/T,GAA9D,CAAA;;AACA,IAAA,QAAQrJ,KAAK,CAAC+L,aAAN,CAAoBG,OAApB,CAA4BrK,IAApC;AACI,MAAA,KAAK,OAAL;AACIga,QAAAA,OAAO,CAACvS,MAAR,CAAeT,CAAf,CAAkBhH,CAAAA,IAAlB,GAAyBwH,GAAG,CAACC,MAAJ,CAAWT,CAAX,EAAchH,IAAvC,CAAA;AACAga,QAAAA,OAAO,CAACvS,MAAR,CAAeT,CAAf,CAAkB/D,CAAAA,IAAlB,GAAyBuE,GAAG,CAACC,MAAJ,CAAWT,CAAX,EAAc/D,IAAvC,CAAA;AACA+W,QAAAA,OAAO,CAACvS,MAAR,CAAeT,CAAf,CAAA,CAAkBkT,KAAlB,CAAwBze,CAAxB,IAA6B+L,GAAG,CAACC,MAAJ,CAAWT,CAAX,EAAckT,KAAd,CAAoBze,CAApB,CAA7B,CAAA;AACA,QAAA,MAAA;;AACJ,MAAA,KAAK,OAAL;AACIue,QAAAA,OAAO,CAAClS,KAAR,CAAcd,CAAd,CAAmBQ,GAAAA,GAAG,CAACM,KAAJ,CAAUd,CAAV,CAAnB,CAAA;AACA,QAAA,MAAA;AARR,KAAA;;AAUA,IAAA,IAAA,CAAKkM,OAAL,EAAA,CAAA;AACA,IAAA,IAAA,CAAKhZ,MAAL,EAAA,CAAA;AACH,GAAA;;AACkB,EAAA,MAAbshB,aAAa,CAACrd,KAAD,EAAQsd,QAAR,EAAkB;AACjC,IAAM3c,MAAAA,IAAI,GAAG,IAAA,CAAKqW,MAAlB,CAAA;AACA,IAAA,IAAA,CAAKjb,MAAL,EAAA,CAAA;AACA,IAAA,MAAMsN,GAAG,GAAG,IAAA,CAAKvR,OAAL,CAAaD,IAAb,CAAkBwR,GAA9B,CAAA;AACA,IAAM2F,MAAAA,GAAG,GAAG,EAAZ,CAAA;AACAA,IAAAA,GAAG,CAAC,iBAAD,CAAH,GAAyB3F,GAAG,CAACC,MAA7B,CAAA;AACA0F,IAAAA,GAAG,CAAC,gBAAD,CAAH,GAAwB3F,GAAG,CAACM,KAA5B,CAAA;AACAzN,IAAAA,OAAO,CAACC,GAAR,CAAY6S,GAAZ,CAAA,CAAA;AACA,IAAA,MAAMrO,IAAI,CAAC+M,MAAL,CAAYsB,GAAZ,CAAN,CAAA;AACH,GAAA;;AAzRiD;;ACAtD;AACA;AACA;AACA;;AACO,MAAMuO,cAAN,SAA6BC,SAA7B,CAAuC;AAC5C;AACyB,EAAA,WAAd9I,cAAc,GAAG;AAC1B,IAAA,OAAOvO,WAAW,CAAC,KAAMuO,CAAAA,cAAP,EAAuB;AACvCC,MAAAA,OAAO,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,CAD8B;AAEvC5C,MAAAA,KAAK,EAAE,GAFgC;AAGvCwC,MAAAA,MAAM,EAAE,GAH+B;AAIvCK,MAAAA,IAAI,EAAE,CAAC;AAAEC,QAAAA,WAAW,EAAE,aAAf;AAA8BC,QAAAA,eAAe,EAAE,aAA/C;AAA8DpM,QAAAA,OAAO,EAAE,aAAA;AAAvE,OAAD,CAAA;AAJiC,KAAvB,CAAlB,CAAA;AAMD,GAAA;AACD;;;AACY,EAAA,IAARjO,QAAQ,GAAG;AACX,IAAMgjB,MAAAA,IAAI,GAAG,8BAAb,CAAA;AACA,IAAQ,OAAA,CAAA,EAAEA,IAAK,CAAQ,MAAA,EAAA,IAAA,CAAK9c,IAAL,CAAU9I,IAAV,CAAegK,IAAK,CAA3C,WAAA,CAAA,CAAA;AACH,GAAA;AACD;;AACA;;;AACAkT,EAAAA,OAAO,GAAG;AAAA,IAAA,IAAA,mBAAA,EAAA,YAAA,CAAA;;AACR;AACA,IAAA,MAAMC,OAAO,GAAG,KAAA,CAAMD,OAAN,EAAhB,CAFQ;AAIR;;AACA,IAAA,MAAMhO,QAAQ,GAAGiO,OAAO,CAACrU,IAAzB,CALQ;;AAORqU,IAAAA,OAAO,CAACC,MAAR,GAAiBna,MAAM,CAACG,KAAxB,CAPQ;AASR;;AACA+Z,IAAAA,OAAO,CAAChP,QAAR,GAAmB,EAAnB,CAAA;AACA,IAAIO,IAAAA,KAAK,0CAAG,IAAKyQ,CAAAA,MAAR,iDAAG,YAAalK,CAAAA,MAAhB,qEAA0B,IAAnC,CAAA;;AACA,IAAA,IAAIvG,KAAJ,EAAW;AACT;AACAyO,MAAAA,OAAO,CAAChP,QAAR,GAAmBO,KAAK,CAACX,WAAN,EAAnB,CAAA;AACD,KAfO;AAiBR;;;AACAoP,IAAAA,OAAO,CAACnd,IAAR,GAAekP,QAAQ,CAACrF,MAAxB,CAlBQ;;AAoBRsT,IAAAA,OAAO,CAACrN,KAAR,GAAgBZ,QAAQ,CAACY,KAAzB,CApBQ;;AAsBRqN,IAAAA,OAAO,CAACvI,IAAR,GAAehU,IAAI,CAACsS,IAAL,CAAU0B,IAAzB,CAtBQ;;AAwBRuI,IAAAA,OAAO,CAACnT,IAAR,GAAemT,OAAO,CAACrU,IAAR,CAAakB,IAA5B,CAxBQ;;AA0BRmT,IAAAA,OAAO,CAACpC,OAAR,GAAkBO,6BAA6B,CAAC,IAAKxS,CAAAA,IAAL,CAAUiS,OAAX,CAA/C,CAAA;AACA,IAAA,OAAOoC,OAAP,CAAA;AACD,GAAA;;AACDoI,EAAAA,cAAc,CAACM,UAAU,GAAG,EAAd,EAAkB;AAAA,IAAA,IAAA,UAAA,CAAA;;AAC9B;AACA,IAAA,IAAI,KAAK1hB,IAAL,KAAc,IAAlB,EAAwB,OAFM;;AAI9B,IAAA,MAAM2hB,EAAE,GAAG,IAAIC,gBAAJ,CAAqB,IAAA,CAAK5hB,IAA1B,EAAgC;AAAE6hB,MAAAA,OAAO,EAAE,IAAKA,CAAAA,OAAAA;AAAhB,KAAhC,CAAX,CAAA;AACA,IAAA,IAAIhmB,IAAI,GAAG8lB,EAAE,CAACzF,QAAH,EAAX,CAAA;AACA,IAAA,IAAIwF,UAAJ,EAAgB7lB,IAAI,GAAGsO,WAAW,CAACtO,IAAD,EAAO6lB,UAAP,CAAlB,CAAhB,KACK7lB,IAAI,GAAGslB,YAAY,CAACtlB,IAAD,CAAnB,CAPyB;AAS9B;;AACA,IAAA,MAAMsK,MAAM,GAAGtK,CAAAA,UAAAA,GAAAA,IAAI,CAACA,IAAR,MAAA,IAAA,IAAA,UAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAG,WAAWsK,MAA1B,CAAA;;AACA,IAAA,IAAIA,MAAJ,EAAY;AACV,MAAIA,IAAAA,MAAM,CAACzC,KAAX,EAAkB;AAChByC,QAAAA,MAAM,CAAC/D,OAAP,GAAiB8E,MAAM,CAACoG,MAAP,CAAc,CAAAnH,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAAA,KAAAA,CAAAA,GAAAA,MAAM,CAAE/D,OAAR,KAAmB,EAAjC,CAAjB,CAAA;AACA+D,QAAAA,MAAM,CAACzC,KAAP,GAAewD,MAAM,CAACoG,MAAP,CAAc,CAAAnH,MAAM,KAAA,IAAN,IAAAA,MAAM,KAAN,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,MAAM,CAAEzC,KAAR,KAAiB,EAA/B,CAAA,CAAmC6F,GAAnC,CAAuC,UAAUyM,CAAV,EAAatT,GAAb,EAAkB;AACtE,UAAIwT,IAAAA,CAAC,GAAG,EAAR,CAAA;;AACA,UAAI/P,IAAAA,MAAM,CAAC/D,OAAP,CAAeM,GAAf,CAAoBuG,CAAAA,MAApB,KAA+B,CAAnC,EAAsC;AACpC9C,YAAAA,MAAM,CAAC/D,OAAP,CAAeM,GAAf,CAAA,CAAoBF,OAApB,CAA4B,CAACsf,GAAD,EAAMxgB,CAAN,KAAY4U,CAAC,CAACpZ,IAAF,CAAOgiB,IAAI,CAACC,KAAL,CAAW5Y,MAAM,CAAC/D,OAAP,CAAeM,GAAf,CAAA,CAAoBpB,CAApB,CAAX,CAAP,CAAxC,CAAA,CAAA;AACD,WAJqE;;;AAMtE,UAAO,OAAA,CAAC0U,CAAC,CAAC,CAAD,CAAD,IAAQ,EAAT,EAAaE,CAAb,CAAP,CAAA;AACD,SAPc,CAAf,CAAA;AAQD,OAVD,MAUO;AACL,QAAK,KAAA,IAAI,CAACzP,GAAD,EAAMZ,IAAN,CAAT,IAAwB6C,WAAW,CAACvC,MAAD,CAAnC,EAA6C;AAC3C,UAAK,KAAA,IAAI,CAAC0G,CAAD,EAAIb,IAAJ,CAAT,IAAsBtD,WAAW,CAAC7C,IAAD,CAAjC,EAAyC;AACvCmG,YAAAA,IAAI,CAAC5J,OAAL,GAAe8E,MAAM,CAACoG,MAAP,CAAc,CAAAtB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAE5J,OAAN,KAAiB,EAA/B,CAAf,CAAA;AACA4J,YAAAA,IAAI,CAACtI,KAAL,GAAawD,MAAM,CAACoG,MAAP,CAAc,CAAAtB,IAAI,KAAA,IAAJ,IAAAA,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAI,CAAEtI,KAAN,KAAe,EAA7B,CAAA,CAAiC6F,GAAjC,CAAqC,UAAUyM,CAAV,EAAatT,GAAb,EAAkB;AAClE,cAAIwT,IAAAA,CAAC,GAAG,EAAR,CAAA;;AACA,cAAA,IAAIlK,IAAI,CAAC5J,OAAL,CAAaM,GAAb,CAAA,CAAkBuG,MAAlB,KAA6B,CAA7B,IAAkC+C,IAAI,CAAC5J,OAAL,CAAaM,GAAb,EAAkB,CAAlB,CAAA,KAAyB,EAA/D,EAAmE;AACjEsJ,gBAAAA,IAAI,CAAC5J,OAAL,CAAaM,GAAb,CAAA,CAAkBF,OAAlB,CAA0B,CAACsf,GAAD,EAAMxgB,CAAN,KAAY4U,CAAC,CAACpZ,IAAF,CAAOgiB,IAAI,CAACC,KAAL,CAAW/S,IAAI,CAAC5J,OAAL,CAAaM,GAAb,CAAA,CAAkBpB,CAAlB,CAAX,CAAP,CAAtC,CAAA,CAAA;AACD,eAJiE;;;AAMlE,cAAO,OAAA,CAAC0U,CAAC,CAAC,CAAD,CAAD,IAAQ,EAAT,EAAaE,CAAb,CAAP,CAAA;AACD,aAPY,CAAb,CAAA;AAQD,WAAA;AACF,SAAA;AACF,OAAA;AACF,KAAA;;AACD,IAAO6L,OAAAA,aAAa,CAAClmB,IAAD,CAApB,CAAA;AACD,GAAA;AACD;;AACA;;;AACA+d,EAAAA,iBAAiB,CAACla,IAAD,EAAO;AACtB,IAAMka,KAAAA,CAAAA,iBAAN,CAAwBla,IAAxB,CAAA,CAAA;AACA,IAAA,MAAMsiB,IAAI,GAAG,CAAC,IAAA,CAAK9H,UAAnB,CAAA;AACA,IAAA,MAAMlB,OAAO,GAAG,IAAA,CAAKD,OAAL,EAAhB,CAHsB;;AAKtB,IAASkJ,SAAAA,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,MAAA,MAAMpR,MAAM,GAAGS,CAAC,CAAC2Q,KAAK,CAACzS,OAAP,CAAD,CAAiBqB,MAAjB,EAAA,CAA0BzC,IAA1B,CAA+B,SAA/B,CAAf,CAAA;AACA,MAAA,IAAI,CAAC6T,KAAK,CAAC/V,EAAP,IAAa2E,MAAM,KAAK,UAA5B,EAAwC,OAAOoR,KAAK,CAACC,IAAb,CAAA;AACxC,MAAA,MAAMC,QAAQ,GAAG7Q,CAAC,CAAC2Q,KAAK,CAACzS,OAAP,CAAD,CAAiBqB,MAAjB,EAAA,CAA0B/G,IAA1B,CAA+B,OAA/B,CAAjB,CAAA;AACA,MAAA,MAAMsY,OAAO,GAAGH,KAAK,CAACzS,OAAN,CAAcpP,KAAd,CAAoBiiB,KAApB,CAA0B,QAA1B,CAAA,CAAoC,CAApC,CAAhB,CAAA;AACA,MAAA,MAAMC,GAAG,GAAI,CAAoBF,kBAAAA,EAAAA,OAAQ,CAAzC,IAAA,CAAA,CAAA;AACA,MAAQ,OAAA,CAAA,0EAAA,EAA4EE,GAAI,CAAKH,GAAAA,EAAAA,QAAS,IAAGF,KAAK,CAACC,IAAK,CAApH,MAAA,CAAA,CAAA;AACD,KAZqB;;;AActB,IAASK,SAAAA,YAAT,CAAsBN,KAAtB,EAA6B;AAC3B,MAAA,MAAMpR,MAAM,GAAGS,CAAC,CAAC2Q,KAAK,CAACzS,OAAP,CAAD,CAAiBqB,MAAjB,EAAA,CAA0BzC,IAA1B,CAA+B,SAA/B,CAAf,CAAA;AACA,MAAA,IAAI,CAAC6T,KAAK,CAAC/V,EAAP,IAAa2E,MAAM,KAAK,UAA5B,EAAwC,OAAOoR,KAAK,CAACC,IAAb,CAAA;AACxC,MAAA,MAAME,OAAO,GAAGH,KAAK,CAACzS,OAAN,CAAcpP,KAAd,CAAoBiiB,KAApB,CAA0B,QAA1B,CAAA,CAAoC,CAApC,CAAhB,CAAA;AACA,MAAA,MAAMC,GAAG,GAAI,CAAoBF,kBAAAA,EAAAA,OAAQ,CAAzC,IAAA,CAAA,CAAA;AACA,MAAA,OAAQ,6EAA4EE,GAAI,CAAA,IAAA,EAAML,KAAK,CAACC,IAAK,CAAzG,MAAA,CAAA,CAAA;AACD,KAAA;;AACD5Q,IAAAA,CAAC,CAAE,CAAA,cAAA,CAAF,EAAmB7R,IAAnB,CAAD;AAAA,KAEGma,OAFH,CAEW;AACP9D,MAAAA,KAAK,EAAE,MADA;AAEP0M,MAAAA,iBAAiB,EAAE,IAFZ;AAGPlQ,MAAAA,QAAQ,EAAEyP,IAHH;AAIPU,MAAAA,iBAAiB,EAAET,eAJZ;AAKPU,MAAAA,cAAc,EAAEH,YALT;AAMP;AACAI,MAAAA,YAAY,EAAE,UAAUC,CAAV,EAAa;AACzB,QAAA,OAAOA,CAAP,CAAA;AACD,OAAA;AATM,KAFX,CAaE;AAbF,KAcGxH,GAdH,CAcO,UAAUM,KAAV,EAAiBtb,KAAjB,EAAwB;AAC3B;AACA,MAAMyI,MAAAA,IAAI,GAAGyI,CAAC,CAAC,gBAAD,EAAmB7R,IAAnB,CAAD,CAA0Bic,KAA1B,CAAA,CAAiC7S,IAA9C,CAAA;AACA,MAAA,MAAMuS,GAAG,GAAGtN,WAAW,CAACiL,OAAD,EAAUlQ,IAAV,CAAvB,CAAA;AACA,MAAA,OAAOuS,GAAP,CAAA;AACD,KAnBH,CAAA,CAoBG9L,OApBH,CAoBW,QApBX,CAAA,CAAA;AAqBAgC,IAAAA,CAAC,CAAC,QAAD,CAAD,CAAYrC,EAAZ,CAAe,kBAAf,EAAmC,UAAU4T,GAAV,EAAe;AAChD;AACA,MAAA,IAAI,CAACA,GAAG,CAACC,MAAJ,CAAWC,aAAhB,EAA+B;AAC7B,QAAA,OAAA;AACD,OAJ+C;;;AAMhDF,MAAAA,GAAG,CAACC,MAAJ,CAAWC,aAAX,CAAyBC,eAAzB,EAAA,CAAA;AACD,KAPD,EA1CsB;;AAmDtB,IAAA,IAAI,CAAC,IAAA,CAAK/I,UAAV,EAAsB,OAnDA;;AAqDtBxa,IAAAA,IAAI,CAAC8R,IAAL,CAAU,iBAAV,CAAA,CAA6BsI,KAA7B,CAAoCE,EAAD,IAAQxD,oBAAoB,CAACwD,EAAD,EAAK,KAAKrV,IAAV,CAA/D,EArDsB;;AAuDtBjF,IAAAA,IAAI,CAAC8R,IAAL,CAAU,gBAAV,CAA4BsI,CAAAA,KAA5B,CAAkC,IAAA,CAAKoJ,QAAL,CAAc9T,IAAd,CAAmB,IAAnB,CAAlC,CAAA,CAAA;AACA1P,IAAAA,IAAI,CAAC8R,IAAL,CAAU,iBAAV,CAA6BsI,CAAAA,KAA7B,CAAmC,IAAA,CAAKqJ,gBAAL,CAAsB/T,IAAtB,CAA2B,IAA3B,CAAnC,CAAA,CAAA;AACD,GAjJ2C;;;AAmJ5C8T,EAAAA,QAAQ,CAAClf,KAAD,EAAQ;AAAA,IAAA,IAAA,IAAA,CAAA;;AACdA,IAAAA,KAAK,CAACwL,cAAN,EAAA,CAAA;AACA,IAAA,MAAMM,MAAM,GAAG9L,KAAK,CAAC+L,aAArB,CAAA;AACA,IAAA,IAAIgL,GAAJ,CAAA;;AACA,IAAA,QAAQjL,MAAM,CAACI,OAAP,CAAeG,MAAvB;AACE,MAAA,KAAK,UAAL;AACE;AACA0K,QAAAA,GAAG,GAAG,IAAIyE,gBAAJ,CAAqB,IAAA,CAAKxE,MAA1B,CAAN,CAAA;AACA,QAAA,MAAA;AAJJ,KAAA;;AAMA,IAAA,CAAA,IAAA,GAAAD,GAAG,MAAA,IAAH,IAAKhb,IAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAAA,CAAAA,MAAL,CAAY,IAAZ,CAAA,CAAA;AACD,GA9J2C;;;AAgKtB,EAAhBojB,MAAAA,gBAAgB,CAACnf,KAAD,EAAQ;AAC5BA,IAAAA,KAAK,CAACwL,cAAN,EAAA,CAAA;AACA,IAAA,MAAM0G,CAAC,GAAGlS,KAAK,CAAC+L,aAAhB,CAAA;;AACA,IAAImG,IAAAA,CAAC,CAACvG,SAAF,CAAYiL,QAAZ,CAAqB,YAArB,CAAJ,EAAwC;AAAA,MAAA,IAAA,eAAA,CAAA;;AACtC;AACA,MAAA,IAAI6G,IAAI,GAAGvL,CAAC,CAAChG,OAAF,CAAUrK,IAAV,GAAiB,eAAA,GAAkBqQ,CAAC,CAAChG,OAAF,CAAUrK,IAA7C,GAAoD,eAA/D,CAAA;AACA,MAAMM,MAAAA,MAAM,GAAG4H,WAAW,CAAC,IAAA,CAAKpJ,IAAL,CAAU9I,IAAX,EAAiB4lB,IAAjB,CAA1B,CAAA;AACAtb,MAAAA,MAAM,CAAC/D,OAAP,GAAiB+D,MAAM,CAAC/D,OAAP,IAAkB,EAAnC,CAAA;AACA,MAAA,MAAMghB,SAAS,GAAG3B,IAAI,GAAG,QAAzB,CAAA;AACA,MAAA,MAAM4B,WAAW,GAAG5B,IAAI,GAAG,UAA3B,CAAA;AACA,MAAM/P,MAAAA,MAAM,GAAG,EAAf,CAAA;AACAA,MAAAA,MAAM,CAAC0R,SAAD,CAAN,GAAoBjd,MAAM,CAACzC,KAAP,CAAalD,MAAb,CAAoB,CAAC,CAAC,EAAD,EAAK,CAAC,EAAD,EAAK,EAAL,CAAL,CAAD,CAApB,CAApB,CAAA;AACAkR,MAAAA,MAAM,CAAC2R,WAAD,CAAN,GAAA,CAAA,eAAA,GAAsBld,MAAM,CAAC/D,OAA7B,MAAsB,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,eAAA,CAAgB5B,MAAhB,CAAuB,CAAC,CAAC,EAAD,CAAD,CAAvB,CAAtB,CAAA;AACA,MAAA,MAAM,KAAKmE,IAAL,CAAU+M,MAAV,CAAiBA,MAAjB,CAAN,CAAA;AACD,KAAA;;AACD,IAAIwE,IAAAA,CAAC,CAACvG,SAAF,CAAYiL,QAAZ,CAAqB,eAArB,CAAJ,EAA2C;AACzC;AACA,MAAA,MAAMnE,EAAE,GAAGP,CAAC,CAACxG,OAAF,CAAU,cAAV,CAAX,CAAA;AACA,MAAA,IAAI+R,IAAI,GAAGvL,CAAC,CAAChG,OAAF,CAAUrK,IAAV,GAAiB,eAAA,GAAkBqQ,CAAC,CAAChG,OAAF,CAAUrK,IAA7C,GAAoD,eAA/D,CAAA;AACA,MAAMM,MAAAA,MAAM,GAAG4H,WAAW,CAAC,IAAA,CAAKpJ,IAAL,CAAU9I,IAAX,EAAiB4lB,IAAjB,CAA1B,CAAA;AACAvhB,MAAAA,OAAO,CAACC,GAAR,CAAYgG,MAAZ,CAAA,CAAA;AACAA,MAAAA,MAAM,CAACzC,KAAP,CAAa5B,MAAb,CAAoBiL,MAAM,CAAC0J,EAAE,CAACvG,OAAH,CAAWoT,UAAZ,CAA1B,EAAmD,CAAnD,CAAA,CAAA;AACAnd,MAAAA,MAAM,CAAC/D,OAAP,CAAeN,MAAf,CAAsBiL,MAAM,CAAC0J,EAAE,CAACvG,OAAH,CAAWoT,UAAZ,CAA5B,EAAqD,CAArD,CAAA,CAAA;AACA,MAAA,MAAMF,SAAS,GAAG3B,IAAI,GAAG,QAAzB,CAAA;AACA,MAAA,MAAM4B,WAAW,GAAG5B,IAAI,GAAG,UAA3B,CAAA;AACA,MAAM/P,MAAAA,MAAM,GAAG,EAAf,CAAA;AACAA,MAAAA,MAAM,CAAC0R,SAAD,CAAN,GAAoBjd,MAAM,CAACzC,KAA3B,CAAA;AACAgO,MAAAA,MAAM,CAAC2R,WAAD,CAAN,GAAsBld,MAAM,CAAC/D,OAA7B,CAAA;AACA,MAAA,MAAM,KAAKuC,IAAL,CAAU+M,MAAV,CAAiBA,MAAjB,CAAN,CAAA;AACD,KAAA;AACF,GA9L2C;;;AAgM7B,EAAA,MAAT6R,SAAS,CAAC,GAAGC,IAAJ,EAAU;AACvB,IAAA,IAAI,KAAKC,KAAL,CAAW,CAAX,CAAA,CAAcC,MAAd,KAAyB,MAA7B,EAAqC,IAAA,CAAKC,QAAL,CAAcpL,MAAd,GAAuB,MAAvB,CADd;;AAGvB,IAAA,MAAM,KAAMgL,CAAAA,SAAN,CAAgB,GAAGC,IAAnB,CAAN,CAAA;AACD,GAAA;;AApM2C;;;;;;;;;YCPX,+DAC0B,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBCkB9B,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;;;;GAAlC,MAA0C,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;;;;;kDAAb,GAAK,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;0BAD/B,GAAK,CAAA,CAAA,CAAA,IAAA5L,iBAAA,CAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;GAGV,MAME,CAAA,MAAA,EAAA,OAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;iBATG,GAAK,CAAA,CAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAdG,KAAK,EAAA,GAAA,OAAA,CAAA;AACL,CAAA,IAAA,EAAA,IAAI,GAAG,MAAM,EAAA,GAAA,OAAA,CAAA;OACb,KAAK,EAAA,GAAA,OAAA,CAAA;OACV,QAAQ,GAAG,UAAU,CAAC,qBAAqB,CAAA,CAAA;;KAC7C,IAAI,CAAA;KACJ,SAAS,CAAA;KACT,KAAK,CAAA;;;;GASQ,SAAS,GAAA,OAAA,CAAA;;;;;;;GAGf,KAAK,GAAA,OAAA,CAAA;;;;;;;;;;;EAGd,SAAS,CAAC,MAAM,CAAC,IAAI,CAAA,CAAA;;;;;;;;;;;AAdvB,GAAO,IAAA,KAAK,IAAI,KAAK,kBAAE,KAAK,CAAC,KAAK,CAAC,KAAK,GAAkB,CAAA,YAAA,EAAA,SAAS,CAAC,WAAW,GAAC,GAAG,CAAA,GAAA,CAAA,EAAA,KAAA,CAAA,CAAA;;;;GAClF,YAAA,CAAA,CAAA,EAAE,KAAK,GAAG,IAAI,KAAK,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAA,GAAI,KAAK,CAAA,CAAA;;;;GACrD;oBACC,IAAI,GAAA;KAAK,GAAG,EAAE,SAAS,CAAC,GAAG;KAAE,MAAM,EAAE,SAAS,CAAC,MAAM;KAAE,KAAK,EAAE,SAAS,CAAC,KAAK;KAAE,IAAI,EAAE,SAAS,CAAC,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP9D,CAAA,YAAA,GAAG,IAAC,IAAI,KAAA,KAAA,CAAA,EAAA;AAAR,EAAA,2BAAA,CAAA,KAAA,WAAA,GAAG,IAAC,IAAI,CAAA;;;;;;;;YAFxC,QAEH,CAAA,CAAA;;;;;;;;;;;;;AAAmC,IAAA,6BAAA,CAAA,KAAA,WAAA,GAAG,IAAC,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;OAHpC,GAAG,EAAA,GAAA,OAAA,CAAA;;;AAGyB,EAAA,IAAA,MAAA,CAAA,EAAA,CAAA,SAAA,CAAA,GAAG,CAAC,IAAI,EAAA,KAAA,CAAA,EAAA;AAAR,GAAA,GAAG,CAAC,IAAI,GAAA,KAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GCwBjD,MAA4E,CAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA3B/D,IAAI,EAAA,GAAA,OAAA,CAAA;OACJ,GAAG,EAAA,GAAA,OAAA,CAAA;KACV,GAAG,CAAA;SAIC,WAAW,EAAA,GAAK,UAAU,CAAC,UAAU,CAAA,CAAA;OACvC,QAAQ,GAAG,UAAU,CAAC,qBAAqB,CAAA,CAAA;;AAC7C,CAAA,IAAA,GAAG,GAAG,WAAW,CAAC,SAAS,EAAE,IAAI,CAAA,CAAA;;AAC5B,CAAA,SAAA,WAAW,CAAC,KAAK,EAAA;AAClB,EAAA,MAAA,OAAO,GAAG,GAAG,CAAA;;AACb,EAAA,MAAA,EAAE,OAAO,UAAU,CAAA;AACvB,IAAA,IAAI,EAAE,OAAO;IACJ,OAAO;AAChB,IAAA,QAAQ,QAAS,MAAM,IAAA;AACrB,KAAA,YAAA,CAAA,CAAA,EAAA,GAAG,GAAG,MAAM,CAAA,CAAA;SACR,UAAU,GAAA,EAAA,CAAA;KACd,UAAU,CAAC,IAAI,CAAA,GAAI,GAAG,CAAA;WAChB,SAAS,CAAC,MAAM,CAAC,UAAU,CAAA,CAAA;;AAEnC,IAAA,GAAG,EAAE,WAAW,CAAC,QAAQ,CAAC,GAAG,GAAG,EAAE;AAClC,IAAA,IAAI,EAAE,WAAW,CAAC,QAAQ,CAAC,IAAI,GAAG,EAAE;;;AAE/B,EAAA,OAAA,EAAE,CAAC,MAAM,EAAA,CAAA;;;;;GAIJ,GAAG,GAAA,OAAA,CAAA;;;;;uBAAyB,KAAK,IAAK,WAAW,CAAM,CAAA,CAAA;;;;;;;;;GAxBpE,IAAM,GAAG,EAAA,YAAA,CAAA,CAAA,EACR,GAAG,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,aAAa,CAAC,YAAY,GAAG,UAAU,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAA,CAAE,OAAO,CAAA,GAAI,CAAC,EAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMvG,CAAA,IAAA,QAAA,WAAA,GAAG,IAAC,KAAK,GAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;wEANH,GAAS,CAAA,CAAA,CAAA,aAAK,GAAG,CAAA,CAAA,CAAA,CAAC,EAAE;KAAG,QAAQ;KAAG,EAAE,CAAA,GAAA,iBAAA,CAAA,CAAA,CAAA;;;GAA/C,MAQK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;GAPH,MAMO,CAAA,EAAA,EAAA,IAAA,CAAA,CAAA;;;;;;;;;;;AADJ,GAAA,IAAA,KAAA,YAAA,CAAA,IAAA,QAAA,MAAA,QAAA,WAAA,GAAG,IAAC,KAAK,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;+GANH,GAAS,CAAA,CAAA,CAAA,aAAK,GAAG,CAAA,CAAA,CAAA,CAAC,EAAE;KAAG,QAAQ;KAAG,EAAE,CAAA,GAAA,iBAAA,CAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;AAcrB,CAAA,IAAA,YAAA,WAAA,GAAG,IAAC,SAAS,CAAA;;;;;;;;;;;;;;;;;;;;;;;;AAAb,GAAA,IAAA,YAAA,MAAA,YAAA,WAAA,GAAG,IAAC,SAAS,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBADlC,GAAG,CAAA,CAAA,CAAA,CAAC,EAAE,mBAAK,GAAS,CAAA,CAAA,CAAA,IAAAA,iBAAA,CAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;eAApB,GAAG,CAAA,CAAA,CAAA,CAAC,EAAE,mBAAK,GAAS,CAAA,CAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAdpB,GAAI,CAAA,CAAA,CAAA,CAAA;;;kCAAT,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;2BAaC,GAAI,CAAA,CAAA,CAAA,CAAA;;;gCAAT,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;GAdR,MAYK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;GACL,MAMM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;4BAlBG,GAAI,CAAA,CAAA,CAAA,CAAA;;;iCAAT,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;wCAAJ,MAAI,CAAA;;;;0BAaC,GAAI,CAAA,CAAA,CAAA,CAAA;;;+BAAT,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;wBAAJ,MAAI,EAAA,CAAA,GAAA,WAAA,CAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;kCAAJ,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;OAlBK,IAAI,GAAA,EAAA,EAAA,GAAA,OAAA,CAAA;OACJ,SAAS,EAAA,GAAA,OAAA,CAAA;;;kBAQZ,SAAS,GAAG,GAAG,CAAC,EAAE,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YCeS,GAAC,CAAA,CAAA;;;;;;;;;;;;;;;0BAN/B,GAAK,CAAA,CAAA,CAAA,CAAC,CAAC,CAAA,CAAE,QAAQ,GAAA,EAAA,CAAA;;;;0BAGjB,GAAK,CAAA,CAAA,CAAA,CAAC,CAAC,CAAA,CAAE,IAAI,GAAA,EAAA,CAAA;;;;;;0BAIb,GAAK,CAAA,CAAA,CAAA,CAAC,CAAC,CAAA,CAAE,KAAK,GAAA,EAAA,CAAA;;;;;AADH,CAAA,IAAA,QAAA,aAAA,GAAK,CAAC,CAAA,CAAA,CAAA,CAAC,CAAE,CAAA,KAAK,GAAG,CAAC,IAAAA,iBAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;aAD1B,SACG,CAAA,CAAA;;;;;;;;GAdX,MAiBM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;GAVJ,MAEO,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;;;GACP,MAEO,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;;;GACP,MAGO,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;;;;;;;;;;;;;;gEARJ,GAAK,CAAA,CAAA,CAAA,CAAC,CAAC,CAAA,CAAE,QAAQ,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;gEAGjB,GAAK,CAAA,CAAA,CAAA,CAAC,CAAC,CAAA,CAAE,IAAI,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;AAGF,GAAA,cAAA,GAAK,CAAC,CAAA,CAAA,CAAA,CAAC,CAAE,CAAA,KAAK,GAAG,CAAC,EAAA;;;;;;;;;;;gEAC7B,GAAK,CAAA,CAAA,CAAA,CAAC,CAAC,CAAA,CAAE,KAAK,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;;;;;;;;;;;;;;AAhBd,CAAA,IAAA,UAAA,GAAA,MAAM,CAAC,OAAO,UAAC,GAAI,CAAC,CAAA,CAAA,CAAA,MAAM,CAAC,MAAM,CAAA,CAAA;;;gCAAtC,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;GAFR,MAAkC,CAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CAAA,CAAA;;GAClC,MAqBM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;AApBG,IAAA,UAAA,GAAA,MAAM,CAAC,OAAO,UAAC,GAAI,CAAC,CAAA,CAAA,CAAA,MAAM,CAAC,MAAM,CAAA,CAAA;;;+BAAtC,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;oCAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;OAPA,GAAG,GAAG,UAAU,CAAC,qBAAqB,CAAA,CAAA;;;+BAU7B,KAAK,KAAA;AACd,EAAA,KAAK,CAAC,cAAc,EAAA,CAAA;AACb,EAAA,OAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAY,KAAK,EAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BC+CzC,GAAS,CAAA,CAAA,CAAA,CAAC,CAAC,CAAA,CAAE,KAAK,GAAA,EAAA,CAAA;;;;;8BAEN,GAAS,CAAA,CAAA,CAAA,CAAC,CAAC,CAAA,CAAE,KAAK,GAAA,EAAA,CAAA;;;;;8BACpB,GAAS,CAAA,CAAA,CAAA,CAAC,CAAC,CAAA,CAAE,GAAG,GAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;aADvB,SAAQ,CAAA,CAAA;;;;aACR,OAAM,CAAA,CAAA;;;;;;GAVd,MAWM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;GALJ,MAEO,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;;;GACP,MAAyC,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;;;;GACzC,MAAqC,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;;;;;;;;;;;;oEAHlC,GAAS,CAAA,CAAA,CAAA,CAAC,CAAC,CAAA,CAAE,KAAK,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;oEAEN,GAAS,CAAA,CAAA,CAAA,CAAC,CAAC,CAAA,CAAE,KAAK,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;oEACpB,GAAS,CAAA,CAAA,CAAA,CAAC,CAAC,CAAA,CAAE,GAAG,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;0BA5BtB,GAAI,CAAA,CAAA,CAAA,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAA,EAAG,IAAI,IAAI,MAAM,IAAA,EAAA,CAAA;;;;;;;;AAKxC,CAAA,IAAA,QAAA,YAAA,GAAI,CAAC,CAAA,CAAA,CAAA,MAAM,CAAC,MAAM,CAAC,GAAG,GAAA,EAAA,CAAA;;;;;;;;;;AAOjB,CAAA,IAAA,SAAA,YAAA,GAAI,IAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,GAAA,EAAA,CAAA;;;;;;;;;;AArBpB,GAAA,KAAA,EAAA,EAAA,IAAA,EAAA,KAAK,OAAO,oBAAoB,EAAA;;;;;;;;;AAMlB,CAAA,aAAA,GAAI,IAAC,IAAI,KAAA,KAAA,CAAA,EAAA;AAAT,EAAA,4BAAA,CAAA,KAAA,YAAA,GAAI,IAAC,IAAI,CAAA;;;;;;;;;;;;AAOX,CAAA,aAAA,GAAI,CAAC,CAAA,CAAA,CAAA,MAAM,CAAC,MAAM,CAAC,KAAK,KAAA,KAAA,CAAA,EAAA;AAAxB,EAAA,4BAAA,CAAA,KAAA,YAAA,GAAI,CAAC,CAAA,CAAA,CAAA,MAAM,CAAC,MAAM,CAAC,KAAK,CAAA;;;;;;;;;;;;AAKtB,CAAA,aAAA,GAAI,IAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,KAAA,KAAA,CAAA,EAAA;AAA9B,EAAA,4BAAA,CAAA,KAAA,YAAA,GAAI,IAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,CAAA;;;;;AAQ9D,CAAA,IAAA,UAAA,GAAA,MAAM,CAAC,OAAO,UAAC,GAAI,CAAC,CAAA,CAAA,CAAA,MAAM,CAAC,UAAU,CAAA,CAAA;;;gCAA1C,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;aAlBc,QACV,CAAA,CAAA;;;;;;;;;;;;;;aAWH,WACM,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;GAvBnB,MA4CS,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;GA3CP,MAEM,CAAA,MAAA,EAAA,IAAA,CAAA,CAAA;;;GACN,MAuCM,CAAA,MAAA,EAAA,KAAA,CAAA,CAAA;GAtCJ,MAqBM,CAAA,KAAA,EAAA,IAAA,CAAA,CAAA;GApBJ,MAOM,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;GANJ,MAEM,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;GACN,MAEM,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;;GAER,MAGM,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;GADJ,MAAqC,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;GAEvC,MAOM,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;GANJ,MAEM,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;GACN,MAEM,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;;GAGV,MAeM,CAAA,KAAA,EAAA,IAAA,CAAA,CAAA;;;;;;;GAGV,MAEM,CAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;AAvCuC,IAAA,8BAAA,CAAA,KAAA,YAAA,GAAI,IAAC,IAAI,CAAA;;;;;8EAGrC,GAAI,CAAA,CAAA,CAAA,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAA,EAAG,IAAI,IAAI,MAAM,IAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;;;;AAIZ,IAAA,8BAAA,CAAA,KAAA,YAAA,GAAI,CAAC,CAAA,CAAA,CAAA,MAAM,CAAC,MAAM,CAAC,KAAK,CAAA;;;;;AACpD,GAAA,IAAA,CAAA,CAAA,OAAA,IAAA,KAAA,YAAA,CAAA,KAAA,QAAA,MAAA,QAAA,YAAA,GAAI,CAAC,CAAA,CAAA,CAAA,MAAM,CAAC,MAAM,CAAC,GAAG,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;;;;AAIQ,IAAA,8BAAA,CAAA,KAAA,YAAA,GAAI,IAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,CAAA;;;;;AAGvD,GAAA,IAAA,CAAA,CAAA,OAAA,IAAA,KAAA,YAAA,CAAA,KAAA,SAAA,MAAA,SAAA,YAAA,GAAI,IAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,GAAA,EAAA,SAAA,CAAA,CAAA;;;AAKtC,IAAA,UAAA,GAAA,MAAM,CAAC,OAAO,UAAC,GAAI,CAAC,CAAA,CAAA,CAAA,MAAM,CAAC,UAAU,CAAA,CAAA;;;+BAA1C,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;oCAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAhCN,IAAA,SAAS,GAAG,YAAY,CAAA;;;;OATtB,GAAG,GAAG,UAAU,CAAC,qBAAqB,CAAA,CAAA;;;KACxC,IAAI,GAAA;;AACJ,GAAA,KAAK,EAAE,YAAY;AAAE,GAAA,EAAE,EAAE,YAAY;AAAE,GAAA,SAAS,EAAE,YAAY;;;AAC9D,GAAA,KAAK,EAAE,WAAW;AAAE,GAAA,EAAE,EAAE,WAAW;AAAE,GAAA,SAAS,EAAE,YAAY;;;AAC5D,GAAA,KAAK,EAAE,UAAU;AAAE,GAAA,EAAE,EAAE,UAAU;AAAE,GAAA,SAAS,EAAE,WAAW;;;AACzD,GAAA,KAAK,EAAE,QAAQ;AAAE,GAAA,EAAE,EAAE,QAAQ;AAAE,GAAA,SAAS,EAAE,SAAS;;;AACnD,GAAA,KAAK,EAAE,SAAS;AAAE,GAAA,EAAE,EAAE,SAAS;AAAE,GAAA,SAAS,EAAE,UAAU;;;AACtD,GAAA,KAAK,EAAE,WAAW;AAAE,GAAA,EAAE,EAAE,WAAW;AAAE,GAAA,SAAS,EAAE,YAAY;;;;CAGhE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAA,CAAA;;;AAW2B,EAAA,IAAA,MAAA,CAAA,EAAA,CAAA,SAAA,CAAA,IAAI,CAAC,IAAI,EAAA,KAAA,CAAA,EAAA;AAAT,GAAA,IAAI,CAAC,IAAI,GAAA,KAAA,CAAA;;;;;;AAOX,EAAA,IAAA,MAAA,CAAA,EAAA,CAAA,SAAA,CAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAA,KAAA,CAAA,EAAA;AAAxB,GAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAA,KAAA,CAAA;;;;;;AAKtB,EAAA,IAAA,MAAA,CAAA,EAAA,CAAA,SAAA,CAAA,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,EAAA,KAAA,CAAA,EAAA;AAA9B,GAAA,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,GAAA,KAAA,CAAA;;;;;mCAUtD,KAAK,KAAA;AACd,EAAA,KAAK,CAAC,cAAc,CAAA;AACb,EAAA,OAAA,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC,KAAY,KAAK,EAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;ACxDtE;AACA;AACA;AACA;AACA;;AACO,MAAMgM,0BAA0B,GAAG,eAA7BA,0BAA6B,GAAkB;AAC1D,EAAOC,OAAAA,aAAa,CAAC;AAEnB,EAFmB,yDAAA,EAGnB,sDAHmB,EAInB,uDAJmB,EAKnB,wDALmB,EAMnB,sDANmB;AAQnB,EAAA,oDARmB;AAUnB,EAVmB,gDAAA,EAWnB,gDAXmB;AAanB,EAAA,0CAbmB,CAAD,CAApB,CAAA;AAeD,CAhBM,CAAA;AAiBP;AACA;AACA;;AACO,MAAMC,WAAN,CAAkB;AAGV,EAAN5M,OAAAA,MAAM,CAACrR,IAAD,EAAO;AAClB,IAAA,OAAO,sCAJEie,WAIF,EAAA,IAAA,CAAA,CAAU5M,MAAV,CAAiBrR,IAAjB,CAAP,CAAA;AACD,GAAA;;AAES,EAAHlJ,OAAAA,GAAG,CAACqf,GAAD,EAAM;AACd,IAAA,MAAM+H,SAAS,GAAG,+BARTD,CAAAA,IAAAA,EAAAA,WAQS,QAAUnnB,GAAV,CAAcqf,GAAd,KAAA,IAAA,IAAcA,GAAd,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAcA,GAAG,CAAEnW,IAAnB,CAAlB,CAAA;;AACA,IAAA,OAAOke,SAAS,GAAGA,SAAH,GAAeC,UAA/B,CAAA;AACD,GAAA;;AAEe,EAATC,OAAAA,SAAS,CAACpe,IAAD,EAAO;AACrB,IAAMke,MAAAA,SAAS,GAAG,+BAbTD,CAAAA,IAAAA,EAAAA,WAaS,QAAUnnB,GAAV,CAAckJ,IAAd,CAAlB,CAAA;;AACA3F,IAAAA,OAAO,CAACC,GAAR,CAAY0F,IAAZ,CAAA,CAAA;AACA,IAAA,OAAOke,SAAS,GAAGA,SAAH,GAAeC,UAA/B,CAAA;AACD,GAAA;;AAES,EAAA,OAAHE,GAAG,CAACre,IAAD,EAAOke,SAAP,EAAkB;AAC1B,IAAA,+BAAA,CAAA,IAAA,EAnBSD,WAmBT,EAAUI,IAAAA,CAAAA,CAAAA,GAAV,CAAcre,IAAd,EAAoBke,SAApB,CAAA,CAAA;AACD,GAAA;;AApBsB;;;;AACT,EAAA,KAAA,EAAA,IAAII,GAAJ,EAAA;;AAsBT,MAAMC,mBAAmB,GAAG,MAAM;AACvCN,EAAAA,WAAW,CAACI,GAAZ,CAAgB,MAAhB,EAAwBG,aAAxB,CAAA,CAAA;AACAP,EAAAA,WAAW,CAACI,GAAZ,CAAgB,WAAhB,EAA6BzL,YAA7B,CAAA,CAAA;AACD,CAHM;;ACnDP;AACO,MAAMxZ,KAAK,GAAG,EAAd,CAAA;AACPA,KAAK,CAACC,UAAN,GAAmB;AACfkJ,EAAAA,GAAG,EAAE,oBADU;AAEfb,EAAAA,GAAG,EAAE,oBAFU;AAGfc,EAAAA,GAAG,EAAE,oBAHU;AAIfH,EAAAA,GAAG,EAAE,oBAJU;AAKfK,EAAAA,GAAG,EAAE,oBALU;AAMfC,EAAAA,GAAG,EAAE,oBAAA;AANU,CAAnB,CAAA;AAQAvJ,KAAK,CAACqlB,sBAAN,GAA+B;AAC3Blc,EAAAA,GAAG,EAAE,wBADsB;AAE3Bb,EAAAA,GAAG,EAAE,wBAFsB;AAG3Bc,EAAAA,GAAG,EAAE,wBAHsB;AAI3BH,EAAAA,GAAG,EAAE,wBAJsB;AAK3BK,EAAAA,GAAG,EAAE,wBALsB;AAM3BC,EAAAA,GAAG,EAAE,wBAAA;AANsB,CAA/B,CAAA;AAQAvJ,KAAK,CAACyI,oBAAN,GAA6B,CAAC,CAAD,EAAI,GAAJ,EAAS,GAAT,EAAc,IAAd,EAAoB,IAApB,EAA0B,KAA1B,EAAiC,KAAjC,EAAwC,KAAxC,EAA+C,KAA/C,EAAsD,KAAtD,EAA6D,KAA7D,EAAoE,MAApE,EAA4E,MAA5E,EAAoF,MAApF,EAA4F,MAA5F,EAAoG,MAApG,EAA4G,MAA5G,EAAoH,MAApH,EAA4H,MAA5H,EAAoI,MAApI,CAA7B,CAAA;AACAzI,KAAK,CAACslB,WAAN,GAAoB;AAChBC,EAAAA,GAAG,EAAE,iBADW;AAEhBnc,EAAAA,GAAG,EAAE,iBAFW;AAGhByV,EAAAA,GAAG,EAAE,iBAHW;AAIhB2G,EAAAA,GAAG,EAAE,iBAJW;AAKhBC,EAAAA,GAAG,EAAE,iBALW;AAMhBC,EAAAA,GAAG,EAAE,iBANW;AAOhBC,EAAAA,GAAG,EAAE,iBAPW;AAQhBC,EAAAA,GAAG,EAAE,iBAAA;AARW,CAApB,CAAA;AAUA5lB,KAAK,CAACmK,MAAN,GAAe;AACX0b,EAAAA,GAAG,EAAE,gBADM;AAEXC,EAAAA,GAAG,EAAE,gBAFM;AAGXC,EAAAA,GAAG,EAAE,gBAHM;AAIXC,EAAAA,GAAG,EAAE,gBAJM;AAKXC,EAAAA,GAAG,EAAE,gBALM;AAMXC,EAAAA,GAAG,EAAE,gBANM;AAOXC,EAAAA,GAAG,EAAE,gBAPM;AAQXC,EAAAA,GAAG,EAAE,gBARM;AASXC,EAAAA,GAAG,EAAE,gBATM;AAUXC,EAAAA,GAAG,EAAE,gBAVM;AAWXC,EAAAA,GAAG,EAAE,gBAXM;AAYXC,EAAAA,GAAG,EAAE,gBAZM;AAaXC,EAAAA,GAAG,EAAE,gBAbM;AAcXC,EAAAA,GAAG,EAAE,gBAdM;AAeXC,EAAAA,GAAG,EAAE,gBAfM;AAgBXC,EAAAA,GAAG,EAAE,gBAhBM;AAiBXC,EAAAA,GAAG,EAAE,gBAjBM;AAkBXC,EAAAA,GAAG,EAAE,gBAAA;AAlBM,CAAf,CAAA;AAoBA9mB,KAAK,CAACqN,IAAN,GAAa;AACT,EAAA,CAAA,EAAG,iBADM;AAET,EAAA,CAAA,EAAG,aAFM;AAGT,EAAA,CAAA,EAAG,cAHM;AAIT,EAAA,CAAA,EAAG,cAJM;AAKT,EAAG,CAAA,EAAA,cAAA;AALM,CAAb,CAAA;AAOArN,KAAK,CAACuN,MAAN,GAAe;AACXqR,EAAAA,GAAG,EAAE,eADM;AAEX7W,EAAAA,GAAG,EAAE,eAFM;AAGX8W,EAAAA,GAAG,EAAE,cAHM;AAIXC,EAAAA,GAAG,EAAE,cAJM;AAKXC,EAAAA,GAAG,EAAE,cAAA;AALM,CAAf,CAAA;AAOA/e,KAAK,CAAC+mB,UAAN,GAAmB;AACfC,EAAAA,GAAG,EAAE,eADU;AAEfC,EAAAA,GAAG,EAAE,eAFU;AAGf7d,EAAAA,GAAG,EAAE,eAHU;AAIf8d,EAAAA,GAAG,EAAE,aAJU;AAKf3R,EAAAA,GAAG,EAAE,eALU;AAMf4R,EAAAA,GAAG,EAAE,cANU;AAOfC,EAAAA,GAAG,EAAE,oBAPU;AAQfC,EAAAA,GAAG,EAAE,gBARU;AASfC,EAAAA,GAAG,EAAE,eATU;AAUfC,EAAAA,GAAG,EAAE,eAVU;AAWfC,EAAAA,GAAG,EAAE,aAXU;AAYfC,EAAAA,GAAG,EAAE,cAZU;AAafC,EAAAA,GAAG,EAAE,aAbU;AAcfC,EAAAA,GAAG,EAAE,aAdU;AAefC,EAAAA,GAAG,EAAE,aAfU;AAgBfC,EAAAA,GAAG,EAAE,kBAhBU;AAiBfC,EAAAA,GAAG,EAAE,iBAjBU;AAkBfC,EAAAA,GAAG,EAAE,cAlBU;AAmBfC,EAAAA,GAAG,EAAE,aAnBU;AAoBfrB,EAAAA,GAAG,EAAE,cApBU;AAqBfsB,EAAAA,GAAG,EAAE,eArBU;AAsBfC,EAAAA,GAAG,EAAE,cAtBU;AAuBfC,EAAAA,GAAG,EAAE,YAvBU;AAwBfC,EAAAA,GAAG,EAAE,kBAxBU;AAyBfC,EAAAA,GAAG,EAAE,iBAAA;AAzBU,CAAnB,CAAA;AA2BAroB,KAAK,CAACsoB,UAAN,GAAmB;AACfC,EAAAA,GAAG,EAAE,cADU;AAEfC,EAAAA,GAAG,EAAE,WAFU;AAGfC,EAAAA,GAAG,EAAE,gBAHU;AAIfC,EAAAA,GAAG,EAAE,WAJU;AAKfC,EAAAA,GAAG,EAAE,aALU;AAMfC,EAAAA,GAAG,EAAE,oBANU;AAOfC,EAAAA,GAAG,EAAE,gBAPU;AAQfC,EAAAA,GAAG,EAAE,qBARU;AASfvB,EAAAA,GAAG,EAAE,eATU;AAUfwB,EAAAA,GAAG,EAAE,aAVU;AAWfC,EAAAA,GAAG,EAAE,YAXU;AAYfC,EAAAA,GAAG,EAAE,cAZU;AAafC,EAAAA,GAAG,EAAE,YAbU;AAcfC,EAAAA,GAAG,EAAE,eAdU;AAefC,EAAAA,GAAG,EAAE,aAfU;AAgBflB,EAAAA,GAAG,EAAE,gBAAA;AAhBU,CAAnB,CAAA;AAkBAloB,KAAK,CAACqpB,MAAN,GAAe,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,GAAzB,EAA8B,GAA9B,EAAmC,GAAnC,EAAwC,GAAxC,EAA6C,GAA7C,EAAkD,GAAlD,EAAuD,GAAvD,EAA4D,IAA5D,EAAkE,IAAlE,EAAwE,IAAxE,EAA8E,IAA9E,EAAoF,KAApF,EAA2F,KAA3F,EAAkG,KAAlG,EAAyG,MAAzG,EAAiH,MAAjH,EAAyH,MAAzH,EAAiI,MAAjI,EAAyI,OAAzI,CAAf,CAAA;AACArpB,KAAK,CAACspB,OAAN,GAAgB;AACZ,EAAA,CAAA,EAAG,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,GAA7B,EAAkC,GAAlC,EAAuC,GAAvC,EAA4C,GAA5C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,EAAqF,IAArF,EAA2F,IAA3F,CADS;AAEZ,EAAA,CAAA,EAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,EAAqF,IAArF,EAA2F,IAA3F,EAAiG,IAAjG,CAAA;AAFS,CAAhB,CAAA;AAIAtpB,KAAK,CAACwP,WAAN,GAAoB;AAChBzH,EAAAA,GAAG,EAAE,eADW;AAEhBL,EAAAA,IAAI,EAAE,gBAAA;AAFU,CAApB,CAAA;AAIA1H,KAAK,CAAC0J,cAAN,GAAuB;AACnB6f,EAAAA,IAAI,EAAE,kBADa;AAEnBC,EAAAA,WAAW,EAAE,yBAFM;AAGnBC,EAAAA,IAAI,EAAE,kBAHa;AAInBC,EAAAA,IAAI,EAAE,kBAJa;AAKnBC,EAAAA,KAAK,EAAE,mBALY;AAMnBC,EAAAA,SAAS,EAAE,uBANQ;AAOnBC,EAAAA,IAAI,EAAE,sBAPa;AAQnBC,EAAAA,QAAQ,EAAE,sBARS;AASnBC,EAAAA,MAAM,EAAE,oBATW;AAUnBC,EAAAA,QAAQ,EAAE,sBAVS;AAWnBC,EAAAA,OAAO,EAAE,qBAXU;AAYnBC,EAAAA,OAAO,EAAE,qBAAA;AAZU,CAAvB,CAAA;AAcAlqB,KAAK,CAACmqB,WAAN,GAAoB;AAChBviB,EAAAA,GAAG,EAAE,kBADW;AAEhBwiB,EAAAA,GAAG,EAAE,qBAFW;AAGhBC,EAAAA,GAAG,EAAE,gBAAA;AAHW,CAApB,CAAA;AAKArqB,KAAK,CAACsqB,MAAN,GAAe,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,MAAvB,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,MAAnD,EAA2D,QAA3D,EAAqE,QAArE,EAA+E,QAA/E,EAAyF,QAAzF,EAAmG,SAAnG,EAA8G,SAA9G,CAAf,CAAA;AACAtqB,KAAK,CAAC2O,WAAN,GAAoB;AAChB4b,EAAAA,KAAK,EAAE;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,MAAM,EAAE,CAApB;AAAuBC,IAAAA,KAAK,EAAE,CAA9B;AAAiCC,IAAAA,KAAK,EAAE,CAAxC;AAA2CC,IAAAA,IAAI,EAAE,CAAA;AAAjD,GADS;AAEhBC,EAAAA,MAAM,EAAE;AAAEL,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,MAAM,EAAE,CAApB;AAAuBC,IAAAA,KAAK,EAAE,CAA9B;AAAiCC,IAAAA,KAAK,EAAE,CAAxC;AAA2CC,IAAAA,IAAI,EAAE,CAAA;AAAjD,GAFQ;AAGhBE,EAAAA,KAAK,EAAE;AAAEN,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,MAAM,EAAE,CAApB;AAAuBC,IAAAA,KAAK,EAAE,CAA9B;AAAiCC,IAAAA,KAAK,EAAE,CAAxC;AAA2CC,IAAAA,IAAI,EAAE,CAAA;AAAjD,GAAA;AAHS,CAApB,CAAA;AAKA5qB,KAAK,CAAC+qB,UAAN,GAAmB;AACf,EAAA,CAAA,EAAG,cADY;AAEf,EAAA,CAAA,EAAG,YAFY;AAGf,EAAA,CAAA,EAAG,eAHY;AAIf,EAAG,CAAA,EAAA,YAAA;AAJY,CAAnB;;AC9Ie,MAAMC,kBAAN,CAAyB;AACtC;AAC4B,EAAfC,aAAAA,eAAe,CAACruB,IAAD,EAAO;AAC/BqE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BtE,IAA1B,CAAA,CAAA;AACAqE,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC1D,IAAI,CAACsS,IAAL,CAAU0B,IAAhD,EAAqD,mBAArD,EAAyEhU,IAAI,CAACsS,IAAL,CAAU2U,MAAnF,CAAA,CAAA;AACF,IAAI,IAAA,CAACjnB,IAAI,CAACsS,IAAL,CAAU0B,IAAf,EAAqB,OAHY;;AAKjC,IAAA,MAAM0Z,eAAe,GAAG1tB,IAAI,CAAC2tB,KAAL,CACrBre,MADqB,CACbgD,IAAD,IAAUA,IAAI,CAAC0B,IAAL,IAAa1B,IAAI,CAAC2U,MADd,CAErB3gB,CAAAA,IAFqB,CAEfsnB,KAAD,IAAWA,KAAK,CAACxuB,IAAN,CAAWwZ,GAAX,IAAkB5Y,IAAI,CAACsS,IAAL,CAAUlT,IAAV,CAAewZ,GAF5B,CAAxB,CAAA;AAIA,IAAI,IAAA,CAAC8U,eAAL,EAAsB,OAAA;AACtBjqB,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAA,CAAA;AACA,IAAM2R,MAAAA,KAAK,GAAG,MAAMsB,QAAQ,CAACvX,IAAI,CAACkX,OAAN,CAA5B,CAAA;AACA,IAAMxI,MAAAA,KAAK,GAAGuH,KAAH,KAAGA,IAAAA,IAAAA,KAAH,uBAAGA,KAAK,CAAEvH,KAArB,CAZiC;;AAcjC,IAAIA,IAAAA,KAAJ,EAAW,MAAMA,KAAK,CAACmH,MAAN,CAAa7V,IAAI,CAAC6V,MAAlB,CAAN,CAAA;AACZ,GAAA;;AAjBqC;;;;;;;;;;;;;;;;GCQxC,MAAoF,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;SALzE,aAAa,CAAC,OAAO,EAAE,IAAI,EAAA;CAClC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAA,CAAA;;;;OAH/B,OAAO,EAAA,GAAA,OAAA,CAAA;OACP,IAAI,EAAA,GAAA,OAAA,CAAA;6BAMsB,aAAa,CAAC,OAAO,EAAE,IAAI,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC6GxB,CAAA,IAAA,QAAA,gBAAA,GAAQ,KAAC,QAAQ,GAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;AAArC,GAAA,IAAA,CAAA,KAAA,EAAA,KAAA,EAAA,eAAA,gBAAA,GAAQ,KAAC,QAAQ,CAAA,CAAA;;;;GAA7B,MAA0D,CAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CAAA,CAAA;;;GAC1D,MAAiE,CAAA,MAAA,EAAA,KAAA,EAAA,MAAA,CAAA,CAAA;AAA9C,GAAA,eAAA,CAAA,KAAA,eAAA,GAAQ,KAAC,SAAS,CAAA,CAAA;;;;;;;;;AADL,GAAA,IAAA,KAAA,oBAAA,CAAA,IAAA,QAAA,MAAA,QAAA,gBAAA,GAAQ,KAAC,QAAQ,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;AAArC,GAAA,IAAA,KAAA,oBAAA,CAAA,IAAA,eAAA,MAAA,eAAA,gBAAA,GAAQ,KAAC,QAAQ,CAAA,EAAA;;;;AACV,GAAA,IAAA,KAAA,oBAAA,CAAA,IAAA,KAAA,CAAA,KAAA,kBAAA,GAAQ,KAAC,SAAS,EAAA;AAAlB,IAAA,eAAA,CAAA,KAAA,eAAA,GAAQ,KAAC,SAAS,CAAA,CAAA;;;;;;;;;;;;;;;;;AAgCC,CAAA,IAAA,QAAA,GAAA,CAAA,kBAAA,GAAU,cAAC,GAAK,CAAA,EAAA,CAAA,CAAA,CAAE,GAAG,CAAE,CAAA,IAAI,CAAC,IAAI,CAAA,GAAA,EAAA,CAAA;;;;;;aAD7C,+BACQ,CAAA,CAAA;;;;;GAD/B,MAEM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;;AAD8B,GAAA,IAAA,KAAA,kBAAA,CAAA,IAAA,QAAA,MAAA,QAAA,GAAA,CAAA,kBAAA,GAAU,cAAC,GAAK,CAAA,EAAA,CAAA,CAAA,CAAE,GAAG,CAAE,CAAA,IAAI,CAAC,IAAI,CAAA,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;AAJ7D,CAAA,IAAA,SAAA,mBAAA,GAAW,cAAC,GAAK,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;+BAErB,GAAU,CAAA,CAAA,CAAA,WAAC,GAAK,CAAA,EAAA,CAAA,CAAA,CAAE,KAAK,IAAAkG,iBAAA,CAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;GAxB9B,MA6BM,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;GA5BJ,MAAoE,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;GACpE,MAQE,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;mCADY,GAAI,CAAA,CAAA,CAAA,CAAC,QAAQ,WAAC,GAAK,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;;GAEjC,MAYM,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;;;;GAOR,MAAM,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;iEArBU,GAAI,CAAA,CAAA,CAAA,CAAC,QAAQ,WAAC,GAAK,CAAA,EAAA,CAAA,CAAA,EAAA;oCAAnB,GAAI,CAAA,CAAA,CAAA,CAAC,QAAQ,WAAC,GAAK,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA;;;AAaxB,GAAA,IAAA,KAAA,mBAAA,EAAA,IAAA,SAAA,MAAA,SAAA,mBAAA,GAAW,cAAC,GAAK,CAAA,EAAA,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,IAAA,CAAA,SAAA,GAAA,SAAA;;;;;;;sBAErB,GAAU,CAAA,CAAA,CAAA,WAAC,GAAK,CAAA,EAAA,CAAA,CAAA,CAAE,KAAK,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAhCvB,CAAA,IAAA,YAAA,GAAA,MAAM,CAAC,MAAM,UAAC,GAAI,IAAC,SAAS,CAAA,CAAA;;;kCAAjC,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;+BAOD,GAAQ,CAAA,CAAA,CAAA,CAAA;;;gCAAb,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAXV,MA8CM,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;GA7CJ,MAQM,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;GAPJ,MAAiD,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;GACjD,MAKM,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;;;;;GAER,MAkCM,CAAA,IAAA,EAAA,IAAA,CAAA,CAAA;;;;;;;;;;;;AAxCK,IAAA,YAAA,GAAA,MAAM,CAAC,MAAM,UAAC,GAAI,IAAC,SAAS,CAAA,CAAA;;;iCAAjC,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;wCAAJ,MAAI,CAAA;;;;8BAOD,GAAQ,CAAA,CAAA,CAAA,CAAA;;;+BAAb,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;oCAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AApHJ,MAAApO,SAAO,GAAG,kBAAkB,CAAA;;;;;;;;;AAgGzB,SAAA,YAAY,CAAC,GAAG,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAA;KAClD,KAAK,IAAI,GAAG,CAAC,MAAM,EAAA;AACd,EAAA,OAAA,GAAG,CAAC,OAAO,EAAA,CAAA;;;AAEb,CAAA,OAAA,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAA,GAAI,WAAW,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAA,CAAA;;;sBA+B3D,CAAC,IAAA;AACV,CAAA,CAAC,CAAC,MAAM,CAAC,sBAAsB,CAAC,KAAK,EAAA,CAAA;;;yBAEzB,CAAC,IAAA;AACb,CAAA,CAAC,CAAC,MAAM,CAAC,sBAAsB,CAAC,KAAK,EAAA,CAAA;AACrC,CAAA,CAAC,CAAC,MAAM,CAAC,sBAAsB,CAAC,MAAM,EAAA,CAAA;;;;OAzIvC,WAAW,EAAA,GAAA,OAAA,CAAA;KAElB,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAEA,SAAO,CAAA,CAAA;AACzC,CAAA,IAAA,QAAQ,GAAG,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAA,CAAA;;;KAE1C,UAAU,GAAA,EAAA,CAAA;;KACV,OAAO,GAAA,EAAA,CAAA;KACP,YAAY,GAAA,EAAA,CAAA;KACZ,aAAa,GAAA,EAAA,CAAA;KACb,WAAW,GAAA,EAAA,CAAA;;;AAEX,CAAA,IAAA,QAAQ,GAAI,CAAA,YAAY,EAAE,QAAQ,EAAE,UAAU,CAAA,CAAA;;AACzC,CAAA,KAAA,IAAA,IAAI,IAAI,QAAQ,EAAA;EACvB,OAAO,CAAC,IAAI,CAAA,GAAI,EAAE,CAAA;EAClB,UAAU,CAAC,IAAI,CAAM,GAAA,EAAA,GAAG,MAAM,GAAG,EAAA,EAAI,KAAK,EAAE,KAAK,EAAA,CAAA;EACjD,YAAY,CAAC,IAAI,CAAA,GAAI,EAAE,CAAA;EACvB,aAAa,CAAC,IAAI,CAAA,GAAI,EAAE,CAAA;AACxB,EAAA,WAAW,CAAC,IAAI,CAAA,GAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAA,CAAA;;;;CAUxC,OAAO,CAAA,YAAA;AACI,EAAA,KAAA,IAAA,KAAK,IAAI,QAAQ,EAAA;GACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAA,EAAG,KAAK,CAAA,CAAA;AACjC,GAAA,MAAA,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAA,CAAA;;;;;;;;;gBASpC,aAAa,CAAC,GAAG,EAAE,IAAI,EAAA;AACpC,EAAA,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,wBAAwB,CAAA,CAAA;kBAC/C,WAAW,CAAC,IAAI,CAAA,GAAI,GAAG,EAAA,WAAA,CAAA,CAAA;AACnB,EAAA,IAAA,GAAG,GAAG,CAAC,CAAA;;;MAGP,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,mBAAmB,CAAA,CAAE,GAAG,CAAE,IAAI,IAAA;AAC5C,GAAA,OAAA,EAAA,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAA,CAAA;;;AAEtB,EAAA,KAAA,IAAA,IAAI,IAAI,QAAQ,EAAA;GACvB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAA,CAAA;AACvC,GAAA,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAA;;;AAEtB,EAAA,UAAU,CAAC,IAAI,CAAE,CAAA,GAAG,CAAC,KAAK,EAAA,CAAA;;AACjB,EAAA,KAAA,IAAA,IAAI,IAAI,QAAQ,EAAA;OACnB,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAA,EAAA;AACjC,IAAA,IAAA,KAAK,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAA,CAAA;;QACpC,KAAK,EAAA;KACP,UAAU,CAAC,IAAI,CAAE,CAAA,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAA,CAAA;;;SAG9B,QAAQ,GACV,WAAW,CAAC,IAAI,EAAE,WAAW,CAAC,SAAS,CAAA,GAAI,CAAC;AAAG,OAAA,WAAW,CAAC,IAAI,CAAA,CAAE,WAAW,CAAC,SAAS,IAAI,CAAC;QAAI,CAAC,CAAA;;;AAG9F,KAAA,IAAA,aAAa,GAAG,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAE,CAAA,MAAM,GAAG,GAAG,CAAC,MAAM,CAAA;;qBACtE,WAAW,CAAC,IAAI,CAAA,GAAI,YAAY,CAC9B,WAAW,CAAC,IAAI,CAChB,EAAA,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,aAAa,CAAA,EAAA,CAAA,wBAAA,EACL,IAAI,CAAC,IAAI,CAAA,OAAA,CAAA,EACpC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAA,EAAA,WAAA,CAAA,CAAA;;;;;AAKxB,EAAA,YAAA,CAAA,CAAA,EAAA,UAAU,CAAC,IAAI,CAAE,CAAA,KAAK,GAAG,UAAU,CAAC,IAAI,CAAE,CAAA,GAAG,CAAC,IAAI,GAAG,CAAC,EAAA,UAAA,CAAA,CAAA;QAChD,IAAI,EAAA,CAAA;EACV,iBAAiB,EAAA,CAAA;;;UAEV,iBAAiB,GAAA;AACf,EAAA,KAAA,IAAA,IAAI,IAAI,WAAW,CAAC,gBAAgB,CAAC,mBAAmB,CAAA,EAAA;AAC3D,GAAA,IAAA,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAA;AACvC,GAAA,GAAG,CAAC,MAAM,GAAG,gBAAgB,CAAC,IAAI,EAAE,MAAM,CAAA;AAC1C,GAAA,GAAG,CAAC,OAAO,GAAG,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAA;AAC5C,GAAA,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,IAAI,CAAA;AACnD,GAAA,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,IAAI,CAAA;AACjD,GAAA,GAAG,CAAC,MAAM,GAAG,gBAAgB,CAAC,IAAI,EAAE,MAAM,CAAA;GAC1C,GAAG,CAAC,cAAc,CAAA,GAAI,aAAa,CAAA;GACnC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAA,CAAA;;;;;+BAyBG,SAAS,GAAA,IAAA,CAAA,KAAA,CAAA;;;;;AAYjC,EAAA,aAAa,CAAC,YAAY,CAAC,KAAK,CAAE,CAAA,KAAK,EAAE,KAAK,CAAA,CAAA;;;;;AAErC,GAAA,YAAY,CAAC,KAAK,CAAA,GAAA,OAAA,CAAA;;;;;;EACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAA,GAAA,IAAA,CAAA,KAAA,CAAA;;;;;;AAIpB,GAAA,OAAO,CAAC,KAAK,CAAA,GAAA,OAAA,CAAA;;;;;;;;;;;;;;;;;GA/GjC;AACU,IAAA,KAAA,IAAA,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAA,EAAA;AAC3C,KAAA,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1B3B,MAAM8gB,mBAAN,SAAkC7K,eAAlC,CAAkD;AACvD;AACF;AACA;AACE9jB,EAAAA,WAAW,CAACG,OAAO,GAAG,EAAX,EAAe;AACxB,IAAM,KAAA,CAAA,EAAN,EAAUA,OAAV,CAAA,CAAA;AAEA,IAAA,IAAIyuB,sBAAJ,EAAA,CAA6BxqB,MAA7B,CAAoC,IAApC,EAA0C;AAAEyqB,MAAAA,KAAK,EAAE,IAAA;AAAT,KAA1C,CAAA,CAAA;AACD,GAAA;;AAEkB,EAAA,MAAbnJ,aAAa,CAACrd,KAAD,EAAQsd,QAAR,EAAkB,EAAE;;AACvCvhB,EAAAA,MAAM,GAAG;AACP,IAAA,IAAA,CAAKD,KAAL,EAAA,CAAA;AACD,GAAA;;AAbsD,CAAA;;AAezD,MAAMyqB,sBAAN,SAAqCE,iBAArC,CAAuD;AAC5B,EAAA,WAAd/R,cAAc,GAAG;AAC1B,IAAOzO,OAAAA,OAAO,CAACC,KAAR,CAAcC,WAAd,CAA0B,KAAA,CAAMuO,cAAhC,EAAgD;AACrDC,MAAAA,OAAO,EAAE,CAAC,OAAD,CAD4C;AAErD1a,MAAAA,KAAK,EAAE,kBAF8C;AAGrDysB,MAAAA,WAAW,EAAC,IAHyC;AAIrDC,MAAAA,SAAS,EAAC,IAJ2C;AAKrD5U,MAAAA,KAAK,EAAE,GAL8C;AAMrDwC,MAAAA,MAAM,EAAE,GAN6C;AAOrDqS,MAAAA,MAAM,EAAE;AACNxS,QAAAA,KAAK,EAAEyS,sBADD;AAENztB,QAAAA,MAAM,EAAE6a,QAAQ,CAAC6S,IAAAA;AAFX,OAAA;AAP6C,KAAhD,CAAP,CAAA;AAYD,GAAA;;AAdoD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GCqB/C,MAGM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;GAFJ,MAA4C,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;AAAb,GAAA,eAAA,CAAA,KAAA,WAAA,GAAI,KAAC,IAAI,CAAA,CAAA;;GACxC,MAA2F,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;AAD5D,GAAA,IAAA,KAAA,YAAA,CAAA,IAAA,KAAA,CAAA,KAAA,cAAA,GAAI,KAAC,IAAI,EAAA;AAAT,IAAA,eAAA,CAAA,KAAA,WAAA,GAAI,KAAC,IAAI,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAQ1C,MAGM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;GAFJ,MAA8C,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;AAAf,GAAA,eAAA,CAAA,KAAA,aAAA,GAAM,KAAC,IAAI,CAAA,CAAA;;GAC1C,MAA+F,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;AADhE,GAAA,IAAA,KAAA,YAAA,CAAA,IAAA,KAAA,CAAA,KAAA,gBAAA,GAAM,KAAC,IAAI,EAAA;AAAX,IAAA,eAAA,CAAA,KAAA,aAAA,GAAM,KAAC,IAAI,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAXvC,CAAA,IAAA,YAAA,YAAA,GAAI,IAAC,KAAK,CAAA;AAAU,CAAA,MAAA,OAAA,GAAA,GAAA,aAAA,GAAI,KAAC,EAAE,CAAA;;kCAAhC,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;AASC,CAAA,IAAA,UAAA,YAAA,GAAI,IAAC,OAAO,CAAA;AAAY,CAAA,MAAA,SAAA,GAAA,GAAA,eAAA,GAAM,KAAC,EAAE,CAAA;;gCAAtC,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;aAXa,iBAEnB,CAAA,CAAA;;;;;;;;;;aAOM,6BAEN,CAAA,CAAA;;;;;;;;;;;;;;;;GAZJ,MAoBU,CAAA,MAAA,EAAA,OAAA,EAAA,MAAA,CAAA,CAAA;GAnBR,MAkBM,CAAA,OAAA,EAAA,GAAA,CAAA,CAAA;;;;;;;;GAVJ,MAA4E,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;;GAC5E,MAAM,CAAA,GAAA,EAAA,EAAA,CAAA,CAAA;;;;;;;;GAQN,MAA8E,CAAA,GAAA,EAAA,OAAA,CAAA,CAAA;;;;;;;;;;;;;;;;AAfvE,IAAA,YAAA,YAAA,GAAI,IAAC,KAAK,CAAA;;;;;AASV,IAAA,UAAA,YAAA,GAAI,IAAC,OAAO,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAvCjB,MAAAthB,SAAO,GAAC,MAAM,CAAA;;;OADT,WAAW,EAAA,GAAA,OAAA,CAAA;OAEX,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAA,EAAA,GAAA,OAAA,CAAA;CACnD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAA,CAAA;;AAEP,CAAA,SAAA,QAAQ,CAAC,IAAI,EAAA;AACd,EAAA,MAAA,IAAI,UAAU,IAAI,CAAA,CAAA,CAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAA,CAAA;AAChC,EAAA,MAAA,EAAE,GAAG,MAAM,EAAA,CAAA;kBACjB,IAAI,CAAC,IAAI,CAAQ,GAAA,CAAA,GAAA,IAAI,CAAC,IAAI,CAAA,EAAA,EAAW,IAAI,EAAM,EAAE,EAAA,CAAA,EAAA,IAAA,CAAA,CAAA;EACjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAA,CAAA;;;;UAGT,WAAW,CAAC,IAAI,EAAE,EAAE,EAAA;EAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAA,CAAA;AACV,EAAA,MAAA,KAAK,GAAG,IAAI,CAAC,IAAI,CAAE,CAAA,SAAS,CAAE,KAAK,IAAK,KAAK,CAAC,EAAE,KAAK,EAAE,CAAA,CAAA;;AACzD,EAAA,IAAA,KAAK,IAAI,CAAC,EAAA;AACZ,GAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAA,CAAA,CAAA;AACrB,GAAA,IAAI,CAAC,IAAI,CAAA,CAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAA,CAAA;;;;;;2BAgBc,IAAI,GAAA,IAAA,CAAA,KAAA,CAAA;;;;AAChB,CAAA,MAAA,aAAA,GAAA,IAAA,IAAA,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAA,CAAA;AAGhC,CAAA,MAAA,eAAA,GAAA,MAAA,QAAQ,CAAC,OAAO,CAAA,CAAA;;;2BAKE,IAAI,GAAA,IAAA,CAAA,KAAA,CAAA;;;;AAClB,CAAA,MAAA,eAAA,GAAA,MAAA,IAAA,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE,CAAA,CAAA;AAGpC,CAAA,MAAA,eAAA,GAAA,MAAA,QAAQ,CAAC,SAAS,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDzC,MAAMuhB,gBAAN,SAA+BtL,eAA/B,CAA+C;AAClD;AACJ;AACA;AACI9jB,EAAAA,WAAW,CAACG,OAAO,GAAG,EAAX,EAAe;AACxB,IAAM,KAAA,CAAA,EAAN,EAAUA,OAAV,CAAA,CAAA;AAEA,IAAA,IAAIkvB,WAAJ,EAAA,CAAkBjrB,MAAlB,CAAyB,IAAzB,EAA+B;AAAEyqB,MAAAA,KAAK,EAAE,IAAA;AAAT,KAA/B,CAAA,CAAA;AACD,GAAA;;AAEkB,EAAA,MAAbnJ,aAAa,CAACrd,KAAD,EAAQsd,QAAR,EAAkB,EAAE;;AACvCvhB,EAAAA,MAAM,GAAG;AACP,IAAA,IAAA,CAAKD,KAAL,EAAA,CAAA;AACD,GAAA;;AAbiD,CAAA;;AAepD,MAAMkrB,WAAN,SAA0BP,iBAA1B,CAA4C;AACjB,EAAA,WAAd/R,cAAc,GAAG;AAC1B,IAAOzO,OAAAA,OAAO,CAACC,KAAR,CAAcC,WAAd,CAA0B,KAAA,CAAMuO,cAAhC,EAAgD;AACrDC,MAAAA,OAAO,EAAE,CAAC,OAAD,CAD4C;AAErD1a,MAAAA,KAAK,EAAE,iCAF8C;AAGrDysB,MAAAA,WAAW,EAAC,IAHyC;AAIrDC,MAAAA,SAAS,EAAC,IAJ2C;AAKrD5U,MAAAA,KAAK,EAAE,GAL8C;AAMrDwC,MAAAA,MAAM,EAAE,GAN6C;AAOrDqS,MAAAA,MAAM,EAAE;AACNxS,QAAAA,KAAK,EAAE6S,iBADD;AAEN7tB,QAAAA,MAAM,EAAE6a,QAAQ,CAAC6S,IAAAA;AAFX,OAAA;AAP6C,KAAhD,CAAP,CAAA;AAYD,GAAA;;AAdyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmDC,CAAA,IAAA,QAAA,YAAA,GAAI,KAAC,KAAK,GAAA,EAAA,CAAA;;;;;;;;;;;;;;;6EADxC,GAAc,CAAA,CAAA,CAAA,cAAK,GAAI,CAAA,EAAA,CAAA,CAAC,EAAE;KAAG,QAAQ;KAAG,EAAE,CAAA,GAAA,iBAAA,CAAA,CAAA,CAAA;;;GAArD,MAEK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;GADH,MAAyD,CAAA,EAAA,EAAA,IAAA,CAAA,CAAA;;;;;;qCAAzC,GAAW,CAAA,CAAA,CAAA,UAAC,GAAI,CAAC,EAAA,CAAA,CAAA,EAAE,oBAAnB,GAAW,CAAA,CAAA,CAAA,UAAC,GAAI,CAAA,EAAA,CAAA,CAAC,EAAE,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;;;;;;;;AAAI,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,YAAA,CAAA,IAAA,QAAA,MAAA,QAAA,YAAA,GAAI,KAAC,KAAK,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;0IADxC,GAAc,CAAA,CAAA,CAAA,cAAK,GAAI,CAAA,EAAA,CAAA,CAAC,EAAE;KAAG,QAAQ;KAAG,EAAE,CAAA,GAAA,iBAAA,CAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;AAUN,CAAA,IAAA,QAAA,YAAA,GAAI,KAAC,KAAK,GAAA,EAAA,CAAA;;;;;;;AAEG,CAAA,IAAA,QAAA,YAAA,GAAI,KAAC,KAAK,GAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;AAI3D,CAAA,IAAA,YAAA,YAAA,GAAI,KAAC,KAAK,CAAA;AAAW,CAAA,MAAA,OAAA,GAAA,GAAA,cAAA,GAAK,KAAC,EAAE,CAAA;;kCAAlC,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;aANgC,MAAI,CAAA,CAAA;;;;;;;aAEE,aAAW,CAAA,CAAA;;;;;;;;;;;;;;;;;;GAHzD,MAIM,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;GAHJ,MAA+D,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;;;;GAC/D,MAA2E,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;;GAC3E,MAA4E,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;;;;GAE9E,MAAM,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;GACN,MAYM,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;AAjBuC,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,YAAA,CAAA,IAAA,QAAA,MAAA,QAAA,YAAA,GAAI,KAAC,KAAK,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;AAEG,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,YAAA,CAAA,IAAA,QAAA,MAAA,QAAA,YAAA,GAAI,KAAC,KAAK,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,CAAA,CAAA;;;AAI3D,IAAA,YAAA,YAAA,GAAI,KAAC,KAAK,CAAA;;;;;;;;;;;;;;;;;;;;;;;;eAKe,QAAQ,SAAC,GAAG,CAAA,EAAA,CAAA,CAAC,CAAC,CAAA,CAAA,GAAA,EAAA,CAAA;;;;;;;;AAAvB,GAAA,MAAA,CAAA,OAAA,GAAA,kBAAA,WAAA,GAAG,KAAC,CAAC,CAAA,CAAA;;;;GAApB,MAAkD,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;uDAA1B,QAAQ,SAAC,GAAG,CAAA,EAAA,CAAA,CAAC,CAAC,CAAA,CAAA,GAAA,EAAA,CAAA,EAAA,QAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA;;AAAvB,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,uBAAA,IAAA,IAAA,kBAAA,MAAA,kBAAA,WAAA,GAAG,KAAC,CAAC,CAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AADf,CAAA,IAAA,YAAA,GAAA,MAAM,CAAC,OAAO,eAAC,GAAS,CAAC,EAAA,CAAA,UAAA,GAAI,KAAC,EAAE,CAAA,CAAA,CAAA;;;kCAArC,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AADY,GAAA,cAAA,GAAK,KAAC,IAAI,KAAA,KAAA,CAAA,EAAA,mBAAA,CAAA,qBAAA,CAAA,CAAA;;;;;;GAFhC,MAQM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;GAPJ,MAAiC,CAAA,GAAA,EAAA,KAAA,CAAA,CAAA;AAAd,GAAA,eAAA,CAAA,KAAA,YAAA,GAAK,KAAC,IAAI,CAAA,CAAA;;GAC7B,MAIS,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;;;AAJW,GAAA,aAAA,CAAA,MAAA,YAAA,GAAK,KAAC,IAAI,CAAA,CAAA;;GAK9B,MAAuF,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;AANpE,GAAA,IAAA,KAAA,CAAA,CAAA,CAAA,uBAAA,IAAA,IAAA,KAAA,CAAA,KAAA,eAAA,GAAK,KAAC,IAAI,EAAA;AAAV,IAAA,eAAA,CAAA,KAAA,YAAA,GAAK,KAAC,IAAI,CAAA,CAAA;;;;AAEpB,IAAA,YAAA,GAAA,MAAM,CAAC,OAAO,eAAC,GAAS,CAAC,EAAA,CAAA,UAAA,GAAI,KAAC,EAAE,CAAA,CAAA,CAAA;;;iCAArC,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;sCAAJ,MAAI,CAAA;;;;AADY,IAAA,aAAA,CAAA,MAAA,YAAA,GAAK,KAAC,IAAI,CAAA,CAAA;;;;;;;;;;;;;;;;mCAXjC,GAAc,CAAA,CAAA,CAAA,cAAK,GAAI,CAAA,EAAA,CAAA,CAAC,EAAE,IAAA,eAAA,CAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;0BAA1B,GAAc,CAAA,CAAA,CAAA,cAAK,GAAI,CAAA,EAAA,CAAA,CAAC,EAAE,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAT1B,MAAM,CAAC,MAAM,UAAC,GAAI,CAAA,CAAA,CAAA,CAAA,CAAA;;;kCAAvB,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;kBAQC,MAAM,CAAC,MAAM,UAAC,GAAI,CAAA,CAAA,CAAA,CAAA,CAAA;iCAAW,GAAI,CAAA,EAAA,CAAA,CAAA;;gCAAtC,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAbR,MAGM,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;GAFJ,MAA2D,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;;GAC3D,MAA2D,CAAA,IAAA,EAAA,OAAA,CAAA,CAAA;;GAE7D,MAMK,CAAA,MAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;GAEL,MAwBM,CAAA,MAAA,EAAA,IAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;mBA/BG,MAAM,CAAC,MAAM,UAAC,GAAI,CAAA,CAAA,CAAA,CAAA,CAAA;;;iCAAvB,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;wCAAJ,MAAI,CAAA;;;;iBAQC,MAAM,CAAC,MAAM,UAAC,GAAI,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlErB,MAAAthB,SAAO,GAAG,eAAe,CAAA;;;KAC3B,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,eAAe,CAAA,CAAA;CACrD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAA,CAAA;;UACP,YAAY,GAAA;AACR,EAAA,KAAA,MAAA,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAA,EAAA;AACnC,GAAA,IAAI,CAAC,KAAK,GAAA,EAAA,CAAA;;;EAEZ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAA,CAAA;;;;AAGT,CAAA,SAAA,SAAS,CAAC,IAAI,EAAA;kBACrB,IAAI,CAAC,IAAI,CAAA,CAAE,KAAK,GAAA,EAAA,EAAA,IAAA,CAAA,CAAA;;;;AAGT,CAAA,SAAA,GAAG,CAAC,IAAI,EAAA;;;GACf,IAAI,CAAC,IAAI,CAAA,CAAE,KAAK,GAAA;OACX,IAAI,CAAC,IAAI,CAAA,CAAE,KAAK;;AACjB,KAAA,EAAE,EAAE,MAAM,EAAA;AAAI,KAAA,IAAI,SAAS,IAAI,CAAA,CAAA;KAAI,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAA,CAAA,CAAG,CAAC,CAAA;;;;;;;;;AAIpE,CAAA,SAAA,eAAe,CAAC,IAAI,EAAA;EAC3B,OAAO,CAAC,GAAG,CAAK,CAAA,GAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAA,CAAE,MAAM,CAAE,GAAG,IAAK,GAAG,CAAC,CAAC,CAAM,KAAA,qBAAqB,EAAE,CAAC,CAAA,CAAE,CAAC,CAAA,CAAE,OAAO,CAAA,CAAA;;;;GACvG,IAAI,CAAC,IAAI,CAAA,CAAE,KAAK,GAAA;WACP,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAE,GAAG,IAAK,GAAG,CAAC,CAAC,CAAM,KAAA,qBAAqB,CAAE,CAAA,CAAC,CAAE,CAAA,CAAC,EAAE,OAAO,CAAC,IAAI,CAAA,CAAE,KAAK;;;;;;;;UAIrG,aAAa,GAAA;EACpB,OAAO,CAAC,GAAG,CAAK,CAAA,GAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAA,CAAE,MAAM,CAAE,GAAG,IAAK,GAAG,CAAC,CAAC,CAAM,KAAA,qBAAqB,EAAE,CAAC,CAAA,CAAE,CAAC,CAAA,CAAE,OAAO,CAAA,CAAA;kBACvG,IAAI,GAAG,SAAS,CAAK,CAAA,GAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAA,CAAE,MAAM,CAAE,GAAG,IAAK,GAAG,CAAC,CAAC,CAAM,KAAA,qBAAqB,EAAE,CAAC,CAAA,CAAE,CAAC,CAAA,CAAE,OAAO,CAAA,CAAA,CAAA;;;UAErG,MAAM,CAAC,GAAG,EAAE,IAAI,EAAA;AACjB,EAAA,MAAA,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,SAAS,CAAE,KAAK,IAAK,KAAK,CAAC,EAAE,KAAK,GAAG,CAAA,CAAA;;AAChE,EAAA,IAAA,KAAK,IAAI,CAAC,EAAA;GACZ,IAAI,CAAC,IAAI,CAAE,CAAA,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAA,CAAA;;;;;OAIzB,WAAW,EAAA,GAAA,OAAA,CAAA;AAClB,CAAA,IAAA,cAAc,GAAG,QAAQ,CAAA;AACvB,CAAA,MAAA,WAAW,GAAI,QAAQ,IAAY,MAAA,YAAA,CAAA,CAAA,EAAA,cAAc,GAAG,QAAQ,CAAA,CAAA;;KAC9D,SAAS,GAAA;EACX,MAAM,EAAE,KAAK,CAAC,UAAU;EACxB,KAAK,EAAA;AAAI,GAAA,KAAK,EAAE,OAAO;AAAE,GAAA,MAAM,EAAE,QAAQ;AAAE,GAAA,KAAK,EAAE,OAAO;;EACzD,IAAI,EAAA,EAAA;;;6BASoB,YAAY,EAAA,CAAA;+BACZ,aAAa,EAAA,CAAA;iCAcP,GAAG,CAAC,IAAI,CAAC,EAAE,CAAA,CAAA;iCACX,eAAe,CAAC,IAAI,CAAC,EAAE,CAAA,CAAA;iCACvB,SAAS,CAAC,IAAI,CAAC,EAAE,CAAA,CAAA;;;4BAMZ,IAAI,GAAA,IAAA,CAAA,KAAA,CAAA;;;;;;4BACH,IAAI,GAAA,YAAA,CAAA,IAAA,CAAA,CAAA;;;;;AAKN,CAAA,MAAA,eAAA,GAAA,CAAA,KAAA,EAAA,IAAA,KAAA,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzFvD,MAAM0hB,gBAAN,SAA+BzL,eAA/B,CAA+C;AAClD;AACJ;AACA;AACI9jB,EAAAA,WAAW,CAACG,OAAO,GAAG,EAAX,EAAe;AACxB,IAAM,KAAA,CAAA,EAAN,EAAUA,OAAV,CAAA,CAAA;AAEA,IAAA,IAAIqvB,WAAJ,EAAA,CAAkBprB,MAAlB,CAAyB,IAAzB,EAA+B;AAAEyqB,MAAAA,KAAK,EAAE,IAAA;AAAT,KAA/B,CAAA,CAAA;AACD,GAAA;;AAEkB,EAAA,MAAbnJ,aAAa,CAACrd,KAAD,EAAQsd,QAAR,EAAkB,EAAE;;AACvCvhB,EAAAA,MAAM,GAAG;AACP,IAAA,IAAA,CAAKD,KAAL,EAAA,CAAA;AACD,GAAA;;AAbiD,CAAA;;AAepD,MAAMqrB,WAAN,SAA0BV,iBAA1B,CAA4C;AACjB,EAAA,WAAd/R,cAAc,GAAG;AAC1B,IAAOzO,OAAAA,OAAO,CAACC,KAAR,CAAcC,WAAd,CAA0B,KAAA,CAAMuO,cAAhC,EAAgD;AACrDC,MAAAA,OAAO,EAAE,CAAC,OAAD,CAD4C;AAErD1a,MAAAA,KAAK,EAAE,6BAF8C;AAGrDysB,MAAAA,WAAW,EAAC,IAHyC;AAIrDC,MAAAA,SAAS,EAAC,IAJ2C;AAKrD5U,MAAAA,KAAK,EAAE,GAL8C;AAMrDwC,MAAAA,MAAM,EAAE,GAN6C;AAOrDqS,MAAAA,MAAM,EAAE;AACNxS,QAAAA,KAAK,EAAEgT,iBADD;AAENhuB,QAAAA,MAAM,EAAE6a,QAAQ,CAAC6S,IAAAA;AAFX,OAAA;AAP6C,KAAhD,CAAP,CAAA;AAYD,GAAA;;AAdyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GCmB1C,MAWM,CAAA,MAAA,EAAA,GAAA,EAAA,MAAA,CAAA,CAAA;GAVJ,MAAqC,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;GACrC,MAA8C,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;AAA3B,GAAA,eAAA,CAAA,MAAA,cAAA,GAAO,IAAC,GAAG,CAAA,CAAA;;GAC9B,MAAuC,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;GACvC,MAAgD,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;AAA7B,GAAA,eAAA,CAAA,MAAA,cAAA,GAAO,IAAC,KAAK,CAAA,CAAA;;GAChC,MAKE,CAAA,GAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;;;;AARiB,GAAA,IAAA,KAAA,YAAA,CAAA,IAAA,MAAA,CAAA,KAAA,iBAAA,GAAO,IAAC,GAAG,EAAA;AAAX,IAAA,eAAA,CAAA,MAAA,cAAA,GAAO,IAAC,GAAG,CAAA,CAAA;;;AAEX,GAAA,IAAA,KAAA,YAAA,CAAA,IAAA,MAAA,CAAA,KAAA,iBAAA,GAAO,IAAC,KAAK,EAAA;AAAb,IAAA,eAAA,CAAA,MAAA,cAAA,GAAO,IAAC,KAAK,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;2BAL7B,GAAI,CAAA,CAAA,CAAA,CAAA;;;gCAAT,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;GADN,MAA8C,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CAAA,CAAA;;;;;;;;;;;;mDAA5B,GAAQ,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;0BACnB,GAAI,CAAA,CAAA,CAAA,CAAA;;;+BAAT,MAAI,EAAA,CAAA,IAAA,CAAA,EAAA;;;;;;;;;;;;;;;;oCAAJ,MAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA5BA,MAAA,OAAO,GAAG,WAAW,CAAA;;;OADhB,WAAW,EAAA,GAAA,OAAA,CAAA;KAElB,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAA,CAAA;;UACxC,QAAQ,GAAA;AACT,EAAA,MAAA,GAAG,GAAG,QAAQ,CAAA;QACd,KAAK,GAAA,CAAA,SAAA,CAAA,CAAA;AACL,EAAA,MAAA,EAAE,GAAG,MAAM,EAAA,CAAA;AACjB,EAAA,YAAA,CAAA,CAAA,EAAA,IAAI,OAAO,IAAI,EAAA,EAAS,GAAG,EAAS,KAAK,EAAM,EAAE,EAAA,CAAA,CAAA,CAAA;EACjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAA,CAAA;;;;AAGT,CAAA,SAAA,WAAW,CAAC,EAAE,EAAA;QACf,KAAK,GAAG,IAAI,CAAC,SAAS,CAAE,KAAK,IAAK,KAAK,CAAC,EAAE,KAAK,EAAE,CAAA,CAAA;;AACnD,EAAA,IAAA,KAAK,IAAI,CAAC,EAAA;AACZ,GAAA,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAA,CAAA;;;;;;4BAkBO,GAAG,GAAA,IAAA,CAAA,KAAA,CAAA;;;;;4BAEH,KAAK,GAAA,IAAA,CAAA,KAAA,CAAA;;;;;EAI5B,WAAW,CAAC,OAAO,CAAC,EAAE,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CzB,MAAMO,oBAAN,SAAmC5L,eAAnC,CAAmD;AACtD;AACJ;AACA;AACI9jB,EAAAA,WAAW,CAACG,OAAO,GAAG,EAAX,EAAe;AACxB,IAAM,KAAA,CAAA,EAAN,EAAUA,OAAV,CAAA,CAAA;AAEA,IAAA,IAAIwvB,gBAAJ,EAAA,CAAuBvrB,MAAvB,CAA8B,IAA9B,EAAoC;AAAEyqB,MAAAA,KAAK,EAAE,IAAA;AAAT,KAApC,CAAA,CAAA;AACD,GAAA;;AAEkB,EAAA,MAAbnJ,aAAa,CAACrd,KAAD,EAAQsd,QAAR,EAAkB,EAAE;;AACvCvhB,EAAAA,MAAM,GAAG;AACP,IAAA,IAAA,CAAKD,KAAL,EAAA,CAAA;AACD,GAAA;;AAbqD,CAAA;;AAexD,MAAMwrB,gBAAN,SAA+Bb,iBAA/B,CAAiD;AACtB,EAAA,WAAd/R,cAAc,GAAG;AAC1B,IAAOzO,OAAAA,OAAO,CAACC,KAAR,CAAcC,WAAd,CAA0B,KAAA,CAAMuO,cAAhC,EAAgD;AACrDC,MAAAA,OAAO,EAAE,CAAC,OAAD,CAD4C;AAErD1a,MAAAA,KAAK,EAAE,yBAF8C;AAGrDysB,MAAAA,WAAW,EAAC,IAHyC;AAIrDC,MAAAA,SAAS,EAAC,IAJ2C;AAKrD5U,MAAAA,KAAK,EAAE,GAL8C;AAMrDwC,MAAAA,MAAM,EAAE,GAN6C;AAOrDqS,MAAAA,MAAM,EAAE;AACNxS,QAAAA,KAAK,EAAEmT,sBADD;AAENnuB,QAAAA,MAAM,EAAE6a,QAAQ,CAAC6S,IAAAA;AAFX,OAAA;AAP6C,KAAhD,CAAP,CAAA;AAYD,GAAA;;AAd8C;;ACb5C,MAAMU,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAY;AAChD/uB,EAAAA,IAAI,CAACC,QAAL,CAAc+uB,QAAd,CAAuB,OAAvB,EAAgC,eAAhC,EAAiD;AAC/CC,IAAAA,KAAK,EAAE,OADwC;AAE/CzS,IAAAA,MAAM,EAAE,KAFuC;AAG/CpZ,IAAAA,OAAO,EAAE;AACPyJ,MAAAA,MAAM,EAAE;AACN9J,QAAAA,KAAK,EAAE,QADD;AAEN2M,QAAAA,EAAE,EAAE,QAFE;AAGN9L,QAAAA,KAAK,EAAE,CACL;AAAEyI,UAAAA,IAAI,EAAE,cAAR;AAAwBjD,UAAAA,IAAI,EAAE,KAA9B;AAAqCsG,UAAAA,EAAE,EAAE,cAAA;AAAzC,SADK,EAEL;AAAErD,UAAAA,IAAI,EAAE,aAAR;AAAuBjD,UAAAA,IAAI,EAAE,KAA7B;AAAoCsG,UAAAA,EAAE,EAAE,aAAA;AAAxC,SAFK,EAGL;AAAErD,UAAAA,IAAI,EAAE,UAAR;AAAoBjD,UAAAA,IAAI,EAAE,KAA1B;AAAiCsG,UAAAA,EAAE,EAAE,UAAA;AAArC,SAHK,EAIL;AAAErD,UAAAA,IAAI,EAAE,cAAR;AAAwBjD,UAAAA,IAAI,EAAE,KAA9B;AAAqCsG,UAAAA,EAAE,EAAE,cAAA;AAAzC,SAJK,EAKL;AAAErD,UAAAA,IAAI,EAAE,YAAR;AAAsBjD,UAAAA,IAAI,EAAE,KAA5B;AAAmCsG,UAAAA,EAAE,EAAE,YAAA;AAAvC,SALK,EAML;AAAErD,UAAAA,IAAI,EAAE,YAAR;AAAsBjD,UAAAA,IAAI,EAAE,KAA5B;AAAmCsG,UAAAA,EAAE,EAAE,YAAA;AAAvC,SANK,EAOL;AAAErD,UAAAA,IAAI,EAAE,gBAAR;AAA0BjD,UAAAA,IAAI,EAAE,KAAhC;AAAuCsG,UAAAA,EAAE,EAAE,gBAAA;AAA3C,SAPK,EAQL;AAAErD,UAAAA,IAAI,EAAE,YAAR;AAAsBjD,UAAAA,IAAI,EAAE,KAA5B;AAAmCsG,UAAAA,EAAE,EAAE,YAAA;AAAvC,SARK,EASL;AAAErD,UAAAA,IAAI,EAAE,WAAR;AAAqBjD,UAAAA,IAAI,EAAE,KAA3B;AAAkCsG,UAAAA,EAAE,EAAE,WAAA;AAAtC,SATK,EAUL;AAAErD,UAAAA,IAAI,EAAE,SAAR;AAAmBjD,UAAAA,IAAI,EAAE,KAAzB;AAAgCsG,UAAAA,EAAE,EAAE,SAAA;AAApC,SAVK,EAWL;AAAErD,UAAAA,IAAI,EAAE,YAAR;AAAsBjD,UAAAA,IAAI,EAAE,KAA5B;AAAmCsG,UAAAA,EAAE,EAAE,YAAA;AAAvC,SAXK,EAYL;AAAErD,UAAAA,IAAI,EAAE,SAAR;AAAmBjD,UAAAA,IAAI,EAAE,KAAzB;AAAgCsG,UAAAA,EAAE,EAAE,SAAA;AAApC,SAZK,EAaL;AAAErD,UAAAA,IAAI,EAAE,SAAR;AAAmBjD,UAAAA,IAAI,EAAE,KAAzB;AAAgCsG,UAAAA,EAAE,EAAE,SAAA;AAApC,SAbK,EAcL;AAAErD,UAAAA,IAAI,EAAE,UAAR;AAAoBjD,UAAAA,IAAI,EAAE,KAA1B;AAAiCsG,UAAAA,EAAE,EAAE,UAAA;AAArC,SAdK,EAeL;AAAErD,UAAAA,IAAI,EAAE,YAAR;AAAsBjD,UAAAA,IAAI,EAAE,KAA5B;AAAmCsG,UAAAA,EAAE,EAAE,YAAA;AAAvC,SAfK,EAgBL;AAAErD,UAAAA,IAAI,EAAE,YAAR;AAAsBjD,UAAAA,IAAI,EAAE,KAA5B;AAAmCsG,UAAAA,EAAE,EAAE,YAAA;AAAvC,SAhBK,EAiBL;AAAErD,UAAAA,IAAI,EAAE,YAAR;AAAsBjD,UAAAA,IAAI,EAAE,KAA5B;AAAmCsG,UAAAA,EAAE,EAAE,YAAA;AAAvC,SAjBK,CAAA;AAHD,OADD;AAwBP5F,MAAAA,KAAK,EAAE;AAAE/G,QAAAA,KAAK,EAAE,OAAT;AAAkB2M,QAAAA,EAAE,EAAE,OAAtB;AAA+B9L,QAAAA,KAAK,EAAE,EAAA;AAAtC,OAxBA;AAyBPsrB,MAAAA,IAAI,EAAE;AAAEnsB,QAAAA,KAAK,EAAE,MAAT;AAAiB2M,QAAAA,EAAE,EAAE,MAArB;AAA6B9L,QAAAA,KAAK,EAAE,EAAA;AAApC,OAAA;AAzBC,KAHsC;AA8B/CurB,IAAAA,QAAQ,EAAGvrB,KAAD,IAAW;AACnBH,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCE,KAArC,CAAA,CAAA;AACD,KAAA;AAhC8C,GAAjD,CAAA,CAAA;AAkCA5D,EAAAA,IAAI,CAACC,QAAL,CAAcmvB,YAAd,CAA2B,OAA3B,EAAoC,gBAApC,EAAsD;AACpD/iB,IAAAA,IAAI,EAAE,qBAD8C;AAEpDtJ,IAAAA,KAAK,EAAE,qBAF6C;AAGpDqG,IAAAA,IAAI,EAAEqlB,gBAH8C;AAIpDY,IAAAA,UAAU,EAAE,KAJwC;AAKpDhV,IAAAA,IAAI,EAAE,eAAA;AAL8C,GAAtD,CAAA,CAAA;AAOAra,EAAAA,IAAI,CAACC,QAAL,CAAc+uB,QAAd,CAAuB,OAAvB,EAAgC,MAAhC,EAAwC;AACtCC,IAAAA,KAAK,EAAE,OAD+B;AAEtCzS,IAAAA,MAAM,EAAE,KAF8B;AAGtCpZ,IAAAA,OAAO,EAAE;AACPyb,MAAAA,KAAK,EAAE,EADA;AAEPgB,MAAAA,OAAO,EAAE,EAAA;AAFF,KAH6B;AAOtCsP,IAAAA,QAAQ,EAAGvrB,KAAD,IAAW;AACnBH,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCE,KAApC,CAAA,CAAA;AACD,KAAA;AATqC,GAAxC,CAAA,CAAA;AAYA5D,EAAAA,IAAI,CAACC,QAAL,CAAcmvB,YAAd,CAA2B,OAA3B,EAAoC,YAApC,EAAkD;AAChD/iB,IAAAA,IAAI,EAAE,wBAD0C;AAEhDtJ,IAAAA,KAAK,EAAE,wBAFyC;AAGhDqG,IAAAA,IAAI,EAAEklB,gBAH0C;AAIhDe,IAAAA,UAAU,EAAE,KAAA;AAJoC,GAAlD,CAAA,CAAA;AAMArvB,EAAAA,IAAI,CAACC,QAAL,CAAc+uB,QAAd,CAAuB,OAAvB,EAAgC,kBAAhC,EAAoD;AAClDC,IAAAA,KAAK,EAAE,OAD2C;AAElDzS,IAAAA,MAAM,EAAE,KAF0C;AAGlDpZ,IAAAA,OAAO,EAAE;AACPksB,MAAAA,SAAS,EAAE;AACTC,QAAAA,WAAW,EAAE;AACXC,UAAAA,SAAS,EAAE,IADA;AAEXC,UAAAA,QAAQ,EAAE,aAAA;AAFC,SADJ;AAKTC,QAAAA,aAAa,EAAE;AACbF,UAAAA,SAAS,EAAE,IADE;AAEbC,UAAAA,QAAQ,EAAE,eAAA;AAFG,SALN;AAST/iB,QAAAA,MAAM,EAAE;AACN8iB,UAAAA,SAAS,EAAE,IADL;AAENC,UAAAA,QAAQ,EAAE,aAAA;AAFJ,SATC;AAaT9S,QAAAA,QAAQ,EAAE;AACR6S,UAAAA,SAAS,EAAE,IADH;AAERC,UAAAA,QAAQ,EAAE,eAAA;AAFF,SAbD;AAiBTltB,QAAAA,UAAU,EAAE;AACVitB,UAAAA,SAAS,EAAE,IADD;AAEVC,UAAAA,QAAQ,EAAE,iBAAA;AAFA,SAAA;AAjBH,OADJ;AAuBPE,MAAAA,QAAQ,EAAE;AACRjjB,QAAAA,MAAM,EAAE,IADA;AAERiQ,QAAAA,QAAQ,EAAE,IAFF;AAGRpa,QAAAA,UAAU,EAAE,2BAAA;AAHJ,OAAA;AAvBH,KAHyC;AAgClD4sB,IAAAA,QAAQ,EAAGvrB,KAAD,IAAW;AACnBH,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCE,KAApC,CAAA,CAAA;AACD,KAAA;AAlCiD,GAApD,CAAA,CAAA;AAoCA5D,EAAAA,IAAI,CAACC,QAAL,CAAcmvB,YAAd,CAA2B,OAA3B,EAAoC,uBAApC,EAA6D;AAC3D/iB,IAAAA,IAAI,EAAE,gCADqD;AAE3DtJ,IAAAA,KAAK,EAAE,gCAFoD;AAG3DqG,IAAAA,IAAI,EAAEykB,mBAHqD;AAI3DwB,IAAAA,UAAU,EAAE,KAAA;AAJ+C,GAA7D,CAAA,CAAA;AAMArvB,EAAAA,IAAI,CAACC,QAAL,CAAc+uB,QAAd,CAAuB,OAAvB,EAAgC,WAAhC,EAA6C;AAC3CC,IAAAA,KAAK,EAAE,OADoC;AAE3CzS,IAAAA,MAAM,EAAE,KAFmC;AAG3CpZ,IAAAA,OAAO,EAAE,CACP;AAAE4G,MAAAA,GAAG,EAAE,WAAP;AAAoBjH,MAAAA,KAAK,EAAE,WAA3B;AAAwC2M,MAAAA,EAAE,EAAE,WAAA;AAA5C,KADO,EAEP;AAAE1F,MAAAA,GAAG,EAAE,SAAP;AAAkBjH,MAAAA,KAAK,EAAE,SAAzB;AAAoC2M,MAAAA,EAAE,EAAE,SAAA;AAAxC,KAFO,EAGP;AAAE1F,MAAAA,GAAG,EAAE,QAAP;AAAiBjH,MAAAA,KAAK,EAAE,QAAxB;AAAkC2M,MAAAA,EAAE,EAAE,QAAA;AAAtC,KAHO,EAIP;AAAE1F,MAAAA,GAAG,EAAE,QAAP;AAAiBjH,MAAAA,KAAK,EAAE,QAAxB;AAAkC2M,MAAAA,EAAE,EAAE,QAAA;AAAtC,KAJO,EAKP;AAAE1F,MAAAA,GAAG,EAAE,QAAP;AAAiBjH,MAAAA,KAAK,EAAE,QAAxB;AAAkC2M,MAAAA,EAAE,EAAE,QAAA;AAAtC,KALO,CAAA;AAHkC,GAA7C,CAAA,CAAA;AAWA1P,EAAAA,IAAI,CAACC,QAAL,CAAcmvB,YAAd,CAA2B,OAA3B,EAAoC,eAApC,EAAqD;AACnD/iB,IAAAA,IAAI,EAAE,oBAD6C;AAEnDtJ,IAAAA,KAAK,EAAE,oBAF4C;AAGnDqG,IAAAA,IAAI,EAAEwlB,oBAH6C;AAInDS,IAAAA,UAAU,EAAE,KAAA;AAJuC,GAArD,CAAA,CAAA;AAMArvB,EAAAA,IAAI,CAACC,QAAL,CAAc+uB,QAAd,CAAuB,OAAvB,EAAgC,cAAhC,EAAgD;AAC9CC,IAAAA,KAAK,EAAE,OADuC;AAE9CW,IAAAA,OAAO,EAAC;AACN,MAAA,MAAA,EAAO,MADD;AAEN,MAAA,MAAA,EAAO,MAFD;AAGN,MAAM,KAAA,EAAA,KAAA;AAHA,KAFsC;AAO9CpT,IAAAA,MAAM,EAAE,IAPsC;AAQ9CpZ,IAAAA,OAAO,EAAE,CARqC;AAS9CgG,IAAAA,IAAI,EAAEymB,MATwC;AAU9CxjB,IAAAA,IAAI,EAAE,qBAVwC;AAW9CyjB,IAAAA,IAAI,EAAE,qDAAA;AAXwC,GAAhD,CAAA,CAAA;AAaD,CApIM,CAAA;;AAqIP,MAAMC,WAAN,SAA0B/M,eAA1B,CAA0C;AACf,EAAA,WAAd/G,cAAc,GAAG;AAC1B,IAAOzO,OAAAA,OAAO,CAACC,KAAR,CAAcC,WAAd,CAA0B,KAAA,CAAMuO,cAAhC,EAAgD;AACrDC,MAAAA,OAAO,EAAE,CAAC,OAAD,CAD4C;AAErD1a,MAAAA,KAAK,EAAE,4BAF8C;AAGrDQ,MAAAA,QAAQ,EAAE,gDAH2C;AAIrD0N,MAAAA,EAAE,EAAE,eAJiD;AAKrD4J,MAAAA,KAAK,EAAE,GAL8C;AAMrDwC,MAAAA,MAAM,EAAE,MAN6C;AAOrDkU,MAAAA,cAAc,EAAE,IAPqC;AAQrDC,MAAAA,aAAa,EAAE,KARsC;AASrD9T,MAAAA,IAAI,EAAE,CAAC;AAAEC,QAAAA,WAAW,EAAE,aAAf;AAA8BC,QAAAA,eAAe,EAAE,aAA/C;AAA8DpM,QAAAA,OAAO,EAAE,SAAA;AAAvE,OAAD,CAAA;AAT+C,KAAhD,CAAP,CAAA;AAWD,GAbuC;;;AAexCqM,EAAAA,OAAO,GAAG;AACR,IAAA,MAAM4T,SAAS,GAAG;AAChBvmB,MAAAA,aAAa,EAAE3J,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,OAAlB,EAA2B,eAA3B,CADC;AAEhBsc,MAAAA,MAAM,EAAEna,MAAM,CAACG,KAAAA;AAFC,KAAlB,CAAA;AAIA,IAAA,OAAO0tB,SAAP,CAAA;AACD,GArBuC;;;AAuBxC/S,EAAAA,iBAAiB,CAACla,IAAD,EAAO;AACtB,IAAMka,KAAAA,CAAAA,iBAAN,CAAwBla,IAAxB,CAAA,CAAA;AACAA,IAAAA,IAAI,CAAC8R,IAAL,CAAU,MAAV,CAAkBsI,CAAAA,KAAlB,CAAwB,IAAA,CAAK8G,MAAL,CAAYxR,IAAZ,CAAiB,IAAjB,CAAxB,CAAA,CAAA;AACA1P,IAAAA,IAAI,CAAC8R,IAAL,CAAU,QAAV,CAAoBsI,CAAAA,KAApB,CAA0B,IAAA,CAAK+G,OAAL,CAAazR,IAAb,CAAkB,IAAlB,CAA1B,CAAA,CAAA;AACD,GA3BuC;;;AA6B5B,EAANwR,MAAAA,MAAM,CAAC5c,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACwL,cAAN,EAAA,CAAA;AACA,IAAMpJ,MAAAA,aAAa,GAAG3J,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,OAAlB,EAA2B,eAA3B,CAAtB,CAAA;AACAyJ,IAAAA,aAAa,CAACkD,MAAd,CAAqBxM,IAArB,CAA0B;AAAEgM,MAAAA,IAAI,EAAE,MAAR;AAAgBjD,MAAAA,IAAI,EAAE,KAAA;AAAtB,KAA1B,CAAA,CAAA;AACA,IAAMpJ,MAAAA,IAAI,CAACC,QAAL,CAAcwnB,GAAd,CAAkB,OAAlB,EAA2B,eAA3B,EAA4C9d,aAA5C,CAAN,CAAA;AACA,IAAA,IAAA,CAAKrG,MAAL,EAAA,CAAA;AACD,GAnCuC;;;AAqC3B,EAAP8gB,MAAAA,OAAO,CAAC7c,KAAD,EAAQ;AACnBA,IAAAA,KAAK,CAACwL,cAAN,EAAA,CAAA;AACA,IAAMpJ,MAAAA,aAAa,GAAG3J,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,OAAlB,EAA2B,eAA3B,CAAtB,CAAA;AACAyJ,IAAAA,aAAa,CAACkD,MAAd,CAAqBxH,MAArB,CAA4BkC,KAAK,CAAC+L,aAAN,CAAoBG,OAApB,CAA4BzJ,GAAxD,EAA6D,CAA7D,CAAA,CAAA;AACA,IAAMhK,MAAAA,IAAI,CAACC,QAAL,CAAcwnB,GAAd,CAAkB,OAAlB,EAA2B,eAA3B,EAA4C9d,aAA5C,CAAN,CAAA;AACA,IAAA,IAAA,CAAKrG,MAAL,EAAA,CAAA;AACD,GA3CuC;;;AA6CrB,EAAA,MAAbshB,aAAa,CAACrd,KAAD,EAAQsd,QAAR,EAAkB;AACnC,IAAMlb,MAAAA,aAAa,GAAG3J,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,OAAlB,EAA2B,eAA3B,CAAtB,CAAA;AACAuD,IAAAA,OAAO,CAACC,GAAR,CAAYmhB,QAAZ,CAAA,CAAA;AACA,IAAIsL,IAAAA,KAAK,GAAG,KAAZ,CAAA;;AACA,IAAK,KAAA,IAAI,CAACC,SAAD,EAAYxsB,KAAZ,CAAT,IAA+B6G,MAAM,CAAC3F,OAAP,CAAe0I,OAAO,CAACC,KAAR,CAAc6X,aAAd,CAA4BT,QAA5B,CAAf,CAA/B,EAAsF;AACpF,MAAA,MAAM,CAACzb,IAAD,EAAO8V,KAAP,EAAcmR,YAAd,CAAA,GAA8BD,SAAS,CAACE,KAAV,CAAgB,GAAhB,CAApC,CADoF;;AAGpF,MAAI3mB,IAAAA,aAAa,CAACP,IAAD,CAAb,CAAoB8V,KAApB,CAA2BmR,CAAAA,YAA3B,CAA6CzsB,KAAAA,KAAjD,EAAwD;AACtD;AACA;AACA+F,QAAAA,aAAa,CAACP,IAAD,CAAb,CAAoB8V,KAApB,CAAA,CAA2BmR,YAA3B,CAAA,GAA2CzsB,KAA3C,CAAA;AACAusB,QAAAA,KAAK,GAAGA,KAAK,IAAI,IAAjB,CAAA;AACD,OAAA;;AACD,MAAA,IAAIA,KAAJ,EAAW;AACT,QAAMnwB,MAAAA,IAAI,CAACC,QAAL,CAAcwnB,GAAd,CAAkB,OAAlB,EAA2B,eAA3B,EAA4C9d,aAA5C,CAAN,CAAA;AACD,OAAA;AACF,KAAA;AACF,GAAA;;AA9DuC;;ACzI1C;AACA;AACA;AACA;AACO,MAAM4mB,+BAA+B,GAAG,SAAlCA,+BAAkC,CAAU7c,OAAV,EAAmBzQ,IAAnB,EAAyB7D,IAAzB,EAA+B;AAC1E,EAAI,IAAA,CAACsU,OAAO,CAAC8c,MAAT,IAAmB,CAAC9c,OAAO,CAAC+c,gBAAhC,EACI,OAFsE;;AAI1E,EAAA,MAAMtqB,IAAI,GAAGuN,OAAO,CAACvN,IAArB,CAAA;AACA,EAAA,IAAI,CAACA,IAAI,CAACuqB,IAAL,CAAUlkB,MAAf,EACI,OAAA;AACJ,EAAM+M,MAAAA,CAAC,GAAGpT,IAAI,CAACuqB,IAAL,CAAU,CAAV,CAAV,CAP0E;;AAS1E,EAAA,MAAMC,KAAK,GAAIpX,CAAC,CAACrU,KAAF,KAAY,EAAb,IAAqBqU,CAAC,CAAC1I,MAAF,CAASrE,MAAT,KAAoB,CAAvD,CAAA;AACA,EAAI,IAAA,CAACmkB,KAAL,EACI,OAAA;AACJ,EAAMC,MAAAA,cAAc,GAAI,SAAarX,IAAAA,CAAC,CAACsX,OAAF,CAAU,CAAV,CAAd,IAA+BtX,CAAC,CAACla,OAAF,CAAUyxB,aAAzC,IAA0DvX,CAAC,CAACla,OAAF,CAAU0xB,aAA3F,CAAA;AACA,EAAIH,IAAAA,cAAJ,EACI,OAdsE;;AAgB1E,EAAMpwB,MAAAA,QAAQ,GAAG+Y,CAAC,CAACla,OAAF,CAAUmB,QAAV,IAAsB,EAAvC,CAAA;AACA,EAAMC,MAAAA,MAAM,GAAG8Y,CAAC,CAACla,OAAF,CAAUoB,MAAV,IAAoB,CAAnC,CAAA;AACA,EAAA,IAAI8Y,CAAC,CAAC7O,KAAF,IAAWlK,QAAf,EACIyC,IAAI,CAAC8R,IAAL,CAAU,aAAV,EAAyBic,QAAzB,CAAkC,UAAlC,CADJ,CAAA,KAEK,IAAIzX,CAAC,CAAC7O,KAAF,IAAWjK,MAAf,EACDwC,IAAI,CAAC8R,IAAL,CAAU,aAAV,CAAyBic,CAAAA,QAAzB,CAAkC,QAAlC,CAAA,CADC,KAEA,IAAIzX,CAAC,CAACla,OAAF,CAAUsB,MAAd,EAAsB;AACvB,IAAA,IAAIwF,IAAI,CAACuE,KAAL,IAAc6O,CAAC,CAACla,OAAF,CAAUsB,MAA5B,EACIsC,IAAI,CAAC8R,IAAL,CAAU,aAAV,CAAA,CAAyBic,QAAzB,CAAkC,SAAlC,CAAA,CADJ,KAGI/tB,IAAI,CAAC8R,IAAL,CAAU,aAAV,CAAyBic,CAAAA,QAAzB,CAAkC,SAAlC,CAAA,CAAA;AACP,GAAA;AACJ,CA5BM,CAAA;AA6BP;;AACA;AACA;AACA;AACA;;AACO,MAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAUvd,OAAV,EAAmBzQ,IAAnB,EAAyB7D,IAAzB,EAA+B;AACnE,EAAA,MAAM8xB,QAAQ,GAAGjuB,IAAI,CAAC8R,IAAL,CAAU,kBAAV,CAAjB,CAAA;;AACA,EAAA,IAAImc,QAAQ,CAAC1kB,MAAT,GAAkB,CAAtB,EAAyB;AACrB,IAAA,MAAMrL,MAAM,GAAG8B,IAAI,CAAC8R,IAAL,CAAU,cAAV,CAAf,CAAA;AACA,IAAA,IAAI5T,MAAM,CAACukB,IAAP,EAAkBziB,KAAAA,IAAI,CAAC8R,IAAL,CAAU,YAAV,CAAA,CAAwB2Q,IAAxB,EAAtB,EACIvkB,MAAM,CAAC4V,MAAP,GAHiB;;AAKrB,IAAA,IAAIjJ,KAAK,GAAG9N,IAAI,CAACiX,MAAL,CAAY/W,GAAZ,CAAgBd,IAAI,CAACsU,OAAL,CAAahM,OAAb,CAAqBoG,KAArC,CAAZ,CAAA;AACA,IAAA,IAAIA,KAAK,IAAIA,KAAK,CAAC4K,OAAnB,EACI,OADJ,KAEK,IAAI1Y,IAAI,CAACsS,IAAL,CAAU0B,IAAV,IAAmB5U,IAAI,CAAC+xB,MAAL,CAAYzhB,EAAZ,KAAmB1P,IAAI,CAACsS,IAAL,CAAU5C,EAApD,EACD,OATiB;;AAWrB,IAAM5M,MAAAA,OAAO,GAAGouB,QAAQ,CAACnc,IAAT,CAAc,qBAAd,CAAhB,CAXqB;;AAarBjS,IAAAA,OAAO,CAACob,IAAR,CAAa,CAACrZ,CAAD,EAAIusB,GAAJ,KAAY;AACrB,MAAA,IAAIA,GAAG,CAAC3d,OAAJ,CAAYG,MAAZ,KAAuB,MAA3B,EACI,OAAA;AACJwd,MAAAA,GAAG,CAACpb,KAAJ,CAAUC,OAAV,GAAoB,MAApB,CAAA;AACH,KAJD,CAAA,CAAA;AAKH,GAAA;AACJ,CArBM,CAAA;AAsBP;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,MAAMob,4BAA4B,GAAG,SAA/BA,4BAA+B,CAAUpuB,IAAV,EAAgB5D,OAAhB,EAAyB;AACjE,EAAIiyB,IAAAA,QAAQ,GAAItX,EAAD,IAAQ;AAAA,IAAA,IAAA,cAAA,CAAA;;AACnB;AACA,IAAA,MAAMtG,OAAO,GAAG1T,IAAI,CAAC2T,QAAL,CAAczT,GAAd,CAAkB8Z,EAAE,CAAC5a,IAAH,CAAQ,WAAR,CAAlB,CAAhB,CAAA;AACA,IAAO,OAAA,CAAAsU,OAAO,KAAA,IAAP,IAAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAO,CAAE8c,MAAT,MAAmB9c,OAAnB,KAAA,IAAA,IAAmBA,OAAnB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAmBA,OAAO,CAAE+c,gBAA5B,CAAA,KAAA,CAAA,cAAA,GAAgDlb,MAAM,CAAC2B,MAAvD,MAAA,IAAA,IAAA,cAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAgD,cAAeC,CAAAA,UAAf,CAA0B3K,MAA1E,CAAP,CAAA;AACH,GAJD,CAAA;;AAKAnN,EAAAA,OAAO,CAACgB,IAAR,CAAa;AACT;AACAgM,IAAAA,IAAI,EAAErM,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB,yBAAnB,CAFG;AAGT;AACAgZ,IAAAA,IAAI,EAAE,mCAJG;AAKT;AACAvU,IAAAA,SAAS,EAAEwrB,QANF;AAOT;AACAtuB,IAAAA,QAAQ,EAAEgX,EAAE,IAAIuX,mBAAmB,CAACvX,EAAD,EAAK,CAAL,CAAA;AAR1B,GAAb,EASG;AACC3N,IAAAA,IAAI,EAAErM,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB,0BAAnB,CADP;AAECgZ,IAAAA,IAAI,EAAE,kCAFP;AAGCvU,IAAAA,SAAS,EAAEwrB,QAHZ;AAIC;AACAtuB,IAAAA,QAAQ,EAAEgX,EAAE,IAAIuX,mBAAmB,CAACvX,EAAD,EAAK,CAAC,CAAN,CAAA;AALpC,GATH,EAeG;AACC3N,IAAAA,IAAI,EAAErM,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB,+BAAnB,CADP;AAECgZ,IAAAA,IAAI,EAAE,qCAFP;AAGCvU,IAAAA,SAAS,EAAEwrB,QAHZ;AAIC;AACAtuB,IAAAA,QAAQ,EAAEgX,EAAE,IAAIuX,mBAAmB,CAACvX,EAAD,EAAK,CAAL,CAAA;AALpC,GAfH,EAqBG;AACC3N,IAAAA,IAAI,EAAErM,IAAI,CAACoB,IAAL,CAAUC,QAAV,CAAmB,6BAAnB,CADP;AAECgZ,IAAAA,IAAI,EAAE,oCAFP;AAGCvU,IAAAA,SAAS,EAAEwrB,QAHZ;AAIC;AACAtuB,IAAAA,QAAQ,EAAEgX,EAAE,IAAIuX,mBAAmB,CAACvX,EAAD,EAAK,GAAL,CAAA;AALpC,GArBH,CAAA,CAAA;AA4BA,EAAA,OAAO3a,OAAP,CAAA;AACH,CAnCM,CAAA;AAoCP;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASkyB,mBAAT,CAA6BvX,EAA7B,EAAiCwX,UAAjC,EAA6C;AACzC;AACA,EAAA,MAAM9d,OAAO,GAAG1T,IAAI,CAAC2T,QAAL,CAAczT,GAAd,CAAkB8Z,EAAE,CAAC5a,IAAH,CAAQ,WAAR,CAAlB,CAAhB,CAAA;AACA,EAAA,MAAM+G,IAAI,GAAGuN,OAAO,CAACvN,IAArB,CAAA;AACA,EAAA,OAAOxD,OAAO,CAAC8uB,GAAR,CAAYlc,MAAM,CAAC2B,MAAP,CAAcC,UAAd,CAAyBrK,GAAzB,CAA6B3I,CAAC,IAAI;AACjD,IAAA,MAAMsV,CAAC,GAAGtV,CAAC,CAAC2J,KAAZ,CADiD;;AAGjD,IAAO2L,OAAAA,CAAC,CAACiY,WAAF,CAAcvrB,IAAI,CAACuE,KAAnB,EAA0B8mB,UAA1B,CAAP,CAAA;AACH,GAJkB,CAAZ,CAAP,CAAA;AAKH,CAAA;AACD;;;;;;;;oBChH0B,WAAW,CAAC,GAAG,eAAC,GAAS,CAAA,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;wCAAzB,WAAW,CAAC,GAAG,eAAC,GAAS,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAPtC,WAAW,EAAA,GAAA,OAAA,CAAA;OACX,QAAQ,EAAA,GAAA,OAAA,CAAA;;CACnB,UAAU,CAAC,qBAAqB,EAAC,QAAQ,CAAA,CAAA;AACzC,CAAA,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,SAAS,CAAC,IAAI,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJ/C,MAAMG,OAAO,GAAG,IAAIC,cAAJ,EAAhB,CAAA;;;;;;;;AACO,MAAMC,mBAAN,SAAkC7D,iBAAlC,CAAoD;AACzD;AACF;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AAGE9uB,EAAAA,WAAW,CAACqf,MAAD,EAAS;AAClB,IAAA,KAAA,CAAMA,MAAN,CAAA,CAAA;AAEA;AACJ;AACA;AACA;AACA;AACA;;AARsB,IAAA,2BAAA,CAAA,IAAA,EAAA,gBAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,SAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EATR,IAAIuT,WAAJ,CAAgB,KAAK,CAArB,EAAwB;AAAErX,QAAAA,MAAM,EAAE,IAAA,CAAKpX,KAAL,CAAWsP,IAAX,CAAgB,IAAhB,CAAA;AAAV,OAAxB,CAAA;AASQ,KAAA,CAAA,CAAA;;AAAA,IAAA,0BAAA,CAAA,IAAA,EAAA,iBAAA,EAAA;AAAA,MAAA,QAAA,EAAA,IAAA;AAAA,MAAA,KAAA,EAAA,KAAA,CAAA;AAAA,KAAA,CAAA,CAAA;;AASlBlI,IAAAA,MAAM,CAACsnB,cAAP,CAAsB,KAAKC,QAA3B,EAAqC,UAArC,EAAiD;AAC/C9xB,MAAAA,GAAG,EAAE,MAAM,qBAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAeA,GAAf,EADoC;AAE/CunB,MAAAA,GAAG,EAAGjM,QAAD,IAAc;AACjB,QAAeiM,qBAAAA,CAAAA,IAAAA,EAAAA,SAAAA,CAAAA,CAAAA,GAAf,CAAmBjM,QAAnB,CAAA,CAAA;AACD,OAAA;AAJ8C,KAAjD,CAAA,CAAA;AAMA,IAAA,IAAA,CAAKwW,QAAL,CAAcxW,QAAd,GAAyB+C,MAAzB,CAfkB;AAiBnB,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;;;AAC2B,EAAA,WAAdtC,cAAc,GAAG;AAC1B,IAAOzO,OAAAA,OAAO,CAACC,KAAR,CAAcC,WAAd,CAA0B,KAAA,CAAMuO,cAAhC,EAAgD;AACrDza,MAAAA,KAAK,EAAE,sBAD8C;AAErD8X,MAAAA,KAAK,EAAE,GAF8C;AAGrDwC,MAAAA,MAAM,EAAE,GAH6C;AAIrDoS,MAAAA,SAAS,EAAE,IAJ0C;AAKrDD,MAAAA,WAAW,EAAE,IALwC;AAMrDgE,MAAAA,QAAQ,EAAE,CAAC;AAACC,QAAAA,YAAY,EAAE,kBAAf;AAAmCC,QAAAA,YAAY,EAAE,IAAA;AAAjD,OAAD,CAN2C;AAOrDhE,MAAAA,MAAM,EAAE;AACNxS,QAAAA,KAAK,EAAEyW,aADD;AAENzxB,QAAAA,MAAM,EAAE6a,QAAQ,CAAC6S,IAFX;AAIN;AACAxS,QAAAA,KAAK,EAAE,YAAY;AACjB,UAAO,OAAA;AAAEwW,YAAAA,QAAQ,wBAAE,IAAF,EAAA,SAAA,CAAA;AAAV,WAAP,CAAA;AACD,SAAA;AAPK,OAAA;AAP6C,KAAhD,CAAP,CAAA;AAiBD,GAAA;;AACDC,EAAAA,iBAAiB,GAAG;AAAA,IAAA,IAAA,KAAA,GAAA,IAAA,CAAA;;AAClB,IAAA,MAAMxvB,OAAO,GAAG,KAAMwvB,CAAAA,iBAAN,EAAhB,CAAA;;AACA,IAAkBX,OAAO,CAACY,OAAR,CAAgB,aAAhB,EAAlB;AACAzvB,IAAAA,OAAO,CAAC0vB,OAAR,CAAgB;AACd7W,MAAAA,KAAK,EAAE,iBADO;AAEdtB,MAAAA,IAAI,EAAE,YAFQ;AAGd7Y,MAAAA,KAAK,EAAE,yBAHO;AAIdixB,MAAAA,OAAO,EAAGlV,EAAD,IAAQ,IAAKmV,CAAAA,gBAAL,CAAsBnV,EAAtB,CAAA;AAJH,KAAhB,CAAA,CAAA;AAMA,IAAMoV,MAAAA,YAAY,GAAG3yB,IAAI,CAACsS,IAAL,CAAU0B,IAAV,IAAmB,IAAA,CAAKge,QAAL,CAAcxW,QAAd,CAAuB9C,OAAvB,IAAkC1Y,IAAI,CAACsS,IAAL,CAAUsgB,GAAV,CAAc,iBAAd,CAA1E,CAAA;;AACA,IAAI,IAAA,IAAA,CAAKZ,QAAL,CAAcxW,QAAd,CAAuByD,YAAvB,KAAwC,OAA5C,EAAqD;AACnD,MAAA,IAAI0T,YAAJ,EAAkB;AAChB7vB,QAAAA,OAAO,CAACuC,MAAR,CAAe,CAAf,EAAkB,CAAlB,EAAqB;AACnBtC,UAAAA,KAAK,EAAE,IAAA,CAAKsS,KAAL,GAAa,OAAb,GAAuB,sBADX;AAEnBsG,UAAAA,KAAK,EAAE,iBAFY;AAGnBtB,UAAAA,IAAI,EAAE,oBAHa;AAInBoY,UAAAA,OAAO,EAAGlV,EAAD,IAAQ,IAAKsV,CAAAA,iBAAL,CAAuBtV,EAAvB,CAAA;AAJE,SAArB,CAAA,CAAA;AAMD,OAAA;;AACDza,MAAAA,OAAO,CAAC0vB,OAAR,CAAgB;AACd7W,QAAAA,KAAK,EAAE,oBADO;AAEdna,QAAAA,KAAK,EAAE,uBAFO;AAGduB,QAAAA,KAAK,EAAE,uBAHO;AAIdsX,QAAAA,IAAI,EAAE,2BAJQ;AAKdoY,QAAAA,OAAO,EAAE,gBAAOlV,EAAP,EAAA;AAAA,UAAA,OAAc,MAAM,KAAI,CAACuV,uBAAL,CAA6BvV,EAA7B,CAApB,CAAA;AAAA,SAAA;AALK,OAAhB,CAAA,CAAA;AAOD,KAAA;;AACD,IAAA,OAAOza,OAAP,CAAA;AACD,GAAA;;AACDsf,EAAAA,OAAO,CAAC7a,KAAD,EAAO;AACZ9D,IAAAA,OAAO,CAACC,GAAR,CAAY6D,KAAZ,EAAmB,cAAnB,CAAA,CAAA;AACD,GAAA;;AACDmrB,EAAAA,gBAAgB,CAACnrB,KAAD,EAAQ;AACtB,IAAA,IAAIA,KAAJ,EAAWA,KAAK,CAACwL,cAAN,EAAA,CAAA;AACX,IAAA,IAAIggB,mBAAJ,CAAwB,IAAA,CAAKf,QAAL,CAAcxW,QAAtC,EAAgD;AAC9CwX,MAAAA,GAAG,EAAE,IAAA,CAAK9L,QAAL,CAAc8L,GAAd,GAAoB,EADqB;AAE9CC,MAAAA,IAAI,EAAE,IAAA,CAAK/L,QAAL,CAAc+L,IAAd,GAAqB,CAAC,IAAA,CAAK/L,QAAL,CAAc5N,KAAd,GAAsBuY,mBAAmB,CAAC5V,cAApB,CAAmC3C,KAA1D,IAAmE,CAAA;AAFhD,KAAhD,CAAA,CAGGhW,MAHH,CAGU,IAHV,CAAA,CAAA;AAID,GAAA;;AACDuvB,EAAAA,iBAAiB,CAACtrB,KAAD,EAAQ;AACvB,IAAA,IAAIA,KAAJ,EAAWA,KAAK,CAACwL,cAAN,EAAA,CAAA;AACX,IAAA,MAAMjF,KAAK,GAAG,IAAKkkB,CAAAA,QAAL,CAAcxW,QAA5B,CAAA;AACA,IAAA,MAAMnG,KAAK,GAAGvH,KAAK,CAAColB,OAAN,GAAgBplB,KAAK,CAACuH,KAAtB,GAA8BvH,KAAK,CAACqlB,cAAlD,CAAA;AACA,IAAA,IAAI9wB,MAAM,CAAC+wB,KAAP,CAAaC,mBAAjB,CAAqChe,KAArC,EAA4C;AAC1C4d,MAAAA,IAAI,EAAEtoB,IAAI,CAACwB,GAAL,CAAS,IAAK+a,CAAAA,QAAL,CAAc+L,IAAd,GAAqB,GAArB,GAA2B,EAApC,EAAwC,EAAxC,CADoC;AAE1CD,MAAAA,GAAG,EAAE,IAAK9L,CAAAA,QAAL,CAAc8L,GAAAA;AAFuB,KAA5C,CAAA,CAGG1vB,MAHH,CAGU,IAHV,CAAA,CAAA;AAID,GAAA;;AAC4B,EAAvBwvB,MAAAA,uBAAuB,CAACvrB,KAAD,EAAQ;AACnC,IAAA,IAAIA,KAAJ,EAAWA,KAAK,CAACwL,cAAN,EAAA,CAAA;AACX,IAAA,MAAMjF,KAAK,GAAG,IAAKkkB,CAAAA,QAAL,CAAcxW,QAA5B,CAAA;;AACA,IAAA,eAAegD,mBAAf,GAAqC;AACnC;AACA,MAAA,eAAeC,QAAf,GAA0B;AACxB,QAAA,IAAIC,SAAS,GAAG,EAAhB,CADwB;;AAExB,QAAIC,IAAAA,SAAS,GAAG,EAAhB,CAAA;;AACA,QAAA,KAAK,MAAMC,GAAX,IAAkB5e,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,OAAlB,EAA2B,MAA3B,CAAA,CAAmC2e,KAArD,EAA4D;AAC1D,UAAI7e,IAAAA,IAAI,CAAC6e,KAAL,CAAWvP,MAAX,CAAmBwP,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAchc,KAAd,KAAwB6b,GAAG,CAACvS,IAAxD,CAA8DG,CAAAA,MAA9D,KAAyE,CAA7E,EAAgF;AAC9E,YAAIwS,IAAAA,SAAS,GAAG,EAAhB,CAAA;AACAA,YAAAA,SAAS,CAAC3e,IAAV,CAAe0Q,KAAK,CAACC,IAAN,CAAWhR,IAAI,CAAC6e,KAAL,CAAWvP,MAAX,CAAmBwP,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAchc,KAAd,KAAwB6b,GAAG,CAACvS,IAA5B,IAAoCyS,IAAI,CAACG,YAAL,KAAsB,MAAtF,CAAA,CAA8F,CAA9F,CAAA,CAAiGC,KAA5G,CAAf,CAAA,CAAA;AACAF,YAAAA,SAAS,GAAGA,SAAS,CAACG,IAAV,EAAZ,CAAA;;AACA,YAAA,KAAK,MAAMC,IAAX,IAAmBJ,SAAnB,EAA8B;AAC5B,cAAA,MAAMK,OAAO,GAAGrf,IAAI,CAAC6e,KAAL,CAAWvP,MAAX,CAAmBwP,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAchc,KAAd,KAAwB6b,GAAG,CAACvS,IAAxD,CAA8D,CAAA,CAA9D,CAAiE0S,CAAAA,QAAjE,CAA0EO,OAA1E,GAAoF,GAApF,GAA0FV,GAAG,CAACvS,IAA9G,CAAA;AACA,cAAA,MAAMkT,GAAG,GAAG,MAAMvf,IAAI,CAAC6e,KAAL,CAAW3e,GAAX,CAAemf,OAAf,EAAwBG,WAAxB,CAAoCJ,IAAI,CAAC1P,EAAzC,CAAlB,CAAA;AACA,cAAA,MAAMxH,IAAI,GAAGqX,GAAG,CAACE,QAAJ,EAAb,CAAA;AACAvX,cAAAA,IAAI,CAACe,MAAL,GAAcuE,OAAO,CAACC,KAAR,CAAcwE,SAAd,CAAwBsN,GAAG,CAACtW,MAA5B,CAAd,CAAA;AACAyV,cAAAA,SAAS,CAACre,IAAV,CAAe6H,IAAf,CAAA,CAAA;AACAyW,cAAAA,SAAS,CAACte,IAAV,CAAe6H,IAAI,CAACmE,IAApB,CAAA,CAAA;AACD,aAAA;;AACDqS,YAAAA,SAAS,GAAGA,SAAS,CAACS,IAAV,EAAZ,CAAA;AACD,WAAA;AACF,SAAA;;AACD,QAAO,OAAA;AACLT,UAAAA,SADK;AAELC,UAAAA,SAAAA;AAFK,SAAP,CAAA;AAID,OAAA;;AACD,MAAA,SAASe,UAAT,GAAsB;AACpB,QAAA,IAAIC,WAAW,GAAG,EAAlB,CADoB;;AAEpB,QAAIC,IAAAA,WAAW,GAAG,EAAlB,CAAA;;AACA,QAAA,KAAK,IAAIhB,GAAT,IAAgB5e,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,OAAlB,EAA2B,MAA3B,CAAA,CAAmC2f,OAAnD,EAA4D;AAC1D,UAAI7f,IAAAA,IAAI,CAAC6f,OAAL,CAAavQ,MAAb,CAAqBwQ,MAAD,IAAYA,MAAM,CAAC1gB,IAAP,CAAYiN,IAAZ,KAAqBuS,GAAG,CAACvS,IAAzD,CAA+DG,CAAAA,MAA/D,KAA0E,CAA9E,EAAiF;AAC/E,YAAIwS,IAAAA,SAAS,GAAG,EAAhB,CAAA;AACAA,YAAAA,SAAS,CAAC3e,IAAV,CAAeL,IAAI,CAAC6f,OAAL,CAAavQ,MAAb,CAAqBwQ,MAAD,IAAYA,MAAM,CAAC1gB,IAAP,CAAYiN,IAAZ,KAAqBuS,GAAG,CAACvS,IAAzB,IAAiCyT,MAAM,CAAC1gB,IAAP,CAAYgK,IAAZ,KAAqB,MAAtF,CAA8F,CAAA,CAA9F,EAAiG2W,QAAhH,CAAA,CAAA;AACAf,YAAAA,SAAS,GAAGA,SAAS,CAACG,IAAV,EAAZ,CAAA;;AACA,YAAA,KAAK,IAAIC,IAAT,IAAiBJ,SAAjB,EAA4B;AAC1Bvb,cAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC0b,IAAvC,CAAA,CAAA;AACA,cAAA,MAAMlX,IAAI,GAAGkX,IAAI,CAACK,QAAL,EAAb,CAAA;AACAvX,cAAAA,IAAI,CAACe,MAAL,GAAcuE,OAAO,CAACC,KAAR,CAAcwE,SAAd,CAAwBmN,IAAI,CAACnW,MAA7B,CAAd,CAAA;AACA0W,cAAAA,WAAW,CAACtf,IAAZ,CAAiB6H,IAAjB,CAAA,CAAA;AACA0X,cAAAA,WAAW,CAACvf,IAAZ,CAAiB6H,IAAI,CAACmE,IAAtB,CAAA,CAAA;AACD,aAAA;;AACDsT,YAAAA,WAAW,GAAGA,WAAW,CAACR,IAAZ,EAAd,CAAA;AACD,WAAA;AACF,SAAA;;AACD,QAAO,OAAA;AACLQ,UAAAA,WADK;AAELC,UAAAA,WAAAA;AAFK,SAAP,CAAA;AAID,OAAA;;AACD,MAAA,IAAII,QAAQ,GAAG,MAAMC,YAAY,EAAjC,CAAA;AACA,MAAA,IAAIC,QAAQ,GAAG,MAAMC,eAAe,EAApC,CAAA;AACA,MAAIC,IAAAA,UAAU,GAAG,EAAjB,CAAA;;AAEA,MAAA,eAAeH,YAAf,GAA8B;AAC5B,QAAA,MAAMnB,IAAI,GAAG,MAAML,QAAQ,EAA3B,CAAA;AACA,QAAMqB,MAAAA,MAAM,GAAGJ,UAAU,EAAzB,CAAA;AACA,QAAA,MAAMhB,SAAS,GAAGI,IAAI,CAACJ,SAAvB,CAAA;AACA,QAAA,MAAMC,SAAS,GAAGG,IAAI,CAACH,SAAvB,CAAA;AACA,QAAA,MAAMgB,WAAW,GAAGG,MAAM,CAACH,WAA3B,CAAA;AACA,QAAIU,IAAAA,cAAc,GAAG,EAArB,CAAA;AACA,QAAIC,IAAAA,gBAAgB,GAAG,EAAvB,CAAA;AACA5B,QAAAA,SAAS,CAAC3Y,OAAV,CAAmBmC,IAAD,IAAU;AAC1B,UAAA,IAAIA,IAAI,CAACkB,IAAL,KAAc,MAAlB,EAA0B;AACxB,YAAImX,IAAAA,QAAQ,qCAAQrY,IAAR,CAAA,EAAA,EAAA,EAAA;AAAcsY,cAAAA,MAAM,EAAE,KAAA;AAAtB,aAAZ,CAAA,CAAA;;AACAH,YAAAA,cAAc,CAAChgB,IAAf,CAAoBkgB,QAApB,CAAA,CAAA;AACD,WAAA;AACF,SALD,CAAA,CAAA;AAMAZ,QAAAA,WAAW,CAAC5Z,OAAZ,CAAqBmC,IAAD,IAAU;AAC5B,UAAA,IAAIA,IAAI,CAACkB,IAAL,KAAc,MAAlB,EAA0B;AACxB,YAAImX,IAAAA,QAAQ,qCAAQrY,IAAR,CAAA,EAAA,EAAA,EAAA;AAAcsY,cAAAA,MAAM,EAAE,KAAA;AAAtB,aAAZ,CAAA,CAAA;;AACAF,YAAAA,gBAAgB,CAACjgB,IAAjB,CAAsBkgB,QAAtB,CAAA,CAAA;AACD,WAAA;AACF,SALD,CAAA,CAAA;AAMA,QAAOF,OAAAA,cAAc,CAACtc,MAAf,CAAsBuc,gBAAgB,CAAChR,MAAjB,CAAyBpH,IAAD,IAAU,CAACyW,SAAS,CAACvX,QAAV,CAAmBc,IAAI,CAACmE,IAAxB,CAAnC,CAAtB,CAAP,CAAA;AACD,OAAA;;AACD,MAAA,eAAe8T,eAAf,GAAiC;AAC/B,QAAA,MAAMrB,IAAI,GAAG,MAAML,QAAQ,EAA3B,CAAA;AACA,QAAA,MAAMC,SAAS,GAAGI,IAAI,CAACJ,SAAvB,CAAA;AACA,QAAA,MAAMC,SAAS,GAAGG,IAAI,CAACH,SAAvB,CAAA;AACA,QAAMmB,MAAAA,MAAM,GAAGJ,UAAU,EAAzB,CAAA;AACA,QAAA,MAAMC,WAAW,GAAGG,MAAM,CAACH,WAA3B,CAAA;AACA,QAAIc,IAAAA,cAAc,GAAG,EAArB,CAAA;AACA/B,QAAAA,SAAS,CAAC3Y,OAAV,CAAmBmC,IAAD,IAAU;AAC1B,UAAA,IAAIA,IAAI,CAACkB,IAAL,KAAc,SAAlB,EAA6B;AAC3B,YAAIsX,IAAAA,WAAW,GAAQxY,cAAAA,CAAAA,EAAAA,EAAAA,IAAR,CAAf,CAAA;;AACAuY,YAAAA,cAAc,CAACpgB,IAAf,CAAoBqgB,WAApB,CAAA,CAAA;AACD,WAAA;AACF,SALD,CAAA,CAAA;AAMA,QAAIC,IAAAA,gBAAgB,GAAG,EAAvB,CAAA;AACAhB,QAAAA,WAAW,CAAC5Z,OAAZ,CAAqBmC,IAAD,IAAU;AAC5B,UAAA,IAAIA,IAAI,CAACkB,IAAL,KAAc,SAAlB,EAA6B;AAC3B,YAAIsX,IAAAA,WAAW,GAAQxY,cAAAA,CAAAA,EAAAA,EAAAA,IAAR,CAAf,CAAA;;AACAyY,YAAAA,gBAAgB,CAACtgB,IAAjB,CAAsBqgB,WAAtB,CAAA,CAAA;AACD,WAAA;AACF,SALD,CAAA,CAAA;AAMA,QAAIE,IAAAA,cAAc,GAAGH,cAAc,CAAC1c,MAAf,CAAsB4c,gBAAgB,CAACrR,MAAjB,CAAyBpH,IAAD,IAAU,CAACyW,SAAS,CAACvX,QAAV,CAAmBc,IAAI,CAACmE,IAAxB,CAAnC,CAAtB,CAArB,CAAA;AACA,QAAIwU,IAAAA,eAAe,GAAG,EAAtB,CAAA;AACA/S,QAAAA,KAAK,CAACjE,SAAN,CAAgBiX,OAAhB,CAAwB/a,OAAxB,CAAiCmC,IAAD,IAAU;AACxC,UAAA,IAAIA,IAAI,CAAC9I,IAAL,CAAUgK,IAAV,KAAmB,SAAvB,EAAkC;AAChC,YAAA,IAAIsX,WAAW,GAAAK,cAAA,CAAA,EAAA,EAAQ7Y,IAAI,CAAC9I,IAAb,CAAf,CAAA;;AACAyhB,YAAAA,eAAe,CAACxgB,IAAhB,CAAqBqgB,WAArB,CAAA,CAAA;AACD,WAAA;AACF,SALD,CAAA,CAAA;AAMA,QAAO,OAAA;AAAEE,UAAAA,cAAF;AAAkBC,UAAAA,eAAAA;AAAlB,SAAP,CAAA;AACD,OAAA;;AACD,MAAA,KAAK,IAAIhc,CAAT,IAAcqb,QAAQ,CAACW,eAAvB,EAAwC;AACtCT,QAAAA,UAAU,CAAC/f,IAAX,CAAgBwE,CAAC,CAACwH,IAAlB,CAAA,CAAA;AACD,OAAA;;AACD5I,MAAAA,OAAO,CAACC,GAAR,CAAYwc,QAAQ,CAACU,cAArB,EAAqC,yBAArC,CAAA,CAAA;AACAV,MAAAA,QAAQ,CAACU,cAAT,CAAwB7a,OAAxB,CAAgC,CAACkL,CAAD,EAAIb,CAAJ,KAAU;AACxC3M,QAAAA,OAAO,CAACC,GAAR,CAAY0M,CAAZ,EAAea,CAAf,CAAA,CAAA;;AACA,QAAImP,IAAAA,UAAU,CAAChZ,QAAX,CAAoB6J,CAAC,CAAC5E,IAAtB,CAAJ,EAAiC;AAC/B5I,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4Cwc,QAAQ,CAACU,cAAT,CAAwBxQ,CAAxB,CAA5C,CAAA,CAAA;AACA8P,UAAAA,QAAQ,CAACU,cAAT,CAAwBxQ,CAAxB,CAAA,GAA6B5C,OAAO,CAACC,KAAR,CAAcwE,SAAd,CAAwBiO,QAAQ,CAACW,eAAT,CAAyBvR,MAAzB,CAAiCpH,IAAD,IAAUA,IAAI,CAACmE,IAAL,KAAc4E,CAAC,CAAC5E,IAA1D,CAAgE,CAAA,CAAhE,CAAxB,CAA7B,CAAA;AACD,SAAA;AACF,OAND,CAAA,CAAA;AAOA6T,MAAAA,QAAQ,CAACU,cAAT,GAA0BV,QAAQ,CAACU,cAAT,CAAwBtR,MAAxB,CAAgCpH,IAAD,IAAU;AACjE,QAAA,IAAIA,IAAI,CAACkB,IAAL,KAAc,SAAlB,EAA6B,OAAO,CAACgX,UAAU,CAAChZ,QAAX,CAAoBc,IAAI,CAACmE,IAAzB,CAAD,IAAmCnE,IAAI,CAAC9I,IAAL,CAAUgM,KAAV,CAAgB8E,OAAhB,KAA4BhI,IAAI,CAAC9I,IAAL,CAAUgM,KAAV,CAAgBe,GAAtF,CAAA;AAC9B,OAFyB,CAA1B,CAAA;AAGA,MAAA,MAAMoK,GAAG,GAAG;AACVyK,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEjB,QAAR;AAAkBQ,UAAAA,MAAM,EAAE,EAAA;AAA1B,SADG;AAEVU,QAAAA,KAAK,EAAE;AACL;AACAxU,UAAAA,MAAM,EAAE;AAAE,YAAA,CAAA,EAAG,CAAL;AAAQ,YAAA,CAAA,EAAG,CAAX;AAAc,YAAA,CAAA,EAAG,CAAjB;AAAoB,YAAA,CAAA,EAAG,CAAvB;AAA0B,YAAG,CAAA,EAAA,CAAA;AAA7B,WAFH;AAGLyU,UAAAA,KAAK,EAAE;AAAEC,YAAAA,GAAG,EAAE,CAAP;AAAU7W,YAAAA,GAAG,EAAE,CAAf;AAAkB8W,YAAAA,GAAG,EAAE,CAAvB;AAA0BC,YAAAA,GAAG,EAAE,CAA/B;AAAkCC,YAAAA,GAAG,EAAE,CAAA;AAAvC,WAAA;AAHF,SAFG;AAOVJ,QAAAA,KAAK,EAAE;AACLK,UAAAA,OAAO,EAAEtB,QAAQ,CAACW,eADb;AAELY,UAAAA,KAAK,EAAEvB,QAAQ,CAACU,cAAAA;AAFX,SAPG;AAWVc,QAAAA,KAAK,EAAE;AACL1d,UAAAA,SAAS,EAAE2d,SAAS,CAAC7T,KAAK,CAAC7E,MAAN,CAAa2Y,OAAd,CADf;AAEL3U,UAAAA,IAAI,EAAE0U,SAAS,CAAC7T,KAAK,CAAC7E,MAAN,CAAa2Y,OAAd,CAFV;AAGLC,UAAAA,KAAK,EAAEF,SAAS,CAAC7T,KAAK,CAAC7E,MAAN,CAAa2Y,OAAd,CAAA;AAHX,SAAA;AAXG,OAAZ,CAAA;AAiBA,MAAA,OAAOrL,GAAP,CAAA;AACD,KAAA;;AACD,IAAA,MAAMiF,QAAQ,GAAG;AACf9L,MAAAA,EAAE,EAAE5B,KAAK,CAAC4B,EADK;AAEfoS,MAAAA,aAAa,EAAE,MAAMtD,mBAAmB,EAAA;AAFzB,KAAjB,CAAA;AAIF,IAAA,IAAIlD,oBAAJ,CAAyBE,QAAzB,EAAmClY,MAAnC,CAA0C,IAA1C,EAAgD;AAAEyqB,MAAAA,KAAK,EAAE,IAAA;AAAT,KAAhD,CAAA,CAAA;AACC,GAAA;;AACU,EAAA,MAAL1qB,KAAK,CAAChE,OAAO,GAAG,EAAX,EAAe;AACxBoE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBrE,OAAtB,CAAA,CAAA;AACA,IAAA,MAAM,KAAMgE,CAAAA,KAAN,CAAYhE,OAAZ,CAAN,CAAA;;AAEA,IAAA,IAAA,qBAAA,CAAI,IAAJ,EAA4B,iBAAA,CAAA,EAAA;AAC1B,MAAA,qBAAA,CAAA,IAAA,EAAA,iBAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;;AACA,MAAA,qBAAA,CAAA,IAAA,EAAA,iBAAA,EAAyB,KAAK,CAA9B,CAAA,CAAA;AACD,KAAA;AACF,GAAA;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;AAUEiE,EAAAA,MAAM,CAAC6oB,KAAK,GAAG,KAAT,EAAgB9sB,OAAO,GAAG,EAA1B,EAA8B;AAClCoE,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkByoB,KAAlB,EAAyB9sB,OAAzB,EAAkC,8BAAlC,CAAA,CAAA;;AACA,IAAI,IAAA,CAAA,qBAAA,CAAC,IAAD,EAAA,iBAAA,CAAJ,EAA6B;AAC3B,MAAyB,qBAAA,CAAA,IAAA,EAAA,iBAAA,EAAA,qBAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAei0B,SAAf,CAAyB,sBAAA,CAAA,IAAA,EAAA,gBAAA,EAAA,iBAAA,CAAA,CAAsB3gB,IAAtB,CAA2B,IAA3B,CAAzB,CAAzB,CAAA,CAAA;AACD,KAAA;;AACD,IAAA,KAAA,CAAMrP,MAAN,CAAa6oB,KAAb,EAAoB9sB,OAApB,CAAA,CAAA;AACA,IAAA,OAAO,IAAP,CAAA;AACD,GAAA;;AA/RwD,CAAA;;iCA+QlCkgB,KAAKlgB,SAAS;AACnC,EAAM,MAAA;AAAEuU,IAAAA,MAAF;AAAUxU,IAAAA,IAAV;AAAgBm0B,IAAAA,YAAAA;AAAhB,GAAiCl0B,GAAAA,OAAvC,CADmC;;AAInC,EAAI,IAAA,CAACuU,MAAM,KAAK,KAAK,CAAhB,IAAqBA,MAAM,KAAK,QAAjC,KAA8C2L,GAAlD,EAAuD;AAAA,IAAA,IAAA,SAAA,CAAA;;AACrD,IAAA,IAAA,CAAKyS,QAAL,CAAcxwB,KAAd,GAAA,CAAA,SAAA,GAAsB+d,GAAtB,KAAA,IAAA,IAAsBA,GAAtB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAsBA,GAAG,CAAElT,IAA3B,MAAA,IAAA,IAAA,SAAA,KAAA,KAAA,CAAA,GAAA,SAAA,GAAmC,sBAAnC,CAAA;AACD,GAAA;AACF;;AC5RH;AAeA;;AACA;;AACA;;AACO,SAASJ,WAAT,CAAqBsK,GAArB,EAA0B;AAC/B,EAAA,OAAO9L,MAAM,CAAC3F,OAAP,CAAeyR,GAAf,CAAP,CAAA;AACD,CAAA;AACM,SAASid,WAAT,CAAqB7P,GAArB,EAA0B;AAC/B,EAAA,OAAOlZ,MAAM,CAAC3F,OAAP,CAAe6e,GAAf,CAAP,CAAA;AACD,CAAA;AACM,SAASzV,SAAT,CAAmBulB,YAAnB,EAAiCzpB,GAAjC,EAAsC;AAC3C,EAAOypB,OAAAA,YAAY,CAACzpB,GAAD,CAAnB,CAAA;AACD,CAAA;AACM,SAASC,QAAT,CAAkBsM,GAAlB,EAAuB;AAC5B,EAAA,OAAO9L,MAAM,CAAC0N,IAAP,CAAY5B,GAAZ,CAAP,CAAA;AACD,CAAA;AACM,SAASmd,UAAT,CAAoBnd,GAApB,EAAyB;AAC9B,EAAA,OAAO9L,MAAM,CAAC0N,IAAP,CAAY5B,GAAZ,CAAP,CAAA;AACD,CAAA;AACDkM,KAAK,CAACkR,IAAN,CAAW,MAAX,EAAmB,kBAAkB;AACnC;AACA;AACA,EAAI3zB,IAAAA,IAAI,YAAY4zB,IAApB,EAA0B;AACxB5zB,IAAAA,IAAI,CAAC0V,KAAL,GAAa;AACXme,MAAAA,SAAS,EAAE;AACTnrB,QAAAA,UADS;AAET0F,QAAAA,SAAAA;AAFS,OADA;AAKX0lB,MAAAA,aALW;AAMXtX,MAAAA,MAAM,EAAEha,KANG;AAOXkuB,MAAAA,IAAI,EAAEA,IAAAA;AAPK,KAAb,CADwB;;AAWxBruB,IAAAA,MAAM,CAACG,KAAP,GAAeA,KAAf,CAXwB;;AAaxBH,IAAAA,MAAM,CAACC,IAAP,CAAYkC,UAAZ,GAAyBksB,UAAzB,CAbwB;;AAexBruB,IAAAA,MAAM,CAACC,IAAP,CAAYtD,OAAZ,GAAsB0xB,OAAtB,CAAA;AACAruB,IAAAA,MAAM,CAACC,IAAP,CAAYyxB,KAAZ,CAAkB1zB,IAAlB,CAAuBqwB,OAAvB,CAAA,CAAA;AACAruB,IAAAA,MAAM,CAACC,IAAP,CAAYyxB,KAAZ,CAAkB1zB,IAAlB,CAAuBqwB,UAAvB,CAAA,CAAA;AACA1wB,IAAAA,IAAI,CAACwW,MAAL,CAAY/D,EAAZ,CAAe,cAAf,EAAgCrT,IAAD,IAAU;AACvC,MAAIA,IAAAA,IAAI,CAACsX,SAAL,KAAmB,iBAAvB,EAA0C8W,kBAAkB,CAACC,eAAnB,CAAmCruB,IAAnC,CAAA,CAAA;AAC3C,KAFD,CAAA,CAAA;AAIA;AACJ;AACA;AACA;;AACIiD,IAAAA,MAAM,CAAC2xB,MAAP,CAAcC,UAAd,GAA2B;AACzB90B,MAAAA,OAAO,EAAE,2BADgB;AAEzB+0B,MAAAA,QAAQ,EAAE,CAAA;AAFe,KAA3B,CA1BwB;;AA+BxB7xB,IAAAA,MAAM,CAACsG,KAAP,CAAawrB,aAAb,GAA6BzrB,UAA7B,CAAA;AACArG,IAAAA,MAAM,CAACgM,IAAP,CAAY8lB,aAAZ,GAA4B/lB,SAA5B,CAhCwB;;AAkCxBgmB,IAAAA,MAAM,CAACC,eAAP,CAAuB,MAAvB,EAA+BrY,UAA/B,CAAA,CAAA;AACAoY,IAAAA,MAAM,CAACE,aAAP,CAAqB,OAArB,EAA8BvY,eAA9B,EAA+C;AAAEwY,MAAAA,WAAW,EAAE,KAAA;AAAf,KAA/C,CAAA,CAAA;AACAH,IAAAA,MAAM,CAACE,aAAP,CAAqB,OAArB,EAA8BzC,mBAA9B,EAAmD;AAAE0C,MAAAA,WAAW,EAAE,IAAA;AAAf,KAAnD,CAAA,CAAA;AACAC,IAAAA,KAAK,CAACH,eAAN,CAAsB,MAAtB,EAA8BtP,SAA9B,EArCwB;;AAuCxByP,IAAAA,KAAK,CAACF,aAAN,CAAoB,OAApB,EAA6BxP,cAA7B,EAA6C;AAAEyP,MAAAA,WAAW,EAAE,KAAA;AAAf,KAA7C,CAAA,CAAA;AACAC,IAAAA,KAAK,CAACF,aAAN,CAAoB,OAApB,EAA6BzC,mBAA7B,EAAkD;AAAE0C,MAAAA,WAAW,EAAE,IAAA;AAAf,KAAlD,CAAA,CAAA;AACAxF,IAAAA,sBAAsB,GAzCE;;AA4CxBpH,IAAAA,mBAAmB,GA5CK;;AA+CxB,IAAA,OAAOR,0BAA0B,EAAjC,CAAA;AACD,GAhDD,MAgDO;AACL,IAAA,MAAM,IAAIsN,KAAJ,CAAU,2BAAV,CAAN,CAAA;AACD,GAAA;AACF,CAtDD,CAAA,CAAA;AAuDA;;AACA;;AACA;AACA;;AACAC,UAAU,CAACC,cAAX,CAA0B,QAA1B,EAAoC,YAAY;AAC9C,EAAIC,IAAAA,MAAM,GAAG,EAAb,CAAA;;AACA,EAAA,KAAK,IAAIC,GAAT,IAAgBC,SAAhB,EAA2B;AACzB,IAAA,IAAI,OAAOA,SAAS,CAACD,GAAD,CAAhB,IAAyB,QAA7B,EAAuC;AACrCD,MAAAA,MAAM,IAAIE,SAAS,CAACD,GAAD,CAAnB,CAAA;AACD,KAAA;AACF,GAAA;;AACD,EAAA,OAAOD,MAAP,CAAA;AACD,CARD,CAAA,CAAA;AASAF,UAAU,CAACC,cAAX,CAA0B,aAA1B,EAAyC,UAAUhpB,GAAV,EAAe;AACtD,EAAOA,OAAAA,GAAG,CAACopB,WAAJ,EAAP,CAAA;AACD,CAFD,CAAA,CAAA;AAGAL,UAAU,CAACC,cAAX,CAA0B,KAA1B,EAAiC,UAAUK,MAAV,EAAkBC,MAAlB,EAA0B;AACzD,EAAO3kB,OAAAA,MAAM,CAAC0kB,MAAD,CAAN,GAAiB1kB,MAAM,CAAC2kB,MAAD,CAA9B,CAAA;AACD,CAFD,CAAA,CAAA;AAGA;;AACA;;AACA;;AACAxS,KAAK,CAACkR,IAAN,CAAW,OAAX,EAAoB,kBAAkB;AACpC;AACA,EAAI,IAAA,CAAC3zB,IAAI,CAACk1B,OAAL,CAAah1B,GAAb,CAAiB,UAAjB,CAAL,EAAmC;AACjCqU,IAAAA,EAAE,CAACC,aAAH,CAAiBC,KAAjB,CAAuB,oDAAvB,CAAA,CAAA;AACD,GAFD,MAEO,IAAI,CAACzU,IAAI,CAACk1B,OAAL,CAAah1B,GAAb,CAAiB,UAAjB,CAA6B+mB,CAAAA,MAAlC,EAA0C;AAC/C1S,IAAAA,EAAE,CAACC,aAAH,CAAiBC,KAAjB,CAAuB,gCAAvB,CAAA,CAAA;AACA,IAAM0gB,MAAAA,cAAc,GAAGn1B,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAAyB,qBAAzB,CAAvB,CAAA;AACAi1B,IAAAA,cAAc,CAAC,UAAD,CAAd,GAA6B,IAA7B,CAAA;AACA,IAAMn1B,MAAAA,IAAI,CAACC,QAAL,CAAcwnB,GAAd,CAAkB,MAAlB,EAAyB,qBAAzB,EAA+C0N,cAA/C,CAAN,CAAA;AACD,GATmC;;;AAWpC1S,EAAAA,KAAK,CAAChQ,EAAN,CAAS,YAAT,EAAuB,CAAC2iB,GAAD,EAAMh2B,IAAN,EAAYgS,IAAZ,KAAqBikB,eAAe,CAACj2B,IAAD,EAAOgS,IAAP,CAA3D,CAAA,CAAA;AACD,CAZD,CAAA,CAAA;AAaA;;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeikB,eAAf,CAA+Bj2B,IAA/B,EAAqCgS,IAArC,EAA2C;AACzC,EAAIpR,IAAAA,IAAI,YAAY4zB,IAApB,EAA0B;AACxB;AACA,IAAA,IAAIx0B,IAAI,CAACgK,IAAL,KAAc,MAAlB,EAA0B,OAAA;AAC1B,IAAI,IAAA,EAAE,UAAUhK,IAAZ,CAAA,IAAqBmV,EAAE,CAACC,aAAH,YAA4B8gB,aAArD,EAAoE,OAAO/gB,EAAE,CAACC,aAAH,CAAiBxN,IAAjB,CAAsB,mDAAtB,CAAP,CAH5C;;AAKxB,IAAA,MAAMkB,IAAI,GAAG9I,IAAI,CAACA,IAAlB,CALwB;;AAOxB,IAAA,MAAMm2B,OAAO,GAAI,CAAA,0BAAA,EAA4BrtB,IAAI,CAACmE,IAAK,CAAvD,GAAA,CAAA,CAAA;AACA,IAAA,IAAImpB,SAAS,GAAGx1B,IAAI,CAACy1B,MAAL,CAAY1V,QAAZ,CAAqBzQ,MAArB,CAA6B8W,CAAD,IAAOA,CAAC,CAAC/Z,IAAF,KAAWnE,IAAI,CAACmE,IAAhB,IAAwB,CAAA+Z,CAAC,SAAD,IAAAA,CAAC,KAAD,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,CAAC,CAAEmP,OAAH,MAAeA,OAA1E,CAAhB,CAAA;AACA,IAAA,IAAIG,UAAU,GAAGF,SAAS,CAAChpB,MAAV,KAAqB,CAArB,GAAyBgpB,SAAS,CAAC,CAAD,CAAlC,GAAwC,IAAzD,CAAA;;AACA,IAAIE,IAAAA,UAAU,KAAK,IAAnB,EAAyB;AACvB,MAAA,IAAIC,KAAK,GAAG,MAAMC,KAAK,CAAC1c,MAAN,CAAa;AAC7B7M,QAAAA,IAAI,EAAEnE,IAAI,CAACmE,IADkB;AAE7BjD,QAAAA,IAAI,EAAE,QAFuB;AAG7B0T,QAAAA,GAAG,EAAE5U,IAAI,CAAC4U,GAHmB;AAI7ByY,QAAAA,OAAO,EAAEA,OAJoB;AAK7BrmB,QAAAA,KAAK,EAAE;AAAE,UAAmB,iBAAA,EAAA,IAAA;AAArB,SAAA;AALsB,OAAb,CAAlB,CAAA;;AAOA,MAAIymB,IAAAA,KAAK,YAAYC,KAArB,EAA4B;AAAA,QAAA,IAAA,UAAA,CAAA;;AAC1B,QAAA51B,CAAAA,UAAAA,GAAAA,IAAI,CAACsS,IAAL,MAAA,IAAA,IAAA,UAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,UAAA,CAAWujB,iBAAX,CAA6BF,KAA7B,EAAoCvkB,IAApC,CAAA,CAAA;AACD,OAAA;AACF,KAAA;;AACD,IAAA,OAAO,KAAP,CAAA;AACD,GAAA;AACF,CAAA;AACD;AACA;AACA;AACA;AACA;AACA;;;AACO,SAAS0iB,aAAT,CAAuBgC,QAAvB,EAAiC;AACtC,EAAI91B,IAAAA,IAAI,YAAY4zB,IAApB,EAA0B;AACxB,IAAA,MAAMlsB,OAAO,GAAGkG,WAAW,CAACC,UAAZ,EAAhB,CAAA;AACA,IAAA,IAAIC,KAAJ,CAAA;AACA,IAAA,IAAIpG,OAAO,CAAC2N,KAAZ,EAAmBvH,KAAK,GAAG9N,IAAI,CAACiX,MAAL,CAAYC,MAAZ,CAAmBxP,OAAO,CAAC2N,KAA3B,CAAR,CAAA;AACnB,IAAI,IAAA,CAACvH,KAAD,IAAU,OAAOpG,OAAO,CAACoG,KAAf,KAAyB,QAAvC,EAAiDA,KAAK,GAAG9N,IAAI,CAACiX,MAAL,CAAY/W,GAAZ,CAAgBwH,OAAO,CAACoG,KAAxB,CAAR,CAAA;AACjD,IAAA,MAAM5F,IAAI,GAAG4F,KAAK,GAAGA,KAAK,CAACjF,KAAN,CAAYkM,IAAZ,CAAkBlQ,CAAD,IAAOA,CAAC,CAACwH,IAAF,KAAWypB,QAAnC,CAAH,GAAkD,IAApE,CAAA;AACA,IAAA,IAAI,CAAC5tB,IAAL,EAAW,OAAOqM,EAAE,CAACC,aAAH,CAAiBxN,IAAjB,CAAuB,CAAoD8uB,kDAAAA,EAAAA,QAAS,CAApF,CAAA,CAAP,CANa;AAQxB;;AACA,IAAO5tB,OAAAA,IAAI,CAAC/B,IAAL,EAAP,CAAA;AACD,GAAA;AACF,CAAA;AACDsc,KAAK,CAAChQ,EAAN,CAAS,mBAAT,EAA8B,CAAC6L,GAAD,EAAMrb,IAAN,EAAY7D,IAAZ,KAAqB;AACjD;AACA22B,EAAAA,wBAAA,CAA8BzX,GAA9B,EAAmCrb,IAAnC,EAAyC7D,IAAzC,CAAA,CAFiD;;AAIjD22B,EAAAA,+BAAA,CAAqCzX,GAArC,EAA0Crb,IAA1C,CAAA,CAJiD;AAMlD,CAND,CAAA,CAAA;AAOAwf,KAAK,CAAChQ,EAAN,CAAS,wBAAT,EAAmCsjB,4BAAnC,CAAA;;AAEAtT,KAAK,CAAChQ,EAAN,CAAS,eAAT,EAA0B,CAAC6L,GAAD,EAAMrb,IAAN,EAAY7D,IAAZ,KAAqBgP,SAAS,CAACoE,aAAV,CAAwBvP,IAAxB,CAA/C;;AAEAwf,KAAK,CAAChQ,EAAN,CAAS,kBAAT,EAA6B,CAAC6L,GAAD,EAAMrb,IAAN,EAAY7D,IAAZ,KAAqBgP,SAAS,CAACoE,aAAV,CAAwBvP,IAAxB,CAAlD,CAAA;;;;"}