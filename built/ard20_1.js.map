{"version":3,"file":"ard20_1.js","sources":["dice/d20-roll.js","dice/damage-roll.js","dice/dice.js","documents/item.js","helpers/effects.js","helpers/cha-adv.js","sheets/actor-sheet.js","helpers/feat_req.js","sheets/item-sheet.js","helpers/templates.js","helpers/config.js","helpers/socket.js","../node_modules/svelte/internal/index.mjs","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/ApplicationState.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/GetSvelteData.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/loadSvelteConfig.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/styleParsePixels.js","../node_modules/svelte/store/index.mjs","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/SvelteReactive.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/animate/index.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/position/AdapterValidators.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/internal/position/Position.js","../node_modules/@typhonjs-fvtt/runtime/_dist/svelte/application/SvelteApplication.js","../svelte/advancement-rate/advancement-rate-shell.svelte","../svelte/advancement-rate/advancement-rate.js","helpers/settings.js","helpers/chat.js","ard20.js","documents/actor.js","../svelte/init.js"],"sourcesContent":["/**\r\n * A type of Roll specific to a d20-based check, save, or attack roll in the 5e system.\r\n * @param {string} formula                       The string formula to parse\r\n * @param {object} data                          The data object against which to parse attributes within the formula\r\n * @param {object} [options={}]                  Extra optional arguments which describe or modify the D20Roll\r\n * @param {number} [options.advantageMode]             What advantage modifier to apply to the roll (none, advantage, disadvantage)\r\n * @param {number} [options.critical]                  The value of d20 result which represents a critical success\r\n * @param {number} [options.fumble]                    The value of d20 result which represents a critical failure\r\n * @param {(number)} [options.targetValue]             Assign a target value against which the result of this roll should be compared\r\n * @param {boolean} [options.elvenAccuracy=false]      Allow Elven Accuracy to modify this roll?\r\n * @param {boolean} [options.halflingLucky=false]      Allow Halfling Luck to modify this roll?\r\n * @param {boolean} [options.reliableTalent=false]     Allow Reliable Talent to modify this roll?\r\n */\r\nexport default class D20Roll extends Roll {\r\n    constructor(formula, data, options = {}) {\r\n        super(formula, data, options);\r\n        if (!(this.terms[0] instanceof Die && this.terms[0].faces === 20)) {\r\n            throw new Error(`Invalid D20Roll formula provided ${this._formula}`);\r\n        }\r\n        this.configureModifiers();\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * A convenience reference for whether this D20Roll has advantage\r\n     * @type {boolean}\r\n     */\r\n    get hasAdvantage() {\r\n        //@ts-expect-error\r\n        return this.options.advantageMode === D20Roll.ADV_MODE.ADVANTAGE;\r\n    }\r\n    /**\r\n     * A convenience reference for whether this D20Roll has disadvantage\r\n     * @type {boolean}\r\n     */\r\n    get hasDisadvantage() {\r\n        //@ts-expect-error\r\n        return this.options.advantageMode === D20Roll.ADV_MODE.DISADVANTAGE;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /*  D20 Roll Methods                            */\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Apply optional modifiers which customize the behavior of the d20term\r\n     * @private\r\n     */\r\n    configureModifiers() {\r\n        const d20 = this.terms[0];\r\n        //@ts-expect-error\r\n        d20.modifiers = [];\r\n        // Handle Advantage or Disadvantage\r\n        if (this.hasAdvantage) {\r\n            //@ts-expect-error\r\n            d20.number = 2;\r\n            //@ts-expect-error\r\n            d20.modifiers.push(\"kh\");\r\n            //@ts-expect-error\r\n            d20.options.advantage = true;\r\n        }\r\n        else if (this.hasDisadvantage) {\r\n            //@ts-expect-error\r\n            d20.number = 2;\r\n            //@ts-expect-error\r\n            d20.modifiers.push(\"kl\");\r\n            //@ts-expect-error\r\n            d20.options.disadvantage = true;\r\n            //@ts-expect-error\r\n        }\r\n        else\r\n            d20.number = 1;\r\n        // Assign critical and fumble thresholds\r\n        //@ts-expect-error\r\n        if (this.options.critical)\r\n            d20.options.critical = this.options.critical;\r\n        //@ts-expect-error\r\n        if (this.options.fumble)\r\n            d20.options.fumble = this.options.fumble;\r\n        //@ts-expect-error\r\n        if (this.options.targetValue)\r\n            d20.options.target = this.options.targetValue;\r\n        // Re-compile the underlying formula\r\n        //@ts-expect-error\r\n        this._formula = this.constructor.getFormula(this.terms);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @inheritdoc */\r\n    async toMessage(messageData = {}, options = {}) {\r\n        // Evaluate the roll now so we have the results available to determine whether reliable talent came into play\r\n        if (!this._evaluated)\r\n            await this.evaluate({ async: true });\r\n        // Add appropriate advantage mode message flavor and ard20 roll flags\r\n        //@ts-expect-error\r\n        messageData.flavor = messageData.flavor || this.options.flavor;\r\n        //@ts-expect-error\r\n        if (this.hasAdvantage)\r\n            messageData.flavor += ` (${game.i18n.localize(\"ARd20.Advantage\")})`;\r\n        //@ts-expect-error\r\n        else if (this.hasDisadvantage)\r\n            messageData.flavor += ` (${game.i18n.localize(\"ARd20.Disadvantage\")})`;\r\n        // Record the preferred rollMode\r\n        //@ts-expect-error\r\n        options.rollMode = options.rollMode ?? this.options.rollMode;\r\n        return super.toMessage(messageData, options);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /*  Configuration Dialog                        */\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Create a Dialog prompt used to configure evaluation of an existing D20Roll instance.\r\n     * @param {object} data                     Dialog configuration data\r\n     * @param {string} [data.title]               The title of the shown dialog window\r\n     * @param {number} [data.defaultRollMode]     The roll mode that the roll mode select element should default to\r\n     * @param {number} [data.defaultAction]       The button marked as default\r\n     * @param {boolean} [data.chooseModifier]     Choose which ability modifier should be applied to the roll?\r\n     * @param {string} [data.defaultAbility]      For tool rolls, the default ability modifier applied to the roll\r\n     * @param {string} [data.template]            A custom path to an HTML template to use instead of the default\r\n     * @param {object} options                  Additional Dialog customization options\r\n     * @returns {Promise<D20Roll|null>}         A resulting D20Roll object constructed with the dialog, or null if the dialog was closed\r\n     */\r\n    //@ts-expect-error\r\n    async configureDialog({ title: string, defaultRollMode: number, canMult: boolean, defaultAction = D20Roll.ADV_MODE.NORMAL, mRoll, chooseModifier = false, defaultAttribute, template } = {}, options = {}) {\r\n        // Render the Dialog inner HTML\r\n        //@ts-expect-error\r\n        const content = await renderTemplate(template ?? this.constructor.EVALUATION_TEMPLATE, {\r\n            formula: `${this.formula} + @bonus`,\r\n            //@ts-expect-error\r\n            defaultRollMode,\r\n            rollModes: CONFIG.Dice.rollModes,\r\n            chooseModifier,\r\n            defaultAttribute,\r\n            attributes: CONFIG.ARd20.Attributes,\r\n            //@ts-expect-error\r\n            canMult,\r\n            mRoll,\r\n        });\r\n        let defaultButton = \"normal\";\r\n        switch (defaultAction) {\r\n            case D20Roll.ADV_MODE.ADVANTAGE:\r\n                defaultButton = \"advantage\";\r\n                break;\r\n            case D20Roll.ADV_MODE.DISADVANTAGE:\r\n                defaultButton = \"disadvantage\";\r\n                break;\r\n        }\r\n        // Create the Dialog window and await submission of the form\r\n        return new Promise((resolve) => {\r\n            new Dialog({\r\n                //@ts-expect-error\r\n                title,\r\n                content,\r\n                buttons: {\r\n                    advantage: {\r\n                        label: game.i18n.localize(\"ARd20.Advantage\"),\r\n                        callback: (html) => resolve(this._onDialogSubmit(html, D20Roll.ADV_MODE.ADVANTAGE)),\r\n                    },\r\n                    normal: {\r\n                        label: game.i18n.localize(\"ARd20.Normal\"),\r\n                        callback: (html) => resolve(this._onDialogSubmit(html, D20Roll.ADV_MODE.NORMAL)),\r\n                    },\r\n                    disadvantage: {\r\n                        label: game.i18n.localize(\"ARd20.Disadvantage\"),\r\n                        callback: (html) => resolve(this._onDialogSubmit(html, D20Roll.ADV_MODE.DISADVANTAGE)),\r\n                    },\r\n                },\r\n                default: defaultButton,\r\n                close: () => resolve(null),\r\n            }, options).render(true);\r\n        });\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Handle submission of the Roll evaluation configuration Dialog\r\n     * @param {jQuery} html             The submitted dialog content\r\n     * @param {number} advantageMode    The chosen advantage mode\r\n     * @private\r\n     */\r\n    //@ts-expect-error\r\n    _onDialogSubmit(html, advantageMode) {\r\n        const form = html[0].querySelector(\"form\");\r\n        console.log(this);\r\n        console.log(form, \"ФОРМА\");\r\n        if (form.bonus.value) {\r\n            const bonus = new Roll(form.bonus.value, this.data);\r\n            if (!(bonus.terms[0] instanceof OperatorTerm))\r\n                this.terms.push(new OperatorTerm({ operator: \"+\" }));\r\n            this.terms = this.terms.concat(bonus.terms);\r\n        }\r\n        // Customize the modifier\r\n        if (form.ability?.value) {\r\n            //@ts-expect-error\r\n            const abl = this.data.attributes[form.ability.value];\r\n            console.log(abl);\r\n            //@ts-expect-error\r\n            this.terms.findSplice((t) => t.term === \"@mod\", new NumericTerm({ number: abl.mod }));\r\n            //@ts-expect-error\r\n            this.options.flavor += ` (${game.i18n.localize(CONFIG.ARd20.Attributes[form.ability.value])})`;\r\n        }\r\n        /* if (form.prof_type?.value) {\r\n           const pr = this.data[form.prof_type.value][form.prof_value.value];\r\n           console.log(pr);\r\n           this.terms.findSplice((t) => t.term === \"@prof_die\", new Die({ number: 1, faces: pr.prof_die }));\r\n           this.terms.findSplice((t) => t.term === \"@prof_bonus\", new NumericTerm({ number: pr.prof_bonus }));\r\n         }*/\r\n        // Apply advantage or disadvantage\r\n        //@ts-expect-error\r\n        this.options.advantageMode = advantageMode;\r\n        //@ts-expect-error\r\n        this.options.rollMode = form.rollMode.value;\r\n        //@ts-expect-error\r\n        this.options.mRoll = form.mRoll?.checked;\r\n        this.configureModifiers();\r\n        return this;\r\n    }\r\n}\r\n/* -------------------------------------------- */\r\n/**\r\n * Advantage mode of a 5e d20 roll\r\n * @enum {number}\r\n */\r\nD20Roll.ADV_MODE = {\r\n    NORMAL: 0,\r\n    ADVANTAGE: 1,\r\n    DISADVANTAGE: -1,\r\n};\r\n/**\r\n * The HTML template path used to configure evaluation of this Roll\r\n * @type {string}\r\n */\r\nD20Roll.EVALUATION_TEMPLATE = \"systems/ard20/templates/chat/roll-dialog.html\";\r\n","/**\r\n * A type of Roll specific to a damage (or healing) roll in the 5e system.\r\n * @param {string} formula                       The string formula to parse\r\n * @param {object} data                          The data object against which to parse attributes within the formula\r\n * @param {object} [options={}]                  Extra optional arguments which describe or modify the DamageRoll\r\n * @param {number} [options.criticalBonusDice=0]      A number of bonus damage dice that are added for critical hits\r\n * @param {number} [options.criticalMultiplier=2]     A critical hit multiplier which is applied to critical hits\r\n * @param {boolean} [options.multiplyNumeric=false]   Multiply numeric terms by the critical multiplier\r\n * @param {boolean} [options.powerfulCritical=false]  Apply the \"powerful criticals\" house rule to critical hits\r\n *\r\n */\r\n//@ts-expect-error\r\nexport default class DamageRoll extends Roll {\r\n    //@ts-expect-error\r\n    constructor(formula, data, options) {\r\n        super(formula, data, options);\r\n        // For backwards compatibility, skip rolls which do not have the \"critical\" option defined\r\n        //@ts-expect-error\r\n        if (this.options.critical !== undefined)\r\n            this.configureDamage();\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * A convenience reference for whether this DamageRoll is a critical hit\r\n     * @type {boolean}\r\n     */\r\n    get isCritical() {\r\n        //@ts-expect-error\r\n        return this.options.critical;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /*  Damage Roll Methods                         */\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Apply optional modifiers which customize the behavior of the d20term\r\n     * @private\r\n     */\r\n    configureDamage() {\r\n        let critBonus = 0;\r\n        for (let [i, term] of this.terms.entries()) {\r\n            if (!(term instanceof OperatorTerm)) {\r\n                //@ts-expect-error\r\n                term.options.damageType = i !== 0 && this.terms[i - 1] instanceof OperatorTerm ? this.options.damageType[i - 1] : this.options.damageType[i];\r\n            }\r\n            // Multiply dice terms\r\n            if (term instanceof DiceTerm) {\r\n                //@ts-expect-error\r\n                term.options.baseNumber = term.options.baseNumber ?? term.number; // Reset back\r\n                //@ts-expect-error\r\n                term.number = term.options.baseNumber;\r\n                if (this.isCritical) {\r\n                    critBonus += term.number * term.faces;\r\n                    let [oper, num] = [new OperatorTerm({ operator: \"+\" }), new NumericTerm({ number: critBonus, options: { flavor: \"Crit\" } })];\r\n                    this.terms.splice(1, 0, oper);\r\n                    this.terms.splice(2, 0, num);\r\n                    //@ts-expect-error\r\n                    let cb = this.options.criticalBonusDice && i === 0 ? this.options.criticalBonusDice : 0;\r\n                    term.alter(1, cb);\r\n                    //@ts-expect-error\r\n                    term.options.critical = true;\r\n                }\r\n            }\r\n            // Multiply numeric terms\r\n            //@ts-expect-error\r\n            else if (this.options.multiplyNumeric && term instanceof NumericTerm) {\r\n                //@ts-expect-error\r\n                term.options.baseNumber = term.options.baseNumber ?? term.number; // Reset back\r\n                //@ts-expect-error\r\n                term.number = term.options.baseNumber;\r\n                if (this.isCritical) {\r\n                    //@ts-expect-error\r\n                    term.number *= this.options.criticalMultiplier ?? 2;\r\n                    //@ts-expect-error\r\n                    term.options.critical = true;\r\n                }\r\n            }\r\n        }\r\n        //@ts-expect-error\r\n        this._formula = this.constructor.getFormula(this.terms);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @inheritdoc */\r\n    toMessage(messageData = {}, options = {}) {\r\n        //@ts-expect-error\r\n        messageData.flavor = messageData.flavor || this.options.flavor;\r\n        if (this.isCritical) {\r\n            const label = game.i18n.localize(\"ARd20.CriticalHit\");\r\n            //@ts-expect-error\r\n            messageData.flavor = messageData.flavor ? `${messageData.flavor} (${label})` : label;\r\n        }\r\n        //@ts-expect-error\r\n        options.rollMode = options.rollMode ?? this.options.rollMode;\r\n        return super.toMessage(messageData, options);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /*  Configuration Dialog                        */\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Create a Dialog prompt used to configure evaluation of an existing D20Roll instance.\r\n     * @param {object} data                     Dialog configuration data\r\n     * @param {string} [data.title]               The title of the shown dialog window\r\n     * @param {number} [data.defaultRollMode]     The roll mode that the roll mode select element should default to\r\n     * @param {string} [data.defaultCritical]     Should critical be selected as default\r\n     * @param {string} [data.template]            A custom path to an HTML template to use instead of the default\r\n     * @param {boolean} [data.allowCritical=true] Allow critical hit to be chosen as a possible damage mode\r\n     * @param {object} options                  Additional Dialog customization options\r\n     * @returns {Promise<D20Roll|null>}         A resulting D20Roll object constructed with the dialog, or null if the dialog was closed\r\n     */\r\n    //@ts-expect-error\r\n    async configureDialog({ title, defaultRollMode, canMult, damType, mRoll, defaultCritical = false, template, allowCritical = true } = {}, options = {}) {\r\n        // Render the Dialog inner HTML\r\n        //@ts-expect-error\r\n        const content = await renderTemplate(template ?? this.constructor.EVALUATION_TEMPLATE, {\r\n            formula: `${this.formula} + @bonus`,\r\n            defaultRollMode,\r\n            rollModes: CONFIG.Dice.rollModes,\r\n            canMult,\r\n            damType,\r\n            mRoll\r\n        });\r\n        // Create the Dialog window and await submission of the form\r\n        return new Promise((resolve) => {\r\n            new Dialog({\r\n                title,\r\n                content,\r\n                buttons: {\r\n                    critical: {\r\n                        //@ts-expect-error\r\n                        condition: allowCritical,\r\n                        label: game.i18n.localize(\"ARd20.CriticalHit\"),\r\n                        callback: (html) => resolve(this._onDialogSubmit(html, true)),\r\n                    },\r\n                    normal: {\r\n                        label: game.i18n.localize(allowCritical ? \"ARd20.Normal\" : \"ARd20.Roll\"),\r\n                        callback: (html) => resolve(this._onDialogSubmit(html, false)),\r\n                    },\r\n                },\r\n                default: defaultCritical ? \"critical\" : \"normal\",\r\n                close: () => resolve(null),\r\n            }, options).render(true);\r\n        });\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Handle submission of the Roll evaluation configuration Dialog\r\n     * @param {jQuery} html             The submitted dialog content\r\n     * @param {boolean} isCritical      Is the damage a critical hit?\r\n     * @private\r\n     */\r\n    //@ts-expect-error\r\n    _onDialogSubmit(html, isCritical) {\r\n        const form = html[0].querySelector(\"form\");\r\n        // Append a situational bonus term\r\n        if (form.bonus.value) {\r\n            const bonus = new Roll(form.bonus.value, this.data);\r\n            if (!(bonus.terms[0] instanceof OperatorTerm))\r\n                this.terms.push(new OperatorTerm({ operator: \"+\" }));\r\n            this.terms = this.terms.concat(bonus.terms);\r\n        }\r\n        // Apply advantage or disadvantage\r\n        //@ts-expect-error\r\n        this.options.critical = isCritical;\r\n        //@ts-expect-error\r\n        this.options.rollMode = form.rollMode.value;\r\n        //@ts-expect-error\r\n        this.options.damageType.forEach((part, ind) => (this.options.damageType[ind] = form[`damageType.${ind}`] ? part[form[`damageType.${ind}`].value] : part[0]));\r\n        //@ts-expect-error\r\n        this.options.mRoll = form.mRoll?.checked;\r\n        this.configureDamage();\r\n        return this;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @inheritdoc */\r\n    //@ts-expect-error\r\n    static fromData(data) {\r\n        const roll = super.fromData(data);\r\n        //@ts-expect-error\r\n        roll._formula = this.getFormula(roll.terms);\r\n        return roll;\r\n    }\r\n}\r\n/**\r\n * The HTML template path used to configure evaluation of this Roll\r\n * @type {string}\r\n */\r\nDamageRoll.EVALUATION_TEMPLATE = \"systems/ard20/templates/chat/roll-dialog.html\";\r\n","export { default as D20Roll } from \"./d20-roll.js\";\r\nexport { default as DamageRoll } from \"./damage-roll.js\";\r\n/**\r\n * A standardized helper function for simplifying the constant parts of a multipart roll formula\r\n *\r\n * @param {string} formula                 The original Roll formula\r\n * @param {Object} data                    Actor or item data against which to parse the roll\r\n * @param {Object} options                 Formatting options\r\n * @param {boolean} options.constantFirst   Puts the constants before the dice terms in the resulting formula\r\n *\r\n * @return {string}                        The resulting simplified formula\r\n */\r\nexport function simplifyRollFormula(formula, data, { constantFirst = false }) {\r\n    const roll = new Roll(formula, data); // Parses the formula and replaces any @properties\r\n    const terms = roll.terms;\r\n    // Some terms are \"too complicated\" for this algorithm to simplify\r\n    // In this case, the original formula is returned.\r\n    if (terms.some(_isUnsupportedTerm))\r\n        return roll.formula;\r\n    const rollableTerms = []; // Terms that are non-constant, and their associated operators\r\n    const constantTerms = []; // Terms that are constant, and their associated operators\r\n    let operators = []; // Temporary storage for operators before they are moved to one of the above\r\n    for (let term of terms) {\r\n        // For each term\r\n        if (term instanceof OperatorTerm)\r\n            operators.push(term);\r\n        // If the term is an addition/subtraction operator, push the term into the operators array\r\n        else {\r\n            // Otherwise the term is not an operator\r\n            if (term instanceof DiceTerm) {\r\n                // If the term is something rollable\r\n                rollableTerms.push(...operators); // Place all the operators into the rollableTerms array\r\n                rollableTerms.push(term); // Then place this rollable term into it as well\r\n            } //\r\n            else {\r\n                // Otherwise, this must be a constant\r\n                constantTerms.push(...operators); // Place the operators into the constantTerms array\r\n                constantTerms.push(term); // Then also add this constant term to that array.\r\n            } //\r\n            operators = []; // Finally, the operators have now all been assigend to one of the arrays, so empty this before the next iteration.\r\n        }\r\n    }\r\n    const constantFormula = Roll.getFormula(constantTerms); // Cleans up the constant terms and produces a new formula string\r\n    const rollableFormula = Roll.getFormula(rollableTerms); // Cleans up the non-constant terms and produces a new formula string\r\n    // Mathematically evaluate the constant formula to produce a single constant term\r\n    let constantPart = undefined;\r\n    if (constantFormula) {\r\n        try {\r\n            constantPart = Roll.safeEval(constantFormula);\r\n        }\r\n        catch (err) {\r\n            console.warn(`Unable to evaluate constant term ${constantFormula} in simplifyRollFormula`);\r\n        }\r\n    }\r\n    // Order the rollable and constant terms, either constant first or second depending on the optional argument\r\n    const parts = constantFirst ? [constantPart, rollableFormula] : [rollableFormula, constantPart];\r\n    // Join the parts with a + sign, pass them to `Roll` once again to clean up the formula\r\n    return new Roll(parts.filterJoin(\" + \")).formula;\r\n}\r\n/* -------------------------------------------- */\r\n/**\r\n * Only some terms are supported by simplifyRollFormula, this method returns true when the term is not supported.\r\n * @param {*} term - A single Dice term to check support on\r\n * @return {Boolean} True when unsupported, false if supported\r\n */\r\nfunction _isUnsupportedTerm(term) {\r\n    const diceTerm = term instanceof DiceTerm;\r\n    const operator = term instanceof OperatorTerm && [\"+\", \"-\"].includes(term.operator);\r\n    const number = term instanceof NumericTerm;\r\n    return !(diceTerm || operator || number);\r\n}\r\n/* -------------------------------------------- */\r\n/* D20 Roll                                     */\r\n/* -------------------------------------------- */\r\n/**\r\n * A standardized helper function for managing core 5e d20 rolls.\r\n * Holding SHIFT, ALT, or CTRL when the attack is rolled will \"fast-forward\".\r\n * This chooses the default options of a normal attack with no bonus, Advantage, or Disadvantage respectively\r\n *\r\n * @param {string[]} parts          The dice roll component parts, excluding the initial d20\r\n * @param {object} data             Actor or item data against which to parse the roll\r\n *\r\n * @param {boolean} [advantage]       Apply advantage to the roll (unless otherwise specified)\r\n * @param {boolean} [disadvantage]    Apply disadvantage to the roll (unless otherwise specified)\r\n * @param {number} [critical]         The value of d20 result which represents a critical success\r\n * @param {number} [fumble]           The value of d20 result which represents a critical failure\r\n * @param {number} [targetValue]      Assign a target value against which the result of this roll should be compared\r\n\r\n * @param {boolean} [chooseModifier=false] Choose the ability modifier that should be used when the roll is made\r\n * @param {boolean} [fastForward=false] Allow fast-forward advantage selection\r\n * @param {Event} [event]             The triggering event which initiated the roll\r\n * @param {string} [rollMode]         A specific roll mode to apply as the default for the resulting roll\r\n * @param {string} [template]         The HTML template used to render the roll dialog\r\n * @param {string} [title]            The dialog window title\r\n * @param {Object} [dialogOptions]    Modal dialog options\r\n *\r\n * @param {boolean} [chatMessage=true] Automatically create a Chat Message for the result of this roll\r\n * @param {object} [messageData={}] Additional data which is applied to the created Chat Message, if any\r\n * @param {string} [rollMode]       A specific roll mode to apply as the default for the resulting roll\r\n * @param {object} [speaker]        The ChatMessage speaker to pass when creating the chat\r\n * @param {string} [flavor]         Flavor text to use in the posted chat message\r\n *\r\n * @return {Promise<D20Roll|null>}  The evaluated D20Roll, or null if the workflow was cancelled\r\n */\r\n//@ts-expect-error\r\nexport async function d20Roll({ \r\n//@ts-expect-error\r\nparts = [], \r\n//@ts-expect-error\r\ndata = {}, \r\n//@ts-expect-error\r\nadvantage, \r\n//@ts-expect-error\r\ndisadvantage, \r\n//@ts-expect-error\r\nfumble = 1, \r\n//@ts-expect-error\r\ncritical = 20, \r\n//@ts-expect-error\r\ntargetValue, \r\n//@ts-expect-error\r\nchooseModifier = false, \r\n//@ts-expect-error\r\nfastForward = false, \r\n//@ts-expect-error\r\nevent, \r\n//@ts-expect-error\r\ntemplate, \r\n//@ts-expect-error\r\ntitle, \r\n//@ts-expect-error\r\ndialogOptions, \r\n//@ts-expect-error\r\nchatMessage = true, \r\n//@ts-expect-error\r\nmessageData = {}, \r\n//@ts-expect-error\r\nrollMode, \r\n//@ts-expect-error\r\nspeaker, \r\n//@ts-expect-error\r\noptions, \r\n//@ts-expect-error\r\nflavor, \r\n//@ts-expect-error\r\ncanMult, \r\n//@ts-expect-error\r\nmRoll,\r\n//@ts-expect-error\r\n } = {}) {\r\n    // Handle input arguments\r\n    const formula = [\"1d20\"].concat(parts).join(\" + \");\r\n    const { advantageMode, isFF } = _determineAdvantageMode({ advantage, disadvantage, fastForward, event });\r\n    const defaultRollMode = rollMode || game.settings.get(\"core\", \"rollMode\");\r\n    if (chooseModifier && !isFF) {\r\n        data[\"mod\"] = \"@mod\";\r\n    }\r\n    // Construct the D20Roll instance\r\n    //@ts-expect-error\r\n    const roll = new CONFIG.Dice.D20Roll(formula, data, {\r\n        flavor: flavor || title,\r\n        advantageMode,\r\n        defaultRollMode,\r\n        critical,\r\n        fumble,\r\n        targetValue,\r\n        mRoll,\r\n    });\r\n    // Prompt a Dialog to further configure the D20Roll\r\n    if (!isFF) {\r\n        const configured = await roll.configureDialog({\r\n            title,\r\n            chooseModifier,\r\n            defaultRollMode: defaultRollMode,\r\n            defaultAction: advantageMode,\r\n            defaultAbility: data?.item?.ability,\r\n            template,\r\n            canMult,\r\n            mRoll,\r\n        }, dialogOptions);\r\n        if (configured === null)\r\n            return null;\r\n    }\r\n    // Evaluate the configured roll\r\n    await roll.evaluate({ async: true });\r\n    // Create a Chat Message\r\n    if (speaker) {\r\n        console.warn(`You are passing the speaker argument to the d20Roll function directly which should instead be passed as an internal key of messageData`);\r\n        messageData.speaker = speaker;\r\n    }\r\n    if (roll && chatMessage)\r\n        await roll.toMessage(messageData, options);\r\n    return roll;\r\n}\r\n/* -------------------------------------------- */\r\n/**\r\n * Determines whether this d20 roll should be fast-forwarded, and whether advantage or disadvantage should be applied\r\n * @returns {{isFF: boolean, advantageMode: number}}  Whether the roll is fast-forward, and its advantage mode\r\n */\r\n//@ts-expect-error\r\nfunction _determineAdvantageMode({ event, advantage = false, disadvantage = false, fastForward = false } = {}) {\r\n    const isFF = fastForward || (event && (event.shiftKey || event.altKey || event.ctrlKey || event.metaKey));\r\n    //@ts-expect-error\r\n    let advantageMode = CONFIG.Dice.D20Roll.ADV_MODE.NORMAL;\r\n    //@ts-expect-error\r\n    if (advantage || event?.altKey)\r\n        advantageMode = CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE;\r\n    //@ts-expect-error\r\n    else if (disadvantage || event?.ctrlKey || event?.metaKey)\r\n        advantageMode = CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE;\r\n    return { isFF, advantageMode };\r\n}\r\n/* -------------------------------------------- */\r\n/* Damage Roll                                  */\r\n/* -------------------------------------------- */\r\n/**\r\n * A standardized helper function for managing core 5e damage rolls.\r\n * Holding SHIFT, ALT, or CTRL when the attack is rolled will \"fast-forward\".\r\n * This chooses the default options of a normal attack with no bonus, Critical, or no bonus respectively\r\n *\r\n * @param {string[]} parts          The dice roll component parts, excluding the initial d20\r\n * @param {object} [data]           Actor or item data against which to parse the roll\r\n *\r\n * @param {boolean} [critical=false] Flag this roll as a critical hit for the purposes of fast-forward or default dialog action\r\n * @param {number} [criticalBonusDice=0] A number of bonus damage dice that are added for critical hits\r\n * @param {number} [criticalMultiplier=2] A critical hit multiplier which is applied to critical hits\r\n * @param {boolean} [multiplyNumeric=false] Multiply numeric terms by the critical multiplier\r\n * @param {boolean} [powerfulCritical=false] Apply the \"powerful criticals\" house rule to critical hits\r\n\r\n * @param {boolean} [fastForward=false] Allow fast-forward advantage selection\r\n * @param {Event}[event]            The triggering event which initiated the roll\r\n * @param {boolean} [allowCritical=true] Allow the opportunity for a critical hit to be rolled\r\n * @param {string} [template]       The HTML template used to render the roll dialog\r\n * @param {string} [title]          The dice roll UI window title\r\n * @param {object} [dialogOptions]  Configuration dialog options\r\n *\r\n * @param {boolean} [chatMessage=true] Automatically create a Chat Message for the result of this roll\r\n * @param {object} [messageData={}] Additional data which is applied to the created Chat Message, if any\r\n * @param {string} [rollMode]       A specific roll mode to apply as the default for the resulting roll\r\n * @param {object} [speaker]        The ChatMessage speaker to pass when creating the chat\r\n * @param {string} [flavor]         Flavor text to use in the posted chat message\r\n *\r\n * @return {Promise<DamageRoll|null>} The evaluated DamageRoll, or null if the workflow was canceled\r\n */\r\n//@ts-expect-error\r\nexport async function damageRoll({ \r\n//@ts-expect-error\r\nparts = [], \r\n//@ts-expect-error\r\ndata, // Roll creation\r\n//@ts-expect-error\r\ncritical = false, \r\n//@ts-expect-error\r\ndamType, \r\n//@ts-expect-error\r\ndamageType, \r\n//@ts-expect-error\r\ncriticalBonusDice, \r\n//@ts-expect-error\r\ncriticalMultiplier, \r\n//@ts-expect-error\r\nmultiplyNumeric, // Damage customization\r\n//@ts-expect-error\r\nfastForward = false, \r\n//@ts-expect-error\r\nevent, \r\n//@ts-expect-error\r\nallowCritical = true, \r\n//@ts-expect-error\r\ntemplate, \r\n//@ts-expect-error\r\ntitle, \r\n//@ts-expect-error\r\ndialogOptions, // Dialog configuration\r\n//@ts-expect-error\r\nchatMessage = false, \r\n//@ts-expect-error\r\nmessageData = {}, \r\n//@ts-expect-error\r\nrollMode, \r\n//@ts-expect-error\r\nspeaker, \r\n//@ts-expect-error\r\ncanMult, \r\n//@ts-expect-error\r\nflavor, \r\n//@ts-expect-error\r\nmRoll\r\n//@ts-expect-error\r\n } = {}) {\r\n    console.log(canMult);\r\n    // Handle input arguments\r\n    const defaultRollMode = rollMode || game.settings.get(\"core\", \"rollMode\");\r\n    // Construct the DamageRoll instance\r\n    const formula = parts.join(\" + \");\r\n    const { isCritical, isFF } = _determineCriticalMode({ critical, fastForward, event });\r\n    //@ts-expect-error\r\n    const roll = new CONFIG.Dice.DamageRoll(formula, data, {\r\n        flavor: flavor || title,\r\n        critical: isCritical,\r\n        criticalBonusDice,\r\n        criticalMultiplier,\r\n        multiplyNumeric,\r\n        damType,\r\n        mRoll,\r\n        damageType\r\n    });\r\n    // Prompt a Dialog to further configure the DamageRoll\r\n    if (!isFF) {\r\n        const configured = await roll.configureDialog({\r\n            title,\r\n            defaultRollMode: defaultRollMode,\r\n            defaultCritical: isCritical,\r\n            template,\r\n            allowCritical,\r\n            mRoll,\r\n            canMult,\r\n            damType\r\n        }, dialogOptions);\r\n        if (configured === null)\r\n            return null;\r\n    }\r\n    // Evaluate the configured roll\r\n    await roll.evaluate({ async: true });\r\n    // Create a Chat Message\r\n    if (speaker) {\r\n        console.warn(`You are passing the speaker argument to the damageRoll function directly which should instead be passed as an internal key of messageData`);\r\n        messageData.speaker = speaker;\r\n    }\r\n    if (roll && chatMessage)\r\n        await roll.toMessage(messageData);\r\n    return roll;\r\n}\r\n/* -------------------------------------------- */\r\n/**\r\n * Determines whether this d20 roll should be fast-forwarded, and whether advantage or disadvantage should be applied\r\n * @returns {{isFF: boolean, isCritical: boolean}}  Whether the roll is fast-forward, and whether it is a critical hit\r\n */\r\n//@ts-expect-error\r\nfunction _determineCriticalMode({ event, critical = false, fastForward = false } = {}) {\r\n    const isFF = fastForward || (event && (event.shiftKey || event.altKey || event.ctrlKey || event.metaKey));\r\n    if (event?.altKey)\r\n        critical = true;\r\n    return { isFF, isCritical: critical };\r\n}\r\n","import { getValues, obj_entries } from \"../ard20.js\";\r\nimport { d20Roll, damageRoll, simplifyRollFormula } from \"../dice/dice.js\";\r\n/**\r\n * Extend the basic Item with some very simple modifications.\r\n * @extends {Item}\r\n */\r\nexport class ARd20Item extends Item {\r\n    /**\r\n     * Augment the basic Item data model with additional dynamic data.\r\n     */\r\n    prepareData() {\r\n        // As with the actor class, items are documents that can have their data\r\n        // preparation methods overridden (such as prepareBaseData()).\r\n        super.prepareData();\r\n    }\r\n    prepareDerivedData() {\r\n        super.prepareDerivedData();\r\n        const itemData = this.data;\r\n        this._prepareSpellData(itemData);\r\n        this._prepareWeaponData(itemData);\r\n        this._prepareFeatureData(itemData);\r\n        this._prepareRaceData(itemData);\r\n        this._prepareArmorData(itemData);\r\n        if (itemData.data.hasAttack)\r\n            this._prepareAttack(itemData);\r\n        if (itemData.data.hasDamage)\r\n            this._prepareDamage(itemData);\r\n        if (!this.isOwned)\r\n            this.prepareFinalAttributes();\r\n    }\r\n    /**\r\n     *Prepare data for Spells\r\n     */\r\n    _prepareSpellData(itemData) {\r\n        if (itemData.type !== \"spell\")\r\n            return;\r\n        const data = itemData.data;\r\n    }\r\n    /**\r\n     *Prepare data for weapons\r\n     */\r\n    _prepareWeaponData(itemData) {\r\n        if (itemData.type !== \"weapon\")\r\n            return;\r\n        const data = itemData.data;\r\n        const flags = itemData.flags;\r\n        data.hasAttack = data.hasAttack || true;\r\n        data.hasDamage = data.hasDamage || true;\r\n        //TODO: this._setDeflect(data);\r\n        this._setTypeAndSubtype(data, flags);\r\n        for (let [key, type] of obj_entries(data.damage)) {\r\n            if (key !== \"current\") {\r\n                for (let [key, prof] of obj_entries(type)) {\r\n                    prof.formula = \"\";\r\n                    prof.parts.forEach((part) => {\r\n                        if (Array.isArray(part[1])) {\r\n                            prof.formula += `${part[0]}`;\r\n                            part[1].forEach((sub, ind) => {\r\n                                if (ind === 0) {\r\n                                    prof.formula += ` {${sub[0]} ${sub[1]}`;\r\n                                    prof.formula += ind === part[1].length - 1 ? \"}\" : \"\";\r\n                                }\r\n                                else {\r\n                                    prof.formula += ` or ${sub[0]} ${sub[1]}`;\r\n                                    prof.formula += ind === part[1].length - 1 ? \"}\" : \"\";\r\n                                }\r\n                            });\r\n                        }\r\n                        else\r\n                            prof.formula += `${part[0]} {${part[1]} ${part[2]}}; `;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     *Set deflect die equal to damage die, if not\r\n     */\r\n    /* TODO:\r\n    _setDeflect(data: object & WeaponDataPropertiesData) {\r\n      for (let [k, v] of obj_entries(CONFIG.ARd20.Rank)) {\r\n        v = game.i18n.localize(CONFIG.ARd20.prof[k]) ?? k;\r\n        v = v.toLowerCase();\r\n        data.deflect[v] = data.property[v].def ? data.deflect[v] || data.damage.common[v] : 0;\r\n      }\r\n    }\r\n    */\r\n    //@ts-expect-error\r\n    _setTypeAndSubtype(data, flags) {\r\n        data.sub_type_array = game.settings\r\n            .get(\"ard20\", \"proficiencies\")\r\n            .weapon.filter((prof) => prof.type === data.type.value);\r\n        if (flags.core?.sourceId) {\r\n            const id = /Item.(.+)/.exec(flags.core.sourceId)[1];\r\n            const item = game.items.get(id);\r\n            if (item?.data.type === \"weapon\") {\r\n                data.sub_type = data.sub_type === undefined ? item.data.data.sub_type : data.sub_type;\r\n            }\r\n        }\r\n        data.sub_type =\r\n            data.sub_type_array.filter((prof) => prof.name === data.sub_type).length === 0\r\n                ? data.sub_type_array[0].name\r\n                : data.sub_type || data.sub_type_array[0].name;\r\n        data.proficiency.name =\r\n            game.i18n.localize(getValues(CONFIG.ARd20.Rank, data.proficiency.level)) ??\r\n                getValues(CONFIG.ARd20.Rank, data.proficiency.level);\r\n        data.type.name =\r\n            game.i18n.localize(getValues(CONFIG.ARd20.Rank, data.type.value)) ??\r\n                getValues(CONFIG.ARd20.Rank, data.type.value);\r\n    }\r\n    /**\r\n     *Prepare data for features\r\n     */\r\n    _prepareFeatureData(itemData) {\r\n        if (itemData.type !== \"feature\")\r\n            return;\r\n        const data = itemData.data;\r\n        // Handle Source of the feature\r\n        data.source.label = \"\";\r\n        data.source.value.forEach((value, key) => {\r\n            let label = game.i18n.localize(getValues(CONFIG.ARd20.Source, value));\r\n            data.source.label += key === 0 ? label : `, ${label}`;\r\n        });\r\n        //labels.source = game.i18n.localize(CONFIG.ARd20.source[data.source.value]);\r\n        //define levels\r\n        data.level.has = data.level.has !== undefined ? data.level.has : false;\r\n        data.level.max = data.level.has ? data.level.max || 4 : 1;\r\n        data.level.initial = Math.min(data.level.max, data.level.initial);\r\n        data.level.current = this.isOwned ? Math.max(data.level.initial, 1) : 0;\r\n        //define exp cost\r\n        if (data.level.max > 1) {\r\n            let n = (10 - data.level.max) / data.level.max;\r\n            let k = 1.7 + (Math.round(Number((Math.abs(n) * 100).toPrecision(15))) / 100) * Math.sign(n);\r\n            if (data.xp.basicCost.length < data.level.max) {\r\n                for (let i = 1; i < data.level.max; i++) {\r\n                    data.xp.basicCost.push(Math.round((data.xp.basicCost[i - 1] * k) / 5) * 5);\r\n                    data.xp.AdvancedCost.push(data.xp.basicCost[i]);\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 1; i < data.level.max; i++) {\r\n                    data.xp.basicCost[i] = Math.round((data.xp.basicCost[i - 1] * k) / 5) * 5;\r\n                    data.xp.AdvancedCost[i] = data.xp.AdvancedCost[i] ?? data.xp.basicCost[i];\r\n                }\r\n            }\r\n        }\r\n        for (let [key, req] of Object.entries(data.req.values)) {\r\n            req.pass = Array.from({ length: data.level.max }, (i) => (i = false));\r\n            switch (req.type) {\r\n                case \"ability\":\r\n                    for (let [key, v] of obj_entries(CONFIG.ARd20.Attributes)) {\r\n                        if (req.name === game.i18n.localize(CONFIG.ARd20.Attributes[key]))\r\n                            req.value = key;\r\n                    }\r\n                    break;\r\n                case \"skill\":\r\n                    for (let [key, v] of obj_entries(CONFIG.ARd20.Skills)) {\r\n                        if (req.name === game.i18n.localize(CONFIG.ARd20.Skills[key]))\r\n                            req.value = key;\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        for (let i = data.req.logic.length; data.level.max > data.req.logic.length; i++) {\r\n            if (i === 0) {\r\n                data.req.logic.push(\"1\");\r\n            }\r\n            else {\r\n                data.req.logic.push(data.req.logic[i - 1]);\r\n            }\r\n        }\r\n        for (let i = data.req.logic.length; data.level.max < data.req.logic.length; i--) {\r\n            data.req.logic.splice(data.req.logic.length - 1, 1);\r\n        }\r\n    }\r\n    /**\r\n     * Prepare data for 'race' type of item\r\n     */\r\n    _prepareRaceData(itemData) {\r\n        if (itemData.type !== \"race\")\r\n            return;\r\n    }\r\n    /**\r\n     * Prepare data for \"armor\" type item\r\n     */\r\n    _prepareArmorData(itemData) {\r\n        if (itemData.type !== \"armor\")\r\n            return;\r\n        const data = itemData.data;\r\n        for (let [key, dr] of obj_entries(CONFIG.ARd20.DamageSubTypes)) {\r\n            if (!(key === \"force\" || key === \"radiant\" || key === \"psychic\")) {\r\n                data.res.phys[key] = data.res.phys[key] ?? 0;\r\n            }\r\n            data.res.mag[key] = data.res.mag[key] ?? 0;\r\n        }\r\n        data.mobility.value = data.mobility.value ?? CONFIG.ARd20.HeavyPoints[data.type][data.slot];\r\n        data.mobility.value += data.mobility.bonus;\r\n    }\r\n    /**\r\n    Prepare Data that uses actor's data\r\n    */\r\n    prepareFinalAttributes() {\r\n        const itemData = this.data;\r\n        //@ts-expect-error\r\n        const abil = (itemData.abil = {});\r\n        for (let [k, v] of obj_entries(CONFIG.ARd20.Attributes)) {\r\n            abil[k] = this.isOwned ? getProperty(this.actor.data, `data.attributes.${k}.mod`) : null;\r\n        }\r\n        let prof_bonus = 0;\r\n        if (itemData.type === \"weapon\") {\r\n            const data = itemData.data;\r\n            data.proficiency.level = this.isOwned\r\n                ? this.actor?.data.data.proficiencies.weapon.filter((pr) => pr.name === data.sub_type)[0].value\r\n                : 0;\r\n            data.proficiency.levelName =\r\n                game.i18n.localize(CONFIG.ARd20.Rank[data.proficiency.level]) ?? CONFIG.ARd20.Rank[data.proficiency.level];\r\n            prof_bonus = data.proficiency.level * 4;\r\n        }\r\n        if (itemData.data.hasAttack)\r\n            this._prepareAttack(itemData, prof_bonus, abil);\r\n        if (itemData.data.hasDamage)\r\n            this._prepareDamage(itemData, abil);\r\n    }\r\n    _prepareAttack(itemData, prof_bonus, abil) {\r\n        const data = itemData.data;\r\n        if (!data.hasAttack)\r\n            return;\r\n        //@ts-expect-error\r\n        let mod = itemData.type === \"weapon\" && abil !== undefined ? abil.dex : data.atkMod;\r\n        //@ts-expect-error\r\n        data.attack = {\r\n            formula: \"1d20+\" + prof_bonus + \"+\" + mod,\r\n            parts: [mod, prof_bonus],\r\n        };\r\n    }\r\n    _prepareDamage(itemData, abil) {\r\n        const data = itemData.data;\r\n        if (!data.hasDamage)\r\n            return;\r\n        let mod = itemData.type === \"weapon\" && abil !== undefined ? abil.str : 0;\r\n        const prop = \"damage.parts\";\r\n        let baseDamage = getProperty(data, prop);\r\n        //@ts-expect-error\r\n        data.damage.current = {\r\n            formula: \"\",\r\n            parts: baseDamage,\r\n        };\r\n        baseDamage.forEach((part) => {\r\n            //@ts-expect-error\r\n            data.damage.current.formula += part[0] + `[${part[1]}, ${part[2]}] `;\r\n        });\r\n    }\r\n    /**\r\n     * Prepare a data object which is passed to any Roll formulas which are created related to this Item\r\n     * @private\r\n     */\r\n    //@ts-expect-error\r\n    getRollData() {\r\n        // If present, return the actor's roll data.\r\n        if (!this.actor)\r\n            return null;\r\n        const rollData = this.actor.getRollData();\r\n        const hasDamage = this.data.data.hasDamage;\r\n        const hasAttack = this.data.data.hasAttack;\r\n        //@ts-expect-error\r\n        rollData.item = foundry.utils.deepClone(this.data.data);\r\n        //@ts-expect-error\r\n        rollData.damageDie = hasDamage ? this.data.data.damage.current.parts[0] : null;\r\n        //@ts-expect-error\r\n        rollData.mod = hasAttack\r\n            ? //@ts-expect-error\r\n                this.data.data.attack.parts[0]\r\n            : hasDamage\r\n                ? //@ts-expect-error\r\n                    this.data.data.damage.current.parts[1]\r\n                : null;\r\n        //@ts-expect-error\r\n        rollData.prof = hasAttack ? this.data.data.attack.parts[1] : null;\r\n        return rollData;\r\n    }\r\n    /**\r\n     * Handle clickable rolls.\r\n     * @param {Event} event   The originating click event\r\n     * @private\r\n     */\r\n    //@ts-expect-error\r\n    async roll({ configureDialog = true, rollMode, hasDamage = false, hasAttack = false, createMessage = true }) {\r\n        let item = this;\r\n        const id = item.id;\r\n        const iData = this.data.data; //Item data\r\n        const actor = this.actor;\r\n        const aData = actor?.data.data;\r\n        hasDamage = iData.hasDamage || hasDamage;\r\n        hasAttack = iData.hasAttack || hasAttack;\r\n        // Initialize chat data.\r\n        const speaker = ChatMessage.getSpeaker({ actor: actor });\r\n        const iName = this.name;\r\n        // Otherwise, create a roll and send a chat message from it.\r\n        const targets = Array.from(game.user.targets);\r\n        //@ts-expect-error\r\n        const mRoll = this.data.data.mRoll || false;\r\n        //@ts-expect-error\r\n        return item.displayCard({ rollMode, createMessage, hasAttack, hasDamage, targets, mRoll });\r\n    }\r\n    /* -------------------------------------------- */\r\n    /*  Chat Message Helpers                        */\r\n    /* -------------------------------------------- */\r\n    static chatListeners(html) {\r\n        html.on(\"click\", \".card-buttons button\", this._onChatCardAction.bind(this));\r\n        html.on(\"click\", \".item-name\", this._onChatCardToggleContent.bind(this));\r\n        html.on(\"click\", \".attack-roll .roll-controls .accept\", this._rollDamage.bind(this));\r\n        html.on(\"hover\", \".attack-roll .flexrow .value\", function (event) {\r\n            event.preventDefault();\r\n            const element = this.closest(\"li.flexrow\");\r\n            element.querySelector(\".attack-roll .hover-roll\")?.classList.toggle(\"shown\", event.type == \"mouseenter\");\r\n        });\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Handle execution of a chat card action via a click event on one of the card buttons\r\n     * @param {Event} event       The originating click event\r\n     * @returns {Promise}         A promise which resolves once the handler workflow is complete\r\n     * @private\r\n     */\r\n    //@ts-expect-error\r\n    static async _onChatCardAction(event) {\r\n        event.preventDefault();\r\n        // Extract card data\r\n        const button = event.currentTarget;\r\n        const card = button.closest(\".chat-card\");\r\n        const messageId = card.closest(\".message\").dataset.messageId;\r\n        const message = game.messages.get(messageId);\r\n        const action = button.dataset.action;\r\n        const targetUuid = button.closest(\".flexrow\").dataset.targetId;\r\n        // Validate permission to proceed with the roll\r\n        const isTargetted = action === \"save\";\r\n        if (!(isTargetted || game.user.isGM || message.isAuthor))\r\n            return;\r\n        // Recover the actor for the chat card\r\n        const actor = await this._getChatCardActor(card);\r\n        if (!actor)\r\n            return;\r\n        // Get the Item from stored flag data or by the item ID on the Actor\r\n        const storedData = message.getFlag(\"ard20\", \"itemData\");\r\n        //@ts-expect-error\r\n        const item = storedData ? new this(storedData, { parent: actor }) : actor.items.get(card.dataset.itemId);\r\n        if (!item) {\r\n            return ui.notifications.error(game.i18n.format(\"ARd20.ActionWarningNoItem\", { item: card.dataset.itemId, name: actor.name }));\r\n        }\r\n        const spellLevel = parseInt(card.dataset.spellLevel) || null;\r\n        // Handle different actions\r\n        switch (action) {\r\n            case \"damage\":\r\n            case \"versatile\":\r\n                let dam = await item.rollDamage({\r\n                    critical: event.altKey,\r\n                    event: event,\r\n                    spellLevel: spellLevel,\r\n                    versatile: action === \"versatile\",\r\n                });\r\n                //const dom = new DOMParser().parseFromString(message.data.content,\"text/html\")\r\n                const html = $(message.data.content);\r\n                dam = await dam.render();\r\n                //dom.querySelector('button').replaceWith(dam)\r\n                if (targetUuid) {\r\n                    html.find(`[data-targetId=\"${targetUuid}\"]`).find(\"button\").replaceWith(dam);\r\n                }\r\n                else {\r\n                    html.find(\".damage-roll\").find(\"button\").replaceWith(dam);\r\n                }\r\n                //console.log(dom)\r\n                await message.update({ content: html[0].outerHTML });\r\n                break;\r\n            case \"formula\":\r\n                await item.rollFormula({ event, spellLevel });\r\n                break;\r\n            case \"save\":\r\n                const targets = this._getChatCardTargets(card);\r\n                for (let token of targets) {\r\n                    //@ts-expect-error\r\n                    const speaker = ChatMessage.getSpeaker({ scene: canvas.scene, token: token });\r\n                    //@ts-expect-error\r\n                    await token.actor.rollAbilitySave(button.dataset.ability, { event, speaker });\r\n                }\r\n                break;\r\n            case \"toolCheck\":\r\n                await item.rollToolCheck({ event });\r\n                break;\r\n            case \"placeTemplate\":\r\n                ///@ts-expect-error\r\n                const template = game.ard20.canvas.AbilityTemplate.fromItem(item);\r\n                if (template)\r\n                    template.drawPreview();\r\n                break;\r\n        }\r\n        // Re-enable the button\r\n        button.disabled = false;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Handle toggling the visibility of chat card content when the name is clicked\r\n     * @param {Event} event   The originating click event\r\n     * @private\r\n     */\r\n    static _onChatCardToggleContent(event) {\r\n        event.preventDefault();\r\n        const header = event.currentTarget;\r\n        const card = header.closest(\".chat-card\");\r\n        const content = card.querySelector(\".card-content\");\r\n        content.style.display = content.style.display === \"none\" ? \"block\" : \"none\";\r\n    }\r\n    async _applyDamage(dam, tData, tHealth, tActor) {\r\n        let value = dam.total;\r\n        console.log(\"урон до резистов: \", value);\r\n        dam.terms.forEach((term) => {\r\n            if (!(term instanceof OperatorTerm)) {\r\n                let damageType = term.options.damageType;\r\n                let res = tData.defences.damage[damageType[0]][damageType[1]];\r\n                if (res.type === \"imm\")\r\n                    console.log(\"Иммунитет\");\r\n                console.log(\"урон уменьшился с \", value);\r\n                value -= res.type === \"imm\" ? term.total : Math.min(res.value, term.total);\r\n                console.log(\"до\", value);\r\n            }\r\n        });\r\n        console.log(value, \"итоговый урон\");\r\n        tHealth -= value;\r\n        console.log(\"хп стало\", tHealth);\r\n        let obj = {};\r\n        obj[\"data.health.value\"] = tHealth;\r\n        if (game.user.isGM) {\r\n            await tActor.update(obj);\r\n        }\r\n        else {\r\n            game.socket.emit(\"system.ard20\", {\r\n                operation: \"updateActorData\",\r\n                actor: tActor,\r\n                update: obj,\r\n                value: value,\r\n            });\r\n        }\r\n    }\r\n    static async _rollDamage(event) {\r\n        event.preventDefault();\r\n        const element = event.currentTarget;\r\n        const card = element.closest(\".chat-card\");\r\n        const message = game.messages.get(card.closest(\".message\").dataset.messageId);\r\n        const targetUuid = element.closest(\"li.flexrow\").dataset.targetId;\r\n        const token = await fromUuid(targetUuid);\r\n        //@ts-expect-error\r\n        const tActor = token?.actor;\r\n        const tData = tActor.data.data;\r\n        let tHealth = tData.health.value;\r\n        console.log(tHealth, \"здоровье цели\");\r\n        // Recover the actor for the chat card\r\n        const actor = await this._getChatCardActor(card);\r\n        if (!actor)\r\n            return;\r\n        // Get the Item from stored flag data or by the item ID on the Actor\r\n        const storedData = message.getFlag(\"ard20\", \"itemData\");\r\n        //@ts-expect-error\r\n        const item = storedData ? new this(storedData, { parent: actor }) : actor.items.get(card.dataset.itemId);\r\n        if (!item) {\r\n            return ui.notifications.error(game.i18n.format(\"ARd20.ActionWarningNoItem\", { item: card.dataset.itemId, name: actor.name }));\r\n        }\r\n        const dam = await item.rollDamage({\r\n            event: event,\r\n            canMult: false,\r\n        });\r\n        const html = $(message.data.content);\r\n        let damHTML = await dam.render();\r\n        console.log(html.find(`[data-target-id=\"${targetUuid}\"]`).find(\".damage-roll\")[0]);\r\n        html.find(`[data-target-id=\"${targetUuid}\"]`).find(\".damage-roll\").append(damHTML);\r\n        html.find(`[data-target-id=\"${targetUuid}\"]`).find(\".accept\").remove();\r\n        console.log(html[0]);\r\n        await message.update({ content: html[0].outerHTML });\r\n        await item._applyDamage(dam, tData, tHealth, tActor);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Get the Actor which is the author of a chat card\r\n     * @param {HTMLElement} card    The chat card being used\r\n     * @return {Actor|null}         The Actor entity or null\r\n     * @private\r\n     */\r\n    static async _getChatCardActor(card) {\r\n        // Case 1 - a synthetic actor from a Token\r\n        if (card.dataset.tokenId) {\r\n            const token = await fromUuid(card.dataset.tokenId);\r\n            if (!token)\r\n                return null;\r\n            //@ts-expect-error\r\n            return token.actor;\r\n        }\r\n        // Case 2 - use Actor ID directory\r\n        const actorId = card.dataset.actorId;\r\n        return game.actors.get(actorId) || null;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Get the Actor which is the author of a chat card\r\n     * @param {HTMLElement} card    The chat card being used\r\n     * @return {Actor[]}            An Array of Actor entities, if any\r\n     * @private\r\n     */\r\n    static _getChatCardTargets(card) {\r\n        let targets = canvas.tokens.controlled.filter((t) => !!t.actor);\r\n        //@ts-expect-error\r\n        if (!targets.length && game.user.character)\r\n            targets = targets.concat(game.user.character.getActiveTokens());\r\n        if (!targets.length)\r\n            ui.notifications.warn(game.i18n.localize(\"ARd20.ActionWarningNoToken\"));\r\n        return targets;\r\n    }\r\n    /*showRollDetail(event){\r\n      event.preventDefault();\r\n      const elem = event.currentTarget;\r\n      const\r\n    }*/\r\n    async displayCard({ \r\n    //@ts-expect-error\r\n    rollMode, createMessage = true, hasAttack = Boolean(), hasDamage = Boolean(), targets = [], mRoll = Boolean(), } = {}) {\r\n        // Render the chat card template\r\n        let atk = {};\r\n        let dc = {};\r\n        let atkHTML = {};\r\n        let dmgHTML = {};\r\n        let result = {};\r\n        let hit = {};\r\n        let dmg = {};\r\n        let dieResultCss = {};\r\n        //@ts-expect-error\r\n        const def = this.data.data.attack?.def ?? \"reflex\";\r\n        const token = this.actor.token;\r\n        if (targets.length !== 0) {\r\n            //@ts-expect-error\r\n            let atkRoll = hasAttack ? await this.rollAttack(mRoll, { canMult: true }) : null;\r\n            let dmgRoll = hasDamage && !hasAttack ? await this.rollDamage({ canMult: true }) : null;\r\n            for (let [key, target] of Object.entries(targets)) {\r\n                if (atkRoll) {\r\n                    mRoll = atkRoll.options.mRoll;\r\n                    //@ts-expect-error\r\n                    dc[key] = target.actor.data.data.defences.stats[def].value;\r\n                    //@ts-expect-error\r\n                    atk[key] = hasAttack ? (Object.keys(atk).length === 0 || !mRoll ? atkRoll : await atkRoll.reroll()) : null;\r\n                    //@ts-expect-error\r\n                    console.log(atk[key]);\r\n                    //@ts-expect-error\r\n                    atkHTML[key] = hasAttack ? await atk[key].render() : null;\r\n                    //@ts-expect-error\r\n                    let d20 = atk[key] ? atk[key].terms[0] : null;\r\n                    //@ts-expect-error\r\n                    atk[key] = atk[key].total;\r\n                    //@ts-expect-error\r\n                    dieResultCss[key] =\r\n                        d20.total >= d20.options.critical ? \"d20crit\" : d20.total <= d20.options.fumble ? \"d20fumble\" : \"d20normal\";\r\n                    //@ts-expect-error\r\n                    result[key] = atk[key] > dc[key] ? \"hit\" : \"miss\";\r\n                    //@ts-expect-error\r\n                    hit[key] = result[key] === \"hit\" ? true : false;\r\n                }\r\n                else {\r\n                    mRoll = dmgRoll.options.mRoll;\r\n                    //@ts-expect-error\r\n                    dmg[key] = hasDamage ? (Object.keys(dmg).length === 0 || !mRoll ? dmgRoll : await dmgRoll.reroll()) : null;\r\n                    //@ts-expect-error\r\n                    dmgHTML[key] = hasDamage ? await dmg[key].render() : null;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            //@ts-expect-error\r\n            atk[0] = hasAttack ? await this.rollAttack(mRoll) : null;\r\n            //@ts-expect-error\r\n            mRoll = atk[0] ? atk[0].options.mRoll : false;\r\n            //@ts-expect-error\r\n            atkHTML[0] = hasAttack ? await atk[0].render() : null;\r\n        }\r\n        //@ts-expect-error\r\n        let templateState = targets.size !== 0 ? (mRoll ? \"multiAttack\" : \"oneAttack\") : \"noTarget\";\r\n        const templateData = {\r\n            //@ts-expect-error\r\n            actor: this.actor.data,\r\n            tokenId: token?.uuid || null,\r\n            item: this.data,\r\n            data: this.getChatData(),\r\n            //@ts-expect-error\r\n            labels: this.labels,\r\n            hasAttack,\r\n            hasDamage,\r\n            atk,\r\n            atkHTML,\r\n            targets,\r\n            //@ts-expect-error\r\n            owner: this.actor.isOwner || game.user.isGM,\r\n            dc,\r\n            result,\r\n            hit,\r\n            dmgHTML,\r\n            dieResultCss,\r\n        };\r\n        const html = await renderTemplate(`systems/ard20/templates/chat/item-card-multiAttack.html`, templateData);\r\n        // Create the ChatMessage data object\r\n        const chatData = {\r\n            user: game.user.data._id,\r\n            type: CONST.CHAT_MESSAGE_TYPES.OTHER,\r\n            content: html,\r\n            //@ts-expect-error\r\n            flavor: this.data.data.chatFlavor || this.name,\r\n            //@ts-expect-error\r\n            speaker: ChatMessage.getSpeaker({ actor: this.actor, token }),\r\n            flags: { \"core.canPopout\": true },\r\n        };\r\n        // If the Item was destroyed in the process of displaying its card - embed the item data in the chat message\r\n        /*\r\n        if (this.data.type === \"consumable\" && !this.actor.items.has(this.id)) {\r\n          chatData.flags[\"ard20.itemData\"] = this.data;\r\n        }*/\r\n        // Apply the roll mode to adjust message visibility\r\n        ChatMessage.applyRollMode(chatData, rollMode || game.settings.get(\"core\", \"rollMode\"));\r\n        // Create the Chat Message or return its data\r\n        return createMessage ? ChatMessage.create(chatData) : chatData;\r\n    }\r\n    /**\r\n     * Prepare an object of chat data used to display a card for the Item in the chat log.\r\n     * @param {object} htmlOptions    Options used by the TextEditor.enrichHTML function.\r\n     * @returns {object}              An object of chat data to render.\r\n     */\r\n    getChatData(htmlOptions = {}) {\r\n        const data = foundry.utils.deepClone(this.data.data);\r\n        // Rich text description\r\n        //data.description.value = TextEditor.enrichHTML(data.description.value, htmlOptions);\r\n        // Item type specific properties\r\n        const props = [];\r\n        // Equipment properties\r\n        /*if (data.hasOwnProperty(\"equipped\") && ![\"loot\", \"tool\"].includes(this.data.type)) {\r\n          /*if (data.attunement === CONFIG.ARd20.attunementTypes.REQUIRED) {\r\n            props.push(game.i18n.localize(CONFIG.ARd20.attunements[CONFIG.ARd20.attunementTypes.REQUIRED]));\r\n          }*/\r\n        /*props.push(game.i18n.localize(data.equipped ? \"ARd20.Equipped\" : \"ARd20.Unequipped\"));\r\n        }\r\n    \r\n        // Ability activation properties\r\n        if (data.hasOwnProperty(\"activation\")) {\r\n          props.push(labels.activation + (data.activation?.condition ? ` (${data.activation.condition})` : \"\"), labels.target, labels.range, labels.duration);\r\n        }\r\n    \r\n        // Filter properties and return\r\n        data.properties = props.filter((p) => !!p);\r\n        */\r\n        return data;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Prepare chat card data for weapon type items.\r\n     * @param {object} data     Copy of item data being use to display the chat message.\r\n     * @param {object} labels   Specially prepared item labels.\r\n     * @param {string[]} props  Existing list of properties to be displayed. *Will be mutated.*\r\n     * @private\r\n     */\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Place an attack roll using an item (weapon, feat, spell, or equipment)\r\n     * Rely upon the d20Roll logic for the core implementation\r\n     *\r\n     * @param {object} options        Roll options which are configured and provided to the d20Roll function\r\n     * @returns {Promise<Roll|null>}   A Promise which resolves to the created Roll instance\r\n     */\r\n    async rollAttack(mRoll = Boolean(), canMult = Boolean(), options = {}) {\r\n        console.log(canMult);\r\n        const itemData = this.data.data;\r\n        //@ts-expect-error\r\n        const flags = this.actor.data.flags.ard20 || {};\r\n        let title = `${this.name} - ${game.i18n.localize(\"ARd20.AttackRoll\")}`;\r\n        const { parts, rollData } = this.getAttackToHit();\r\n        const targets = game.user.targets;\r\n        //@ts-expect-error\r\n        if (options.parts?.length > 0) {\r\n            //@ts-expect-error\r\n            parts.push(...options.parts);\r\n        }\r\n        let rollConfig = {\r\n            parts: parts,\r\n            actor: this.actor,\r\n            data: rollData,\r\n            title: title,\r\n            flavor: title,\r\n            dialogOptions: {\r\n                width: 400,\r\n            },\r\n            chatMessage: true,\r\n            options: {\r\n                create: false,\r\n            },\r\n            targetValue: targets,\r\n            canMult: canMult,\r\n            mRoll: mRoll,\r\n        };\r\n        //@ts-expect-error\r\n        rollConfig = mergeObject(rollConfig, options);\r\n        //@ts-expect-error\r\n        const roll = await d20Roll(rollConfig);\r\n        if (roll === false)\r\n            return null;\r\n        return roll;\r\n    }\r\n    rollDamage({ critical = false, event = null, spellLevel = null, versatile = false, options = {}, mRoll = Boolean(), canMult = Boolean(), } = {}) {\r\n        console.log(canMult);\r\n        const iData = this.data.data;\r\n        const aData = this.actor.data.data;\r\n        //@ts-expect-error\r\n        const parts = iData.damage.current.parts.map((d) => d[0]);\r\n        //@ts-expect-error\r\n        const damType = iData.damage.current.parts.map((d) => d[1].map((c, ind) => {\r\n            //@ts-expect-error\r\n            let a = game.i18n.localize(CONFIG.ARd20.DamageTypes[c[0]]);\r\n            //@ts-expect-error\r\n            let b = game.i18n.localize(CONFIG.ARd20.DamageSubTypes[c[1]]);\r\n            let obj = { key: ind, label: `${a} ${b}` };\r\n            return obj;\r\n        }));\r\n        //@ts-expect-error\r\n        options.damageType = iData.damage.current.parts.map((d) => d[1]);\r\n        const hasAttack = false;\r\n        const hasDamage = true;\r\n        //@ts-expect-error\r\n        const rollData = this.getRollData(hasAttack, hasDamage);\r\n        const rollConfig = {\r\n            actor: this.actor,\r\n            //@ts-expect-error\r\n            critical: critical ?? event?.altkey ?? false,\r\n            data: rollData,\r\n            event: event,\r\n            parts: parts,\r\n            canMult: canMult,\r\n            damType: damType,\r\n            mRoll: mRoll,\r\n        };\r\n        //@ts-expect-error\r\n        return damageRoll(mergeObject(rollConfig, options));\r\n    }\r\n    /**\r\n     * Update a label to the Item detailing its total to hit bonus.\r\n     * Sources:\r\n     * - item entity's innate attack bonus\r\n     * - item's actor's proficiency bonus if applicable\r\n     * - item's actor's global bonuses to the given item type\r\n     * - item's ammunition if applicable\r\n     *\r\n     * @returns {{rollData: object, parts: string[]}|null}  Data used in the item's Attack roll.\r\n     */\r\n    getAttackToHit() {\r\n        const itemData = this.data.data;\r\n        const hasAttack = true;\r\n        const hasDamage = false;\r\n        //if (!this.hasAttack || !itemData) return;\r\n        //@ts-expect-error\r\n        const rollData = this.getRollData(hasAttack, hasDamage);\r\n        console.log(\"ROLL DATA\", rollData);\r\n        // Define Roll bonuses\r\n        const parts = [];\r\n        // Include the item's innate attack bonus as the initial value and label\r\n        //@ts-expect-error\r\n        if (itemData.attackBonus) {\r\n            //@ts-expect-error\r\n            parts.push(itemData.attackBonus);\r\n            //@ts-expect-error\r\n            this.labels.toHit = itemData.attackBonus;\r\n        }\r\n        // Take no further action for un-owned items\r\n        if (!this.isOwned)\r\n            return { rollData, parts };\r\n        // Ability score modifier\r\n        parts.push(\"@prof\", \"@mod\");\r\n        /* Add proficiency bonus if an explicit proficiency flag is present or for non-item features\r\n        if ( ![\"weapon\", \"consumable\"].includes(this.data.type)) {\r\n          parts.push(\"@prof\");\r\n          if ( this.data.data.prof?.hasProficiency ) {\r\n            rollData.prof = this.data.data.prof.term;\r\n          }\r\n        }\r\n        */\r\n        /* Actor-level global bonus to attack rolls\r\n        const actorBonus = this.actor.data.data.bonuses?.[itemData.actionType] || {};\r\n        if (actorBonus.attack) parts.push(actorBonus.attack);\r\n        */\r\n        /* One-time bonus provided by consumed ammunition\r\n        if (itemData.consume?.type === \"ammo\" && this.actor.items) {\r\n          const ammoItemData = this.actor.items.get(itemData.consume.target)?.data;\r\n    \r\n          if (ammoItemData) {\r\n            const ammoItemQuantity = ammoItemData.data.quantity;\r\n            const ammoCanBeConsumed = ammoItemQuantity && ammoItemQuantity - (itemData.consume.amount ?? 0) >= 0;\r\n            const ammoItemAttackBonus = ammoItemData.data.attackBonus;\r\n            const ammoIsTypeConsumable = ammoItemData.type === \"consumable\" && ammoItemData.data.consumableType === \"ammo\";\r\n            if (ammoCanBeConsumed && ammoItemAttackBonus && ammoIsTypeConsumable) {\r\n              parts.push(\"@ammo\");\r\n              rollData.ammo = ammoItemAttackBonus;\r\n            }\r\n          }\r\n        }\r\n        */\r\n        // Condense the resulting attack bonus formula into a simplified label\r\n        //@ts-expect-error\r\n        const roll = new Roll(parts.join(\"+\"), rollData);\r\n        //@ts-expect-error\r\n        const formula = simplifyRollFormula(roll.formula);\r\n        //@ts-expect-error\r\n        this.labels.toHit = !/^[+-]/.test(formula) ? `+ ${formula}` : formula;\r\n        // Update labels and return the prepared roll data\r\n        return { rollData, parts };\r\n    }\r\n}\r\n","/**\r\n * Manage Active Effect instances through the Actor Sheet via effect control buttons.\r\n * @param {MouseEvent} event      The left-click event on the effect control\r\n * @param {Actor|Item} owner      The owning entity which manages this effect\r\n */\r\nexport function onManageActiveEffect(event, owner) {\r\n    event.preventDefault();\r\n    const a = event.currentTarget;\r\n    //@ts-expect-error\r\n    const li = a.closest(\"li\");\r\n    const effect = li.dataset.effectId ? owner.effects.get(li.dataset.effectId) : null;\r\n    //@ts-expect-error\r\n    switch (a.dataset.action) {\r\n        case \"create\":\r\n            return owner.createEmbeddedDocuments(\"ActiveEffect\", [{\r\n                    label: \"New Effect\",\r\n                    icon: \"icons/svg/aura.svg\",\r\n                    origin: owner.uuid,\r\n                    \"duration.rounds\": li.dataset.effectType === \"temporary\" ? 1 : undefined,\r\n                    disabled: li.dataset.effectType === \"inactive\"\r\n                }]);\r\n        case \"edit\":\r\n            return effect.sheet.render(true);\r\n        case \"delete\":\r\n            return effect.delete();\r\n        case \"toggle\":\r\n            return effect.update({ disabled: !effect.data.disabled });\r\n    }\r\n}\r\n/**\r\n * Prepare the data structure for Active Effects which are currently applied to an Actor or Item.\r\n * @param {ActiveEffect[]} effects    The array of Active Effect instances to prepare sheet data for\r\n * @return {object}                   Data for rendering\r\n */\r\nexport function prepareActiveEffectCategories(effects) {\r\n    // Define effect header categories\r\n    const categories = {\r\n        temporary: {\r\n            type: \"temporary\",\r\n            label: \"Temporary Effects\",\r\n            effects: []\r\n        },\r\n        passive: {\r\n            type: \"passive\",\r\n            label: \"Passive Effects\",\r\n            effects: []\r\n        },\r\n        inactive: {\r\n            type: \"inactive\",\r\n            label: \"Inactive Effects\",\r\n            effects: []\r\n        }\r\n    };\r\n    // Iterate over active effects, classifying them into categories\r\n    for (let e of effects) {\r\n        //@ts-expect-error\r\n        e._getSourceName(); // Trigger a lookup for the source name\r\n        //@ts-expect-error\r\n        if (e.data.disabled)\r\n            categories.inactive.effects.push(e);\r\n        //@ts-expect-error\r\n        else if (e.isTemporary)\r\n            categories.temporary.effects.push(e);\r\n        //@ts-expect-error\r\n        else\r\n            categories.passive.effects.push(e);\r\n    }\r\n    return categories;\r\n}\r\n","import { obj_entries } from \"../ard20.js\";\r\nimport { ARd20Item } from \"../documents/item.js\";\r\n//@ts-expect-error\r\nexport class CharacterAdvancement extends FormApplication {\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            classes: [\"ard20\"],\r\n            title: \"Character Advancement\",\r\n            template: \"systems/ard20/templates/actor/parts/actor-adv.html\",\r\n            id: \"actor-adv\",\r\n            width: 1000,\r\n            height: \"auto\",\r\n            tabs: [\r\n                {\r\n                    navSelector: \".sheet-tabs\",\r\n                    contentSelector: \".sheet-body\",\r\n                    initial: \"stats\",\r\n                },\r\n            ],\r\n            closeOnSubmit: false,\r\n        });\r\n    }\r\n    async InitilizeData() {\r\n        if (this.form)\r\n            return;\r\n        const pack = await this.getPacks();\r\n        const folder = this.getFolders();\r\n        const rList = await this.getRacesList(pack, folder);\r\n        const fList = await this.getFeaturesList(pack, folder);\r\n        const actorData = this.object.data.data;\r\n        const startingData = {\r\n            isReady: duplicate(actorData.isReady),\r\n            attributes: duplicate(actorData.attributes),\r\n            skills: duplicate(actorData.skills),\r\n            xp: duplicate(actorData.advancement.xp),\r\n            profs: duplicate(actorData.proficiencies),\r\n            health: duplicate(actorData.health),\r\n            races: { list: rList, chosen: \"\" },\r\n            count: {\r\n                // counter for skills and feats\r\n                skills: {\r\n                    // count skills by their level\r\n                    0: 0,\r\n                    1: 0,\r\n                    2: 0,\r\n                    3: 0,\r\n                    4: 0,\r\n                },\r\n                feats: {\r\n                    // count feats by their source\r\n                    mar: 0,\r\n                    mag: 0,\r\n                    div: 0,\r\n                    pri: 0,\r\n                    psy: 0,\r\n                },\r\n            },\r\n            content: {\r\n                // descriptions for skills and feats\r\n                skills: {},\r\n                feats: {},\r\n            },\r\n            feats: {\r\n                learned: fList.learnedFeatures,\r\n                awail: fList.temp_feat_list, // array of feats that are available to learn\r\n            },\r\n            allow: {\r\n                attribute: actorData.isReady,\r\n                race: actorData.isReady,\r\n                final: actorData.isReady,\r\n            },\r\n            hover: {\r\n                attribute: \"\",\r\n                skill: \"\",\r\n                race: \"\",\r\n                feat: \"\",\r\n            },\r\n        };\r\n        startingData.xp.get = startingData.isReady || startingData.xp.used !== 0 ? startingData.xp.get : 10000;\r\n        let awailFeats = startingData.feats.awail;\r\n        let name_array = [];\r\n        for (let i of startingData.feats.learned) {\r\n            name_array.push(i.name);\r\n        }\r\n        awailFeats.forEach((v, k) => {\r\n            if (name_array.includes(v.name)) {\r\n                console.log(\"this item is already learned\", awailFeats[k]);\r\n                awailFeats[k] = foundry.utils.deepClone(startingData.feats.learned.filter((item) => item.name === v.name)[0]);\r\n            }\r\n        });\r\n        awailFeats = awailFeats.filter((item) => {\r\n            if (item.type === \"feature\")\r\n                return !name_array.includes(item.name) || item.data.level.current !== item.data.level.max;\r\n        });\r\n        startingData.feats.awail = awailFeats;\r\n        // count skills by rank\r\n        for (let [k, v] of obj_entries(CONFIG.ARd20.Skills)) {\r\n            if (startingData.skills[k].level === 0) {\r\n                startingData.count.skills[0] += 1;\r\n            }\r\n            else if (startingData.skills[k].level === 1) {\r\n                startingData.count.skills[1] += 1;\r\n            }\r\n            else if (startingData.skills[k].level === 2) {\r\n                startingData.count.skills[2] += 1;\r\n            }\r\n        }\r\n        // count feats by source\r\n        for (let v of startingData.feats.learned) {\r\n            console.log(v);\r\n            if (v.type === \"feature\")\r\n                v.data.source.value.forEach((val) => {\r\n                    console.log(val);\r\n                    startingData.count.feats[val] += 1;\r\n                });\r\n        }\r\n        startingData.hover.feat = TextEditor.enrichHTML(startingData.feats.awail[0]?.data.description);\r\n        return startingData;\r\n    }\r\n    async getPacks() {\r\n        let pack_list = []; // array of feats from Compendium\r\n        let pack_name = [];\r\n        for (const key of game.settings.get(\"ard20\", \"feat\").packs) {\r\n            if (game.packs.filter((pack) => pack.metadata.label === key).length !== 0) {\r\n                let feat_list = [];\r\n                feat_list.push(Array.from(game.packs.filter((pack) => pack.metadata.label === key && pack.documentName === \"Item\")[0].index));\r\n                feat_list = feat_list.flat();\r\n                for (const feat of feat_list) {\r\n                    if (feat instanceof ARd20Item) {\r\n                        const new_key = game.packs.filter((pack) => pack.metadata.label === key)[0].metadata.package + \".\" + key;\r\n                        const doc = await game.packs.get(new_key).getDocument(feat.id);\r\n                        if (doc instanceof ARd20Item) {\r\n                            const item = doc.toObject();\r\n                            item.data = foundry.utils.deepClone(doc.data.data);\r\n                            pack_list.push(item);\r\n                            pack_name.push(item.name);\r\n                        }\r\n                    }\r\n                }\r\n                pack_list = pack_list.flat();\r\n            }\r\n        }\r\n        return {\r\n            pack_list,\r\n            pack_name,\r\n        };\r\n    }\r\n    getFolders() {\r\n        let folder_list = []; // array of feats from game folders\r\n        let folder_name = [];\r\n        for (let key of game.settings.get(\"ard20\", \"feat\").folders) {\r\n            if (game.folders.filter((folder) => folder.data.name === key).length !== 0) {\r\n                let feat_list = [];\r\n                feat_list.push(game.folders.filter((folder) => folder.data.name === key && folder.data.type === \"Item\")[0].contents);\r\n                feat_list = feat_list.flat();\r\n                for (let feat of feat_list) {\r\n                    if (feat instanceof ARd20Item) {\r\n                        console.log(\"item added from folder \", feat);\r\n                        const item = feat.toObject();\r\n                        item.data = foundry.utils.deepClone(feat.data.data);\r\n                        folder_list.push(item);\r\n                        folder_name.push(item.name);\r\n                    }\r\n                }\r\n                folder_list = folder_list.flat();\r\n            }\r\n        }\r\n        return {\r\n            folder_list,\r\n            folder_name,\r\n        };\r\n    }\r\n    async getRacesList(pack, folder) {\r\n        const pack_list = pack.pack_list;\r\n        const pack_name = pack.pack_name;\r\n        const folder_list = folder.folder_list;\r\n        let race_pack_list = [];\r\n        let race_folder_list = [];\r\n        pack_list.forEach((item) => {\r\n            if (item.type === \"race\") {\r\n                let raceItem = { ...item, chosen: false };\r\n                race_pack_list.push(raceItem);\r\n            }\r\n        });\r\n        folder_list.forEach((item) => {\r\n            if (item.type === \"race\") {\r\n                let raceItem = { ...item, chosen: false };\r\n                race_folder_list.push(raceItem);\r\n            }\r\n        });\r\n        return race_pack_list.concat(race_folder_list.filter((item) => !pack_name.includes(item.name)));\r\n    }\r\n    async getFeaturesList(pack, folder) {\r\n        const pack_list = pack.pack_list;\r\n        const pack_name = pack.pack_name;\r\n        const folder_list = folder.folder_list;\r\n        let feat_pack_list = [];\r\n        pack_list.forEach((item) => {\r\n            if (item.type === \"feature\") {\r\n                let FeatureItem = { ...item, currentXP: 0, isEq: false, isXP: false };\r\n                feat_pack_list.push(FeatureItem);\r\n            }\r\n        });\r\n        let feat_folder_list = [];\r\n        folder_list.forEach((item) => {\r\n            if (item.type === \"feature\") {\r\n                let FeatureItem = { ...item, currentXP: 0, isEq: false, isXP: false };\r\n                feat_folder_list.push(FeatureItem);\r\n            }\r\n        });\r\n        let temp_feat_list = feat_pack_list.concat(feat_folder_list.filter((item) => !pack_name.includes(item.name)));\r\n        let learnedFeatures = [];\r\n        this.object.itemTypes.feature.forEach((item) => {\r\n            if (item.data.type === \"feature\") {\r\n                let FeatureItem = { ...item.data, currentXP: 0, isEq: false };\r\n                learnedFeatures.push(FeatureItem);\r\n            }\r\n        });\r\n        return { temp_feat_list, learnedFeatures };\r\n    }\r\n    async getData() {\r\n        this.options.data = !this.form ? (await this.InitilizeData()) : this.options.data;\r\n        const templateData = this.options.data;\r\n        const count = templateData.count;\r\n        const attributes = templateData.attributes;\r\n        const xp = templateData.xp;\r\n        const raceList = templateData.races.list;\r\n        const raceChosen = templateData.races.chosen;\r\n        const isReady = templateData.isReady;\r\n        const skills = templateData.skills;\r\n        const featsAwail = templateData.feats.awail;\r\n        const featsLearned = templateData.feats.learned;\r\n        const health = templateData.health;\r\n        count.feats.all = 0;\r\n        count.feats.all = Object.values(count.feats).reduce(function (a, b) {\r\n            return a + b;\r\n        }, 0);\r\n        /*\r\n         * Calculate attributes' modifiers and xp cost\r\n         */\r\n        for (let [k, v] of obj_entries(CONFIG.ARd20.Attributes)) {\r\n            const race_abil = raceList.filter((race) => race.chosen === true)?.[0]?.data.bonus.attributes[k].value ?? 0;\r\n            attributes[k].mod = Math.floor((attributes[k].value - 10) / 2);\r\n            attributes[k].xp = CONFIG.ARd20.AbilXP[attributes[k].value - 5];\r\n            attributes[k].isEq = attributes[k].value === this.object.data.data.attributes[k].value;\r\n            attributes[k].isXP = xp.get < attributes[k].xp;\r\n            attributes[k].total = isReady ? attributes[k].value : attributes[k].value + race_abil;\r\n            attributes[k].mod = Math.floor((attributes[k].total - 10) / 2);\r\n        }\r\n        /*\r\n         * Calculate skills' xp cost\r\n         */\r\n        for (let [k, v] of obj_entries(CONFIG.ARd20.Skills)) {\r\n            templateData.skills[k].rankName =\r\n                game.i18n.localize(CONFIG.ARd20.Rank[templateData.skills[k].level]) ??\r\n                    CONFIG.ARd20.Rank[templateData.skills[k].level];\r\n            templateData.skills[k].xp =\r\n                templateData.skills[k].level < 2\r\n                    ? CONFIG.ARd20.SkillXP[templateData.skills[k].level][templateData.count.skills[templateData.skills[k].level + 1]]\r\n                    : false;\r\n            templateData.skills[k].isEq = templateData.skills[k].level === this.object.data.data.skills[k].level;\r\n            templateData.skills[k].isXP =\r\n                templateData.xp.get < templateData.skills[k].xp || templateData.skills[k].level > 1;\r\n        }\r\n        for (let v of templateData.profs.weapon) {\r\n            //@ts-expect-error\r\n            v.value_hover = game.i18n.localize(CONFIG.ARd20.Rank[v.value]) ?? CONFIG.ARd20.Rank[v.value];\r\n        }\r\n        /*\r\n         * Calculate features cost and their availattribute\r\n         */\r\n        featsAwail.forEach((object) => {\r\n            if (object.type === \"feature\") {\r\n                let pass = [];\r\n                object.pass = [];\r\n                let allCount = templateData.count.feats.all;\r\n                let featCount = 0;\r\n                object.data.source.value.forEach((val) => (featCount += templateData.count.feats[val]));\r\n                for (let i = object.data.level.initial; i < object.data.level.max; i++) {\r\n                    object.data.xp.AdvancedCost[i] = object.data.xp.basicCost[i]\r\n                        ? Math.ceil((object.data.xp.basicCost[i] * (1 + 0.01 * (allCount - featCount))) / 5) * 5\r\n                        : 0;\r\n                }\r\n                object.currentXP = object.data.xp.AdvancedCost[object.data.level.initial];\r\n                object.isEq = object.data.level.initial === object.data.level.current || object.data.level.initial === 0;\r\n                object.isXP =\r\n                    object.data.level.initial === object.data.level.max ||\r\n                        object.data.xp.AdvancedCost[object.data.level.initial] > templateData.xp.get;\r\n                object.data.req.values.forEach((r) => {\r\n                    switch (r.type) {\r\n                        case \"attribute\": //check if character's attribute is equal or higher than value entered in feature requirements\r\n                            //@ts-expect-error\r\n                            r.pass.forEach((_item, index) => (r.pass[index] = r.input[index] <= attributes[r.value].total));\r\n                            break;\r\n                        case \"skill\": //check if character's skill rank is equal or higher than value entered in feature requirements\r\n                            //@ts-expect-error\r\n                            r.pass.forEach((_item, index) => (r.pass[index] = r.input[index] <= skills[r.value].level));\r\n                            break;\r\n                        case \"feat\": //check if character has features (and their level is equal or higher) that listed in feature requirements\r\n                            if (featsAwail.filter((item) => item.name === r.name)?.[0] !== undefined) {\r\n                                const featLevel = featsAwail.filter((item) => item.name === r.name)[0].data.level.initial;\r\n                                r.pass.forEach((_item, index) => (r.pass[index] = r.input[index] <= featLevel));\r\n                            }\r\n                            else if (featsLearned.filter((item) => item.name === r.name)?.[0] !== undefined) {\r\n                                const featLevel = featsLearned.filter((item) => item.name === r.name)[0].data.level.initial;\r\n                                r.pass.forEach((_item, index) => (r.pass[index] = r.input[index] <= featLevel));\r\n                            }\r\n                            break;\r\n                    }\r\n                    pass.push(r.pass);\r\n                });\r\n                object.pass = [];\r\n                /*\r\n                 * Check the custom logic in feature requirements. For example \"Strength 15 OR Arcana Basic\"\r\n                 */\r\n                for (let i = 0; i <= object.data.level.initial; i++) {\r\n                    if (i === object.data.level.max || pass.length === 0)\r\n                        break;\r\n                    let exp = object.data.req.logic[i];\r\n                    let lev_array = exp.match(/\\d*/g).filter((item) => item !== \"\");\r\n                    console.log(lev_array);\r\n                    let f = {};\r\n                    lev_array.forEach((item) => {\r\n                        exp = exp.replace(item, `c${item}`);\r\n                        f[\"c\" + item] = pass[parseInt(item) - 1][i];\r\n                    });\r\n                    //@ts-expect-error\r\n                    let filter = filtrex.compileExpression(exp);\r\n                    object.pass[i] = Boolean(filter(f));\r\n                }\r\n                object.isXP = object.pass[object.data.level.initial] || object.pass.length === 0 ? object.isXP : true;\r\n            }\r\n        });\r\n        /*\r\n         * Calculate starting HP based on character's CON and race\r\n         */\r\n        raceList.forEach((race) => {\r\n            race.chosen = raceChosen === race._id ? true : false;\r\n        });\r\n        let raceHP = 0;\r\n        raceList.forEach((race) => {\r\n            if (race._id === raceChosen) {\r\n                raceHP = race.data.health;\r\n            }\r\n        });\r\n        health.max = attributes.con.value + raceHP;\r\n        // At character creation, check all conditions\r\n        if (!this.object.data.data.isReady) {\r\n            let abil_sum = 0;\r\n            for (let [key, abil] of obj_entries(templateData.attributes)) {\r\n                abil_sum += abil.value;\r\n            }\r\n            templateData.allow.attribute = abil_sum >= 60 && abil_sum <= 80 ? true : false;\r\n            templateData.allow.race = Boolean(templateData.races.chosen) ? true : false;\r\n            let allow_list = [];\r\n            for (let [key, item] of obj_entries(templateData.allow)) {\r\n                if (key === \"final\") {\r\n                    continue;\r\n                }\r\n                allow_list.push(item);\r\n            }\r\n            templateData.allow.final = !allow_list.includes(false) || templateData.isReady ? true : false;\r\n        }\r\n        /*\r\n         * Final Template Data\r\n         */\r\n        console.log(this.form);\r\n        console.log(templateData);\r\n        return templateData;\r\n    }\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n        html.find(\".change\").on(\"click\", this._onChange.bind(this));\r\n        html.find(\"td:not(.description)\").on(\"mouseover\", this._onHover.bind(this));\r\n    }\r\n    //@ts-expect-error\r\n    _onChange(event) {\r\n        const button = event.currentTarget;\r\n        const data = this.options.data;\r\n        switch (button.dataset.type) {\r\n            case \"attribute\":\r\n                switch (button.dataset.action) {\r\n                    case \"plus\":\r\n                        //@ts-expect-error\r\n                        data.attributes[button.dataset.key].value += 1;\r\n                        //@ts-expect-error\r\n                        data.xp.get -= data.attributes[button.dataset.key].xp;\r\n                        //@ts-expect-error\r\n                        data.xp.used += data.attributes[button.dataset.key].xp;\r\n                        break;\r\n                    case \"minus\":\r\n                        //@ts-expect-error\r\n                        data.attributes[button.dataset.key].value -= 1;\r\n                        data.xp.get +=\r\n                            //@ts-expect-error\r\n                            CONFIG.ARd20.AbilXP[data.attributes[button.dataset.key].value - 5] ??\r\n                                //@ts-expect-error\r\n                                CONFIG.ARd20.AbilXP[data.attributes[button.dataset.key].value - 5];\r\n                        data.xp.used -=\r\n                            //@ts-expect-error\r\n                            CONFIG.ARd20.AbilXP[data.attributes[button.dataset.key].value - 5] ??\r\n                                //@ts-expect-error\r\n                                CONFIG.ARd20.AbilXP[data.attributes[button.dataset.key].value - 5];\r\n                        break;\r\n                }\r\n                break;\r\n            case \"skill\":\r\n                switch (button.dataset.action) {\r\n                    case \"plus\":\r\n                        //@ts-expect-error\r\n                        data.skills[button.dataset.key].level += 1;\r\n                        //@ts-expect-error\r\n                        data.xp.get -= data.skills[button.dataset.key].xp;\r\n                        //@ts-expect-error\r\n                        data.xp.used += data.skills[button.dataset.key].xp;\r\n                        //@ts-expect-error\r\n                        data.count.skills[data.skills[button.dataset.key].level] += 1;\r\n                        break;\r\n                    case \"minus\":\r\n                        //@ts-expect-error\r\n                        data.skills[button.dataset.key].level -= 1;\r\n                        //@ts-expect-error\r\n                        data.count.skills[data.skills[button.dataset.key].level + 1] -= 1;\r\n                        data.xp.get +=\r\n                            //@ts-expect-error\r\n                            CONFIG.ARd20.SkillXP[data.skills[button.dataset.key].level][\r\n                            //@ts-expect-error\r\n                            data.count.skills[data.skills[button.dataset.key].level + 1]];\r\n                        data.xp.used -=\r\n                            //@ts-expect-error\r\n                            CONFIG.ARd20.SkillXP[data.skills[button.dataset.key].level][\r\n                            //@ts-expect-error\r\n                            data.count.skills[data.skills[button.dataset.key].level + 1]];\r\n                        break;\r\n                }\r\n                break;\r\n            case \"prof\":\r\n                switch (button.dataset.action) {\r\n                    case \"plus\":\r\n                        data.profs.weapon[button.dataset.key].value += 1;\r\n                        data.count.feats.mar += 1;\r\n                        break;\r\n                    case \"minus\":\r\n                        data.profs.weapon[button.dataset.key].value -= 1;\r\n                        data.count.feats.mar -= 1;\r\n                        break;\r\n                }\r\n                break;\r\n            case \"feat\":\r\n                switch (button.dataset.action) {\r\n                    case \"plus\":\r\n                        data.feats.awail[button.dataset.key].data.source.value.forEach((val) => (data.count.feats[val] += data.feats.awail[button.dataset.key].data.level.initial === 0 ? 1 : 0));\r\n                        data.xp.get -=\r\n                            data.feats.awail[button.dataset.key].data.xp.AdvancedCost[data.feats.awail[button.dataset.key].data.level.initial];\r\n                        data.xp.used +=\r\n                            data.feats.awail[button.dataset.key].data.xp.AdvancedCost[data.feats.awail[button.dataset.key].data.level.initial];\r\n                        data.feats.awail[button.dataset.key].data.level.initial += 1;\r\n                        break;\r\n                    case \"minus\":\r\n                        data.feats.awail[button.dataset.key].data.level.initial -= 1;\r\n                        data.feats.awail[button.dataset.key].data.source.value.forEach((val) => (data.count.feats[val] -= data.feats.awail[button.dataset.key].data.level.initial === 0 ? 1 : 0));\r\n                        data.xp.get +=\r\n                            data.feats.awail[button.dataset.key].data.xp.AdvancedCost[data.feats.awail[button.dataset.key].data.level.initial];\r\n                        data.xp.used -=\r\n                            data.feats.awail[button.dataset.key].data.xp.AdvancedCost[data.feats.awail[button.dataset.key].data.level.initial];\r\n                        break;\r\n                }\r\n                break;\r\n        }\r\n        this.render();\r\n    }\r\n    //@ts-expect-error\r\n    _onChangeInput(event) {\r\n        super._onChangeInput(event);\r\n        const data = this.options.data;\r\n        const k = parseInt(event.currentTarget.dataset.key);\r\n        data.races.list.forEach((race, key) => {\r\n            data.races.list[key].chosen = key === k ? true : false;\r\n            data.races.chosen = data.races.list[key].chosen ? race._id : data.races.chosen;\r\n        });\r\n        this.render();\r\n    }\r\n    //@ts-expect-error\r\n    _onHover(event) {\r\n        event.preventDefault();\r\n        const data = this.options.data;\r\n        const element = event.currentTarget;\r\n        const table = element.closest(\"div.tab\");\r\n        const tr = element.closest(\"tr\");\r\n        const trDOM = tr.querySelectorAll(\"td:not(.description)\");\r\n        const tdDesc = table.querySelector(\"td.description\");\r\n        const bColor = window.getComputedStyle(element).getPropertyValue(\"background-color\");\r\n        tdDesc.style[\"background-color\"] = bColor;\r\n        //@ts-expect-error\r\n        trDOM?.forEach((td) => {\r\n            td.classList.toggle(\"chosen\", event.type == \"mouseenter\");\r\n            if (td.nextElementSibling === null || td.nextElementSibling.classList[0] === \"description\") {\r\n                td.classList.toggle(\"last\", event.type == \"mouseenter\");\r\n            }\r\n        });\r\n        tr.nextElementSibling\r\n            ?.querySelectorAll(\"td:not(.description)\")\r\n            //@ts-expect-error\r\n            .forEach((td) => td.classList.toggle(\"under-chosen\", event.type == \"mouseenter\"));\r\n        tr.previousElementSibling\r\n            ?.querySelectorAll(\"th:not(.description)\")\r\n            //@ts-expect-error\r\n            .forEach((th) => th.classList.toggle(\"over-chosen\", event.type == \"mouseenter\"));\r\n        tr.previousElementSibling\r\n            ?.querySelectorAll(\"td:not(.description)\")\r\n            //@ts-expect-error\r\n            .forEach((td) => td.classList.toggle(\"over-chosen\", event.type == \"mouseenter\"));\r\n        const type = table.dataset.tab;\r\n        if (type !== \"feats\")\r\n            return;\r\n        const key = tr.dataset.key;\r\n        const hover_desc = TextEditor.enrichHTML(data.feats.awail[key].data.description);\r\n        if (hover_desc === data.hover.feat)\r\n            return;\r\n        data.hover.feat = hover_desc;\r\n        this.render();\r\n    }\r\n    async _updateObject(_event, formData) {\r\n        let updateData = expandObject(formData);\r\n        const actor = this.object;\r\n        const data = this.options.data;\r\n        this.render();\r\n        const obj = {};\r\n        for (let [key, abil] of obj_entries(data.attributes)) {\r\n            obj[`data.attributes.${key}.value`] = data.attributes[key].total;\r\n        }\r\n        obj[\"data.health.max\"] = data.health.max;\r\n        if (data.isReady) {\r\n            obj[\"data.advancement.xp\"] = updateData.xp;\r\n        }\r\n        obj[\"data.skills\"] = updateData.skills;\r\n        obj[\"data.profs\"] = updateData.profs;\r\n        obj[\"data.isReady\"] = data.allow.final;\r\n        console.log(obj);\r\n        const feats_data = {\r\n            new: [],\r\n            exist: [],\r\n        };\r\n        const feats = data.feats.awail.filter((item) => item.data.level.initial > item.data.level.current);\r\n        feats.forEach((awItem, _index) => {\r\n            if (data.feats.learned.length > 0) {\r\n                data.feats.learned.forEach((learnedItem, _index) => {\r\n                    if (awItem._id === learnedItem._id) {\r\n                        feats_data.exist.push(awItem);\r\n                    }\r\n                    else {\r\n                        feats_data.new.push(awItem);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                feats_data.new.push(awItem);\r\n            }\r\n        });\r\n        let pass = [];\r\n        feats_data.exist.forEach((item) => {\r\n            //@ts-expect-error\r\n            pass.push(item.pass.slice(0, item.pass.length - 1));\r\n        });\r\n        feats_data.new.forEach((item) => {\r\n            //@ts-expect-error\r\n            pass.push(item.pass.slice(0, item.pass.length - 1));\r\n        });\r\n        pass = pass.flat();\r\n        console.log(pass);\r\n        if (!data.isReady && !data.allow.final) {\r\n            ui.notifications.error(`Something not ready for your character to be created. Check the list`);\r\n        }\r\n        else if (pass.includes(false)) {\r\n            ui.notifications.error(`Some changes in your features do not comply with the requirements`);\r\n        }\r\n        else {\r\n            await actor.update(obj);\r\n            if (actor.itemTypes.race.length === 0) {\r\n                let race_list = this.options.data.races.list.filter((race) => race.chosen === true);\r\n                //@ts-expect-error\r\n                await actor.createEmbeddedDocuments(\"Item\", race_list);\r\n            }\r\n            if (feats_data.exist.length > 0) {\r\n                await actor.updateEmbeddedDocuments(\"Item\", feats_data.exist.map((item) => ({\r\n                    _id: item._id,\r\n                    \"data.level.initial\": item.data.level.initial,\r\n                })));\r\n            }\r\n            if (feats_data.new.length > 0) {\r\n                //@ts-expect-error\r\n                await actor.createEmbeddedDocuments(\"Item\", feats_data.new);\r\n            }\r\n            this.close();\r\n        }\r\n    }\r\n}\r\n","import { onManageActiveEffect, prepareActiveEffectCategories } from \"../helpers/effects.js\";\r\nimport { CharacterAdvancement } from \"../helpers/cha-adv.js\";\r\nimport { getValues, obj_entries } from \"../ard20.js\";\r\n/**\r\n * Extend the basic ActorSheet with some very simple modifications\r\n * @extends {ActorSheet}\r\n */\r\nexport class ARd20ActorSheet extends ActorSheet {\r\n    /** @override */\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            classes: [\"ard20\", \"sheet\", \"actor\"],\r\n            template: \"systems/ard20/templates/actor/actor-sheet.html\",\r\n            width: 600,\r\n            height: 600,\r\n            tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"main\" }],\r\n        });\r\n    }\r\n    /** @override */\r\n    get template() {\r\n        return `systems/ard20/templates/actor/actor-${this.actor.data.type}-sheet.html`;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @override */\r\n    getData() {\r\n        // Retrieve the data structure from the base sheet. You can inspect or log\r\n        // the context variable to see the structure, but some key properties for\r\n        // sheets are the actor object, the data object, whether or not it's\r\n        // editable, the items array, and the effects array.\r\n        const context = super.getData();\r\n        // Use a safe clone of the actor data for further operations.\r\n        const actorData = this.actor.data;\r\n        // Add the actor's data to context.data for easier access, as well as flags.\r\n        //@ts-expect-error\r\n        context.data = actorData.data;\r\n        //@ts-expect-error\r\n        context.flags = actorData.flags;\r\n        //@ts-expect-error\r\n        context.config = CONFIG.ARd20;\r\n        //@ts-expect-error\r\n        context.isGM = game.user.isGM;\r\n        // Prepare character data and items.\r\n        if (actorData.type === \"character\") {\r\n            //@ts-expect-error\r\n            this._prepareItems(context);\r\n            this._prepareCharacterData(context);\r\n        }\r\n        // Prepare NPC data and items.\r\n        //@ts-expect-error\r\n        if (actorData.type === \"npc\") {\r\n            //@ts-expect-error\r\n            this._prepareItems(context);\r\n        }\r\n        // Add roll data for TinyMCE editors.\r\n        //@ts-expect-error\r\n        context.rollData = context.actor.getRollData();\r\n        // Prepare active effects\r\n        //@ts-expect-error\r\n        context.effects = prepareActiveEffectCategories(this.actor.effects);\r\n        return context;\r\n    }\r\n    /**\r\n     * Organize and classify Items for Character sheets.\r\n     *\r\n     * @param {Object} actorData The actor to prepare.\r\n     *\r\n     * @return {undefined}\r\n     */\r\n    //@ts-expect-error\r\n    _prepareCharacterData(context) {\r\n        // Handle ability scores.\r\n        for (let [k, v] of obj_entries(context.data.attributes)) {\r\n            //@ts-expect-error\r\n            v.label = game.i18n.localize(getValues(CONFIG.ARd20.Attributes, k)) ?? k;\r\n        }\r\n        for (let [k, v] of obj_entries(context.data.skills)) {\r\n            //@ts-expect-error\r\n            v.name = game.i18n.localize(getValues(CONFIG.ARd20.Skills, k)) ?? k;\r\n            v.rank_name = game.i18n.localize(getValues(CONFIG.ARd20.Rank, v.rank)) ?? v.rank;\r\n        }\r\n    }\r\n    /**\r\n     * Organize and classify Items for Character sheets.\r\n     *\r\n     * @param {Object} actorData The actor to prepare.\r\n     *\r\n     * @return {undefined}\r\n     */\r\n    _prepareItems(context) {\r\n        // Initialize containers.\r\n        const gear = [];\r\n        const features = [];\r\n        const weapons = [];\r\n        const armor = [];\r\n        const spells = {\r\n            0: [],\r\n            1: [],\r\n            2: [],\r\n            3: [],\r\n            4: [],\r\n            5: [],\r\n            6: [],\r\n            7: [],\r\n            8: [],\r\n            9: [],\r\n        };\r\n        // Iterate through items, allocating to containers\r\n        for (let i of context.items) {\r\n            //@ts-expect-error\r\n            i.img = i.img || DEFAULT_TOKEN;\r\n            // Append to gear.\r\n            if (i.type === \"item\") {\r\n                gear.push(i);\r\n            }\r\n            // Append to features.\r\n            else if (i.type === \"feature\") {\r\n                features.push(i);\r\n            }\r\n            // Append to spells.\r\n            else if (i.type === \"spell\") {\r\n                //@ts-expect-error\r\n                if (i.data.spellLevel != undefined) {\r\n                    //@ts-expect-error\r\n                    spells[i.data.spellLevel].push(i);\r\n                }\r\n            }\r\n            else if (i.type === \"armor\" || i.type === \"weapon\") {\r\n                const isActive = getProperty(i.data, \"equipped\");\r\n                //@ts-expect-error\r\n                i.toggleClass = isActive ? \"active\" : \"\";\r\n                //@ts-expect-error\r\n                i.toggleTitle = game.i18n.localize(isActive ? \"ARd20.Equipped\" : \"ARd20.Unequipped\");\r\n                //@ts-expect-error\r\n                i.data.equipped = !isActive;\r\n                if (i.type === \"armor\")\r\n                    armor.push(i);\r\n                else\r\n                    weapons.push(i);\r\n            }\r\n        }\r\n        // Assign and return\r\n        //@ts-expect-error\r\n        context.gear = gear;\r\n        //@ts-expect-error\r\n        context.features = features;\r\n        //@ts-expect-error\r\n        context.spells = spells;\r\n        //@ts-expect-error\r\n        context.weapons = weapons;\r\n        //@ts-expect-error\r\n        context.armor = armor;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @override */\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n        //@ts-expect-error\r\n        $(\".select2\", html).select2();\r\n        // Render the item sheet for viewing/editing prior to the editable check.\r\n        html.find(\".item-toggle\").click(this._onToggleItem.bind(this));\r\n        html.find(\".item-edit\").click((ev) => {\r\n            const li = $(ev.currentTarget).parents(\".item\");\r\n            const item = this.actor.items.get(li.data(\"itemId\"));\r\n            item.sheet.render(true);\r\n        });\r\n        // -------------------------------------------------------------\r\n        // Everything below here is only needed if the sheet is editable\r\n        if (!this.isEditable)\r\n            return;\r\n        // Add Inventory Item\r\n        html.find(\".item-create\").click(this._onItemCreate.bind(this));\r\n        // Delete Inventory Item\r\n        html.find(\".item-delete\").click((ev) => {\r\n            const li = $(ev.currentTarget).parents(\".item\");\r\n            const item = this.actor.items.get(li.data(\"itemId\"));\r\n            item.delete();\r\n            li.slideUp(200, () => this.render(false));\r\n        });\r\n        // Active Effect management\r\n        html.find(\".effect-control\").click((ev) => onManageActiveEffect(ev, this.actor));\r\n        //roll abilities and skills\r\n        html.find(\".ability-name\").click(this._onRollAbilityTest.bind(this));\r\n        html.find(\".skill-name\").click(this._onRollSkillCheck.bind(this));\r\n        //open \"character advancement\" window\r\n        html.find(\".config-button\").click(this._OnAdvanceMenu.bind(this));\r\n        //item's roll\r\n        html.find(\".item-roll\").click(this._onItemRoll.bind(this));\r\n        // Drag events for macros.\r\n        if (this.actor.isOwner) {\r\n            let handler = (ev) => this._onDragStart(ev);\r\n            html.find(\"li.item\").each((i, li) => {\r\n                if (li.classList.contains(\"inventory-header\"))\r\n                    return;\r\n                li.setAttribute(\"draggable\", \"true\");\r\n                li.addEventListener(\"dragstart\", handler, false);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Open @class CharacterAdvancement\r\n     */\r\n    _OnAdvanceMenu(event) {\r\n        event.preventDefault();\r\n        const button = event.currentTarget;\r\n        let app;\r\n        //@ts-ignore\r\n        switch (button.dataset?.action) {\r\n            case \"adv\":\r\n                app = new CharacterAdvancement(this.object);\r\n                break;\r\n        }\r\n        app?.render(true);\r\n    }\r\n    /**\r\n     * Change @param data.equipped\r\n     * by toggling it on sheet\r\n     */\r\n    _onToggleItem(event) {\r\n        event.preventDefault();\r\n        //@ts-ignore\r\n        const itemid = event.currentTarget.closest(\".item\").dataset.itemId;\r\n        const item = this.actor.items.get(itemid);\r\n        //const attr = item.data.type === \"spell\" ? \"data.preparation.prepared\" : \"data.equipped\";\r\n        const attr = \"data.equipped\";\r\n        return item.update({ [attr]: !getProperty(item.data, attr) });\r\n    }\r\n    _onRollAbilityTest(event) {\r\n        event.preventDefault();\r\n        //@ts-ignore\r\n        let ability = event.currentTarget.parentElement.dataset.ability;\r\n        return this.actor.rollAbilityTest(ability, { event: event });\r\n    }\r\n    _onRollSkillCheck(event) {\r\n        event.preventDefault();\r\n        //@ts-ignore\r\n        let skill = event.currentTarget.parentElement.dataset.skill;\r\n        return this.actor.rollSkill(skill, { event: event });\r\n    }\r\n    _onItemRoll(event) {\r\n        event.preventDefault();\r\n        console.log(\"БРОСОК\");\r\n        //@ts-ignore\r\n        const id = event.currentTarget.closest(\".item\").dataset.itemId;\r\n        const item = this.actor.items.get(id);\r\n        const hasAttack = item.data.data.hasAttack;\r\n        const hasDamage = item.data.data.hasDamage;\r\n        //@ts-expect-error\r\n        if (item)\r\n            return item.roll({ hasAttack, hasDamage });\r\n    }\r\n    /**\r\n     * Handle creating a new Owned Item for the actor using initial data defined in the HTML dataset\r\n     * @param {Event} event   The originating click event\r\n     * @private\r\n     */\r\n    async _onItemCreate(event) {\r\n        event.preventDefault();\r\n        const header = event.currentTarget;\r\n        // Get the type of item to create.\r\n        //@ts-ignore\r\n        const type = header.dataset.type;\r\n        // Grab any data associated with this control.\r\n        //@ts-ignore\r\n        const data = duplicate(header.dataset);\r\n        // Initialize a default name.\r\n        const name = `New ${type.capitalize()}`;\r\n        // Prepare the item object.\r\n        const itemData = {\r\n            name: name,\r\n            type: type,\r\n            data: data,\r\n        };\r\n        // Remove the type from the dataset since it's in the itemData.type prop.\r\n        delete itemData.data[\"type\"];\r\n        // Finally, create the item!\r\n        return await Item.create(itemData, { parent: this.actor });\r\n    }\r\n    /**\r\n     * Handle clickable rolls.\r\n     * @param {Event} event   The originating click event\r\n     * @private\r\n     */\r\n    _onRoll(event) {\r\n        event.preventDefault();\r\n        const element = event.currentTarget;\r\n        //@ts-expect-error\r\n        const dataset = element.dataset;\r\n        // Handle item rolls.\r\n        if (dataset.rollType) {\r\n            if (dataset.rollType == \"item\") {\r\n                //@ts-ignore\r\n                const itemid = element.closest(\".item\").dataset.itemId;\r\n                const item = this.actor.items.get(itemid);\r\n                //@ts-expect-error\r\n                if (item)\r\n                    return item.roll();\r\n            }\r\n            /*else if (dataset.rollType==='weapon'){\r\n              const itemid = element.closest(\".item\").dataset.itemId\r\n              const item = this.actor.items.get(itemid)\r\n              if (item) return item.DamageRoll()\r\n            }*/\r\n        }\r\n    }\r\n    /**\r\n     * _onDrop method with\r\n     */\r\n    async _onDrop(event) {\r\n        if (!game.user.isGM) {\r\n            ui.notifications.error(\"you don't have permissions to add documents to this actor manually\");\r\n            return;\r\n        }\r\n        // Try to extract the data\r\n        let data;\r\n        try {\r\n            data = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\r\n        }\r\n        catch (err) {\r\n            return false;\r\n        }\r\n        const actor = this.actor;\r\n        /**\r\n         * A hook event that fires when some useful data is dropped onto an ActorSheet.\r\n         * @function dropActorSheetData\r\n         * @memberof hookEvents\r\n         * @param {Actor} actor      The Actor\r\n         * @param {ActorSheet} sheet The ActorSheet application\r\n         * @param {object} data      The data that has been dropped onto the sheet\r\n         */\r\n        const allowed = Hooks.call(\"dropActorSheetData\", actor, this, data);\r\n        if (allowed === false)\r\n            return;\r\n        // Handle different data types\r\n        switch (data.type) {\r\n            case \"ActiveEffect\":\r\n                return this._onDropActiveEffect(event, data);\r\n            case \"Actor\":\r\n                return this._onDropActor(event, data);\r\n            case \"Item\":\r\n                return this._onDropItem(event, data);\r\n            case \"Folder\":\r\n                return this._onDropFolder(event, data);\r\n        }\r\n    }\r\n}\r\n","import { getValues, obj_entries } from \"../ard20.js\";\r\nimport { ARd20Item } from \"../documents/item.js\";\r\n//@ts-expect-error\r\nexport class FeatRequirements extends FormApplication {\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            classes: [\"ard20\"],\r\n            title: \"Feature Requirements\",\r\n            template: \"systems/ard20/templates/app/feat_req.hbs\",\r\n            id: \"feat_req\",\r\n            width: 800,\r\n            height: \"auto\",\r\n        });\r\n    }\r\n    async getData() {\r\n        this.options.data = !this.form ? (await this.InitializeData()) : this.options.data;\r\n        //create easier acces to templateData\r\n        const templateData = this.options.data;\r\n        const req = templateData.req;\r\n        const reqValues = req.values;\r\n        const reqLogic = req.logic;\r\n        const data = templateData.data;\r\n        let formApp = templateData.formApp;\r\n        console.log(\"data created\");\r\n        //creating array with all possible requirements' names\r\n        let name_array = [];\r\n        for (let i of data) {\r\n            name_array.push(i.name);\r\n        }\r\n        //iterate through created requirements\r\n        reqValues.forEach((value, index) => {\r\n            //setting correct type of reqirement\r\n            reqValues[index].type = formApp?.values?.[index]?.type ?? (reqValues[index].type || \"attribute\");\r\n            //creating array with from data array with elements that are same type\r\n            let subtype_list = data.filter((item) => item.type === reqValues[index].type);\r\n            //setting correct requirement name\r\n            reqValues[index].name =\r\n                subtype_list.filter((item) => {\r\n                    item.name === formApp.values?.[index]?.name;\r\n                }).length > 0\r\n                    ? formApp.values?.[index].name || reqValues[index].name\r\n                    : reqValues[index].name || subtype_list[0].name;\r\n            reqValues[index].subtype_list = subtype_list.map((item) => item.name);\r\n            reqValues[index].input = formApp.values[index]?.input ?? (reqValues[index].input || []);\r\n            reqValues[index].value = data.filter((item) => item.name === reqValues[index].name)[0].value;\r\n            for (let i = 0; i < this.object.data.data.level.max; i++) {\r\n                let inputElement = reqValues[index].input[i];\r\n                let previousElement = reqValues[index].input[i - 1] ?? 0;\r\n                switch (reqValues[index].type) {\r\n                    case \"skill\":\r\n                        inputElement = inputElement > 4 ? 1 : inputElement || 1;\r\n                        break;\r\n                    case \"attribute\":\r\n                        inputElement = inputElement || 10;\r\n                        break;\r\n                    case \"feature\":\r\n                        const maxLevel = reqValues[index].value;\r\n                        inputElement = Math.min(inputElement, maxLevel);\r\n                }\r\n                inputElement = Math.max(inputElement, previousElement);\r\n                reqValues[index].input[i] = inputElement;\r\n            }\r\n        });\r\n        reqLogic.forEach((value, index) => {\r\n            reqLogic[index] = formApp.logic?.[index] ?? reqLogic[index];\r\n        });\r\n        templateData.formApp = req;\r\n        console.log(templateData);\r\n        return templateData;\r\n    }\r\n    /**\r\n     * Initialize Data for FormApplication\r\n     * Data structure looks like this:\r\n     * @param {Array} req - already existing requirements\r\n     * @param {Array} type_list - list of types for requirements, can be attribute, skill or feat\r\n     * @param feat.awail - array of Items with type feat from Folders and Compendium Packs\r\n     * @param feat.current - array of Items that was already used\r\n     * @returns {object} templateData\r\n     */\r\n    async InitializeData() {\r\n        if (this.form)\r\n            return;\r\n        console.log(\"First launch\");\r\n        const featList = await this.getFeats();\r\n        const pack_list = featList.pack_list;\r\n        const folder_list = featList.folder_list;\r\n        const folder_name = featList.folder_name;\r\n        const data = []; //list of attributes, skills and feats that user can use as requirement\r\n        for (let [k, v] of Object.entries(CONFIG.ARd20.Attributes)) {\r\n            data.push({\r\n                name: game.i18n.localize(getValues(CONFIG.ARd20.Attributes, k)) ?? k,\r\n                value: k,\r\n                type: \"attribute\",\r\n            });\r\n        }\r\n        for (let [k, v] of obj_entries(CONFIG.ARd20.Skills)) {\r\n            data.push({\r\n                name: game.i18n.localize(getValues(CONFIG.ARd20.Skills, k)) ?? k,\r\n                value: k,\r\n                type: \"skill\",\r\n            });\r\n        }\r\n        const arr = Object.values(CONFIG.ARd20.Rank).filter((value, index) => {\r\n            if (index !== 0)\r\n                return CONFIG.ARd20.Rank[index];\r\n        });\r\n        const rank = Object.assign({}, arr);\r\n        const templateData = {\r\n            formApp: {\r\n                values: [],\r\n                logic: [],\r\n            },\r\n            req: foundry.utils.deepClone(this.object.data.data.req),\r\n            type_list: [\"attribute\", \"skill\", \"feature\"],\r\n            feat: {\r\n                awail: pack_list.concat(folder_list.filter((item) => pack_list.indexOf(item) < 0)),\r\n                current: this.object.data.data.req.values.filter((item) => item.type === \"feature\"),\r\n            },\r\n            data: data,\r\n            rank: rank,\r\n        };\r\n        const formApp = templateData.formApp;\r\n        const req = templateData.req;\r\n        const type_list = templateData.type_list;\r\n        const featAwail = templateData.feat.awail;\r\n        const featCurrent = templateData.feat.current;\r\n        let name_array = [];\r\n        for (let i of featCurrent) {\r\n            name_array.push(i.name);\r\n        }\r\n        featAwail.forEach((item, index) => {\r\n            if (item.name === this.object.name) {\r\n                console.log(item.name, \" matches name of the feat\");\r\n                featAwail.splice(index, 1);\r\n            }\r\n            else if (name_array.includes(item.name)) {\r\n                console.log(item.name, \"this feat is already included\", index);\r\n                item.input = featCurrent[featCurrent.indexOf(featCurrent.filter((feat) => feat.name === item.name)[0])].input;\r\n                featAwail.splice(index, 1);\r\n            }\r\n            if (featAwail.filter((feat) => feat.name === item.name).length !== 0) {\r\n                data.push({ name: item.name, type: \"feature\", value: item.value });\r\n            }\r\n        });\r\n        return templateData;\r\n    }\r\n    /**\r\n     * Get features from folders and packs that were configured in settings\r\n     * @returns {} {pack_list, folder_list, folder_name}\r\n     */\r\n    async getFeats() {\r\n        let pack_list = [];\r\n        let folder_list = [];\r\n        let folder_name = [];\r\n        const packs = game.settings.get(\"ard20\", \"feat\").packs;\r\n        const folders = game.settings.get(\"ard20\", \"feat\").folders;\r\n        for (let key of packs) {\r\n            if (game.packs.filter((pack) => pack.metadata.label === key).length !== 0) {\r\n                let feat_list = [];\r\n                feat_list.push(Array.from(game.packs.filter((pack) => pack.metadata.label === key && pack.metadata.entity === \"Item\")[0].index));\r\n                feat_list = feat_list.flat();\r\n                for (let feat of feat_list) {\r\n                    if (feat instanceof ARd20Item) {\r\n                        const new_key = game.packs.filter((pack) => pack.metadata.label === key)[0].metadata.package + \".\" + key;\r\n                        const doc = await game.packs.get(new_key).getDocument(feat.id);\r\n                        if (doc instanceof ARd20Item) {\r\n                            if (doc.data.type === \"feature\") {\r\n                                let item = doc.toObject();\r\n                                item.data = doc.data.data;\r\n                                const feature = {\r\n                                    name: item.name,\r\n                                    type: \"feature\",\r\n                                    input: [],\r\n                                    pass: [],\r\n                                    subtype_list: [],\r\n                                    value: item.data.level.max,\r\n                                };\r\n                                pack_list.push(feature);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let key of folders) {\r\n            if (game.folders.filter((folder) => folder.data.name === key).length !== 0) {\r\n                let feat_list = [];\r\n                feat_list.push(game.folders.filter((folder) => folder.data.name === key && folder.data.type === \"Item\")[0].contents);\r\n                feat_list = feat_list.flat();\r\n                for (let feat of feat_list) {\r\n                    if (feat instanceof ARd20Item && feat.data.type === \"feature\") {\r\n                        console.log(\"item added from folder \", feat);\r\n                        const item = feat.toObject();\r\n                        item.data = foundry.utils.deepClone(feat.data.data);\r\n                        const feature = {\r\n                            name: item.name,\r\n                            type: \"feature\",\r\n                            input: [],\r\n                            pass: [],\r\n                            subtype_list: [],\r\n                            value: item.data.level.max,\r\n                        };\r\n                        folder_list.push(feature);\r\n                        folder_name.push(item.name);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { pack_list, folder_list, folder_name };\r\n    }\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n        html.find(\".item-create\").on(\"click\", this._onAdd.bind(this));\r\n        html.find(\".item-delete\").on(\"click\", this._Delete.bind(this));\r\n    }\r\n    /**\r\n     * Add new requirement. By default it \"Strength>=10\" for every feat's level.\r\n     * @param event\r\n     */\r\n    async _onAdd(event) {\r\n        event.preventDefault();\r\n        const req = this.options.data.req;\r\n        let sub_list = []; //temporary list with attributes\r\n        for (let [k, i] of obj_entries(CONFIG.ARd20.Attributes)) {\r\n            sub_list.push(k);\r\n        }\r\n        //create varible for easier access to maximum level of feature\r\n        const maxLevel = this.object.data.data.level.max;\r\n        //create default value object\r\n        const defaultValue = {\r\n            name: \"Strength\",\r\n            type: \"attribute\",\r\n            pass: new Array(maxLevel).fill(false),\r\n            subtype_list: sub_list,\r\n            value: \"str\",\r\n            input: new Array(maxLevel).fill(10),\r\n        };\r\n        req.values.push(defaultValue);\r\n        this.render();\r\n    }\r\n    /**\r\n     * Delete existing requirement\r\n     * @param event\r\n     */\r\n    async _Delete(event) {\r\n        event.preventDefault();\r\n        const req = this.options.data.req;\r\n        req.values.splice(event.currentTarget.dataset.key, 1);\r\n        this.render();\r\n    }\r\n    /**\r\n     * Save typed-in values\r\n     * @param event\r\n     */\r\n    _onChangeInput(event) {\r\n        super._onChangeInput(event);\r\n        const data = this.options.data;\r\n        const formApp = data.formApp;\r\n        const k = event.currentTarget.dataset.key;\r\n        const i = event.currentTarget.dataset.order;\r\n        console.log(foundry.utils.expandObject(this._getSubmitData()));\r\n        const req = foundry.utils.expandObject(this._getSubmitData()).req;\r\n        switch (event.currentTarget.dataset.type) {\r\n            case \"value\":\r\n                formApp.values[k].type = req.values[k].type;\r\n                formApp.values[k].name = req.values[k].name;\r\n                formApp.values[k].input[i] = req.values[k].input[i];\r\n                break;\r\n            case \"logic\":\r\n                formApp.logic[k] = req.logic[k];\r\n                break;\r\n        }\r\n        this.getData();\r\n        this.render();\r\n    }\r\n    async _updateObject(event, formData) {\r\n        const item = this.object;\r\n        this.render();\r\n        const req = this.options.data.req;\r\n        const obj = {};\r\n        obj[\"data.req.values\"] = req.values;\r\n        obj[\"data.req.logic\"] = req.logic;\r\n        console.log(obj);\r\n        await item.update(obj);\r\n    }\r\n}\r\n","import { obj_entries } from \"../ard20.js\";\r\nimport { onManageActiveEffect, prepareActiveEffectCategories } from \"../helpers/effects.js\";\r\nimport { FeatRequirements } from \"../helpers/feat_req.js\";\r\n/**\r\n * Extend the basic ItemSheet with some very simple modifications\r\n * @extends {ItemSheet}\r\n */\r\nexport class ARd20ItemSheet extends ItemSheet {\r\n    /** @override */\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            classes: [\"ard20\", \"sheet\", \"item\"],\r\n            width: 520,\r\n            height: 480,\r\n            tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"description\" }],\r\n        });\r\n    }\r\n    /** @override */\r\n    get template() {\r\n        const path = \"systems/ard20/templates/item\";\r\n        return `${path}/item-${this.item.data.type}-sheet.html`;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @override */\r\n    getData() {\r\n        // Retrieve base data structure.\r\n        const context = super.getData();\r\n        // Use a safe clone of the item data for further operations.\r\n        //@ts-expect-error\r\n        const itemData = context.item.data;\r\n        //@ts-expect-error\r\n        context.config = CONFIG.ARd20;\r\n        // Retrieve the roll data for TinyMCE editors.\r\n        //@ts-expect-error\r\n        context.rollData = {};\r\n        let actor = this.object?.parent ?? null;\r\n        if (actor) {\r\n            //@ts-expect-error\r\n            context.rollData = actor.getRollData();\r\n        }\r\n        // Add the actor's data to context.data for easier access, as well as flags.\r\n        //@ts-expect-error\r\n        context.data = itemData.data;\r\n        //@ts-expect-error\r\n        context.flags = itemData.flags;\r\n        //@ts-expect-error\r\n        context.isGM = game.user.isGM;\r\n        //@ts-expect-error\r\n        context.type = context.item.type;\r\n        //@ts-expect-error\r\n        context.effects = prepareActiveEffectCategories(this.item.effects);\r\n        return context;\r\n    }\r\n    _getSubmitData(updateData = {}) {\r\n        // Create the expanded update data object\r\n        if (this.form === null)\r\n            return;\r\n        //@ts-expect-error\r\n        const fd = new FormDataExtended(this.form, { editors: this.editors });\r\n        let data = fd.toObject();\r\n        if (updateData)\r\n            data = mergeObject(data, updateData);\r\n        else\r\n            data = expandObject(data);\r\n        // Handle Damage array\r\n        //@ts-expect-error\r\n        const damage = data.data?.damage;\r\n        if (damage) {\r\n            if (damage.parts) {\r\n                damage.damType = Object.values(damage?.damType || {});\r\n                damage.parts = Object.values(damage?.parts || {}).map(function (d, ind) {\r\n                    let a = [];\r\n                    if (damage.damType[ind].length !== 0) {\r\n                        damage.damType[ind].forEach((sub, i) => a.push(JSON.parse(damage.damType[ind][i])));\r\n                    }\r\n                    //@ts-expect-error\r\n                    return [d[0] || \"\", a];\r\n                });\r\n            }\r\n            else {\r\n                for (let [key, type] of obj_entries(damage)) {\r\n                    for (let [k, prof] of obj_entries(type)) {\r\n                        prof.damType = Object.values(prof?.damType || {});\r\n                        prof.parts = Object.values(prof?.parts || {}).map(function (d, ind) {\r\n                            let a = [];\r\n                            if (prof.damType[ind].length !== 0 && prof.damType[ind][0] !== \"\") {\r\n                                prof.damType[ind].forEach((sub, i) => a.push(JSON.parse(prof.damType[ind][i])));\r\n                            }\r\n                            //@ts-expect-error\r\n                            return [d[0] || \"\", a];\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return flattenObject(data);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @override */\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n        const edit = !this.isEditable;\r\n        const context = this.getData();\r\n        //@ts-expect-error\r\n        function formatSelection(state) {\r\n            const parent = $(state.element).parent().prop(\"tagName\");\r\n            if (!state.id || parent !== \"OPTGROUP\")\r\n                return state.text;\r\n            const optgroup = $(state.element).parent().attr(\"label\");\r\n            const subtype = state.element.value.match(/(\\w+)/g)[1];\r\n            const url = `systems/ard20/css/${subtype}.svg`;\r\n            return `<div><img style=\"width:15px; background-color:black; margin-left:2px\" src=${url} />${optgroup} ${state.text}</div>`;\r\n        }\r\n        //@ts-expect-error\r\n        function formatResult(state) {\r\n            const parent = $(state.element).parent().prop(\"tagName\");\r\n            if (!state.id || parent !== \"OPTGROUP\")\r\n                return state.text;\r\n            const subtype = state.element.value.match(/(\\w+)/g)[1];\r\n            const url = `systems/ard20/css/${subtype}.svg`;\r\n            return `<div><img style=\"width:15px; background-color:black; margin-left:2px\" src=${url} /> ${state.text}</div>`;\r\n        }\r\n        $(`select.select2`, html)\r\n            //@ts-expect-error\r\n            .select2({\r\n            theme: \"filled\",\r\n            width: \"auto\",\r\n            dropdownAutoWidth: true,\r\n            disabled: edit,\r\n            templateSelection: formatSelection,\r\n            templateResult: formatResult,\r\n            //@ts-expect-error\r\n            escapeMarkup: function (m) {\r\n                return m;\r\n            },\r\n        })\r\n            //@ts-expect-error\r\n            .val(function (index, value) {\r\n            //@ts-expect-error\r\n            const name = $(\"select.select2\", html)[index].name;\r\n            const val = getProperty(context, name);\r\n            return val;\r\n        })\r\n            .trigger(\"change\");\r\n        $(\"select\").on(\"select2:unselect\", function (evt) {\r\n            //@ts-expect-error\r\n            if (!evt.params.originalEvent) {\r\n                return;\r\n            }\r\n            //@ts-expect-error\r\n            evt.params.originalEvent.stopPropagation();\r\n        });\r\n        // Everything below here is only needed if the sheet is editable\r\n        if (!this.isEditable)\r\n            return;\r\n        //@ts-expect-error\r\n        html.find(\".effect-control\").click((ev) => onManageActiveEffect(ev, this.item));\r\n        // Roll handlers, click handlers, etc. would go here.\r\n        html.find(\".config-button\").click(this._FeatReq.bind(this));\r\n        html.find(\".damage-control\").click(this._onDamageControl.bind(this));\r\n    }\r\n    //@ts-expect-error\r\n    _FeatReq(event) {\r\n        event.preventDefault();\r\n        const button = event.currentTarget;\r\n        let app;\r\n        switch (button.dataset.action) {\r\n            case \"feat-req\":\r\n                //@ts-expect-error\r\n                app = new FeatRequirements(this.object);\r\n                break;\r\n        }\r\n        app?.render(true);\r\n    }\r\n    //@ts-expect-error\r\n    async _onDamageControl(event) {\r\n        event.preventDefault();\r\n        const a = event.currentTarget;\r\n        if (a.classList.contains(\"add-damage\")) {\r\n            //await this._onSubmit(event);\r\n            let path = a.dataset.type ? \"data.damage\" + a.dataset.type : \"data.damage\";\r\n            const damage = getProperty(this.item.data, path);\r\n            damage.damType = damage.damType || [];\r\n            const partsPath = path + \".parts\";\r\n            const damTypePath = path + \".damType\";\r\n            const update = {};\r\n            update[partsPath] = damage.parts.concat([[\"\", [\"\", \"\"]]]);\r\n            update[damTypePath] = damage.damType?.concat([[\"\"]]);\r\n            await this.item.update(update);\r\n        }\r\n        if (a.classList.contains(\"delete-damage\")) {\r\n            //await this._onSubmit(event);\r\n            const li = a.closest(\".damage-part\");\r\n            let path = a.dataset.type ? \"data.damage\" + a.dataset.type : \"data.damage\";\r\n            const damage = getProperty(this.item.data, path);\r\n            console.log(damage);\r\n            damage.parts.splice(Number(li.dataset.damagePart), 1);\r\n            damage.damType.splice(Number(li.dataset.damagePart), 1);\r\n            const partsPath = path + \".parts\";\r\n            const damTypePath = path + \".damType\";\r\n            const update = {};\r\n            update[partsPath] = damage.parts;\r\n            update[damTypePath] = damage.damType;\r\n            await this.item.update(update);\r\n        }\r\n    }\r\n    //@ts-expect-error\r\n    async _onSubmit(...args) {\r\n        if (this._tabs[0].active === \"data\")\r\n            this.position.height = \"auto\";\r\n        //@ts-expect-error\r\n        await super._onSubmit(...args);\r\n    }\r\n}\r\n","/**\r\n * Define a set of template paths to pre-load\r\n * Pre-loaded templates are compiled and cached for fast access when rendering\r\n * @return {Promise}\r\n */\r\nexport const preloadHandlebarsTemplates = async function () {\r\n    return loadTemplates([\r\n        // Actor partials.\r\n        \"systems/ard20/templates/actor/parts/actor-features.html\",\r\n        \"systems/ard20/templates/actor/parts/actor-items.html\",\r\n        \"systems/ard20/templates/actor/parts/actor-spells.html\",\r\n        \"systems/ard20/templates/actor/parts/actor-effects.html\",\r\n        \"systems/ard20/templates/actor/parts/actor-equip.html\",\r\n        // Character Advancement\r\n        \"systems/ard20/templates/actor/parts/actor-adv.html\",\r\n        // Settings\r\n        \"systems/ard20/templates/app/prof-settings.html\",\r\n        \"systems/ard20/templates/app/feat-settings.html\",\r\n        // Requirements for features\r\n        \"systems/ard20/templates/app/feat_req.hbs\",\r\n    ]);\r\n};\r\n","//@ts-expect-error\r\nexport const ARd20 = {};\r\nARd20.Attributes = {\r\n    str: \"ARd20.AttributeStr\",\r\n    dex: \"ARd20.AttributeDex\",\r\n    con: \"ARd20.AttributeCon\",\r\n    int: \"ARd20.AttributeInt\",\r\n    wis: \"ARd20.AttributeWis\",\r\n    cha: \"ARd20.AttributeCha\",\r\n};\r\nARd20.AttributeAbbreviations = {\r\n    str: \"ARd20.AttributeStrAbbr\",\r\n    dex: \"ARd20.AttributeDexAbbr\",\r\n    con: \"ARd20.AttributeConAbbr\",\r\n    int: \"ARd20.AttributeIntAbbr\",\r\n    wis: \"ARd20.AttributeWisAbbr\",\r\n    cha: \"ARd20.AttributeChaAbbr\",\r\n};\r\nARd20.CHARACTER_EXP_LEVELS = [0, 300, 900, 2700, 6500, 14000, 23000, 34000, 48000, 64000, 85000, 100000, 120000, 140000, 165000, 195000, 225000, 265000, 305000, 355000];\r\nARd20.SpellSchool = {\r\n    abj: \"ARd20.SchoolAbj\",\r\n    con: \"ARd20.SchoolCon\",\r\n    div: \"ARd20.SchoolDiv\",\r\n    enc: \"ARd20.SchoolEnc\",\r\n    evo: \"ARd20.SchoolEvo\",\r\n    ill: \"ARd20.SchoolIll\",\r\n    nec: \"ARd20.SchoolNec\",\r\n    trs: \"ARd20.SchoolTrs\",\r\n};\r\nARd20.Skills = {\r\n    acr: \"ARd20.SkillAcr\",\r\n    ani: \"ARd20.SkillAni\",\r\n    arc: \"ARd20.SkillArc\",\r\n    ath: \"ARd20.SkillAth\",\r\n    dec: \"ARd20.SkillDec\",\r\n    his: \"ARd20.SkillHis\",\r\n    ins: \"ARd20.SkillIns\",\r\n    itm: \"ARd20.SkillItm\",\r\n    inv: \"ARd20.SkillInv\",\r\n    med: \"ARd20.SkillMed\",\r\n    nat: \"ARd20.SkillNat\",\r\n    prc: \"ARd20.SkillPrc\",\r\n    prf: \"ARd20.SkillPrf\",\r\n    per: \"ARd20.SkillPer\",\r\n    rel: \"ARd20.SkillRel\",\r\n    slt: \"ARd20.SkillSlt\",\r\n    ste: \"ARd20.SkillSte\",\r\n    sur: \"ARd20.SkillSur\",\r\n};\r\nARd20.Rank = {\r\n    0: \"ARd20.Untrained\",\r\n    1: \"ARd20.Basic\",\r\n    2: \"ARd20.Expert\",\r\n    3: \"ARd20.Master\",\r\n    4: \"ARd20.Legend\",\r\n};\r\nARd20.Source = {\r\n    mar: \"ARd20.Martial\",\r\n    mag: \"ARd20.Magical\",\r\n    div: \"ARd20.Divine\",\r\n    pri: \"ARd20.Primal\",\r\n    psy: \"ARd20.Psyhic\",\r\n};\r\nARd20.WeaponProp = {\r\n    aff: \"ARd20.Affixed\",\r\n    awk: \"ARd20.Awkward\",\r\n    con: \"ARd20.Conceal\",\r\n    bra: \"ARd20.Brace\",\r\n    def: \"ARd20.Deflect\",\r\n    dis: \"ARd20.Disarm\",\r\n    dou: \"ARd20.Double Ended\",\r\n    ent: \"ARd20.Entangle\",\r\n    fin: \"ARd20.Finesse\",\r\n    fir: \"ARd20.Firearm\",\r\n    hea: \"ARd20.Heavy\",\r\n    lau: \"ARd20.Launch\",\r\n    lig: \"ARd20.Light\",\r\n    lun: \"ARd20.Lunge\",\r\n    mel: \"ARd20.Melee\",\r\n    one: \"ARd20.One-Handed\",\r\n    pen: \"ARd20.Penetrate\",\r\n    ran: \"ARd20.Ranged\",\r\n    rea: \"ARd20.Reach\",\r\n    rel: \"ARd20.Reload\",\r\n    sta: \"Ard20.Stagger\",\r\n    thr: \"ARd20.Thrown\",\r\n    tri: \"ARd20.Trip\",\r\n    two: \"ARd20.Two-Handed\",\r\n    ver: \"ARd20.Versatile\",\r\n};\r\nARd20.WeaponType = {\r\n    amb: \"ARd20.Ambush\",\r\n    axe: \"ARd20.Axe\",\r\n    blu: \"ARd20.Bludgeon\",\r\n    bow: \"ARd20.Bow\",\r\n    sli: \"ARd20.Sling\",\r\n    cbl: \"ARd20.Combat Blade\",\r\n    cro: \"ARd20.Crossbow\",\r\n    dbl: \"ARd20.Dueling Blade\",\r\n    fir: \"ARd20.Firearm\",\r\n    fla: \"ARd20.Flail\",\r\n    whi: \"ARd20.Whip\",\r\n    ham: \"ARd20.Hammer\",\r\n    pic: \"ARd20.Pick\",\r\n    pol: \"ARd20.Polearm\",\r\n    spe: \"ARd20.Spear\",\r\n    thr: \"ARd20.Throwing\",\r\n};\r\nARd20.AbilXP = [50, 50, 50, 50, 70, 90, 120, 150, 190, 290, 440, 660, 990, 1500, 2700, 4800, 8400, 14700, 25700, 51500, 103000, 206000, 412000, 824000, 2060000];\r\nARd20.SkillXP = {\r\n    0: [50, 80, 125, 185, 260, 350, 455, 575, 710, 860, 1025, 1205, 1400, 1610, 1835, 2075, 2330, 2600],\r\n    1: [115, 190, 295, 430, 595, 790, 1015, 1270, 1555, 1870, 2215, 2590, 2995, 3430, 3895, 4390, 4915, 5470],\r\n};\r\nARd20.DamageTypes = {\r\n    mag: \"ARd20.Magical\",\r\n    phys: \"ARd20.Physical\",\r\n};\r\nARd20.DamageSubTypes = {\r\n    acid: \"ARd20.DamageAcid\",\r\n    bludgeoning: \"ARd20.DamageBludgeoning\",\r\n    cold: \"ARd20.DamageCold\",\r\n    fire: \"ARd20.DamageFire\",\r\n    force: \"ARd20.DamageForce\",\r\n    lightning: \"ARd20.DamageLightning\",\r\n    necr: \"ARd20.DamageNecrotic\",\r\n    piercing: \"ARd20.DamagePiercing\",\r\n    poison: \"ARd20.DamagePoison\",\r\n    slashing: \"ARd20.DamageSlashing\",\r\n    radiant: \"ARd20.DamageRadiant\",\r\n    psychic: \"ARd20.DamagePsychic\",\r\n};\r\nARd20.ResistTypes = {\r\n    res: \"ARd20.Resistance\",\r\n    vul: \"Ard20.Vulnerability\",\r\n    imm: \"ARd20.Immunity\",\r\n};\r\nARd20.HPDice = [\"1d6\", \"1d8\", \"1d10\", \"1d12\", \"1d12+2\", \"1d12+4\", \"1d20\", \"1d20+2\", \"1d20+4\", \"1d20+6\", \"1d20+8\", \"1d20+10\", \"1d20+12\"];\r\nARd20.HeavyPoints = {\r\n    light: { chest: 3, gloves: 1, boots: 1, pants: 2, head: 1 },\r\n    medium: { chest: 5, gloves: 2, boots: 2, pants: 3, head: 2 },\r\n    heavy: { chest: 8, gloves: 3, boots: 3, pants: 5, head: 3 },\r\n};\r\nARd20.RollResult = {\r\n    0: \"ARd20.Fumble\",\r\n    1: \"ARd20.Fail\",\r\n    2: \"ARd20.Success\",\r\n    3: \"ARd20.Crit\",\r\n};\r\n","export default class ARd20SocketHandler {\r\n    //@ts-expect-error\r\n    static async updateActorData(data) {\r\n        if (game.user.isGM) {\r\n            const actor = game.actors.get(data.actor._id);\r\n            //@ts-expect-error\r\n            if (actor)\r\n                await actor.update(data.update, { \"data.health.value\": data.value });\r\n        }\r\n    }\r\n}\r\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { linear } from \"svelte/easing\";\nimport { lerp }   from '@typhonjs-fvtt/runtime/svelte/util';\n\nexport class ApplicationState\n{\n   #application;\n\n   /**\n    * @type {Map<string, ApplicationData>}\n    */\n   #dataSaved = new Map();\n\n   /**\n    * @param {{ reactive: SvelteReactive, options: object }}   application - The application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n   }\n\n   /**\n    * Returns current application state along with any extra data passed into method.\n    *\n    * @param {object} [extra] - Extra data to add to application state.\n    *\n    * @returns {ApplicationData} Passed in object with current application state.\n    */\n   get(extra = {})\n   {\n      return Object.assign(extra, {\n         position: this.#application?.position?.get(),\n         options: Object.assign({}, this.#application?.options),\n         ui: { minimized: this.#application?.reactive?.minimized }\n      });\n   }\n\n   /**\n    * Returns any stored save state by name.\n    *\n    * @param {string}   name - Saved data set name.\n    *\n    * @returns {ApplicationData} The saved data set.\n    */\n   getSave({ name })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`ApplicationState - getSave error: 'name' is not a string.`);\n      }\n\n      return this.#dataSaved.get(name);\n   }\n\n   /**\n    * Removes and returns any application state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to remove and retrieve.\n    *\n    * @returns {ApplicationData} Saved position data.\n    */\n   remove({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - remove: 'name' is not a string.`); }\n\n      const data = this.#dataSaved.get(name);\n      this.#dataSaved.delete(name);\n\n      return data;\n   }\n\n   /**\n    * Restores a saved application state returning the data. Several optional parameters are available\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\n    * to the stored data, or simply sets the stored data. Restoring via {@link Position.animateTo} allows\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\n    * returned if awaiting the end of the animation.\n    *\n    * @param {object}            params - Parameters\n    *\n    * @param {string}            params.name - Saved data set name.\n    *\n    * @param {boolean}           [params.remove=false] - Remove data set.\n    *\n    * @param {boolean}           [params.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [params.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [params.duration=100] - Duration in milliseconds.\n    *\n    * @param {Function}          [params.easing=linear] - Easing function.\n    *\n    * @param {Function}          [params.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {ApplicationData} Saved application data.\n    */\n   restore({ name, remove = false, async = false, animateTo = false, duration = 100, easing = linear,\n    interpolate = lerp })\n   {\n      if (typeof name !== 'string')\n      {\n         throw new TypeError(`ApplicationState - restore error: 'name' is not a string.`);\n      }\n\n      const dataSaved = this.#dataSaved.get(name);\n\n      if (dataSaved)\n      {\n         if (remove) { this.#dataSaved.delete(name); }\n\n         return this.set(dataSaved, { async, animateTo, duration, easing, interpolate });\n      }\n\n      return dataSaved;\n   }\n\n   /**\n    * Saves current application state with the opportunity to add extra data to the saved state.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - name to index this saved data.\n    *\n    * @param {...*}     [options.extra] - Extra data to add to saved data.\n    *\n    * @returns {ApplicationData} Current position data\n    */\n   save({ name, ...extra })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`ApplicationState - save error: 'name' is not a string.`); }\n\n      const data = this.get(extra);\n\n      this.#dataSaved.set(name, data);\n\n      return data;\n   }\n\n   /**\n    * Restores a saved positional state returning the data. Several optional parameters are available\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\n    * to the stored data, or simply sets the stored data. Restoring via {@link Position.animateTo} allows\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\n    * returned if awaiting the end of the animation.\n    *\n    * @param {ApplicationData}   data - Saved data set name.\n    *\n    * @param {object}            opts - Optional parameters\n    *\n    * @param {boolean}           [opts.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [opts.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [opts.duration=100] - Duration in milliseconds.\n    *\n    * @param {Function}          [opts.easing=linear] - Easing function.\n    *\n    * @param {Function}          [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {Application} application.\n    */\n   set(data, { async = false, animateTo = false, duration = 100, easing = linear, interpolate = lerp })\n   {\n      if (typeof data !== 'object')\n      {\n         throw new TypeError(`ApplicationState - restore error: 'data' is not an object.`);\n      }\n\n      const application = this.#application;\n\n      if (data)\n      {\n         // Merge in saved options to application.\n         if (typeof data?.options === 'object')\n         {\n            application?.reactive.mergeOptions(data.options);\n         }\n\n         if (typeof data?.ui === 'object')\n         {\n            const minimized = typeof data.ui?.minimized === 'boolean' ? data.ui.minimized : false;\n\n            // Application is currently minimized and stored state is not, so reset minimized state without animationn.\n            if (application?.reactive?.minimized && !minimized)\n            {\n               application.maximize({ animate: false, duration: 0 });\n            }\n            else if (!application?.reactive?.minimized && minimized)\n            {\n               application.minimize({ animate: false, duration });\n            }\n         }\n\n         if (typeof data?.position === 'object')\n         {\n            // Update data directly with no store or inline style updates.\n            if (animateTo)  // Animate to saved data.\n            {\n               // Provide special handling to potentially change transform origin as this parameter is not animated.\n               if (data.position.transformOrigin !== application.position.transformOrigin)\n               {\n                  application.position.transformOrigin = data.position.transformOrigin;\n               }\n\n               // Return a Promise with saved data that resolves after animation ends.\n               if (async)\n               {\n                  return application.position.animateTo(data.position, { duration, easing, interpolate }).then(\n                   () => application);\n               }\n               else  // Animate synchronously.\n               {\n                  application.position.animateTo(data.position, { duration, easing, interpolate });\n               }\n            }\n            else\n            {\n               // Default options is to set data for an immediate update.\n               application.position.set(data.position);\n            }\n         }\n      }\n\n      return application;\n   }\n}\n\n/**\n * @typedef {object} ApplicationData\n *\n * @property {PositionData}   position - Application position.\n *\n * @property {object}         options - Application options.\n *\n * @property {object}         ui - Application UI state.\n */\n","/**\n * Provides a helper class for {@link SvelteApplication} by combining all methods that work on the {@link SvelteData[]}\n * of mounted components. This class is instantiated and can be retrieved by the getter `svelte` via SvelteApplication.\n */\nexport class GetSvelteData\n{\n   /**\n    * @type {MountedAppShell[]|null[]}\n    */\n   #applicationShellHolder;\n\n   /**\n    * @type {SvelteData[]}\n    */\n   #svelteData;\n\n   /**\n    * Keep a direct reference to the SvelteData array in an associated {@link SvelteApplication}.\n    *\n    * @param {MountedAppShell[]|null[]}  applicationShellHolder - A reference to the MountedAppShell array.\n    *\n    * @param {SvelteData[]}  svelteData - A reference to the SvelteData array of mounted components.\n    */\n   constructor(applicationShellHolder, svelteData)\n   {\n      this.#applicationShellHolder = applicationShellHolder;\n      this.#svelteData = svelteData;\n   }\n\n   /**\n    * Returns any mounted {@link MountedAppShell}.\n    *\n    * @returns {MountedAppShell|null} Any mounted application shell.\n    */\n   get applicationShell() { return this.#applicationShellHolder[0]; }\n\n   /**\n    * Returns the indexed Svelte component.\n    *\n    * @param {number}   index -\n    *\n    * @returns {object} The loaded Svelte component.\n    */\n   component(index)\n   {\n      const data = this.#svelteData[index];\n      return typeof data === 'object' ? data?.component : void 0;\n   }\n\n   /**\n    * Returns the Svelte component entries iterator.\n    *\n    * @returns {Generator<Array<number|SvelteComponent>>} Svelte component entries iterator.\n    * @yields\n    */\n   *componentEntries()\n   {\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\n      {\n         yield [cntr, this.#svelteData[cntr].component];\n      }\n   }\n\n   /**\n    * Returns the Svelte component values iterator.\n    *\n    * @returns {Generator<SvelteComponent>} Svelte component values iterator.\n    * @yields\n    */\n   *componentValues()\n   {\n      for (let cntr = 0; cntr < this.#svelteData.length; cntr++)\n      {\n         yield this.#svelteData[cntr].component;\n      }\n   }\n\n   /**\n    * Returns the indexed SvelteData entry.\n    *\n    * @param {number}   index -\n    *\n    * @returns {SvelteData} The loaded Svelte config + component.\n    */\n   data(index)\n   {\n      return this.#svelteData[index];\n   }\n\n   /**\n    * Returns the {@link SvelteData} instance for a given component.\n    *\n    * @param {object} component - Svelte component.\n    *\n    * @returns {SvelteData} -  The loaded Svelte config + component.\n    */\n   dataByComponent(component)\n   {\n      for (const data of this.#svelteData)\n      {\n         if (data.component === component) { return data; }\n      }\n\n      return void 0;\n   }\n\n   /**\n    * Returns the SvelteData entries iterator.\n    *\n    * @returns {IterableIterator<[number, SvelteData]>} SvelteData entries iterator.\n    */\n   dataEntries()\n   {\n      return this.#svelteData.entries();\n   }\n\n   /**\n    * Returns the SvelteData values iterator.\n    *\n    * @returns {IterableIterator<SvelteData>} SvelteData values iterator.\n    */\n   dataValues()\n   {\n      return this.#svelteData.values();\n   }\n\n   /**\n    * Returns the length of the mounted Svelte component list.\n    *\n    * @returns {number} Length of mounted Svelte component list.\n    */\n   get length()\n   {\n      return this.#svelteData.length;\n   }\n}\n","import {\n   isApplicationShell,\n   parseSvelteConfig }  from '@typhonjs-fvtt/runtime/svelte/util';\n\n/**\n * Instantiates and attaches a Svelte component to the main inserted HTML.\n *\n * @param {SvelteFormApplication} app - The application\n *\n * @param {JQuery}            html - The inserted HTML.\n *\n * @param {object}            config - Svelte component options\n *\n * @param {Function}          elementRootUpdate - A callback to assign to the external context.\n *\n * @returns {SvelteData} The config + instantiated Svelte component.\n */\nexport function loadSvelteConfig(app, html, config, elementRootUpdate)\n{\n   const svelteOptions = typeof config.options === 'object' ? config.options : {};\n\n   let target;\n\n   if (config.target instanceof HTMLElement)       // A specific HTMLElement to append Svelte component.\n   {\n      target = config.target;\n   }\n   else if (typeof config.target === 'string')     // A string target defines a selector to find in existing HTML.\n   {\n      target = html.find(config.target).get(0);\n   }\n   else                                            // No target defined, create a document fragment.\n   {\n      target = document.createDocumentFragment();\n   }\n\n   if (target === void 0)\n   {\n      throw new Error(\n       `SvelteFormApplication - s_LOAD_CONFIG - could not find target selector: ${config.target} for config:\\n${\n        JSON.stringify(config)}`);\n   }\n\n   const NewSvelteComponent = config.class;\n\n   const svelteConfig = parseSvelteConfig({ ...config, target }, app);\n\n   const externalContext = svelteConfig.context.get('external');\n\n   // Inject the Foundry application instance and `elementRootUpdate` to the external context.\n   externalContext.application = app;\n   externalContext.elementRootUpdate = elementRootUpdate;\n\n   let eventbus;\n\n   // Potentially inject any TyphonJS eventbus and track the proxy in the SvelteData instance.\n   if (typeof app._eventbus === 'object' && typeof app._eventbus.createProxy === 'function')\n   {\n      eventbus = app._eventbus.createProxy();\n      externalContext.eventbus = eventbus;\n   }\n\n   // Create the Svelte component.\n   /**\n    * @type {import('svelte').SvelteComponent}\n    */\n   const component = new NewSvelteComponent(svelteConfig);\n\n   // Set any eventbus to the config.\n   svelteConfig.eventbus = eventbus;\n\n   /**\n    * @type {HTMLElement}\n    */\n   let element;\n\n   // We can directly get the root element from components which follow the application store contract.\n   if (isApplicationShell(component))\n   {\n      element = component.elementRoot;\n   }\n\n   // Detect if target is a synthesized DocumentFragment with an child element. Child elements will be present\n   // if the Svelte component mounts and renders initial content into the document fragment.\n   if (config.target instanceof DocumentFragment && target.firstElementChild)\n   {\n      if (element === void 0) { element = target.firstElementChild; }\n      html.append(target);\n   }\n   else if (config.target instanceof HTMLElement && element === void 0)\n   {\n      if (config.target instanceof HTMLElement && typeof svelteOptions.selectorElement !== 'string')\n      {\n         throw new Error(\n          `SvelteFormApplication - s_LOAD_CONFIG - HTMLElement target with no 'selectorElement' defined for config:\\n${\n           JSON.stringify(config)}`);\n      }\n\n      // The target is an HTMLElement so find the Application element from `selectorElement` option.\n      element = target.querySelector(svelteOptions.selectorElement);\n\n      if (element === null || element === void 0)\n      {\n         throw new Error(\n          `SvelteFormApplication - s_LOAD_CONFIG - HTMLElement target - could not find 'selectorElement' for config:\\n${\n           JSON.stringify(config)}`);\n      }\n   }\n\n   // If the configuration / original target is an HTML element then do not inject HTML.\n   const injectHTML = !(config.target instanceof HTMLElement);\n\n   return { config: svelteConfig, component, element, injectHTML };\n}\n","const s_REGEX = /(\\d+)\\s*px/;\n\n/**\n * Parses a pixel string / computed styles. Ex. `100px` returns `100`.\n *\n * @param {string}   value - Value to parse.\n *\n * @returns {number|undefined} The integer component of a pixel string.\n */\nexport function styleParsePixels(value)\n{\n   if (typeof value !== 'string') { return void 0; }\n\n   const isPixels = s_REGEX.test(value);\n   const number = parseInt(value);\n\n   return isPixels && Number.isFinite(number) ? number : void 0;\n}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { derived, writable }  from \"svelte/store\";\n\nimport {\n   propertyStore,\n   subscribeIgnoreFirst }     from '@typhonjs-fvtt/runtime/svelte/store';\n\nimport {\n   deepMerge,\n   safeAccess,\n   safeSet }                  from '@typhonjs-fvtt/runtime/svelte/util';\n\n/**\n * Contains the reactive functionality / Svelte stores associated with SvelteApplication.\n */\nexport class SvelteReactive\n{\n   /**\n    * @type {SvelteApplication}\n    */\n   #application;\n\n   /**\n    * @type {boolean}\n    */\n   #initialized = false;\n\n   /**\n    * The Application option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {StoreAppOptions}\n    */\n   #storeAppOptions;\n\n   /**\n    * Stores the update function for `#storeAppOptions`.\n    *\n    * @type {import('svelte/store').Writable.update}\n    */\n   #storeAppOptionsUpdate;\n\n   /**\n    * Stores the UI state data to make it accessible via getters.\n    *\n    * @type {object}\n    */\n   #dataUIState;\n\n   /**\n    * The UI option store which is injected into mounted Svelte component context under the `external` key.\n    *\n    * @type {StoreUIOptions}\n    */\n   #storeUIState;\n\n   /**\n    * Stores the update function for `#storeUIState`.\n    *\n    * @type {import('svelte/store').Writable.update}\n    */\n   #storeUIStateUpdate;\n\n   /**\n    * Stores the unsubscribe functions from local store subscriptions.\n    *\n    * @type {import('svelte/store').Unsubscriber[]}\n    */\n   #storeUnsubscribe = [];\n\n   /**\n    * @param {SvelteApplication} application - The host Foundry application.\n    */\n   constructor(application)\n   {\n      this.#application = application;\n   }\n\n   /**\n    * Initializes reactive support. Package private for internal use.\n    *\n    * @returns {SvelteStores} Internal methods to interact with Svelte stores.\n    * @package\n    */\n   initialize()\n   {\n      if (this.#initialized) { return; }\n\n      this.#initialized = true;\n\n      this.#storesInitialize();\n\n      return {\n         appOptionsUpdate: this.#storeAppOptionsUpdate,\n         uiOptionsUpdate: this.#storeUIStateUpdate,\n         subscribe: this.#storesSubscribe.bind(this),\n         unsubscribe: this.#storesUnsubscribe.bind(this)\n      };\n   }\n\n// Only reactive getters ---------------------------------------------------------------------------------------------\n\n   /**\n    * Returns the current dragging UI state.\n    *\n    * @returns {boolean} Dragging UI state.\n    */\n   get dragging() { return this.#dataUIState.dragging; }\n\n   /**\n    * Returns the current minimized UI state.\n    *\n    * @returns {boolean} Minimized UI state.\n    */\n   get minimized() { return this.#dataUIState.minimized; }\n\n   /**\n    * Returns the current resizing UI state.\n    *\n    * @returns {boolean} Resizing UI state.\n    */\n   get resizing() { return this.#dataUIState.resizing; }\n\n// Reactive getter / setters -----------------------------------------------------------------------------------------\n\n   /**\n    * Returns the draggable app option.\n    *\n    * @returns {boolean} Draggable app option.\n    */\n   get draggable() { return this.#application?.options?.draggable; }\n\n   /**\n    * Returns the headerButtonNoClose app option.\n    *\n    * @returns {boolean} Remove the close the button in header app option.\n    */\n   get headerButtonNoClose() { return this.#application?.options?.headerButtonNoClose; }\n\n   /**\n    * Returns the headerButtonNoLabel app option.\n    *\n    * @returns {boolean} Remove the labels from buttons in header app option.\n    */\n   get headerButtonNoLabel() { return this.#application?.options?.headerButtonNoLabel; }\n\n   /**\n    * Returns the minimizable app option.\n    *\n    * @returns {boolean} Minimizable app option.\n    */\n   get minimizable() { return this.#application?.options?.minimizable; }\n\n   /**\n    * @inheritDoc\n    */\n   get popOut() { return this.#application.popOut; }\n\n   /**\n    * Returns the resizable option.\n    *\n    * @returns {boolean} Resizable app option.\n    */\n   get resizable() { return this.#application?.options?.resizable; }\n\n   /**\n    * Returns the store for app options.\n    *\n    * @returns {StoreAppOptions} App options store.\n    */\n   get storeAppOptions() { return this.#storeAppOptions; }\n\n   /**\n    * Returns the store for UI options.\n    *\n    * @returns {StoreUIOptions} UI options store.\n    */\n   get storeUIState() { return this.#storeUIState; }\n\n   /**\n    * Returns the title accessor from the parent Application class.\n    * TODO: Application v2; note that super.title localizes `this.options.title`; IMHO it shouldn't.\n    *\n    * @returns {string} Title.\n    */\n   get title() { return this.#application.title; }\n\n   /**\n    * Sets `this.options.draggable` which is reactive for application shells.\n    *\n    * @param {boolean}  draggable - Sets the draggable option.\n    */\n   set draggable(draggable)\n   {\n      if (typeof draggable === 'boolean') { this.setOptions('draggable', draggable); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoClose` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoClose - Sets the headerButtonNoClose option.\n    */\n   set headerButtonNoClose(headerButtonNoClose)\n   {\n      if (typeof headerButtonNoClose === 'boolean') { this.setOptions('headerButtonNoClose', headerButtonNoClose); }\n   }\n\n   /**\n    * Sets `this.options.headerButtonNoLabel` which is reactive for application shells.\n    *\n    * @param {boolean}  headerButtonNoLabel - Sets the headerButtonNoLabel option.\n    */\n   set headerButtonNoLabel(headerButtonNoLabel)\n   {\n      if (typeof headerButtonNoLabel === 'boolean') { this.setOptions('headerButtonNoLabel', headerButtonNoLabel); }\n   }\n\n   /**\n    * Sets `this.options.minimizable` which is reactive for application shells that are also pop out.\n    *\n    * @param {boolean}  minimizable - Sets the minimizable option.\n    */\n   set minimizable(minimizable)\n   {\n      if (typeof minimizable === 'boolean') { this.setOptions('minimizable', minimizable); }\n   }\n\n   /**\n    * Sets `this.options.popOut` which is reactive for application shells. This will add / remove this application\n    * from `ui.windows`.\n    *\n    * @param {boolean}  popOut - Sets the popOut option.\n    */\n   set popOut(popOut)\n   {\n      if (typeof popOut === 'boolean') { this.setOptions('popOut', popOut); }\n   }\n\n   /**\n    * Sets `this.options.resizable` which is reactive for application shells.\n    *\n    * @param {boolean}  resizable - Sets the resizable option.\n    */\n   set resizable(resizable)\n   {\n      if (typeof resizable === 'boolean') { this.setOptions('resizable', resizable); }\n   }\n\n   /**\n    * Sets `this.options.title` which is reactive for application shells.\n    *\n    * @param {string}   title - Application title; will be localized, so a translation key is fine.\n    */\n   set title(title)\n   {\n      if (typeof title === 'string') { this.setOptions('title', title); }\n   }\n\n   /**\n    * Provides a way to safely get this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {*}        [defaultValue] - A default value returned if the accessor is not found.\n    *\n    * @returns {*} Value at the accessor.\n    */\n   getOptions(accessor, defaultValue)\n   {\n      return safeAccess(this.#application.options, accessor, defaultValue);\n   }\n\n   /**\n    * Provides a way to merge `options` into this applications options and update the appOptions store.\n    *\n    * @param {object}   options - The options object to merge with `this.options`.\n    */\n   mergeOptions(options)\n   {\n      this.#storeAppOptionsUpdate((instanceOptions) => deepMerge(instanceOptions, options));\n   }\n\n   /**\n    * Provides a way to safely set this applications options given an accessor string which describes the\n    * entries to walk. To access deeper entries into the object format the accessor string with `.` between entries\n    * to walk.\n    *\n    * Additionally if an application shell Svelte component is mounted and exports the `appOptions` property then\n    * the application options is set to `appOptions` potentially updating the application shell / Svelte component.\n    *\n    * // TODO DOCUMENT the accessor in more detail.\n    *\n    * @param {string}   accessor - The path / key to set. You can set multiple levels.\n    *\n    * @param {*}        value - Value to set.\n    */\n   setOptions(accessor, value)\n   {\n      const success = safeSet(this.#application.options, accessor, value);\n\n      // If `this.options` modified then update the app options store.\n      if (success)\n      {\n         this.#storeAppOptionsUpdate(() => this.#application.options);\n      }\n   }\n\n   /**\n    * Initializes the Svelte stores and derived stores for the application options and UI state.\n    *\n    * While writable stores are created the update method is stored in private variables locally and derived Readable\n    * stores are provided for essential options which are commonly used.\n    *\n    * These stores are injected into all Svelte components mounted under the `external` context: `storeAppOptions` and\n    * ` storeUIState`.\n    */\n   #storesInitialize()\n   {\n      const writableAppOptions = writable(this.#application.options);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeAppOptionsUpdate = writableAppOptions.update;\n\n      /**\n       * Create custom store. The main subscribe method for all app options changes is provided along with derived\n       * writable stores for all reactive options.\n       *\n       * @type {StoreAppOptions}\n       */\n      const storeAppOptions = {\n         subscribe: writableAppOptions.subscribe,\n\n         draggable: propertyStore(writableAppOptions, 'draggable'),\n         headerButtonNoClose: propertyStore(writableAppOptions, 'headerButtonNoClose'),\n         headerButtonNoLabel: propertyStore(writableAppOptions, 'headerButtonNoLabel'),\n         minimizable: propertyStore(writableAppOptions, 'minimizable'),\n         popOut: propertyStore(writableAppOptions, 'popOut'),\n         resizable: propertyStore(writableAppOptions, 'resizable'),\n         title: propertyStore(writableAppOptions, 'title')\n      };\n\n      Object.freeze(storeAppOptions);\n\n      this.#storeAppOptions = storeAppOptions;\n\n      this.#dataUIState = {\n         dragging: false,\n         headerButtons: [],\n         minimized: this.#application._minimized,\n         resizing: false\n      };\n\n      // Create a store for UI state data.\n      const writableUIOptions = writable(this.#dataUIState);\n\n      // Keep the update function locally, but make the store essentially readable.\n      this.#storeUIStateUpdate = writableUIOptions.update;\n\n      /**\n       * @type {StoreUIOptions}\n       */\n      const storeUIState = {\n         subscribe: writableUIOptions.subscribe,\n\n         dragging: propertyStore(writableUIOptions, 'dragging'),\n         headerButtons: derived(writableUIOptions, ($options, set) => set($options.headerButtons)),\n         minimized: derived(writableUIOptions, ($options, set) => set($options.minimized)),\n         resizing: propertyStore(writableUIOptions, 'resizing')\n      };\n\n      Object.freeze(storeUIState);\n\n      // Initialize the store with options set in the Application constructor.\n      this.#storeUIState = storeUIState;\n   }\n\n   /**\n    * Registers local store subscriptions for app options. `popOut` controls registering this app with `ui.windows`.\n    * `zIndex` controls the z-index style of the element root.\n    *\n    * @see SvelteApplication._injectHTML\n    */\n   #storesSubscribe()\n   {\n      // Register local subscriptions.\n\n      // Handles updating header buttons to add / remove the close button.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoClose, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoClose: value });\n      }));\n\n      // Handles updating header buttons to add / remove button labels.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.headerButtonNoLabel, (value) =>\n      {\n         this.updateHeaderButtons({ headerButtonNoLabel: value });\n      }));\n\n      // Handles adding / removing this application from `ui.windows` when popOut changes.\n      this.#storeUnsubscribe.push(subscribeIgnoreFirst(this.#storeAppOptions.popOut, (value) =>\n      {\n         if (value && this.#application.rendered)\n         {\n            ui.windows[this.#application.appId] = this.#application;\n         }\n         else\n         {\n            delete ui.windows[this.#application.appId];\n         }\n      }));\n   }\n\n   /**\n    * Unsubscribes from any locally monitored stores.\n    *\n    * @see SvelteApplication.close\n    */\n   #storesUnsubscribe()\n   {\n      this.#storeUnsubscribe.forEach((unsubscribe) => unsubscribe());\n      this.#storeUnsubscribe = [];\n   }\n\n   /**\n    * Updates the UI Options store with the current header buttons. You may dynamically add / remove header buttons\n    * if using an application shell Svelte component. In either overriding `_getHeaderButtons` or responding to the\n    * Hooks fired return a new button array and the uiOptions store is updated and the application shell will render\n    * the new buttons.\n    *\n    * Optionally you can set in the Foundry app options `headerButtonNoClose` to remove the close button and\n    * `headerButtonNoLabel` to true and labels will be removed from the header buttons.\n    *\n    * @param {object} opts - Optional parameters (for internal use)\n    *\n    * @param {boolean} opts.headerButtonNoClose - The value for `headerButtonNoClose`.\n    *\n    * @param {boolean} opts.headerButtonNoLabel - The value for `headerButtonNoLabel`.\n    */\n   updateHeaderButtons({ headerButtonNoClose = this.#application.options.headerButtonNoClose,\n    headerButtonNoLabel = this.#application.options.headerButtonNoLabel } = {})\n   {\n      let buttons = this.#application._getHeaderButtons();\n\n      // Remove close button if this.options.headerButtonNoClose is true;\n      if (typeof headerButtonNoClose === 'boolean' && headerButtonNoClose)\n      {\n         buttons = buttons.filter((button) => button.class !== 'close');\n      }\n\n      // Remove labels if this.options.headerButtonNoLabel is true;\n      if (typeof headerButtonNoLabel === 'boolean' && headerButtonNoLabel)\n      {\n         for (const button of buttons) { button.label = void 0; }\n      }\n\n      this.#storeUIStateUpdate((options) =>\n      {\n         options.headerButtons = buttons;\n         return options;\n      });\n   }\n}\n","/**\n * Awaits `requestAnimationFrame` calls by the counter specified. This allows asynchronous applications for direct /\n * inline style modification amongst other direct animation techniques.\n *\n * @param {number}   [cntr=1] - A positive integer greater than 0 for amount of requestAnimationFrames to wait.\n *\n * @returns {Promise<number>} Returns current time equivalent to `performance.now()`.\n */\nasync function nextAnimationFrame(cntr = 1)\n{\n   if (!Number.isInteger(cntr) || cntr < 1)\n   {\n      throw new TypeError(`nextAnimationFrame error: 'cntr' must be a positive integer greater than 0.`);\n   }\n\n   let currentTime = performance.now();\n   for (;--cntr >= 0;)\n   {\n      currentTime = await new Promise((resolve) => requestAnimationFrame(resolve));\n   }\n\n   return currentTime;\n}\n\nexport { nextAnimationFrame };\n//# sourceMappingURL=index.js.map\n","/**\n * Provides the storage and sequencing of managed position validators. Each validator added may be a bespoke function or\n * a {@link ValidatorData} object containing an `id`, `validator`, and `weight` attributes; `validator` is the only\n * required attribute.\n *\n * The `id` attribute can be anything that creates a unique ID for the validator; recommended strings or numbers. This\n * allows validators to be removed by ID easily.\n *\n * The `weight` attribute is a number between 0 and 1 inclusive that allows validators to be added in a\n * predictable order which is especially handy if they are manipulated at runtime. A lower weighted validator always\n * runs before a higher weighted validator. If no weight is specified the default of '1' is assigned and it is appended\n * to the end of the validators list.\n *\n * This class forms the public API which is accessible from the `.validators` getter in the main Position instance.\n * ```\n * const position = new Position(<PositionData>);\n * position.validators.add(...);\n * position.validators.clear();\n * position.validators.length;\n * position.validators.remove(...);\n * position.validators.removeBy(...);\n * position.validators.removeById(...);\n * ```\n */\nexport class AdapterValidators\n{\n   #validatorData;\n   #mapUnsubscribe = new Map();\n\n   /**\n    * @returns {[AdapterValidators, ValidatorData[]]} Returns this and internal storage for validator adapter.\n    */\n   constructor()\n   {\n      this.#validatorData = [];\n\n      Object.seal(this);\n\n      return [this, this.#validatorData];\n   }\n\n   /**\n    * @returns {number} Returns the length of the validators array.\n    */\n   get length() { return this.#validatorData.length; }\n\n   /**\n    * Provides an iterator for validators.\n    *\n    * @returns {Generator<ValidatorData|undefined>} Generator / iterator of validators.\n    * @yields {ValidatorData<T>}\n    */\n   *[Symbol.iterator]()\n   {\n      if (this.#validatorData.length === 0) { return; }\n\n      for (const entry of this.#validatorData)\n      {\n         yield { ...entry };\n      }\n   }\n\n   /**\n    * @param {...(ValidatorFn<T>|ValidatorData<T>)}   validators -\n    */\n   add(...validators)\n   {\n      /**\n       * Tracks the number of validators added that have subscriber functionality.\n       *\n       * @type {number}\n       */\n      let subscribeCount = 0;\n\n      for (const validator of validators)\n      {\n         const validatorType = typeof validator;\n\n         if (validatorType !== 'function' && validatorType !== 'object' || validator === null)\n         {\n            throw new TypeError(`AdapterValidator error: 'validator' is not a function or object.`);\n         }\n\n         let data = void 0;\n         let subscribeFn = void 0;\n\n         switch (validatorType)\n         {\n            case 'function':\n               data = {\n                  id: void 0,\n                  validator,\n                  weight: 1\n               };\n\n               subscribeFn = validator.subscribe;\n               break;\n\n            case 'object':\n               if (typeof validator.validator !== 'function')\n               {\n                  throw new TypeError(`AdapterValidator error: 'validator' attribute is not a function.`);\n               }\n\n               if (validator.weight !== void 0 && typeof validator.weight !== 'number' ||\n                (validator.weight < 0 || validator.weight > 1))\n               {\n                  throw new TypeError(\n                   `AdapterValidator error: 'weight' attribute is not a number between '0 - 1' inclusive.`);\n               }\n\n               data = {\n                  id: validator.id !== void 0 ? validator.id : void 0,\n                  validator: validator.validator,\n                  weight: validator.weight || 1\n               };\n\n               subscribeFn = validator.validator.subscribe ?? validator.subscribe;\n               break;\n         }\n\n         // Find the index to insert where data.weight is less than existing values weight.\n         const index = this.#validatorData.findIndex((value) =>\n         {\n            return data.weight < value.weight;\n         });\n\n         // If an index was found insert at that location.\n         if (index >= 0)\n         {\n            this.#validatorData.splice(index, 0, data);\n         }\n         else // push to end of validators.\n         {\n            this.#validatorData.push(data);\n         }\n\n         if (typeof subscribeFn === 'function')\n         {\n            // TODO: consider how to handle validator updates.\n            const unsubscribe = subscribeFn();\n\n            // Ensure that unsubscribe is a function.\n            if (typeof unsubscribe !== 'function')\n            {\n               throw new TypeError(\n                'AdapterValidator error: Filter has subscribe function, but no unsubscribe function is returned.');\n            }\n\n            // Ensure that the same validator is not subscribed to multiple times.\n            if (this.#mapUnsubscribe.has(data.validator))\n            {\n               throw new Error(\n                'AdapterValidator error: Filter added already has an unsubscribe function registered.');\n            }\n\n            this.#mapUnsubscribe.set(data.validator, unsubscribe);\n            subscribeCount++;\n         }\n      }\n\n      // Filters with subscriber functionality are assumed to immediately invoke the `subscribe` callback. If the\n      // subscriber count is less than the amount of validators added then automatically trigger an index update\n      // manually.\n      // TODO: handle validator updates.\n      // if (subscribeCount < validators.length) { this.#indexUpdate(); }\n   }\n\n   clear()\n   {\n      this.#validatorData.length = 0;\n\n      // Unsubscribe from all validators with subscription support.\n      for (const unsubscribe of this.#mapUnsubscribe.values())\n      {\n         unsubscribe();\n      }\n\n      this.#mapUnsubscribe.clear();\n\n      // TODO: handle validator updates.\n      // this.#indexUpdate();\n   }\n\n   /**\n    * @param {...(ValidatorFn<T>|ValidatorData<T>)}   validators -\n    */\n   remove(...validators)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      for (const data of validators)\n      {\n         // Handle the case that the validator may either be a function or a validator entry / object.\n         const actualValidator = typeof data === 'function' ? data : data !== null && typeof data === 'object' ?\n          data.validator : void 0;\n\n         if (!actualValidator) { continue; }\n\n         for (let cntr = this.#validatorData.length; --cntr >= 0;)\n         {\n            if (this.#validatorData[cntr].validator === actualValidator)\n            {\n               this.#validatorData.splice(cntr, 1);\n\n               // Invoke any unsubscribe function for given validator then remove from tracking.\n               let unsubscribe = void 0;\n               if (typeof (unsubscribe = this.#mapUnsubscribe.get(actualValidator)) === 'function')\n               {\n                  unsubscribe();\n                  this.#mapUnsubscribe.delete(actualValidator);\n               }\n            }\n         }\n      }\n\n      // Update the index a validator was removed.\n      // TODO: handle validator updates.\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\n   }\n\n   /**\n    * Remove validators by the provided callback. The callback takes 3 parameters: `id`, `validator`, and `weight`.\n    * Any truthy value returned will remove that validator.\n    *\n    * @param {function(*, ValidatorFn<T>, number): boolean} callback - Callback function to evaluate each validator\n    *                                                                  entry.\n    */\n   removeBy(callback)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      if (typeof callback !== 'function')\n      {\n         throw new TypeError(`AdapterValidator error: 'callback' is not a function.`);\n      }\n\n      this.#validatorData = this.#validatorData.filter((data) =>\n      {\n         const remove = callback.call(callback, { ...data });\n\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validator)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.validator);\n            }\n         }\n\n         // Reverse remove boolean to properly validator / remove this validator.\n         return !remove;\n      });\n\n      // TODO: handle validator updates.\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\n   }\n\n   removeById(...ids)\n   {\n      const length = this.#validatorData.length;\n\n      if (length === 0) { return; }\n\n      this.#validatorData = this.#validatorData.filter((data) =>\n      {\n         let remove = false;\n\n         for (const id of ids) { remove |= data.id === id; }\n\n         // If not keeping invoke any unsubscribe function for given validator then remove from tracking.\n         if (remove)\n         {\n            let unsubscribe;\n            if (typeof (unsubscribe = this.#mapUnsubscribe.get(data.validator)) === 'function')\n            {\n               unsubscribe();\n               this.#mapUnsubscribe.delete(data.validator);\n            }\n         }\n\n         return !remove; // Swap here to actually remove the item via array validator method.\n      });\n\n      // TODO: handle validator updates.\n      // if (length !== this.#validatorData.length) { this.#indexUpdate(); }\n   }\n}\n\n/**\n * @typedef {function(object, PositionData): PositionData|null} ValidatorFn - Position validator function that\n *                         takes a {@link PositionData} instance potentially modifying it or returning null if invalid.\n *\n * @property {Function} [subscribe] - Optional subscribe function following the Svelte store / subscribe pattern.\n */\n\n/**\n * @typedef {object} ValidatorData\n *\n * @property {*}           [id=undefined] - An ID associated with this validator. Can be used to remove the validator.\n *\n * @property {ValidatorFn} validator - Position validator function that takes a {@link PositionData} instance\n *                                     potentially modifying it or returning null if invalid.\n *\n * @property {number}      [weight=1] - A number between 0 and 1 inclusive to position this validator against others.\n *\n * @property {Function}    [subscribe] - Optional subscribe function following the Svelte store / subscribe pattern.\n */\n","import { linear }             from 'svelte/easing';\n\nimport { nextAnimationFrame } from '@typhonjs-fvtt/runtime/svelte/animate';\nimport { propertyStore }      from '@typhonjs-fvtt/runtime/svelte/store';\nimport { isIterable, lerp }   from '@typhonjs-fvtt/runtime/svelte/util';\n\nimport { AdapterValidators }  from './AdapterValidators.js';\nimport { styleParsePixels }   from '../styleParsePixels.js';\n\n/**\n * Provides a store for position following the subscriber protocol in addition to providing individual writable derived\n * stores for each independent variable.\n */\nexport class Position\n{\n   #subscriptions = [];\n\n   /**\n    * @type {PositionData}\n    */\n   #data = { height: null, left: null, rotateX: null, rotateY: null, rotateZ: null, scale: null, top: null,\n    transformOrigin: s_TRANSFORM_ORIGIN_DEFAULT, width: null, zIndex: null };\n\n   /**\n    * @type {Map<string, PositionData>}\n    */\n   #dataSaved = new Map();\n\n   /**\n    * Stores current animation keys.\n    *\n    * @type {Set<string>}\n    */\n   #currentAnimationKeys = new Set();\n\n   /**\n    * @type {PositionData}\n    */\n   #defaultData;\n\n   /**\n    * The associated parent for positional data tracking. Used in validators.\n    *\n    * @type {object}\n    */\n   #parent;\n\n   /**\n    * Stores all pending set position Promise resolve functions.\n    *\n    * @type {Function[]}\n    */\n   #elementUpdatePromises = [];\n\n   /**\n    * @type {StorePosition}\n    */\n   #stores;\n\n   /**\n    * @type {Record<string, string>}\n    */\n   #transforms = {};\n\n   /**\n    * @type {boolean}\n    */\n   #transformUpdate = false;\n\n   /**\n    * @type {boolean}\n    */\n   #updateElementInvoked = false;\n\n   /**\n    * @type {AdapterValidators}\n    */\n   #validators;\n\n   /**\n    * @type {ValidatorData[]}\n    */\n   #validatorsAdapter;\n\n   /**\n    * @param {object}         parent - The associated parent for positional data tracking. Used in validators.\n    *\n    * @param {object}         options - Default values.\n    */\n   constructor(parent, options = {})\n   {\n      this.#parent = parent;\n\n      const data = this.#data;\n\n      // Set default value from options.\n      if (typeof options === 'object')\n      {\n         if (Number.isFinite(options.height) || options.height === 'auto' || options.height === null)\n         {\n            data.height = typeof options.height === 'number' ? Math.round(options.height) : options.height;\n         }\n\n         if (Number.isFinite(options.left) || options.left === null)\n         {\n            data.left = typeof options.left === 'number' ? Math.round(options.left) : options.left;\n         }\n\n         if (Number.isFinite(options.rotateX) || options.rotateX === null)\n         {\n            data.rotateX = options.rotateX;\n            if (Number.isFinite(data.rotateX)) { this.#transforms.rotateX = `rotateX(${data.rotateX}deg)`; }\n         }\n\n         if (Number.isFinite(options.rotateY) || options.rotateY === null)\n         {\n            data.rotateY = options.rotateY;\n            if (Number.isFinite(data.rotateY)) { this.#transforms.rotateY = `rotateY(${data.rotateY}deg)`; }\n         }\n\n         if (Number.isFinite(options.rotateZ) || options.rotateZ === null)\n         {\n            data.rotateZ = options.rotateZ;\n            if (Number.isFinite(data.rotateZ)) { this.#transforms.rotateZ = `rotateZ(${data.rotateZ}deg)`; }\n         }\n\n         if (Number.isFinite(options.scale) || options.scale === null)\n         {\n            data.scale = options.scale;\n            if (Number.isFinite(data.scale)) { this.#transforms.scale = `scale(${data.scale})`; }\n         }\n\n         if (Number.isFinite(options.top) || options.top === null)\n         {\n            data.top = typeof options.top === 'number' ? Math.round(options.top) : options.top;\n         }\n\n         if (typeof options.transformOrigin === 'string' && s_TRANSFORM_ORIGINS.includes(options.transformOrigin))\n         {\n            data.transformOrigin = options.transformOrigin;\n         }\n\n         if (Number.isFinite(options.width) || options.width === 'auto' || options.width === null)\n         {\n            data.width = typeof options.width === 'number' ? Math.round(options.width) : options.width;\n         }\n\n         if (Number.isFinite(options.zIndex) || options.zIndex === null)\n         {\n            data.zIndex = typeof options.zIndex === 'number' ? Math.round(options.zIndex) : options.zIndex;\n         }\n      }\n\n      this.#stores = {\n         height: propertyStore(this, 'height'),\n         left: propertyStore(this, 'left'),\n         rotateX: propertyStore(this, 'rotateX'),\n         rotateY: propertyStore(this, 'rotateY'),\n         rotateZ: propertyStore(this, 'rotateZ'),\n         scale: propertyStore(this, 'scale'),\n         top: propertyStore(this, 'top'),\n         transformOrigin: propertyStore(this, 'transformOrigin'),\n         width: propertyStore(this, 'width'),\n         zIndex: propertyStore(this, 'zIndex')\n      };\n\n      this.#stores.transformOrigin.values = s_TRANSFORM_ORIGINS;\n\n      Object.freeze(this.#stores);\n\n      [this.#validators, this.#validatorsAdapter] = new AdapterValidators();\n   }\n\n   /**\n    * Returns a promise that is resolved on the next element update with the time of the update.\n    *\n    * @returns {Promise<number>} Promise resolved on element update.\n    */\n   get elementUpdated()\n   {\n      return new Promise((resolve) => this.#elementUpdatePromises.push(resolve));\n   }\n\n   /**\n    * Returns the derived writable stores for individual data variables.\n    *\n    * @returns {StorePosition} Derived / writable stores.\n    */\n   get stores() { return this.#stores; }\n\n   /**\n    * Returns the validators.\n    *\n    * @returns {AdapterValidators} validators.\n    */\n   get validators() { return this.#validators; }\n\n// Data accessors ----------------------------------------------------------------------------------------------------\n\n   /**\n    * @returns {number|'auto'|null} height\n    */\n   get height() { return this.#data.height; }\n\n   /**\n    * @returns {number|null} left\n    */\n   get left() { return this.#data.left; }\n\n   /**\n    * @returns {number|null} rotateX\n    */\n   get rotateX() { return this.#data.rotateX; }\n\n   /**\n    * @returns {number|null} rotateY\n    */\n   get rotateY() { return this.#data.rotateY; }\n\n   /**\n    * @returns {number|null} rotateZ\n    */\n   get rotateZ() { return this.#data.rotateZ; }\n\n   /**\n    * @returns {number|null} scale\n    */\n   get scale() { return this.#data.scale; }\n\n   /**\n    * @returns {number|null} top\n    */\n   get top() { return this.#data.top; }\n\n   /**\n    * @returns {string} transformOrigin\n    */\n   get transformOrigin() { return this.#data.transformOrigin; }\n\n   /**\n    * @returns {number|'auto'|null} width\n    */\n   get width() { return this.#data.width; }\n\n   /**\n    * @returns {number|null} z-index\n    */\n   get zIndex() { return this.#data.zIndex; }\n\n   /**\n    * @param {number|'auto'|null} height -\n    */\n   set height(height)\n   {\n      this.#stores.height.set(height);\n   }\n\n   /**\n    * @param {number|null} left -\n    */\n   set left(left)\n   {\n      this.#stores.left.set(left);\n   }\n\n   /**\n    * @param {number|null} rotateX -\n    */\n   set rotateX(rotateX)\n   {\n      this.#stores.rotateX.set(rotateX);\n   }\n\n   /**\n    * @param {number|null} rotateY -\n    */\n   set rotateY(rotateY)\n   {\n      this.#stores.rotateY.set(rotateY);\n   }\n\n   /**\n    * @param {number|null} rotateZ -\n    */\n   set rotateZ(rotateZ)\n   {\n      this.#stores.rotateZ.set(rotateZ);\n   }\n\n   /**\n    * @param {number|null} scale -\n    */\n   set scale(scale)\n   {\n      this.#stores.scale.set(scale);\n   }\n\n   /**\n    * @param {number|null} top -\n    */\n   set top(top)\n   {\n      this.#stores.top.set(top);\n   }\n\n   /**\n    * @param {string} transformOrigin -\n    */\n   set transformOrigin(transformOrigin)\n   {\n      if (s_TRANSFORM_ORIGINS.includes(transformOrigin)) { this.#stores.transformOrigin.set(transformOrigin); }\n   }\n\n   /**\n    * @param {number|'auto'|null} width -\n    */\n   set width(width)\n   {\n      this.#stores.width.set(width);\n   }\n\n   /**\n    * @param {number|null} zIndex -\n    */\n   set zIndex(zIndex)\n   {\n      this.#stores.zIndex.set(zIndex);\n   }\n\n   /**\n    * Provides animation\n    *\n    * @param {PositionData}   position - The destination position.\n    *\n    * @param {object}         [opts] - Optional parameters.\n    *\n    * @param {number}         [opts.duration] - Duration in milliseconds.\n    *\n    * @param {Function}       [opts.easing=linear] - Easing function.\n    *\n    * @param {Function}       [opts.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {Promise<void>} Animation complete.\n    */\n   async animateTo(position = {}, { duration = 1000, easing = linear, interpolate = lerp } = {})\n   {\n      if (typeof position !== 'object')\n      {\n         throw new TypeError(`Position - animateTo error: 'position' is not an object.`);\n      }\n\n      // Early out if the application is not positionable.\n      const parent = this.#parent;\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return;\n      }\n\n      if (!Number.isInteger(duration) || duration < 0)\n      {\n         throw new TypeError(`Position - animateTo error: 'duration' is not a positive integer.`);\n      }\n\n      if (typeof easing !== 'function')\n      {\n         throw new TypeError(`Position - animateTo error: 'easing' is not a function.`);\n      }\n\n      if (typeof interpolate !== 'function')\n      {\n         throw new TypeError(`Position - animateTo error: 'interpolate' is not a function.`);\n      }\n\n      const data = this.#data;\n      const currentAnimationKeys = this.#currentAnimationKeys;\n      const initial = {};\n      const destination = {};\n\n      // Set initial data if the key / data is defined and the end position is not equal to current data.\n      for (const key in position)\n      {\n         if (data[key] !== void 0 && position[key] !== data[key])\n         {\n            destination[key] = position[key];\n            initial[key] = data[key];\n         }\n      }\n\n      // Set initial data for transform values that are often null by default.\n      if (initial.rotateX === null) { initial.rotateX = 0; }\n      if (initial.rotateY === null) { initial.rotateY = 0; }\n      if (initial.rotateZ === null) { initial.rotateZ = 0; }\n      if (initial.scale === null) { initial.scale = 1; }\n\n      if (destination.rotateX === null) { destination.rotateX = 0; }\n      if (destination.rotateY === null) { destination.rotateY = 0; }\n      if (destination.rotateZ === null) { destination.rotateZ = 0; }\n      if (destination.scale === null) { destination.scale = 1; }\n\n      // Reject all initial data that is not a number or is current animating.\n      // Add all keys that pass to `currentAnimationKeys`.\n      for (const key in initial)\n      {\n         if (!Number.isFinite(initial[key]) || currentAnimationKeys.has(key)) { delete initial[key]; }\n         else { currentAnimationKeys.add(key); }\n      }\n\n      const newData = Object.assign({}, initial);\n      const keys = Object.keys(newData);\n\n      // Nothing to animate, so return now.\n      if (keys.length === 0) { return; }\n\n      const start = await nextAnimationFrame();\n      let current = 0;\n\n      while (current < duration)\n      {\n         const easedTime = easing(current / duration);\n\n         for (const key of keys) { newData[key] = interpolate(initial[key], destination[key], easedTime); }\n\n         current = await this.set(newData).elementUpdated - start;\n      }\n\n      // Prepare final update with end position data and remove keys from `currentAnimationKeys`.\n      for (const key of keys)\n      {\n         newData[key] = position[key];\n         currentAnimationKeys.delete(key);\n      }\n\n      this.set(newData);\n   }\n\n   /**\n    * Assigns current position to object passed into method.\n    *\n    * @param {object|PositionData} [position] - Target to assign current position data.\n    *\n    * @returns {PositionData} Passed in object with current position data.\n    */\n   get(position = {})\n   {\n      return Object.assign(position, this.#data);\n   }\n\n   /**\n    * Returns any stored save state by name.\n    *\n    * @param {string}   name - Saved data set name.\n    *\n    * @returns {PositionData} The saved data set.\n    */\n   getSave({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - getSave error: 'name' is not a string.`); }\n\n      return this.#dataSaved.get(name);\n   }\n\n   /**\n    * @returns {PositionData} Current position data.\n    */\n   toJSON()\n   {\n      return Object.assign({}, this.#data);\n   }\n\n   /**\n    * Resets data to default values and invokes set. Check options, but by default current z-index is maintained.\n    *\n    * @param {object}   [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.keepZIndex=false] - When true keeps current z-index.\n    *\n    * @param {boolean}  [opts.invokeSet=true] - When true invokes set method.\n    *\n    * @returns {boolean} Operation successful.\n    */\n   reset({ keepZIndex = false, invokeSet = true } = {})\n   {\n      if (typeof this.#defaultData !== 'object') { return false; }\n\n      if (this.#currentAnimationKeys.size) { return false; }\n\n      const zIndex = this.#data.zIndex;\n\n      const data = Object.assign({}, this.#defaultData);\n\n      if (keepZIndex) { data.zIndex = zIndex; }\n\n      // Remove any keys that are currently animating.\n      for (const key of this.#currentAnimationKeys) { delete data[key]; }\n\n      // If current minimized invoke `maximize`.\n      if (this.#parent?.reactive?.minimized) { this.#parent?.maximize?.({ animate: false, duration: 0 }); }\n\n      if (invokeSet) { this.set(data); }\n\n      return true;\n   }\n\n   /**\n    * Removes and returns any position state by name.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - Name to remove and retrieve.\n    *\n    * @returns {PositionData} Saved position data.\n    */\n   remove({ name })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - remove: 'name' is not a string.`); }\n\n      const data = this.#dataSaved.get(name);\n      this.#dataSaved.delete(name);\n\n      return data;\n   }\n\n   /**\n    * Restores a saved positional state returning the data. Several optional parameters are available\n    * to control whether the restore action occurs silently (no store / inline styles updates), animates\n    * to the stored data, or simply sets the stored data. Restoring via {@link Position.animateTo} allows\n    * specification of the duration, easing, and interpolate functions along with configuring a Promise to be\n    * returned if awaiting the end of the animation.\n    *\n    * @param {object}            params - Parameters\n    *\n    * @param {string}            params.name - Saved data set name.\n    *\n    * @param {boolean}           [params.remove=false] - Remove data set.\n    *\n    * @param {Iterable<string>}  [params.properties] - Specific properties to set / animate.\n    *\n    * @param {boolean}           [params.silent] - Set position data directly; no store or style updates.\n    *\n    * @param {boolean}           [params.async=false] - If animating return a Promise that resolves with any saved data.\n    *\n    * @param {boolean}           [params.animateTo=false] - Animate to restore data.\n    *\n    * @param {number}            [params.duration=100] - Duration in milliseconds.\n    *\n    * @param {Function}          [params.easing=linear] - Easing function.\n    *\n    * @param {Function}          [params.interpolate=lerp] - Interpolation function.\n    *\n    * @returns {PositionData} Saved position data.\n    */\n   restore({ name, remove = false, properties, silent = false, async = false, animateTo = false, duration = 100,\n    easing = linear, interpolate = lerp })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - restore error: 'name' is not a string.`); }\n\n      const dataSaved = this.#dataSaved.get(name);\n\n      if (dataSaved)\n      {\n         if (remove) { this.#dataSaved.delete(name); }\n\n         let data = dataSaved;\n\n         if (isIterable(properties))\n         {\n            data = {};\n            for (const property of properties) { data[property] = dataSaved[property]; }\n         }\n\n         // Update data directly with no store or inline style updates.\n         if (silent)\n         {\n            for (const property in data) { this.#data[property] = data[property]; }\n            return dataSaved;\n         }\n         else if (animateTo)  // Animate to saved data.\n         {\n            // Provide special handling to potentially change transform origin as this parameter is not animated.\n            if (data.transformOrigin !== this.transformOrigin)\n            {\n               this.transformOrigin = data.transformOrigin;\n            }\n\n            // Return a Promise with saved data that resolves after animation ends.\n            if (async)\n            {\n               return this.animateTo(data, { duration, easing, interpolate }).then(() => dataSaved);\n            }\n            else  // Animate synchronously.\n            {\n               this.animateTo(data, { duration, easing, interpolate });\n            }\n         }\n         else\n         {\n            // Default options is to set data for an immediate update.\n            this.set(data);\n         }\n      }\n\n      return dataSaved;\n   }\n\n   /**\n    * Saves current position state with the opportunity to add extra data to the saved state.\n    *\n    * @param {object}   options - Options.\n    *\n    * @param {string}   options.name - name to index this saved data.\n    *\n    * @param {...*}     [options.extra] - Extra data to add to saved data.\n    *\n    * @returns {PositionData} Current position data\n    */\n   save({ name, ...extra })\n   {\n      if (typeof name !== 'string') { throw new TypeError(`Position - save error: 'name' is not a string.`); }\n\n      const data = this.get(extra);\n\n      this.#dataSaved.set(name, data);\n\n      return data;\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link Position}. This allows position to be fully\n    * reactive and in control of updating inline styles for the application.\n    *\n    * Note: the logic for updating position is improved and changes a few aspects from the default\n    * {@link Application.setPosition}. The gate on `popOut` is removed, so to ensure no positional application occurs\n    * popOut applications can set `this.options.positionable` to false ensuring no positional inline styles are\n    * applied.\n    *\n    * The initial set call on an application with a target element will always set width / height as this is\n    * necessary for correct calculations.\n    *\n    * When a target element is present updated styles are applied after validation. To modify the behavior of set\n    * implement one or more validator functions and add them from the application via\n    * `this.position.validators.add(<Function>)`.\n    *\n    * Updates to any target element are decoupled from the underlying Position data. This method returns this instance\n    * that you can then await on the target element inline style update by using {@link Position.elementUpdated}.\n    *\n    * @param {PositionData}   [position] - Position data to set.\n    *\n    * @returns {Position} This Position instance.\n    */\n   set(position = {})\n   {\n      if (typeof position !== 'object') { throw new TypeError(`Position - set error: 'position' is not an object.`); }\n\n      const parent = this.#parent;\n\n      // An early out to prevent `set` from taking effect if options `positionable` is false.\n      if (parent !== void 0 && typeof parent?.options?.positionable === 'boolean' && !parent?.options?.positionable)\n      {\n         return this;\n      }\n\n      const data = this.#data;\n      const transforms = this.#transforms;\n      const validators = this.#validators;\n\n      let currentTransform = '', updateTransform = false;\n\n      const el = parent?.elementTarget;\n\n      if (el)\n      {\n         currentTransform = el.style.transform ?? '';\n         position = this.#updatePosition(position, el);\n      }\n\n      // If there are any validators allow them to potentially modify position data or reject the update.\n      if (validators.length)\n      {\n         for (const validator of validators)\n         {\n            position = validator.validator(position, parent);\n\n            if (position === null) { return this; }\n         }\n      }\n\n      let modified = false;\n\n      if (typeof position.left === 'number')\n      {\n         position.left = Math.round(position.left);\n\n         if (data.left !== position.left) { data.left = position.left; modified = true; }\n      }\n\n      if (typeof position.top === 'number')\n      {\n         position.top = Math.round(position.top);\n\n         if (data.top !== position.top) { data.top = position.top; modified = true; }\n      }\n\n      if (typeof position.rotateX === 'number' || position.rotateX === null)\n      {\n         if (data.rotateX !== position.rotateX)\n         {\n            data.rotateX = position.rotateX;\n            updateTransform = modified = true;\n\n            if (typeof position.rotateX === 'number') { transforms.rotateX = `rotateX(${position.rotateX}deg)`; }\n            else { delete transforms.rotateX; }\n         }\n         else if (transforms.rotateX && !currentTransform.includes('rotateX('))\n         {\n            updateTransform = true;\n         }\n      }\n\n      if (typeof position.rotateY === 'number' || position.rotateY === null)\n      {\n         if (data.rotateY !== position.rotateY)\n         {\n            data.rotateY = position.rotateY;\n            updateTransform = modified = true;\n\n            if (typeof position.rotateY === 'number') { transforms.rotateY = `rotateY(${position.rotateY}deg)`; }\n            else { delete transforms.rotateY; }\n         }\n         else if (transforms.rotateY && !currentTransform.includes('rotateY('))\n         {\n            updateTransform = true;\n         }\n      }\n\n      if (typeof position.rotateZ === 'number' || position.rotateZ === null)\n      {\n         if (data.rotateZ !== position.rotateZ)\n         {\n            data.rotateZ = position.rotateZ;\n            updateTransform = modified = true;\n\n            if (typeof position.rotateZ === 'number') { transforms.rotateZ = `rotateZ(${position.rotateZ}deg)`; }\n            else { delete transforms.rotateZ; }\n         }\n         else if (transforms.rotateZ && !currentTransform.includes('rotateZ('))\n         {\n            updateTransform = true;\n         }\n      }\n\n      if (typeof position.scale === 'number' || position.scale === null)\n      {\n         position.scale = typeof position.scale === 'number' ? Math.max(0, Math.min(position.scale, 1000)) : null;\n\n         if (data.scale !== position.scale)\n         {\n            data.scale = position.scale;\n            updateTransform = modified = true;\n\n            if (typeof position.scale === 'number') { transforms.scale = `scale(${position.scale})`; }\n            else { delete transforms.scale; }\n         }\n         else if (transforms.scale && !currentTransform.includes('scale('))\n         {\n            updateTransform = true;\n         }\n      }\n\n      if (typeof position.transformOrigin !== void 0)\n      {\n         position.transformOrigin = s_TRANSFORM_ORIGINS.includes(position.transformOrigin) ? position.transformOrigin :\n          s_TRANSFORM_ORIGIN_DEFAULT;\n\n         if (data.transformOrigin !== position.transformOrigin)\n         {\n            data.transformOrigin = position.transformOrigin;\n            updateTransform = modified = true;\n         }\n      }\n\n      if (typeof position.zIndex === 'number')\n      {\n         position.zIndex = Math.round(position.zIndex);\n\n         if (data.zIndex !== position.zIndex) { data.zIndex = position.zIndex; modified = true; }\n      }\n\n      if (typeof position.width === 'number' || position.width === 'auto' || position.width === null)\n      {\n         position.width = typeof position.width === 'number' ? Math.round(position.width) : position.width;\n\n         if (data.width !== position.width) { data.width = position.width; modified = true; }\n      }\n\n      if (typeof position.height === 'number' || position.height === 'auto' || position.height === null)\n      {\n         position.height = typeof position.height === 'number' ? Math.round(position.height) : position.height;\n\n         if (data.height !== position.height) { data.height = position.height; modified = true; }\n      }\n\n      if (el)\n      {\n         // Set default data after first set operation that has a target element.\n         if (typeof this.#defaultData !== 'object') { this.#defaultData = Object.assign({}, data); }\n\n         // Track any transform updates that are handled in `#updateElement`.\n         this.#transformUpdate |= updateTransform;\n\n         // If there isn't already a pending update element action then initiate it.\n         if (!this.#updateElementInvoked) { this.#updateElement(); }\n      }\n\n      // Notify main store subscribers.\n      if (modified)\n      {\n         // Subscriptions are stored locally as on the browser Babel is still used for private class fields / Babel\n         // support until 2023. IE not doing this will require several extra method calls otherwise.\n         const subscriptions = this.#subscriptions;\n\n         // Early out if there are no subscribers.\n         if (subscriptions.length > 0)\n         {\n            for (let cntr = 0; cntr < subscriptions.length; cntr++) { subscriptions[cntr](position); }\n         }\n      }\n\n      return this;\n   }\n\n   /**\n    *\n    * @param {function(PositionData): void} handler - Callback function that is invoked on update / changes. Receives\n    *                                                 a copy of the PositionData.\n    *\n    * @returns {(function(): void)} Unsubscribe function.\n    */\n   subscribe(handler)\n   {\n      this.#subscriptions.push(handler); // add handler to the array of subscribers\n\n      handler(Object.assign({}, this.#data));                     // call handler with current value\n\n      // Return unsubscribe function.\n      return () =>\n      {\n         const index = this.#subscriptions.findIndex((sub) => sub === handler);\n         if (index >= 0) { this.#subscriptions.splice(index, 1); }\n      };\n   }\n\n   /**\n    * Decouples updates to any parent target HTMLElement inline styles. Invoke {@link Position.elementUpdated} to await\n    * on the returned promise that is resolved with the current render time via `nextAnimationFrame` /\n    * `requestAnimationFrame`. This allows the underlying data model to be updated immediately while updates to the\n    * element are in sync with the browser and potentially in the future be further throttled.\n    *\n    * @returns {Promise<number>} The current time before rendering.\n    */\n   async #updateElement()\n   {\n      this.#updateElementInvoked = true;\n\n      // Await the next animation frame. In the future this can be extended to multiple frames to divide update rate.\n      const currentTime = await nextAnimationFrame();\n\n      this.#updateElementInvoked = false;\n\n      const el = this.#parent?.elementTarget;\n\n      if (!el)\n      {\n         // Resolve any stored Promises when multiple updates have occurred.\n         if (this.#elementUpdatePromises.length)\n         {\n            for (const resolve of this.#elementUpdatePromises) { resolve(currentTime); }\n            this.#elementUpdatePromises.length = 0;\n         }\n\n         return currentTime;\n      }\n\n      const data = this.#data;\n\n      if (typeof data.left === 'number')\n      {\n         el.style.left = `${data.left}px`;\n      }\n\n      if (typeof data.top === 'number')\n      {\n         el.style.top = `${data.top}px`;\n      }\n\n      if (typeof data.zIndex === 'number' || data.zIndex === null)\n      {\n         el.style.zIndex = typeof data.zIndex === 'number' ? `${data.zIndex}` : null;\n      }\n\n      if (typeof data.width === 'number' || data.width === 'auto' || data.width === null)\n      {\n         el.style.width = typeof data.width === 'number' ? `${data.width}px` : data.width;\n      }\n\n      if (typeof data.height === 'number' || data.height === 'auto' || data.height === null)\n      {\n         el.style.height = typeof data.height === 'number' ? `${data.height}px` : data.height;\n      }\n\n      // Update all transforms in order added to transforms object.\n      if (this.#transformUpdate)\n      {\n         this.#transformUpdate = false;\n\n         let transformString = '';\n\n         const transforms = this.#transforms;\n\n         for (const key in transforms) { transformString += transforms[key]; }\n\n         el.style.transformOrigin = data.transformOrigin;\n         el.style.transform = transformString;\n      }\n\n      // Resolve any stored Promises when multiple updates have occurred.\n      if (this.#elementUpdatePromises.length)\n      {\n         for (const resolve of this.#elementUpdatePromises) { resolve(currentTime); }\n         this.#elementUpdatePromises.length = 0;\n      }\n\n      return currentTime;\n   }\n\n   #updatePosition({ left, top, width, height, rotateX, rotateY, rotateZ, scale, transformOrigin, zIndex,\n    ...rest } = {}, el)\n   {\n      const currentPosition = this.get(rest);\n      const styles = globalThis.getComputedStyle(el);\n\n      // Update width if an explicit value is passed, or if no width value is set on the element.\n      if (el.style.width === '' || width !== void 0)\n      {\n         if (width === 'auto' || (currentPosition.width === 'auto' && width !== null))\n         {\n            currentPosition.width = 'auto';\n            width = el.offsetWidth;\n         }\n         else\n         {\n            const tarW = typeof width === 'number' ? Math.round(width) : el.offsetWidth;\n            const minW = styleParsePixels(styles.minWidth) || MIN_WINDOW_WIDTH;\n            const maxW = styleParsePixels(styles.maxWidth) || el.style.maxWidth || globalThis.innerWidth;\n            currentPosition.width = width = Math.clamped(tarW, minW, maxW);\n\n            if ((width + left) > globalThis.innerWidth) { left = currentPosition.left; }\n         }\n      }\n      else\n      {\n         width = el.offsetWidth;\n      }\n\n      // Update height if an explicit value is passed, or if no height value is set on the element.\n      if (el.style.height === '' || height !== void 0)\n      {\n         if (height === 'auto' || (currentPosition.height === 'auto' && height !== null))\n         {\n            currentPosition.height = 'auto';\n            height = el.offsetHeight;\n         }\n         else\n         {\n            const tarH = typeof height === 'number' ? Math.round(height) : el.offsetHeight + 1;\n            const minH = styleParsePixels(styles.minHeight) || MIN_WINDOW_HEIGHT;\n            const maxH = styleParsePixels(styles.maxHeight) || el.style.maxHeight || globalThis.innerHeight;\n            currentPosition.height = height = Math.clamped(tarH, minH, maxH);\n\n            if ((height + currentPosition.top) > globalThis.innerHeight + 1) { top = currentPosition.top - 1; }\n         }\n      }\n      else\n      {\n         height = el.offsetHeight;\n      }\n\n      // Update left\n      if (el.style.left === '' || Number.isFinite(left))\n      {\n         const tarL = Number.isFinite(left) ? left : (globalThis.innerWidth - width) / 2;\n         const maxL = Math.max(globalThis.innerWidth - width, 0);\n         currentPosition.left = Math.round(Math.clamped(tarL, 0, maxL));\n      }\n\n      // Update top\n      if (el.style.top === '' || Number.isFinite(top))\n      {\n         const tarT = Number.isFinite(top) ? top : (globalThis.innerHeight - height) / 2;\n         const maxT = Math.max(globalThis.innerHeight - height, 0);\n         currentPosition.top = Math.round(Math.clamped(tarT, 0, maxT));\n      }\n\n      // Update rotate X/Y/Z, scale, z-index\n      if (typeof rotateX === 'number' || rotateX === null) { currentPosition.rotateX = rotateX; }\n      if (typeof rotateY === 'number' || rotateY === null) { currentPosition.rotateY = rotateY; }\n      if (typeof rotateZ === 'number' || rotateZ === null) { currentPosition.rotateZ = rotateZ; }\n\n      if (typeof scale === 'number' || scale === null)\n      {\n         currentPosition.scale = typeof scale === 'number' ? Math.max(0, Math.min(scale, 1000)) : null;\n      }\n\n      if (typeof transformOrigin === 'string')\n      {\n         currentPosition.transformOrigin = s_TRANSFORM_ORIGINS.includes(transformOrigin) ? transformOrigin :\n          s_TRANSFORM_ORIGIN_DEFAULT;\n      }\n\n      if (typeof zIndex === 'number' || zIndex === null)\n      {\n         currentPosition.zIndex = typeof zIndex === 'number' ? Math.round(zIndex) : zIndex;\n      }\n\n      // Return the updated position object.\n      return currentPosition;\n   }\n}\n\nconst s_TRANSFORM_ORIGIN_DEFAULT = 'top left';\n\n/**\n * Defines the valid transform origins.\n *\n * @type {string[]}\n */\nconst s_TRANSFORM_ORIGINS = ['top left', 'top center', 'top right', 'center left', 'center', 'center right', 'bottom left',\n 'bottom center', 'bottom right'];\n\nObject.freeze(s_TRANSFORM_ORIGINS);\n","import {\n   deepMerge,\n   hasGetter,\n   isApplicationShell,\n   outroAndDestroy }          from '@typhonjs-fvtt/runtime/svelte/util';\n\nimport {\n   ApplicationState,\n   GetSvelteData,\n   loadSvelteConfig,\n   Position,\n   SvelteReactive }           from './internal/index.js';\n\n/**\n * Provides a Svelte aware extension to Application to control the app lifecycle appropriately. You can declaratively\n * load one or more components from `defaultOptions`.\n */\nexport class SvelteApplication extends Application\n{\n   /**\n    * Stores the first mounted component which follows the application shell contract.\n    *\n    * @type {MountedAppShell[]|null[]} Application shell.\n    */\n   #applicationShellHolder = [null];\n\n   /**\n    * Stores and manages application state for saving / restoring / serializing.\n    *\n    * @type {ApplicationState}\n    */\n   #applicationState;\n\n   /**\n    * Stores the target element which may not necessarily be the main element.\n    *\n    * @type {HTMLElement}\n    */\n   #elementTarget = null;\n\n   /**\n    * Stores the content element which is set for application shells.\n    *\n    * @type {HTMLElement}\n    */\n   #elementContent = null;\n\n   /**\n    * Stores initial z-index from `_renderOuter` to set to target element / Svelte component.\n    *\n    * @type {number}\n    */\n   #initialZIndex = 95;\n\n   /**\n    * Stores on mount state which is checked in _render to trigger onSvelteMount callback.\n    *\n    * @type {boolean}\n    */\n   #onMount = false;\n\n   /**\n    * The position store.\n    *\n    * @type {Position}\n    */\n   #position;\n\n   /**\n    * Contains the Svelte stores and reactive accessors.\n    *\n    * @type {SvelteReactive}\n    */\n   #reactive;\n\n   /**\n    * Stores SvelteData entries with instantiated Svelte components.\n    *\n    * @type {SvelteData[]}\n    */\n   #svelteData = [];\n\n   /**\n    * Provides a helper class that combines multiple methods for interacting with the mounted components tracked in\n    * {@link SvelteData}.\n    *\n    * @type {GetSvelteData}\n    */\n   #getSvelteData = new GetSvelteData(this.#applicationShellHolder, this.#svelteData);\n\n   /**\n    * Contains methods to interact with the Svelte stores.\n    *\n    * @type {SvelteStores}\n    */\n   #stores;\n\n   /**\n    * @inheritDoc\n    */\n   constructor(options = {})\n   {\n      super(options);\n\n      this.#applicationState = new ApplicationState(this);\n\n      // Initialize Position with the position object set by Application.\n      this.#position = new Position(this, { ...this.options, ...this.position });\n\n      // Remove old position field.\n      delete this.position;\n\n      /**\n       * Define accessors to retrieve Position by `this.position`.\n       *\n       * @member {PositionData} position - Adds accessors to SvelteApplication to get / set the position data.\n       *\n       * @memberof SvelteApplication#\n       */\n      Object.defineProperty(this, 'position', {\n         get: () => this.#position,\n         set: (position) => { if (typeof position === 'object') { this.#position.set(position); } }\n      });\n\n      this.#reactive = new SvelteReactive(this);\n\n      this.#stores = this.#reactive.initialize();\n   }\n\n   /**\n    * Specifies the default options that SvelteApplication supports.\n    *\n    * @returns {object} options - Application options.\n    * @see https://foundryvtt.com/api/Application.html#options\n    */\n   static get defaultOptions()\n   {\n      return deepMerge(super.defaultOptions, {\n         draggable: true,              // If true then application shells are draggable.\n         headerButtonNoClose: false,   // If true then the close header button is removed.\n         headerButtonNoLabel: false,   // If true then header button labels are removed for application shells.\n         defaultCloseAnimation: true,  // If false the default slide close animation is not run.\n         positionable: true,           // If false then `position.set` does not take effect.\n         rotateX: null,                // Assigned to position.\n         rotateY: null,                // Assigned to position.\n         rotateZ: null,                // Assigned to position.\n         zIndex: null                  // Assigned to position.\n      });\n   }\n\n   /**\n    * Returns the content element if an application shell is mounted.\n    *\n    * @returns {HTMLElement} Content element.\n    */\n   get elementContent() { return this.#elementContent; }\n\n   /**\n    * Returns the target element or main element if no target defined.\n    *\n    * @returns {HTMLElement} Target element.\n    */\n   get elementTarget() { return this.#elementTarget; }\n\n   /**\n    * Returns the reactive accessors & Svelte stores for SvelteApplication.\n    *\n    * @returns {SvelteReactive} The reactive accessors & Svelte stores.\n    */\n   get reactive() { return this.#reactive; }\n\n   /**\n    * Returns the application state manager.\n    *\n    * @returns {ApplicationState} The application state manager.\n    */\n   get state() { return this.#applicationState; }\n\n   /**\n    * Returns the Svelte helper class w/ various methods to access mounted Svelte components.\n    *\n    * @returns {GetSvelteData} GetSvelteData\n    */\n   get svelte() { return this.#getSvelteData; }\n\n   /**\n    * In this case of when a template is defined in app options `html` references the inner HTML / template. However,\n    * to activate classic v1 tabs for a Svelte component the element target is passed as an array simulating JQuery as\n    * the element is retrieved immediately and the core listeners use standard DOM queries.\n    *\n    * @inheritDoc\n    * @protected\n    * @ignore\n    */\n   _activateCoreListeners(html)\n   {\n      super._activateCoreListeners(typeof this.options.template === 'string' ? html : [this.#elementTarget]);\n   }\n\n   /**\n    * Provide an override to set this application as the active window regardless of z-index. Changes behaviour from\n    * Foundry core. This is important / used for instance in dialog key handling for left / right button selection.\n    */\n   bringToTop()\n   {\n      super.bringToTop();\n\n      ui.activeWindow = this;\n   }\n\n   /**\n    * Note: This method is fully overridden and duplicated as Svelte components need to be destroyed manually and the\n    * best visual result is to destroy them after the default slide up animation occurs, but before the element\n    * is removed from the DOM.\n    *\n    * If you destroy the Svelte components before the slide up animation the Svelte elements are removed immediately\n    * from the DOM. The purpose of overriding ensures the slide up animation is always completed before\n    * the Svelte components are destroyed and then the element is removed from the DOM.\n    *\n    * Close the application and un-register references to it within UI mappings.\n    * This function returns a Promise which resolves once the window closing animation concludes\n    *\n    * @param {object}   [options] - Optional parameters.\n    *\n    * @param {boolean}  [options.force] - Force close regardless of render state.\n    *\n    * @returns {Promise<void>}    A Promise which resolves once the application is closed.\n    * @ignore\n    */\n   async close(options = {})\n   {\n      const states = Application.RENDER_STATES;\n      if (!options.force && ![states.RENDERED, states.ERROR].includes(this._state)) { return; }\n\n      // Unsubscribe from any local stores.\n      this.#stores.unsubscribe();\n\n      /**\n       * @ignore\n       */\n      this._state = states.CLOSING;\n\n      /**\n       * Get the element.\n       *\n       * @type {HTMLElement}\n       */\n      const el = this.#elementTarget;\n      if (!el) { return this._state = states.CLOSED; }\n\n      // Make any window content overflow hidden to avoid any scrollbars appearing in default or Svelte outro\n      // transitions.\n      const content = el.querySelector('.window-content');\n      if (content) { content.style.overflow = 'hidden'; }\n\n      // Dispatch Hooks for closing the base and subclass applications\n      for (const cls of this.constructor._getInheritanceChain())\n      {\n         /**\n          * A hook event that fires whenever this Application is closed.\n          *\n          * @param {Application} app                     The Application instance being closed\n          *\n          * @param {jQuery[]} html                       The application HTML when it is closed\n          *\n          * @function closeApplication\n          *\n          * @memberof hookEvents\n          */\n         Hooks.call(`close${cls.name}`, this, el);\n      }\n\n      // If options `defaultCloseAnimation` is false then do not execute the standard slide up animation.\n      // This allows Svelte components to provide any out transition. Application shells will automatically set\n      // `defaultCloseAnimation` based on any out transition set or unset.\n      const animate = typeof this.options.defaultCloseAnimation === 'boolean' ? this.options.defaultCloseAnimation :\n       true;\n\n      if (animate)\n      {\n         // Set min height for full slide.\n         el.style.minHeight = '0';\n\n         const { paddingBottom, paddingTop } = globalThis.getComputedStyle(el);\n\n         // Slide-up application.\n         await el.animate([\n            { maxHeight: `${el.clientHeight}px`, paddingTop, paddingBottom },\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration: 250, easing: 'ease-in', fill: 'forwards' }).finished;\n      }\n\n      // Stores the Promises returned from running outro transitions and destroying each Svelte component.\n      const svelteDestroyPromises = [];\n\n      // Manually invoke the destroy callbacks for all Svelte components.\n      for (const entry of this.#svelteData)\n      {\n         // Use `outroAndDestroy` to run outro transitions before destroying.\n         svelteDestroyPromises.push(outroAndDestroy(entry.component));\n\n         // If any proxy eventbus has been added then remove all event registrations from the component.\n         const eventbus = entry.config.eventbus;\n         if (typeof eventbus === 'object' && typeof eventbus.off === 'function')\n         {\n            eventbus.off();\n            entry.config.eventbus = void 0;\n         }\n      }\n\n      // Await all Svelte components to destroy.\n      await Promise.all(svelteDestroyPromises);\n\n      // Reset SvelteData like this to maintain reference to GetSvelteData / `this.svelte`.\n      this.#svelteData.length = 0;\n\n      // Remove element from the DOM. Most SvelteComponents have already removed it.\n      el.remove();\n\n      // Silently restore any width / height state before minimized as applicable.\n      this.position.restore({\n         name: '#beforeMinimized',\n         properties: ['width', 'height'],\n         silent: true,\n         remove: true\n      });\n\n      // Clean up data\n      this.#applicationShellHolder[0] = null;\n      /**\n       * @ignore\n       */\n      this._element = null;\n      this.#elementContent = null;\n      this.#elementTarget = null;\n      delete ui.windows[this.appId];\n      /**\n       * @ignore\n       */\n      this._minimized = false;\n      /**\n       * @ignore\n       */\n      this._scrollPositions = null;\n      this._state = states.CLOSED;\n\n      this.#onMount = false;\n\n      // Update the minimized UI store options.\n      this.#stores.uiOptionsUpdate((storeOptions) => deepMerge(storeOptions, { minimized: this._minimized }));\n   }\n\n   /**\n    * Inject the Svelte components defined in `this.options.svelte`. The Svelte component can attach to the existing\n    * pop-out of Application or provide no template and render into a document fragment which is then attached to the\n    * DOM.\n    *\n    * @param {JQuery} html -\n    *\n    * @inheritDoc\n    * @ignore\n    */\n   _injectHTML(html)\n   {\n      if (this.popOut && html.length === 0 && Array.isArray(this.options.svelte))\n      {\n         throw new Error(\n          'SvelteApplication - _injectHTML - A popout app with no template can only support one Svelte component.');\n      }\n\n      // Make sure the store is updated with the latest header buttons. Also allows filtering buttons before display.\n      this.reactive.updateHeaderButtons();\n\n      // Create a function to generate a callback for Svelte components to invoke to update the tracked elements for\n      // application shells in the rare cases that the main element root changes. The update is only trigged on\n      // successive changes of `elementRoot`. Returns a boolean to indicate the element roots are updated.\n      const elementRootUpdate = () =>\n      {\n         let cntr = 0;\n\n         return (elementRoot) =>\n         {\n            if (elementRoot !== null && elementRoot !== void 0 && cntr++ > 0)\n            {\n               this.#updateApplicationShell();\n               return true;\n            }\n\n            return false;\n         };\n      };\n\n      if (Array.isArray(this.options.svelte))\n      {\n         for (const svelteConfig of this.options.svelte)\n         {\n            const svelteData = loadSvelteConfig(this, html, svelteConfig, elementRootUpdate);\n\n            if (isApplicationShell(svelteData.component))\n            {\n               if (this.svelte.applicationShell !== null)\n               {\n                  throw new Error(\n                   `SvelteApplication - _injectHTML - An application shell is already mounted; offending config:\n                    ${JSON.stringify(svelteConfig)}`);\n               }\n\n               this.#applicationShellHolder[0] = svelteData.component;\n            }\n\n            this.#svelteData.push(svelteData);\n         }\n      }\n      else if (typeof this.options.svelte === 'object')\n      {\n         const svelteData = loadSvelteConfig(this, html, this.options.svelte, elementRootUpdate);\n\n         if (isApplicationShell(svelteData.component))\n         {\n            // A sanity check as shouldn't hit this case as only one component is being mounted.\n            if (this.svelte.applicationShell !== null)\n            {\n               throw new Error(\n                `SvelteApplication - _injectHTML - An application shell is already mounted; offending config:\n                 ${JSON.stringify(this.options.svelte)}`);\n            }\n\n            this.#applicationShellHolder[0] = svelteData.component;\n         }\n\n         this.#svelteData.push(svelteData);\n      }\n\n      // Detect if this is a synthesized DocumentFragment.\n      const isDocumentFragment = html.length && html[0] instanceof DocumentFragment;\n\n      // If any of the Svelte components mounted directly targets an HTMLElement then do not inject HTML.\n      let injectHTML = true;\n      for (const svelteData of this.#svelteData)\n      {\n         if (!svelteData.injectHTML) { injectHTML = false; break; }\n      }\n      if (injectHTML) { super._injectHTML(html); }\n\n      if (this.svelte.applicationShell !== null)\n      {\n         this._element = $(this.svelte.applicationShell.elementRoot);\n\n         // Detect if the application shell exports an `elementContent` accessor.\n         this.#elementContent = hasGetter(this.svelte.applicationShell, 'elementContent') ?\n          this.svelte.applicationShell.elementContent : null;\n\n         // Detect if the application shell exports an `elementTarget` accessor.\n         this.#elementTarget = hasGetter(this.svelte.applicationShell, 'elementTarget') ?\n          this.svelte.applicationShell.elementTarget : null;\n      }\n      else if (isDocumentFragment) // Set the element of the app to the first child element in order of Svelte components mounted.\n      {\n         for (const svelteData of this.#svelteData)\n         {\n            if (svelteData.element instanceof HTMLElement)\n            {\n               this._element = $(svelteData.element);\n               break;\n            }\n         }\n      }\n\n      // Potentially retrieve a specific target element if `selectorTarget` is defined otherwise make the target the\n      // main element.\n      if (this.#elementTarget === null)\n      {\n         const element = typeof this.options.selectorTarget === 'string' ?\n          this._element.find(this.options.selectorTarget) : this._element;\n\n         this.#elementTarget = element[0];\n      }\n\n      // TODO VERIFY THIS CHECK ESPECIALLY `this.#elementTarget.length === 0`.\n      if (this.#elementTarget === null || this.#elementTarget === void 0 || this.#elementTarget.length === 0)\n      {\n         throw new Error(`SvelteApplication - _injectHTML: Target element '${this.options.selectorTarget}' not found.`);\n      }\n\n      // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n      // in `this.#initialZIndex`.\n      if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n      {\n         this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n          this.#initialZIndex ?? 95;\n      }\n\n      // Subscribe to local store handling.\n      this.#stores.subscribe();\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for maximized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.maximize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApplication.minimize}\n    * to animate the content area.\n    *\n    * @param {object} [opts] - Optional parameters.\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default maximizing animation.\n    *\n    * @param {boolean}  [opts.duration=100] - Controls content area animation duration.\n    */\n   async maximize({ animate = true, duration = 100 } = {})\n   {\n      if (!this.popOut || [false, null].includes(this._minimized)) { return; }\n\n      this.#stores.uiOptionsUpdate((options) => deepMerge(options, { minimized: false }));\n\n      this._minimized = null;\n\n      // Get content\n      const element = this.elementTarget;\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // First animate / restore width / async.\n      if (animate)\n      {\n         await this.position.restore({ name: '#beforeMinimized', async: true, animateTo: true, properties: ['width'] });\n      }\n\n      // Reset display none on all children of header.\n      for (let cntr = header.children.length; --cntr >= 0;) { header.children[cntr].style.display = null; }\n\n      content.style.display = null;\n\n      let constraints;\n\n      if (animate)\n      {\n         // Next animate / restore height synchronously and remove key. Retrieve constraints data for slide up animation\n         // below.\n         ({ constraints } = this.position.restore({\n            name: '#beforeMinimized',\n            animateTo: true,\n            properties: ['height'],\n            remove: true,\n            duration: 100\n         }));\n      }\n      else\n      {\n         ({ constraints } = this.position.remove({ name: '#beforeMinimized' }));\n      }\n\n      // Slide down content with stored constraints.\n      await content.animate([\n         { maxHeight: 0, paddingTop: 0, paddingBottom: 0, offset: 0 },\n         { ...constraints, offset: 1 },\n         { maxHeight: '100%', offset: 1 },\n      ], { duration, fill: 'forwards' }).finished;\n\n      element.classList.remove('minimized');\n\n      this._minimized = false;\n\n      element.style.minWidth = null;\n      element.style.minHeight = null;\n\n      // Using a 30ms timeout prevents any instantaneous display of scrollbars with the above maximize animation.\n      setTimeout(() => content.style.overflow = null, 30);\n   }\n\n   /**\n    * Provides a mechanism to update the UI options store for minimized.\n    *\n    * Note: the sanity check is duplicated from {@link Application.minimize} the store is updated _before_\n    * performing the rest of animations. This allows application shells to remove / show any resize handlers\n    * correctly. Extra constraint data is stored in a saved position state in {@link SvelteApplication.minimize}\n    * to animate the content area.\n    *\n    * @param {object} [opts] - Optional parameters\n    *\n    * @param {boolean}  [opts.animate=true] - When true perform default minimizing animation.\n    *\n    * @param {boolean}  [opts.duration=100] - Controls content area animation duration.\n    */\n   async minimize({ animate = true, duration = 100 } = {})\n   {\n      if (!this.rendered || !this.popOut || [true, null].includes(this._minimized)) { return; }\n\n      this.#stores.uiOptionsUpdate((options) => deepMerge(options, { minimized: true }));\n\n      this._minimized = null;\n\n      const element = this.elementTarget;\n\n      // Get content\n      const header = element.querySelector('.window-header');\n      const content = element.querySelector('.window-content');\n\n      // Remove minimum width and height styling rules\n      element.style.minWidth = '100px';\n      element.style.minHeight = '30px';\n\n      content.style.overflow = 'hidden';\n\n      const { paddingBottom, paddingTop } = globalThis.getComputedStyle(content);\n\n      // Extra data that is saved with the current position. Used during `maximize`.\n      const constraints = {\n         maxHeight: `${content.clientHeight}px`,\n         paddingTop,\n         paddingBottom\n      };\n\n      // Slide-up content\n      if (animate)\n      {\n         const animation = content.animate([\n            constraints,\n            { maxHeight: 0, paddingTop: 0, paddingBottom: 0 }\n         ], { duration, fill: 'forwards' });\n\n         // Set display style to none when animation finishes.\n         animation.finished.then(() => content.style.display = 'none');\n      }\n      else\n      {\n         setTimeout(() => content.style.display = 'none', duration);\n      }\n\n      // Save current position state and add the constraint data to use in `maximize`.\n      this.position.save({ name: '#beforeMinimized', constraints });\n\n      if (animate)\n      {\n         // First await animation of height upward.\n         await this.position.animateTo({ height: header.offsetHeight }, { duration: 100 });\n      }\n\n      // Set all header buttons besides close and the window title to display none.\n      for (let cntr = header.children.length; --cntr >= 0;)\n      {\n         const className = header.children[cntr].className;\n         if (className.includes('window-title') || className.includes('close')) { continue; }\n\n         header.children[cntr].style.display = 'none';\n      }\n\n      if (animate)\n      {\n         // Await animation of width to the left / minimum width.\n         await this.position.animateTo({ width: MIN_WINDOW_WIDTH }, { duration: 100 });\n      }\n\n      element.classList.add('minimized');\n\n      this._minimized = true;\n   }\n\n   /**\n    * Provides a callback after all Svelte components are initialized.\n    *\n    * @param {object}      [opts] - Optional parameters.\n    *\n    * @param {HTMLElement} [opts.element] - HTMLElement container for main application element.\n    *\n    * @param {HTMLElement} [opts.elementContent] - HTMLElement container for content area of application shells.\n    *\n    * @param {HTMLElement} [opts.elementTarget] - HTMLElement container for main application target element.\n    */\n   onSvelteMount({ element, elementContent, elementTarget }) {} // eslint-disable-line no-unused-vars\n\n   /**\n    * Override replacing HTML as Svelte components control the rendering process. Only potentially change the outer\n    * application frame / title for pop-out applications.\n    *\n    * @inheritDoc\n    * @ignore\n    */\n   _replaceHTML(element, html)  // eslint-disable-line no-unused-vars\n   {\n      if (!element.length) { return; }\n\n      this.reactive.updateHeaderButtons();\n   }\n\n   /**\n    * Provides an override verifying that a new Application being rendered for the first time doesn't have a\n    * corresponding DOM element already loaded. This is a check that only occurs when `this._state` is\n    * `Application.RENDER_STATES.NONE`. It is useful in particular when SvelteApplication has a static ID\n    * explicitly set in `this.options.id` and long intro / outro transitions are assigned. If a new application\n    * sharing this static ID attempts to open / render for the first time while an existing DOM element sharing\n    * this static ID exists then the initial render is cancelled below rather than crashing later in the render\n    * cycle {@link Position.set}.\n    *\n    * @inheritDoc\n    * @protected\n    * @ignore\n    */\n   async _render(force = false, options = {})\n   {\n      if (this._state === Application.RENDER_STATES.NONE &&\n       document.querySelector(`#${this.id}`) instanceof HTMLElement)\n      {\n         console.warn(`SvelteApplication - _render: A DOM element already exists for CSS ID '${this.id\n         }'. Cancelling initial render for new application with appId '${this.appId}'.`);\n\n         return;\n      }\n\n      await super._render(force, options);\n\n      if (!this.#onMount)\n      {\n         this.onSvelteMount({ element: this._element[0], elementContent: this.#elementContent, elementTarget:\n          this.#elementTarget });\n\n         this.#onMount = true;\n      }\n   }\n\n   /**\n    * Render the inner application content. Only render a template if one is defined otherwise provide an empty\n    * JQuery element per the core Foundry API.\n    *\n    * @param {Object} data         The data used to render the inner template\n    *\n    * @returns {Promise.<JQuery>}   A promise resolving to the constructed jQuery object\n    *\n    * @protected\n    * @ignore\n    */\n   async _renderInner(data)\n   {\n      const html = typeof this.template === 'string' ? await renderTemplate(this.template, data) :\n       document.createDocumentFragment();\n\n      return $(html);\n   }\n\n   /**\n    * Stores the initial z-index set in `_renderOuter` which is used in `_injectHTML` to set the target element\n    * z-index after the Svelte component is mounted.\n    *\n    * @returns {Promise<JQuery>} Outer frame / unused.\n    * @protected\n    * @ignore\n    */\n   async _renderOuter()\n   {\n      const html = await super._renderOuter();\n      this.#initialZIndex = html[0].style.zIndex;\n      return html;\n   }\n\n   /**\n    * All calculation and updates of position are implemented in {@link Position.set}. This allows position to be fully\n    * reactive and in control of updating inline styles for the application.\n    *\n    * This method remains for backward compatibility with Foundry. If you have a custom override quite likely you need\n    * to update to using the {@link Position.validators} functionality.\n    *\n    * @param {PositionData}   [position] - Position data.\n    *\n    * @returns {PositionData} The updated position object for the application containing the new values\n    */\n   setPosition(position)\n   {\n      return this.position.set(position);\n   }\n\n   /**\n    * This method is only invoked by the `elementRootUpdate` callback that is added to the external context passed to\n    * Svelte components. When invoked it updates the local element roots tracked by SvelteApplication.\n    */\n   #updateApplicationShell()\n   {\n      const applicationShell = this.svelte.applicationShell;\n\n      if (applicationShell !== null)\n      {\n         this._element = $(applicationShell.elementRoot);\n\n         // Detect if the application shell exports an `elementContent` accessor.\n         this.#elementContent = hasGetter(applicationShell, 'elementContent') ?\n          applicationShell.elementContent : null;\n\n         // Detect if the application shell exports an `elementTarget` accessor.\n         this.#elementTarget = hasGetter(applicationShell, 'elementTarget') ?\n          applicationShell.elementTarget : null;\n\n         if (this.#elementTarget === null)\n         {\n            const element = typeof this.options.selectorTarget === 'string' ?\n             this._element.find(this.options.selectorTarget) : this._element;\n\n            this.#elementTarget = element[0];\n         }\n\n         // The initial zIndex may be set in application options or for popOut applications is stored by `_renderOuter`\n         // in `this.#initialZIndex`.\n         if (typeof this.options.positionable === 'boolean' && this.options.positionable)\n         {\n            this.#elementTarget.style.zIndex = typeof this.options.zIndex === 'number' ? this.options.zIndex :\n             this.#initialZIndex ?? 95;\n\n            super.bringToTop();\n\n            // Ensure that new root element has inline position styles set.\n            this.position.set(this.position.get());\n         }\n\n         super._activateCoreListeners([this.#elementTarget]);\n\n         this.onSvelteMount({ element: this._element[0], elementContent: this.#elementContent, elementTarget:\n          this.#elementTarget });\n      }\n   }\n}\n\n/**\n * @typedef {object} SvelteData\n *\n * @property {object}                           config -\n *\n * @property {import('svelte').SvelteComponent} component -\n *\n * @property {HTMLElement}                      element -\n *\n * @property {boolean}                          injectHTML -\n */\n\n/**\n * @typedef {object} SvelteStores\n *\n * @property {import('svelte/store').Writable.update} appOptionsUpdate - Update function for app options store.\n *\n * @property {Function} subscribe - Subscribes to local stores.\n *\n * @property {import('svelte/store').Writable.update} uiOptionsUpdate - Update function for UI options store.\n *\n * @property {Function} unsubscribe - Unsubscribes from local stores.\n */\n","<svelte:options accessors={true} />\r\n\r\n<script>\r\n  import { getContext } from \"svelte\";\r\n  import { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\r\n  const { application } = getContext(\"external\");\r\n  let form;\r\n  export let advancementSetting;\r\n  async function updateSettings() {\r\n    application.update(advancementSetting);\r\n    application.close();\r\n  }\r\n  function requestSubmit() {\r\n    form.requestSubmit;\r\n  }\r\n</script>\r\n\r\n<form bind:this={form} on:submit|once|preventDefault={updateSettings} autocomplete=\"off\">\r\n  <section class=\"grid grid-2col\">\r\n    <div class=\"flexrow\">\r\n      <label>CustomValues</label>\r\n      <div>\r\n        <label>AV - Attribute Value</label>\r\n        <input bind:value={advancementSetting.variables.attributeValue} />\r\n      </div>\r\n      <div>\r\n        <label>SV - Skill Value</label>\r\n        <input bind:value={advancementSetting.variables.skillValue} />\r\n      </div>\r\n      <div>SL - Skill level</div>\r\n    </div>\r\n    <div>\r\n      <label>Non-custom Values</label>\r\n      <div>As - Attribute Score</div>\r\n      <div>SS - Skill Score</div>\r\n      <div>SL - Skill level</div>\r\n    </div>\r\n  </section>\r\n  <section>\r\n    <div>\r\n      <label>Attribute Advancement Formula</label>\r\n      <input bind:value={advancementSetting.formulas.attributes} />\r\n    </div>\r\n  </section>\r\n</form>\r\n","import { SvelteApplication } from \"@typhonjs-fvtt/runtime/svelte/application\";\r\nimport AdvancementRateShell from \"./advancement-rate-shell.svelte\";\r\nexport class AdvRateSettingsShim extends FormApplication {\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  constructor(options = {}) {\r\n    super({}, options);\r\n\r\n    new AdvancementRateFormApp().render(true, { focus: true });\r\n  }\r\n\r\n  async _updateObject(event, formData) {}\r\n  render() {\r\n    this.close();\r\n  }\r\n}\r\nclass AdvancementRateFormApp extends SvelteApplication {\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      classes: [\"ard20\"],\r\n      title: \"Advancement Rate\",\r\n      id: \"advancement-rate-setting\",\r\n      width: 600,\r\n      height: \"auto\",\r\n      submitOnChange: true,\r\n      closeOnSubmit: false,\r\n      svelte: {\r\n        class: AdvancementRateShell,\r\n        target: document.body,\r\n        props: {\r\n          variables: game.settings.get(\"ard20\", \"advancement-rate\").variables,\r\n          formulas: game.settings.get(\"ard20\", \"advancement-rate\").formulas,\r\n        },\r\n      },\r\n    });\r\n  }\r\n  getData() {\r\n    const sheetData = game.settings.get(\"ard20\", \"advancement-rate\");\r\n    return sheetData;\r\n  }\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n  }\r\n  async _updateObject(event, formData) {}\r\n}\r\n","import {AdvRateSettingsShim} from '../../svelte/advancement-rate/advancement-rate.js'\r\nexport const registerSystemSettings = function () {\r\n    game.settings.register(\"ard20\", \"proficiencies\", {\r\n        scope: \"world\",\r\n        config: false,\r\n        default: {\r\n            weapon: [\r\n                { name: \"Punch Dagger\", type: \"amb\" },\r\n                { name: \"Whip Dagger\", type: \"amb\" },\r\n                { name: \"Gauntlet\", type: \"amb\" },\r\n                { name: \"Hidden Blade\", type: \"amb\" },\r\n                { name: \"Knucke Axe\", type: \"amb\" },\r\n                { name: \"Side Baton\", type: \"amb\" },\r\n                { name: \"Unarmed strike\", type: \"amb\" },\r\n                { name: \"Battle Axe\", type: \"axe\" },\r\n                { name: \"Great Axe\", type: \"axe\" },\r\n                { name: \"Handaxe\", type: \"axe\" },\r\n                { name: \"Hook Sword\", type: \"axe\" },\r\n                { name: \"Khopesh\", type: \"axe\" },\r\n                { name: \"Poleaxe\", type: \"axe\" },\r\n                { name: \"Tomahawk\", type: \"axe\" },\r\n                { name: \"Great club\", type: \"blu\" },\r\n                { name: \"Heavy club\", type: \"blu\" },\r\n                { name: \"Light Club\", type: \"blu\" },\r\n            ],\r\n            armor: [],\r\n            tools: [],\r\n            skills: [],\r\n        },\r\n        onChange: (value) => {\r\n            console.log(\"Настройка изменилась \", value);\r\n        },\r\n    });\r\n    game.settings.registerMenu(\"ard20\", \"gearProfManage\", {\r\n        name: \"SETTINGS.ProfManage\",\r\n        label: \"SETTINGS.ProfManage\",\r\n        type: ProfFormApp,\r\n        restricted: false,\r\n        icon: \"fab fa-buffer\",\r\n    });\r\n    game.settings.register(\"ard20\", \"feat\", {\r\n        scope: \"world\",\r\n        config: false,\r\n        default: {\r\n            packs: [],\r\n            folders: [],\r\n        },\r\n        onChange: (value) => {\r\n            console.log(\"Настройка изменилась\", value);\r\n        },\r\n    });\r\n    game.settings.registerMenu(\"ard20\", \"featManage\", {\r\n        name: \"SETTINGS.FeatureManage\",\r\n        label: \"SETTINGS.FeatureManage\",\r\n        type: FeatFormApp,\r\n        restricted: false,\r\n    });\r\n    game.settings.register(\"ard20\", \"advancement-rate\", {\r\n        scope: \"world\",\r\n        config: false,\r\n        default: {\r\n            variables: {\r\n                skillCount: 5,\r\n                featureCount: 5,\r\n                skillValue: 5,\r\n                featureLevel: 5,\r\n                attributeValue: 5,\r\n            },\r\n            formulas: {\r\n                skills: \"\",\r\n                features: \"n\",\r\n                attributes: \"max(floor((AS-10)/2)+2,1)\",\r\n            },\r\n        },\r\n        onChange: (value) => {\r\n            console.log(\"Настройка изменилась\", value);\r\n        },\r\n    });\r\n    game.settings.registerMenu(\"ard20\", \"advancementRateManage\", {\r\n        name: \"SETTINGS.AdvancementRateManage\",\r\n        label: \"SETTINGS.AdvancementRateManage\",\r\n        type: AdvRateSettingsShim,\r\n        restricted: false,\r\n    });\r\n};\r\nclass ProfFormApp extends FormApplication {\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            classes: [\"ard20\"],\r\n            title: \"Armor/Weapon Proficiencies\",\r\n            template: \"systems/ard20/templates/app/prof-settings.html\",\r\n            id: \"prof-settings\",\r\n            width: 600,\r\n            height: \"auto\",\r\n            submitOnChange: true,\r\n            closeOnSubmit: false,\r\n            tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"weapons\" }],\r\n        });\r\n    }\r\n    //@ts-expect-error\r\n    getData() {\r\n        const sheetData = {\r\n            proficiencies: game.settings.get(\"ard20\", \"proficiencies\"),\r\n            config: CONFIG.ARd20,\r\n        };\r\n        return sheetData;\r\n    }\r\n    //@ts-expect-error\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n        html.find(\".add\").click(this._onAdd.bind(this));\r\n        html.find(\".minus\").click(this._Delete.bind(this));\r\n    }\r\n    //@ts-expect-error\r\n    async _onAdd(event) {\r\n        event.preventDefault();\r\n        const proficiencies = game.settings.get(\"ard20\", \"proficiencies\");\r\n        proficiencies.weapon.push({ name: \"name\", type: \"amb\" });\r\n        await game.settings.set(\"ard20\", \"proficiencies\", proficiencies);\r\n        this.render();\r\n    }\r\n    //@ts-expect-error\r\n    async _Delete(event) {\r\n        event.preventDefault();\r\n        const proficiencies = game.settings.get(\"ard20\", \"proficiencies\");\r\n        proficiencies.weapon.splice(event.currentTarget.dataset.key, 1);\r\n        await game.settings.set(\"ard20\", \"proficiencies\", proficiencies);\r\n        this.render();\r\n    }\r\n    //@ts-expect-error\r\n    async _updateObject(event, formData) {\r\n        const proficiencies = game.settings.get(\"ard20\", \"proficiencies\");\r\n        console.log(formData);\r\n        let dirty = false;\r\n        for (let [fieldName, value] of Object.entries(foundry.utils.flattenObject(formData))) {\r\n            const [type, index, propertyName] = fieldName.split(\".\");\r\n            //@ts-expect-error\r\n            if (proficiencies[type][index][propertyName] !== value) {\r\n                //log({index, propertyName, value});\r\n                //@ts-expect-error\r\n                proficiencies[type][index][propertyName] = value;\r\n                dirty = dirty || true;\r\n            }\r\n            if (dirty) {\r\n                await game.settings.set(\"ard20\", \"proficiencies\", proficiencies);\r\n            }\r\n        }\r\n    }\r\n}\r\n//@ts-expect-error\r\nclass FeatFormApp extends FormApplication {\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            classes: [\"ard20\"],\r\n            title: \"Features Management\",\r\n            template: \"systems/ard20/templates/app/feat-settings.html\",\r\n            id: \"feat-settings\",\r\n            width: 600,\r\n            height: \"auto\",\r\n            submitOnChange: true,\r\n            closeOnSubmit: false,\r\n        });\r\n    }\r\n    getData() {\r\n        const sheetData = {\r\n            feat: game.settings.get(\"ard20\", \"feat\"),\r\n        };\r\n        return sheetData;\r\n    }\r\n    //@ts-expect-error\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n        html.find(\".add\").click(this._onAdd.bind(this));\r\n        html.find(\".minus\").click(this._Delete.bind(this));\r\n    }\r\n    //@ts-expect-error\r\n    async _onAdd(event) {\r\n        event.preventDefault();\r\n        const feat = game.settings.get(\"ard20\", \"feat\");\r\n        const button = event.currentTarget;\r\n        switch (button.dataset.type) {\r\n            case \"pack\":\r\n                feat.packs.push(\"new compendium\");\r\n                await game.settings.set(\"ard20\", \"feat\", feat);\r\n                break;\r\n            case \"folder\":\r\n                feat.folders.push(\"new folder\");\r\n                await game.settings.set(\"ard20\", \"feat\", feat);\r\n        }\r\n        this.render();\r\n    }\r\n    //@ts-expect-error\r\n    async _Delete(event) {\r\n        event.preventDefault();\r\n        const feat = game.settings.get(\"ard20\", \"feat\");\r\n        const button = event.currentTarget;\r\n        switch (button.dataset.type) {\r\n            case \"pack\":\r\n                feat.packs.splice(button.dataset.key, 1);\r\n                await game.settings.set(\"ard20\", \"feat\", feat);\r\n                break;\r\n            case \"folder\":\r\n                feat.folders.splice(button.dataset.key, 1);\r\n                await game.settings.set(\"ard20\", \"feat\", feat);\r\n                break;\r\n        }\r\n        this.render();\r\n    }\r\n    async _updateObject(event, formData) {\r\n        const feat = game.settings.get(\"ard20\", \"feat\");\r\n        console.log(formData);\r\n        let dirty = false;\r\n        //@ts-expect-error\r\n        for (let [fieldName, value] of Object.entries(foundry.utils.flattenObject(formData))) {\r\n            const [type, index] = fieldName.split(\".\");\r\n            //@ts-expect-error\r\n            if (feat[type][index] !== value) {\r\n                //log({index, propertyName, value});\r\n                //@ts-expect-error\r\n                feat[type][index] = value;\r\n                dirty = dirty || true;\r\n            }\r\n            if (dirty) {\r\n                await game.settings.set(\"ard20\", \"feat\", feat);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","/**\r\n * Highlight critical success or failure on d20 rolls\r\n */\r\n//@ts-expect-error\r\nexport const highlightCriticalSuccessFailure = function (message, html, data) {\r\n    if (!message.isRoll || !message.isContentVisible)\r\n        return;\r\n    // Highlight rolls where the first part is a d20 roll\r\n    const roll = message.roll;\r\n    if (!roll.dice.length)\r\n        return;\r\n    const d = roll.dice[0];\r\n    // Ensure it is an un-modified d20 roll\r\n    const isD20 = (d.faces === 20) && (d.values.length === 1);\r\n    if (!isD20)\r\n        return;\r\n    const isModifiedRoll = (\"success\" in d.results[0]) || d.options.marginSuccess || d.options.marginFailure;\r\n    if (isModifiedRoll)\r\n        return;\r\n    // Highlight successes and failures\r\n    const critical = d.options.critical || 20;\r\n    const fumble = d.options.fumble || 1;\r\n    if (d.total >= critical)\r\n        html.find(\".dice-total\").addClass(\"critical\");\r\n    else if (d.total <= fumble)\r\n        html.find(\".dice-total\").addClass(\"fumble\");\r\n    else if (d.options.target) {\r\n        if (roll.total >= d.options.target)\r\n            html.find(\".dice-total\").addClass(\"success\");\r\n        else\r\n            html.find(\".dice-total\").addClass(\"failure\");\r\n    }\r\n};\r\n/* -------------------------------------------- */\r\n/**\r\n * Optionally hide the display of chat card action buttons which cannot be performed by the user\r\n */\r\n//@ts-expect-error\r\nexport const displayChatActionButtons = function (message, html, data) {\r\n    const chatCard = html.find(\".ard20.chat-card\");\r\n    if (chatCard.length > 0) {\r\n        const flavor = html.find(\".flavor-text\");\r\n        if (flavor.text() === html.find(\".item-name\").text())\r\n            flavor.remove();\r\n        // If the user is the message author or the actor owner, proceed\r\n        let actor = game.actors.get(data.message.speaker.actor);\r\n        if (actor && actor.isOwner)\r\n            return;\r\n        else if (game.user.isGM || (data.author.id === game.user.id))\r\n            return;\r\n        // Otherwise conceal action buttons except for saving throw\r\n        const buttons = chatCard.find(\"button[data-action]\");\r\n        //@ts-expect-error\r\n        buttons.each((i, btn) => {\r\n            if (btn.dataset.action === \"save\")\r\n                return;\r\n            btn.style.display = \"none\";\r\n        });\r\n    }\r\n};\r\n/* -------------------------------------------- */\r\n/**\r\n * This function is used to hook into the Chat Log context menu to add additional options to each message\r\n * These options make it easy to conveniently apply damage to controlled tokens based on the value of a Roll\r\n *\r\n * @param {HTMLElement} html    The Chat Message being rendered\r\n * @param {Array} options       The Array of Context Menu options\r\n *\r\n * @return {Array}              The extended options Array including new context choices\r\n */\r\nexport const addChatMessageContextOptions = function (html, options) {\r\n    let canApply = (li) => {\r\n        //@ts-expect-error\r\n        const message = game.messages.get(li.data(\"messageId\"));\r\n        return message?.isRoll && message?.isContentVisible && canvas.tokens?.controlled.length;\r\n    };\r\n    options.push({\r\n        //@ts-expect-error\r\n        name: game.i18n.localize(\"ARd20.ChatContextDamage\"),\r\n        //@ts-expect-error\r\n        icon: '<i class=\"fas fa-user-minus\"></i>',\r\n        //@ts-expect-error\r\n        condition: canApply,\r\n        //@ts-expect-error\r\n        callback: li => applyChatCardDamage(li, 1)\r\n    }, {\r\n        name: game.i18n.localize(\"ARd20.ChatContextHealing\"),\r\n        icon: '<i class=\"fas fa-user-plus\"></i>',\r\n        condition: canApply,\r\n        //@ts-expect-error\r\n        callback: li => applyChatCardDamage(li, -1)\r\n    }, {\r\n        name: game.i18n.localize(\"ARd20.ChatContextDoubleDamage\"),\r\n        icon: '<i class=\"fas fa-user-injured\"></i>',\r\n        condition: canApply,\r\n        //@ts-expect-error\r\n        callback: li => applyChatCardDamage(li, 2)\r\n    }, {\r\n        name: game.i18n.localize(\"ARd20.ChatContextHalfDamage\"),\r\n        icon: '<i class=\"fas fa-user-shield\"></i>',\r\n        condition: canApply,\r\n        //@ts-expect-error\r\n        callback: li => applyChatCardDamage(li, 0.5)\r\n    });\r\n    return options;\r\n};\r\n/* -------------------------------------------- */\r\n/**\r\n * Apply rolled dice damage to the token or tokens which are currently controlled.\r\n * This allows for damage to be scaled by a multiplier to account for healing, critical hits, or resistance\r\n *\r\n * @param {HTMLElement} li      The chat entry which contains the roll data\r\n * @param {Number} multiplier   A damage multiplier to apply to the rolled damage.\r\n * @return {Promise}\r\n */\r\nfunction applyChatCardDamage(li, multiplier) {\r\n    //@ts-expect-error\r\n    const message = game.messages.get(li.data(\"messageId\"));\r\n    const roll = message.roll;\r\n    return Promise.all(canvas.tokens.controlled.map(t => {\r\n        const a = t.actor;\r\n        //@ts-expect-error\r\n        return a.applyDamage(roll.total, multiplier);\r\n    }));\r\n}\r\n/* -------------------------------------------- */\r\n","// Import document classes.\r\nimport { ARd20Actor } from \"./documents/actor.js\";\r\nimport { ARd20Item } from \"./documents/item.js\";\r\n// Import sheet classes.\r\nimport { ARd20ActorSheet } from \"./sheets/actor-sheet.js\";\r\nimport { ARd20ItemSheet } from \"./sheets/item-sheet.js\";\r\n// Import helper/utility classes and constants.\r\nimport { preloadHandlebarsTemplates } from \"./helpers/templates.js\";\r\nimport { ARd20 } from \"./helpers/config.js\";\r\nimport ARd20SocketHandler from \"./helpers/socket.js\";\r\nimport { registerSystemSettings } from \"./helpers/settings.js\";\r\nimport * as dice from \"./dice/dice.js\";\r\nimport * as chat from \"./helpers/chat.js\";\r\n/* -------------------------------------------- */\r\n/*  Init Hook                                   */\r\n/* -------------------------------------------- */\r\nexport function obj_entries(obj) {\r\n    return Object.entries(obj);\r\n}\r\nexport function arr_entries(arr) {\r\n    return Object.entries(arr);\r\n}\r\nexport function getValues(SourceObject, key) {\r\n    return SourceObject[key];\r\n}\r\nexport function obj_keys(obj) {\r\n    return Object.keys(obj);\r\n}\r\nexport function array_keys(obj) {\r\n    return Object.keys(obj);\r\n}\r\nHooks.once(\"init\", async function () {\r\n    // Add utility classes to the global game object so that they're more easily\r\n    // accessible in global contexts.\r\n    if (game instanceof Game) {\r\n        game.ard20 = {\r\n            documents: {\r\n                ARd20Actor,\r\n                ARd20Item,\r\n            },\r\n            rollItemMacro,\r\n            config: ARd20,\r\n            dice: dice,\r\n        };\r\n        // Add custom constants for configuration.\r\n        CONFIG.ARd20 = ARd20;\r\n        //@ts-expect-error\r\n        CONFIG.Dice.DamageRoll = dice.DamageRoll;\r\n        //@ts-expect-error\r\n        CONFIG.Dice.D20Roll = dice.D20Roll;\r\n        CONFIG.Dice.rolls.push(dice.D20Roll);\r\n        CONFIG.Dice.rolls.push(dice.DamageRoll);\r\n        if (game.socket instanceof io.Socket) {\r\n            game.socket.on(\"system.ard20\", (data) => {\r\n                if (data.operation === \"updateActorData\")\r\n                    ARd20SocketHandler.updateActorData(data);\r\n            });\r\n        }\r\n        /**\r\n         * Set an initiative formula for the system\r\n         * @type {String}\r\n         */\r\n        CONFIG.Combat.initiative = {\r\n            formula: \"1d20 + @abilities.dex.mod\",\r\n            decimals: 2,\r\n        };\r\n        // Define custom Document classes\r\n        CONFIG.Actor.documentClass = ARd20Actor;\r\n        CONFIG.Item.documentClass = ARd20Item;\r\n        // Register sheet application classes\r\n        Actors.unregisterSheet(\"core\", ActorSheet);\r\n        Actors.registerSheet(\"ard20\", ARd20ActorSheet, { makeDefault: true });\r\n        Items.unregisterSheet(\"core\", ItemSheet);\r\n        //@ts-expect-error\r\n        Items.registerSheet(\"ard20\", ARd20ItemSheet, { makeDefault: true });\r\n        registerSystemSettings();\r\n        // Preload Handlebars templates.\r\n        return preloadHandlebarsTemplates();\r\n    }\r\n    else {\r\n        throw new Error(\"game not initialized yet!\");\r\n    }\r\n});\r\n/* -------------------------------------------- */\r\n/*  Handlebars Helpers                          */\r\n/* -------------------------------------------- */\r\n// If you need to add Handlebars helpers, here are a few useful examples:\r\nHandlebars.registerHelper(\"concat\", function () {\r\n    var outStr = \"\";\r\n    for (var arg in arguments) {\r\n        if (typeof arguments[arg] != \"object\") {\r\n            outStr += arguments[arg];\r\n        }\r\n    }\r\n    return outStr;\r\n});\r\nHandlebars.registerHelper(\"toLowerCase\", function (str) {\r\n    return str.toLowerCase();\r\n});\r\nHandlebars.registerHelper(\"add\", function (value1, value2) {\r\n    return Number(value1) + Number(value2);\r\n});\r\n/* -------------------------------------------- */\r\n/*  Ready Hook                                  */\r\n/* -------------------------------------------- */\r\nHooks.once(\"ready\", async function () {\r\n    // Wait to register hotbar drop hook on ready so that modules could register earlier if they want to\r\n    Hooks.on(\"hotbarDrop\", (bar, data, slot) => createItemMacro(data, slot));\r\n});\r\n/* -------------------------------------------- */\r\n/*  Hotbar Macros                               */\r\n/* -------------------------------------------- */\r\n/**\r\n * Create a Macro from an Item drop.\r\n * Get an existing item macro if one exists, otherwise create a new one.\r\n * @param {Object} data     The dropped data\r\n * @param {number} slot     The hotbar slot to use\r\n * @returns {Promise}\r\n */\r\nasync function createItemMacro(data, slot) {\r\n    if (game instanceof Game) {\r\n        //@ts-expect-error\r\n        if (data.type !== \"Item\")\r\n            return;\r\n        if (!(\"data\" in data) && ui.notifications instanceof Notifications)\r\n            return ui.notifications.warn(\"You can only create macro buttons for owned Items\");\r\n        //@ts-expect-error\r\n        const item = data.data;\r\n        // Create the macro command\r\n        const command = `game.ard20.rollItemMacro(\"${item.name}\");`;\r\n        let macroList = game.macros.contents.filter((m) => m.name === item.name && m?.command === command);\r\n        let macroCheck = macroList.length !== 0 ? macroList[0] : null;\r\n        if (macroCheck !== null) {\r\n            let macro = await Macro.create({\r\n                name: item.name,\r\n                type: \"script\",\r\n                img: item.img,\r\n                command: command,\r\n                flags: { \"ard20.itemMacro\": true },\r\n            });\r\n            if (macro instanceof Macro) {\r\n                game.user?.assignHotbarMacro(macro, slot);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Create a Macro from an Item drop.\r\n * Get an existing item macro if one exists, otherwise create a new one.\r\n * @param {string} itemName\r\n * @return {Promise}\r\n */\r\nexport function rollItemMacro(itemName) {\r\n    if (game instanceof Game) {\r\n        const speaker = ChatMessage.getSpeaker();\r\n        let actor;\r\n        if (speaker.token)\r\n            actor = game.actors.tokens[speaker.token];\r\n        if (!actor && typeof speaker.actor === \"string\")\r\n            actor = game.actors.get(speaker.actor);\r\n        const item = actor ? actor.items.find((i) => i.name === itemName) : null;\r\n        if (!item)\r\n            return ui.notifications.warn(`Your controlled Actor does not have an item named ${itemName}`);\r\n        // Trigger the item roll\r\n        //@ts-expect-error\r\n        return item.roll();\r\n    }\r\n}\r\nHooks.on(\"renderChatMessage\", (app, html, data) => {\r\n    // Display action buttons\r\n    chat.displayChatActionButtons(app, html, data);\r\n    // Highlight critical success or failure die\r\n    chat.highlightCriticalSuccessFailure(app, html, data);\r\n    // Optionally collapse the content\r\n});\r\nHooks.on(\"getChatLogEntryContext\", chat.addChatMessageContextOptions);\r\n//@ts-expect-error\r\nHooks.on(\"renderChatLog\", (app, html, data) => ARd20Item.chatListeners(html));\r\n//@ts-expect-error\r\nHooks.on(\"renderChatPopout\", (app, html, data) => ARd20Item.chatListeners(html));\r\n","import { d20Roll } from \"../dice/dice.js\";\r\nimport { obj_entries, obj_keys, getValues } from \"../ard20.js\";\r\n/**\r\n * Extend the base Actor document by defining a custom roll data structure which is ideal for the Simple system.\r\n * @extends {Actor}\r\n */\r\nexport class ARd20Actor extends Actor {\r\n    //@ts-check\r\n    /** @override */\r\n    prepareData() {\r\n        // Prepare data for the actor. Calling the super version of this executes\r\n        // the following, in order: data reset (to clear active effects),\r\n        // prepareBaseData(), prepareEmbeddedDocuments() (including active effects),\r\n        // prepareDerivedData().\r\n        super.prepareData();\r\n        this.items.forEach((item) => item.prepareFinalAttributes());\r\n    }\r\n    /**\r\n     * @override\r\n     * Augment the basic actor data with additional dynamic data. Typically,\r\n     * you'll want to handle most of your calculated/derived data in this step.\r\n     * Data calculated in this step should generally not exist in template.json\r\n     * (such as ability modifiers rather than ability scores) and should be\r\n     * available both inside and outside of character sheets (such as if an actor\r\n     * is queried and has a roll executed directly from it).\r\n     */\r\n    prepareDerivedData() {\r\n        const actorData = this.data;\r\n        const data = actorData.data;\r\n        const flags = actorData.flags.ard20 || {};\r\n        // Make separate methods for each Actor type (character, npc, etc.) to keep\r\n        // things organized.\r\n        this._prepareCharacterData(actorData);\r\n        this._prepareNpcData(actorData);\r\n    }\r\n    /**\r\n     * Prepare Character type specific data\r\n     */\r\n    _prepareCharacterData(actorData) {\r\n        if (actorData.type !== \"character\")\r\n            return;\r\n        // Make modifications to data here. For example:\r\n        const data = actorData.data;\r\n        const attributes = data.attributes;\r\n        const advancement = data.advancement;\r\n        const def_stats = data.defences.stats;\r\n        const def_dam = data.defences.damage;\r\n        const proficiencies = data.proficiencies;\r\n        data.mobility.value = 0;\r\n        this.itemTypes.armor.forEach((item) => {\r\n            if (item.data.type === \"armor\") {\r\n                if (item.data.data.equipped) {\r\n                    for (let key of obj_keys(def_dam.phys)) {\r\n                        let ph = item.data.data.res.phys[key];\r\n                        def_dam.phys[key].bonus += ph.type !== \"imm\" ? ph.value : 0;\r\n                        def_dam.phys[key].type = ph.type === \"imm\" ? \"imm\" : def_dam.phys[key].type;\r\n                    }\r\n                    for (let key of obj_keys(def_dam.mag)) {\r\n                        let mg = item.data.data.res.mag[key];\r\n                        def_dam.mag[key].bonus += mg.type !== \"imm\" ? mg.value : 0;\r\n                        def_dam.mag[key].type = mg.type === \"imm\" ? \"imm\" : def_dam.mag[key].type;\r\n                    }\r\n                    data.mobility.value += item.data.data.mobility.value;\r\n                }\r\n            }\r\n        });\r\n        data.mobility.value += data.mobility.bonus;\r\n        // Loop through ability scores, and add their modifiers to our sheet output.\r\n        for (let ability of Object.values(attributes)) {\r\n            // Calculate the modifier using d20 rules.\r\n            ability.total = ability.value + ability.bonus;\r\n            ability.mod = Math.floor((ability.value - 10) / 2);\r\n        }\r\n        let dexMod = data.mobility.value < 10\r\n            ? attributes.dex.mod\r\n            : data.mobility.value < 16\r\n                ? Math.min(2, attributes.dex.mod)\r\n                : Math.min(0, attributes.dex.mod);\r\n        //calculate level and expierence\r\n        const levels = CONFIG.ARd20.CHARACTER_EXP_LEVELS;\r\n        if (advancement.xp.used) {\r\n            advancement.xp.used = advancement.xp.used ?? 0;\r\n        }\r\n        for (let i = 1; i < 21; i++) {\r\n            if (advancement.xp.used >= levels[i - 1] && advancement.xp.used < levels[i]) {\r\n                advancement.level = i;\r\n                advancement.xp.level = levels[i];\r\n                advancement.xp.level_min = levels[i - 1];\r\n            }\r\n        }\r\n        advancement.xp.bar_max = advancement.xp.level - advancement.xp.level_min;\r\n        advancement.xp.bar_min = advancement.xp.used - advancement.xp.level_min;\r\n        def_stats.reflex.value = 10 + 4 * def_stats.reflex.level + dexMod + attributes.int.mod + def_stats.reflex.bonus;\r\n        def_stats.reflex.label = \"Reflex\";\r\n        def_stats.fortitude.value =\r\n            10 + 4 * def_stats.fortitude.level + attributes.str.mod + attributes.con.mod + def_stats.fortitude.bonus;\r\n        def_stats.fortitude.label = \"Fortitude\";\r\n        def_stats.will.value =\r\n            10 + 4 * def_stats.will.level + attributes.wis.mod + attributes.cha.mod + def_stats.will.bonus;\r\n        def_stats.will.label = \"Will\";\r\n        for (let [key, dr] of obj_entries(CONFIG.ARd20.DamageSubTypes)) {\r\n            if (!(key === \"force\" || key === \"radiant\" || key === \"psychic\")) {\r\n                def_dam.phys[key].value =\r\n                    def_dam.phys[key]?.value || def_dam.phys[key]?.type !== \"imm\"\r\n                        ? Math.max(isNaN(def_dam.phys[key]?.value) ? 0 : def_dam.phys[key].value) + def_dam.phys[key]?.bonus\r\n                        : 0;\r\n                def_dam.phys[key].name =\r\n                    game.i18n.localize(CONFIG.ARd20.DamageSubTypes[key]) ?? CONFIG.ARd20.DamageSubTypes[key];\r\n            }\r\n            def_dam.mag[key].value =\r\n                def_dam.mag[key]?.value || def_dam.mag[key]?.type !== \"imm\"\r\n                    ? Math.max(isNaN(def_dam.mag[key]?.value) ? 0 : def_dam.mag[key].value) + def_dam.mag[key]?.bonus\r\n                    : 0;\r\n            def_dam.mag[key].name = game.i18n.localize(CONFIG.ARd20.DamageSubTypes[key]) ?? CONFIG.ARd20.DamageSubTypes[key];\r\n        }\r\n        //calculate rolls for character's skills\r\n        for (let [key, skill] of obj_entries(data.skills)) {\r\n            skill.level = skill.level < 4 ? skill.level : 4;\r\n            skill.value = skill.level * 4 + skill.bonus;\r\n            skill.name = game.i18n.localize(CONFIG.ARd20.Skills[key]) ?? CONFIG.ARd20.Skills[key];\r\n            skill.rankName =\r\n                game.i18n.localize(getValues(CONFIG.ARd20.Rank, skill.level)) ?? getValues(CONFIG.ARd20.Rank, skill.level);\r\n        }\r\n        proficiencies.weapon = game.settings.get(\"ard20\", \"proficiencies\").weapon.map((setting, key) => {\r\n            return { ...setting, value: proficiencies.weapon[key]?.value ?? 0 };\r\n        });\r\n        data.speed.value = this.itemTypes.race[0]?.data.type === \"race\" ? this.itemTypes.race[0].data.data.speed : 0;\r\n        data.speed.value += attributes.dex.mod + data.speed.bonus;\r\n    }\r\n    /**\r\n     * Prepare NPC type specific data.\r\n     */\r\n    _prepareNpcData(actorData) {\r\n        //@ts-expect-error\r\n        if (actorData.type !== \"npc\")\r\n            return;\r\n        // Make modifications to data here. For example:\r\n        const data = actorData.data;\r\n        //@ts-expect-error\r\n        data.xp = data.cr * data.cr * 100;\r\n    }\r\n    /**\r\n     * Override getRollData() that's supplied to rolls.\r\n     */\r\n    getRollData() {\r\n        const data = super.getRollData();\r\n        // Prepare character roll data.\r\n        return data;\r\n    }\r\n    /**\r\n     * Roll an Ability Test\r\n     * Prompt the user for input regarding Advantage/Disadvantage and any Situational Bonus\r\n     * @param {Number} attributeId    The ability ID (e.g. \"str\")\r\n     * @param {Object} options      Options which configure how ability tests are rolled\r\n     * @return {Promise<Roll>}      A Promise which resolves to the created Roll instance\r\n     */\r\n    rollAbilityTest(attributeId, options) {\r\n        const label = game.i18n.localize(getValues(CONFIG.ARd20.Attributes, attributeId));\r\n        const actorData = this.data.data;\r\n        const attributes = actorData.attributes;\r\n        const attr = getValues(attributes, attributeId);\r\n        // Construct parts\r\n        const parts = [\"@mod\"];\r\n        const data = { mod: attr };\r\n        // Add provided extra roll parts now because they will get clobbered by mergeObject below\r\n        if (options.parts.length > 0) {\r\n            parts.push(...options.parts);\r\n        }\r\n        // Roll and return\r\n        const rollData = foundry.utils.mergeObject(options, {\r\n            parts: parts,\r\n            data: data,\r\n            title: game.i18n.format(\"ARd20.AttributePromptTitle\", { attribute: label }),\r\n            messageData: {\r\n                speaker: options.speaker || ChatMessage.getSpeaker({ actor: this }),\r\n                \"flags.ard20.roll\": { type: \"attribute\", attributeId },\r\n            },\r\n        });\r\n        //@ts-expect-error\r\n        return d20Roll(rollData);\r\n    }\r\n    /**\r\n     * Roll a Skill Check\r\n     * Prompt the user for input regarding Advantage/Disadvantage and any Situational Bonus\r\n     * @param {string} skillId      The skill id (e.g. \"ins\")\r\n     * @param {Object} options      Options which configure how the skill check is rolled\r\n     * @return {Promise<Roll>}      A Promise which resolves to the created Roll instance\r\n     */\r\n    rollSkill(skillId, options) {\r\n        const skl = getValues(this.data.data.skills, skillId);\r\n        // Compose roll parts and data\r\n        const parts = [\"@proficiency\", \"@mod\"];\r\n        const data = { attributes: this.getRollData().attributes, proficiency: skl.value };\r\n        // Add provided extra roll parts now because they will get clobbered by mergeObject below\r\n        if (options.parts.length > 0) {\r\n            parts.push(...options.parts);\r\n        }\r\n        // Roll and return\r\n        const rollData = foundry.utils.mergeObject(options, {\r\n            parts: parts,\r\n            data: data,\r\n            title: game.i18n.format(\"ARd20.SkillPromptTitle\", {\r\n                skill: game.i18n.localize(getValues(CONFIG.ARd20.Skills, skillId)),\r\n            }),\r\n            messageData: {\r\n                speaker: options.speaker || ChatMessage.getSpeaker({ actor: this }),\r\n                \"flags.ard20.roll\": { type: \"skill\", skillId },\r\n            },\r\n            chooseModifier: true,\r\n        });\r\n        //@ts-expect-error\r\n        return d20Roll(rollData);\r\n    }\r\n}\r\n","// Import document classes.\r\nimport { ARd20Actor } from \"../built/documents/actor.js\";\r\nimport { ARd20Item } from \"../built/documents/item.js\";\r\n// Import sheet classes.\r\nimport { ARd20ActorSheet } from \"../built/sheets/actor-sheet.js\";\r\nimport { ARd20ItemSheet } from \"../built/sheets/item-sheet.js\";\r\n// Import helper/utility classes and constants.\r\nimport { preloadHandlebarsTemplates } from \"../built/helpers/templates.js\";\r\nimport { ARd20 } from \"../built/helpers/config.js\";\r\nimport ARd20SocketHandler from \"../built/helpers/socket.js\";\r\nimport { registerSystemSettings } from \"../built/helpers/settings.js\";\r\nimport * as dice from \"../built/dice/dice.js\";\r\nimport * as chat from \"../built/helpers/chat.js\";\r\n/* -------------------------------------------- */\r\n/*  Init Hook                                   */\r\n/* -------------------------------------------- */\r\nexport function obj_entries(obj) {\r\n    return Object.entries(obj);\r\n}\r\nexport function arr_entries(arr) {\r\n    return Object.entries(arr);\r\n}\r\nexport function getValues(SourceObject, key) {\r\n    return SourceObject[key];\r\n}\r\nexport function obj_keys(obj) {\r\n    return Object.keys(obj);\r\n}\r\nexport function array_keys(obj) {\r\n    return Object.keys(obj);\r\n}\r\nHooks.once(\"init\", async function () {\r\n    // Add utility classes to the global game object so that they're more easily\r\n    // accessible in global contexts.\r\n    if (game instanceof Game) {\r\n        game.ard20 = {\r\n            documents: {\r\n                ARd20Actor,\r\n                ARd20Item,\r\n            },\r\n            rollItemMacro,\r\n            config: ARd20,\r\n            dice: dice,\r\n        };\r\n        // Add custom constants for configuration.\r\n        CONFIG.ARd20 = ARd20;\r\n        //@ts-expect-error\r\n        CONFIG.Dice.DamageRoll = dice.DamageRoll;\r\n        //@ts-expect-error\r\n        CONFIG.Dice.D20Roll = dice.D20Roll;\r\n        CONFIG.Dice.rolls.push(dice.D20Roll);\r\n        CONFIG.Dice.rolls.push(dice.DamageRoll);\r\n        if (game.socket instanceof io.Socket) {\r\n            game.socket.on(\"system.ard20\", (data) => {\r\n                if (data.operation === \"updateActorData\")\r\n                    ARd20SocketHandler.updateActorData(data);\r\n            });\r\n        }\r\n        /**\r\n         * Set an initiative formula for the system\r\n         * @type {String}\r\n         */\r\n        CONFIG.Combat.initiative = {\r\n            formula: \"1d20 + @abilities.dex.mod\",\r\n            decimals: 2,\r\n        };\r\n        // Define custom Document classes\r\n        CONFIG.Actor.documentClass = ARd20Actor;\r\n        CONFIG.Item.documentClass = ARd20Item;\r\n        // Register sheet application classes\r\n        Actors.unregisterSheet(\"core\", ActorSheet);\r\n        Actors.registerSheet(\"ard20\", ARd20ActorSheet, { makeDefault: true });\r\n        Items.unregisterSheet(\"core\", ItemSheet);\r\n        //@ts-expect-error\r\n        Items.registerSheet(\"ard20\", ARd20ItemSheet, { makeDefault: true });\r\n        registerSystemSettings();\r\n        // Preload Handlebars templates.\r\n        return preloadHandlebarsTemplates();\r\n    }\r\n    else {\r\n        throw new Error(\"game not initialized yet!\");\r\n    }\r\n});\r\n/* -------------------------------------------- */\r\n/*  Handlebars Helpers                          */\r\n/* -------------------------------------------- */\r\n// If you need to add Handlebars helpers, here are a few useful examples:\r\nHandlebars.registerHelper(\"concat\", function () {\r\n    var outStr = \"\";\r\n    for (var arg in arguments) {\r\n        if (typeof arguments[arg] != \"object\") {\r\n            outStr += arguments[arg];\r\n        }\r\n    }\r\n    return outStr;\r\n});\r\nHandlebars.registerHelper(\"toLowerCase\", function (str) {\r\n    return str.toLowerCase();\r\n});\r\nHandlebars.registerHelper(\"add\", function (value1, value2) {\r\n    return Number(value1) + Number(value2);\r\n});\r\n/* -------------------------------------------- */\r\n/*  Ready Hook                                  */\r\n/* -------------------------------------------- */\r\nHooks.once(\"ready\", async function () {\r\n    // Wait to register hotbar drop hook on ready so that modules could register earlier if they want to\r\n    Hooks.on(\"hotbarDrop\", (bar, data, slot) => createItemMacro(data, slot));\r\n});\r\n/* -------------------------------------------- */\r\n/*  Hotbar Macros                               */\r\n/* -------------------------------------------- */\r\n/**\r\n * Create a Macro from an Item drop.\r\n * Get an existing item macro if one exists, otherwise create a new one.\r\n * @param {Object} data     The dropped data\r\n * @param {number} slot     The hotbar slot to use\r\n * @returns {Promise}\r\n */\r\nasync function createItemMacro(data, slot) {\r\n    if (game instanceof Game) {\r\n        //@ts-expect-error\r\n        if (data.type !== \"Item\")\r\n            return;\r\n        if (!(\"data\" in data) && ui.notifications instanceof Notifications)\r\n            return ui.notifications.warn(\"You can only create macro buttons for owned Items\");\r\n        //@ts-expect-error\r\n        const item = data.data;\r\n        // Create the macro command\r\n        const command = `game.ard20.rollItemMacro(\"${item.name}\");`;\r\n        let macroList = game.macros.contents.filter((m) => m.name === item.name && m?.command === command);\r\n        let macroCheck = macroList.length !== 0 ? macroList[0] : null;\r\n        if (macroCheck !== null) {\r\n            let macro = await Macro.create({\r\n                name: item.name,\r\n                type: \"script\",\r\n                img: item.img,\r\n                command: command,\r\n                flags: { \"ard20.itemMacro\": true },\r\n            });\r\n            if (macro instanceof Macro) {\r\n                game.user?.assignHotbarMacro(macro, slot);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Create a Macro from an Item drop.\r\n * Get an existing item macro if one exists, otherwise create a new one.\r\n * @param {string} itemName\r\n * @return {Promise}\r\n */\r\nexport function rollItemMacro(itemName) {\r\n    if (game instanceof Game) {\r\n        const speaker = ChatMessage.getSpeaker();\r\n        let actor;\r\n        if (speaker.token)\r\n            actor = game.actors.tokens[speaker.token];\r\n        if (!actor && typeof speaker.actor === \"string\")\r\n            actor = game.actors.get(speaker.actor);\r\n        const item = actor ? actor.items.find((i) => i.name === itemName) : null;\r\n        if (!item)\r\n            return ui.notifications.warn(`Your controlled Actor does not have an item named ${itemName}`);\r\n        // Trigger the item roll\r\n        //@ts-expect-error\r\n        return item.roll();\r\n    }\r\n}\r\nHooks.on(\"renderChatMessage\", (app, html, data) => {\r\n    // Display action buttons\r\n    chat.displayChatActionButtons(app, html, data);\r\n    // Highlight critical success or failure die\r\n    chat.highlightCriticalSuccessFailure(app, html, data);\r\n    // Optionally collapse the content\r\n});\r\nHooks.on(\"getChatLogEntryContext\", chat.addChatMessageContextOptions);\r\n//@ts-expect-error\r\nHooks.on(\"renderChatLog\", (app, html, data) => ARd20Item.chatListeners(html));\r\n//@ts-expect-error\r\nHooks.on(\"renderChatPopout\", (app, html, data) => ARd20Item.chatListeners(html));\r\n"],"names":["D20Roll","Roll","constructor","formula","data","options","terms","Die","faces","Error","_formula","configureModifiers","hasAdvantage","advantageMode","ADV_MODE","ADVANTAGE","hasDisadvantage","DISADVANTAGE","d20","modifiers","number","push","advantage","disadvantage","critical","fumble","targetValue","target","getFormula","toMessage","messageData","_evaluated","evaluate","async","flavor","game","i18n","localize","rollMode","configureDialog","title","string","defaultRollMode","canMult","boolean","defaultAction","NORMAL","mRoll","chooseModifier","defaultAttribute","template","content","renderTemplate","EVALUATION_TEMPLATE","rollModes","CONFIG","Dice","attributes","ARd20","Attributes","defaultButton","Promise","resolve","Dialog","buttons","label","callback","html","_onDialogSubmit","normal","default","close","render","form","querySelector","console","log","bonus","value","OperatorTerm","operator","concat","ability","abl","findSplice","t","term","NumericTerm","mod","checked","DamageRoll","undefined","configureDamage","isCritical","critBonus","i","entries","damageType","DiceTerm","baseNumber","oper","num","splice","cb","criticalBonusDice","alter","multiplyNumeric","criticalMultiplier","damType","defaultCritical","allowCritical","condition","forEach","part","ind","fromData","roll","simplifyRollFormula","constantFirst","some","_isUnsupportedTerm","rollableTerms","constantTerms","operators","constantFormula","rollableFormula","constantPart","safeEval","err","warn","parts","filterJoin","diceTerm","includes","d20Roll","fastForward","event","dialogOptions","chatMessage","speaker","join","isFF","_determineAdvantageMode","settings","get","configured","defaultAbility","item","shiftKey","altKey","ctrlKey","metaKey","damageRoll","_determineCriticalMode","ARd20Item","Item","prepareData","prepareDerivedData","itemData","_prepareSpellData","_prepareWeaponData","_prepareFeatureData","_prepareRaceData","_prepareArmorData","hasAttack","_prepareAttack","hasDamage","_prepareDamage","isOwned","prepareFinalAttributes","type","flags","_setTypeAndSubtype","key","obj_entries","damage","prof","Array","isArray","sub","length","sub_type_array","weapon","filter","core","sourceId","id","exec","items","sub_type","name","proficiency","getValues","Rank","level","source","Source","has","max","initial","Math","min","current","n","k","round","Number","abs","toPrecision","sign","xp","basicCost","AdvancedCost","req","Object","values","pass","from","v","Skills","logic","dr","DamageSubTypes","res","phys","mag","mobility","HeavyPoints","slot","abil","getProperty","actor","prof_bonus","proficiencies","pr","levelName","dex","atkMod","attack","str","prop","baseDamage","getRollData","rollData","foundry","utils","deepClone","damageDie","createMessage","iData","ChatMessage","getSpeaker","targets","user","displayCard","chatListeners","on","_onChatCardAction","bind","_onChatCardToggleContent","_rollDamage","preventDefault","element","closest","classList","toggle","button","currentTarget","card","messageId","dataset","message","messages","action","targetUuid","targetId","isTargetted","isGM","isAuthor","_getChatCardActor","storedData","getFlag","parent","itemId","ui","notifications","error","format","spellLevel","parseInt","dam","rollDamage","versatile","$","find","replaceWith","update","outerHTML","rollFormula","_getChatCardTargets","token","scene","canvas","rollAbilitySave","rollToolCheck","ard20","AbilityTemplate","fromItem","drawPreview","disabled","header","style","display","_applyDamage","tData","tHealth","tActor","total","defences","obj","socket","emit","operation","fromUuid","health","damHTML","append","remove","tokenId","actorId","actors","tokens","controlled","character","getActiveTokens","Boolean","atk","dc","atkHTML","dmgHTML","result","hit","dmg","dieResultCss","def","atkRoll","rollAttack","dmgRoll","stats","keys","reroll","size","templateData","uuid","getChatData","labels","owner","isOwner","chatData","_id","CONST","CHAT_MESSAGE_TYPES","OTHER","chatFlavor","applyRollMode","create","htmlOptions","getAttackToHit","rollConfig","width","mergeObject","map","d","c","a","DamageTypes","b","altkey","attackBonus","toHit","test","onManageActiveEffect","li","effect","effectId","effects","createEmbeddedDocuments","icon","origin","effectType","sheet","delete","prepareActiveEffectCategories","categories","temporary","passive","inactive","e","_getSourceName","isTemporary","CharacterAdvancement","FormApplication","defaultOptions","classes","height","tabs","navSelector","contentSelector","closeOnSubmit","InitilizeData","pack","getPacks","folder","getFolders","rList","getRacesList","fList","getFeaturesList","actorData","object","startingData","isReady","duplicate","skills","advancement","profs","races","list","chosen","count","feats","mar","div","pri","psy","learned","learnedFeatures","awail","temp_feat_list","allow","attribute","race","final","hover","skill","feat","used","awailFeats","name_array","val","TextEditor","enrichHTML","description","pack_list","pack_name","packs","metadata","feat_list","documentName","index","flat","new_key","package","doc","getDocument","toObject","folder_list","folder_name","folders","contents","race_pack_list","race_folder_list","raceItem","feat_pack_list","FeatureItem","currentXP","isEq","isXP","feat_folder_list","itemTypes","feature","_objectSpread","getData","raceList","raceChosen","featsAwail","featsLearned","all","reduce","race_abil","floor","AbilXP","rankName","SkillXP","value_hover","allCount","featCount","ceil","r","_item","input","featLevel","exp","lev_array","match","f","replace","filtrex","compileExpression","raceHP","con","abil_sum","allow_list","activateListeners","_onChange","_onHover","_onChangeInput","table","tr","trDOM","querySelectorAll","tdDesc","bColor","window","getComputedStyle","getPropertyValue","td","nextElementSibling","previousElementSibling","th","tab","hover_desc","_updateObject","_event","formData","updateData","expandObject","feats_data","new","exist","awItem","_index","learnedItem","slice","race_list","updateEmbeddedDocuments","ARd20ActorSheet","ActorSheet","context","config","_prepareItems","_prepareCharacterData","rank_name","rank","gear","features","weapons","armor","spells","img","DEFAULT_TOKEN","isActive","toggleClass","toggleTitle","equipped","select2","click","_onToggleItem","ev","parents","isEditable","_onItemCreate","slideUp","_onRollAbilityTest","_onRollSkillCheck","_OnAdvanceMenu","_onItemRoll","handler","_onDragStart","each","contains","setAttribute","addEventListener","app","itemid","attr","parentElement","rollAbilityTest","rollSkill","capitalize","_onRoll","rollType","_onDrop","JSON","parse","dataTransfer","allowed","Hooks","call","_onDropActiveEffect","_onDropActor","_onDropItem","_onDropFolder","FeatRequirements","InitializeData","reqValues","reqLogic","formApp","subtype_list","inputElement","previousElement","maxLevel","featList","getFeats","arr","assign","type_list","indexOf","featAwail","featCurrent","entity","_onAdd","_Delete","sub_list","defaultValue","fill","order","_getSubmitData","ARd20ItemSheet","ItemSheet","path","fd","FormDataExtended","editors","flattenObject","edit","formatSelection","state","text","optgroup","subtype","url","formatResult","theme","dropdownAutoWidth","templateSelection","templateResult","escapeMarkup","m","trigger","evt","params","originalEvent","stopPropagation","_FeatReq","_onDamageControl","partsPath","damTypePath","damagePart","_onSubmit","args","_tabs","active","position","preloadHandlebarsTemplates","loadTemplates","int","wis","cha","AttributeAbbreviations","CHARACTER_EXP_LEVELS","SpellSchool","abj","enc","evo","ill","nec","trs","acr","ani","arc","ath","dec","his","ins","itm","inv","med","nat","prc","prf","per","rel","slt","ste","sur","WeaponProp","aff","awk","bra","dis","dou","ent","fin","fir","hea","lau","lig","lun","mel","one","pen","ran","rea","sta","thr","tri","two","ver","WeaponType","amb","axe","blu","bow","sli","cbl","cro","dbl","fla","whi","ham","pic","pol","spe","acid","bludgeoning","cold","fire","force","lightning","necr","piercing","poison","slashing","radiant","psychic","ResistTypes","vul","imm","HPDice","light","chest","gloves","boots","pants","head","medium","heavy","RollResult","ARd20SocketHandler","updateActorData","noop","identity","x","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","is_empty","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","_","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","document","createElement","createTextNode","space","listen","removeEventListener","prevent_default","removeAttribute","getAttribute","children","childNodes","set_input_value","current_component","set_current_component","component","get_current_component","getContext","$$","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","then","flush","add_render_callback","seen_callbacks","Set","flushidx","saved_component","pop","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","check_outros","transition_in","block","local","transition_out","o","mount_component","customElement","on_mount","on_destroy","new_on_destroy","destroy_component","detaching","make_dirty","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","l","intro","SvelteComponent","$destroy","$on","$set","$$props","$$set","ApplicationState","application","_application","_dataSaved","extra","minimized","reactive","getSave","TypeError","restore","animateTo","duration","easing","linear","interpolate","lerp","dataSaved","set","save","_excluded","mergeOptions","maximize","animate","minimize","transformOrigin","GetSvelteData","applicationShellHolder","svelteData","_applicationShellHolder","_svelteData","applicationShell","componentEntries","cntr","componentValues","dataByComponent","dataEntries","dataValues","loadSvelteConfig","elementRootUpdate","svelteOptions","HTMLElement","createDocumentFragment","stringify","NewSvelteComponent","class","svelteConfig","parseSvelteConfig","externalContext","eventbus","_eventbus","createProxy","isApplicationShell","elementRoot","DocumentFragment","firstElementChild","selectorElement","injectHTML","s_REGEX","styleParsePixels","isPixels","isFinite","subscriber_queue","readable","start","writable","stop","subscribers","new_value","run_queue","subscriber","invalidate","derived","stores","initial_value","single","stores_array","auto","inited","pending","cleanup","sync","unsubscribers","SvelteReactive","initialize","appOptionsUpdate","uiOptionsUpdate","dragging","resizing","draggable","headerButtonNoClose","headerButtonNoLabel","minimizable","popOut","resizable","storeAppOptions","storeUIState","setOptions","getOptions","accessor","safeAccess","instanceOptions","deepMerge","success","safeSet","updateHeaderButtons","_getHeaderButtons","headerButtons","writableAppOptions","propertyStore","freeze","_minimized","writableUIOptions","$options","subscribeIgnoreFirst","rendered","windows","appId","nextAnimationFrame","isInteger","currentTime","performance","now","requestAnimationFrame","Symbol","iterator","AdapterValidators","seal","entry","validators","validator","validatorType","subscribeFn","weight","findIndex","actualValidator","removeBy","removeById","ids","Position","left","rotateX","rotateY","rotateZ","scale","top","s_TRANSFORM_ORIGIN_DEFAULT","zIndex","_stores","s_TRANSFORM_ORIGINS","elementUpdated","positionable","currentAnimationKeys","destination","newData","easedTime","toJSON","reset","keepZIndex","invokeSet","properties","silent","isIterable","property","transforms","currentTransform","updateTransform","el","elementTarget","transform","modified","subscriptions","transformString","currentPosition","styles","globalThis","offsetWidth","tarW","minW","minWidth","MIN_WINDOW_WIDTH","maxW","maxWidth","innerWidth","clamped","offsetHeight","tarH","minH","minHeight","MIN_WINDOW_HEIGHT","maxH","maxHeight","innerHeight","tarL","maxL","tarT","maxT","SvelteApplication","Application","defineProperty","defaultCloseAnimation","elementContent","svelte","_activateCoreListeners","bringToTop","activeWindow","states","RENDER_STATES","RENDERED","ERROR","_state","CLOSING","CLOSED","overflow","cls","_getInheritanceChain","paddingBottom","paddingTop","clientHeight","finished","svelteDestroyPromises","outroAndDestroy","off","_element","_scrollPositions","storeOptions","_injectHTML","isDocumentFragment","hasGetter","selectorTarget","constraints","offset","setTimeout","animation","className","onSvelteMount","_replaceHTML","_render","NONE","_renderInner","_renderOuter","setPosition","AdvRateSettingsShim","AdvancementRateFormApp","focus","submitOnChange","AdvancementRateShell","body","variables","formulas","sheetData","registerSystemSettings","register","scope","tools","onChange","registerMenu","ProfFormApp","restricted","FeatFormApp","skillCount","featureCount","skillValue","featureLevel","attributeValue","fieldName","propertyName","split","highlightCriticalSuccessFailure","isRoll","isContentVisible","dice","isD20","isModifiedRoll","results","marginSuccess","marginFailure","addClass","displayChatActionButtons","chatCard","author","btn","addChatMessageContextOptions","canApply","applyChatCardDamage","multiplier","applyDamage","SourceObject","obj_keys","once","Game","documents","ARd20Actor","rollItemMacro","rolls","io","Socket","Combat","initiative","decimals","Actor","documentClass","Actors","unregisterSheet","registerSheet","makeDefault","Items","Handlebars","registerHelper","outStr","arg","arguments","toLowerCase","value1","value2","bar","createItemMacro","Notifications","command","macroList","macros","macroCheck","macro","Macro","assignHotbarMacro","itemName","chat","_prepareNpcData","def_stats","def_dam","ph","mg","dexMod","levels","level_min","bar_max","bar_min","reflex","fortitude","will","isNaN","setting","speed","cr","attributeId","skillId","skl","arr_entries","array_keys"],"mappings":"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"}