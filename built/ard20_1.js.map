{"version":3,"file":"ard20_1.js","sources":["dice/d20-roll.js","dice/damage-roll.js","dice/dice.js","documents/item.js","helpers/Character Advancement/ChangeButton.svelte","helpers/Character Advancement/TDvariants.svelte","helpers/Character Advancement/Attributes.svelte","helpers/Character Advancement/Tabs.svelte","helpers/Character Advancement/cha-adv-shell.svelte","helpers/effects.js","sheets/actor-sheet.js","helpers/feat_req.js","sheets/item-sheet.js","helpers/templates.js","helpers/config.js","helpers/socket.js","general svelte components/SettingsSubmitButton.svelte","settings/advancement-rate/advancement-rate-shell.svelte","settings/advancement-rate/advancement-rate.js","settings/FeatSetting/featSetting-shell.svelte","settings/FeatSetting/featSetting.js","settings/ProfSetting/profSetting-shell.svelte","settings/ProfSetting/profSetting.js","settings/ProfLevelsSetting/profLevelSetting-shell.svelte","settings/ProfLevelsSetting/profLevelSetting.js","helpers/settings.js","helpers/chat.js","ard20.js","documents/actor.js","../svelte/init.js"],"sourcesContent":["/**\r\n * A type of Roll specific to a d20-based check, save, or attack roll in the 5e system.\r\n * @param {string} formula                       The string formula to parse\r\n * @param {object} data                          The data object against which to parse attributes within the formula\r\n * @param {object} [options={}]                  Extra optional arguments which describe or modify the D20Roll\r\n * @param {number} [options.advantageMode]             What advantage modifier to apply to the roll (none, advantage, disadvantage)\r\n * @param {number} [options.critical]                  The value of d20 result which represents a critical success\r\n * @param {number} [options.fumble]                    The value of d20 result which represents a critical failure\r\n * @param {(number)} [options.targetValue]             Assign a target value against which the result of this roll should be compared\r\n * @param {boolean} [options.elvenAccuracy=false]      Allow Elven Accuracy to modify this roll?\r\n * @param {boolean} [options.halflingLucky=false]      Allow Halfling Luck to modify this roll?\r\n * @param {boolean} [options.reliableTalent=false]     Allow Reliable Talent to modify this roll?\r\n */\r\nexport default class D20Roll extends Roll {\r\n    constructor(formula, data, options = {}) {\r\n        super(formula, data, options);\r\n        if (!(this.terms[0] instanceof Die && this.terms[0].faces === 20)) {\r\n            throw new Error(`Invalid D20Roll formula provided ${this._formula}`);\r\n        }\r\n        this.configureModifiers();\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * A convenience reference for whether this D20Roll has advantage\r\n     * @type {boolean}\r\n     */\r\n    get hasAdvantage() {\r\n        //@ts-expect-error\r\n        return this.options.advantageMode === D20Roll.ADV_MODE.ADVANTAGE;\r\n    }\r\n    /**\r\n     * A convenience reference for whether this D20Roll has disadvantage\r\n     * @type {boolean}\r\n     */\r\n    get hasDisadvantage() {\r\n        //@ts-expect-error\r\n        return this.options.advantageMode === D20Roll.ADV_MODE.DISADVANTAGE;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /*  D20 Roll Methods                            */\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Apply optional modifiers which customize the behavior of the d20term\r\n     * @private\r\n     */\r\n    configureModifiers() {\r\n        const d20 = this.terms[0];\r\n        //@ts-expect-error\r\n        d20.modifiers = [];\r\n        // Handle Advantage or Disadvantage\r\n        if (this.hasAdvantage) {\r\n            //@ts-expect-error\r\n            d20.number = 2;\r\n            //@ts-expect-error\r\n            d20.modifiers.push(\"kh\");\r\n            //@ts-expect-error\r\n            d20.options.advantage = true;\r\n        }\r\n        else if (this.hasDisadvantage) {\r\n            //@ts-expect-error\r\n            d20.number = 2;\r\n            //@ts-expect-error\r\n            d20.modifiers.push(\"kl\");\r\n            //@ts-expect-error\r\n            d20.options.disadvantage = true;\r\n            //@ts-expect-error\r\n        }\r\n        else\r\n            d20.number = 1;\r\n        // Assign critical and fumble thresholds\r\n        //@ts-expect-error\r\n        if (this.options.critical)\r\n            d20.options.critical = this.options.critical;\r\n        //@ts-expect-error\r\n        if (this.options.fumble)\r\n            d20.options.fumble = this.options.fumble;\r\n        //@ts-expect-error\r\n        if (this.options.targetValue)\r\n            d20.options.target = this.options.targetValue;\r\n        // Re-compile the underlying formula\r\n        //@ts-expect-error\r\n        this._formula = this.constructor.getFormula(this.terms);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @inheritdoc */\r\n    async toMessage(messageData = {}, options = {}) {\r\n        // Evaluate the roll now so we have the results available to determine whether reliable talent came into play\r\n        if (!this._evaluated)\r\n            await this.evaluate({ async: true });\r\n        // Add appropriate advantage mode message flavor and ard20 roll flags\r\n        //@ts-expect-error\r\n        messageData.flavor = messageData.flavor || this.options.flavor;\r\n        //@ts-expect-error\r\n        if (this.hasAdvantage)\r\n            messageData.flavor += ` (${game.i18n.localize(\"ARd20.Advantage\")})`;\r\n        //@ts-expect-error\r\n        else if (this.hasDisadvantage)\r\n            messageData.flavor += ` (${game.i18n.localize(\"ARd20.Disadvantage\")})`;\r\n        // Record the preferred rollMode\r\n        //@ts-expect-error\r\n        options.rollMode = options.rollMode ?? this.options.rollMode;\r\n        return super.toMessage(messageData, options);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /*  Configuration Dialog                        */\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Create a Dialog prompt used to configure evaluation of an existing D20Roll instance.\r\n     * @param {object} data                     Dialog configuration data\r\n     * @param {string} [data.title]               The title of the shown dialog window\r\n     * @param {number} [data.defaultRollMode]     The roll mode that the roll mode select element should default to\r\n     * @param {number} [data.defaultAction]       The button marked as default\r\n     * @param {boolean} [data.chooseModifier]     Choose which ability modifier should be applied to the roll?\r\n     * @param {string} [data.defaultAbility]      For tool rolls, the default ability modifier applied to the roll\r\n     * @param {string} [data.template]            A custom path to an HTML template to use instead of the default\r\n     * @param {object} options                  Additional Dialog customization options\r\n     * @returns {Promise<D20Roll|null>}         A resulting D20Roll object constructed with the dialog, or null if the dialog was closed\r\n     */\r\n    //@ts-expect-error\r\n    async configureDialog({ title, defaultRollMode, canMult, defaultAction = D20Roll.ADV_MODE.NORMAL, mRoll, chooseModifier = false, defaultAttribute, template } = {}, options = {}) {\r\n        // Render the Dialog inner HTML\r\n        //@ts-expect-error\r\n        const content = await renderTemplate(template ?? this.constructor.EVALUATION_TEMPLATE, {\r\n            formula: `${this.formula} + @bonus`,\r\n            //@ts-expect-error\r\n            defaultRollMode,\r\n            rollModes: CONFIG.Dice.rollModes,\r\n            chooseModifier,\r\n            defaultAttribute,\r\n            attributes: CONFIG.ARd20.Attributes,\r\n            //@ts-expect-error\r\n            canMult,\r\n            mRoll,\r\n        });\r\n        let defaultButton = \"normal\";\r\n        switch (defaultAction) {\r\n            case D20Roll.ADV_MODE.ADVANTAGE:\r\n                defaultButton = \"advantage\";\r\n                break;\r\n            case D20Roll.ADV_MODE.DISADVANTAGE:\r\n                defaultButton = \"disadvantage\";\r\n                break;\r\n        }\r\n        // Create the Dialog window and await submission of the form\r\n        return new Promise((resolve) => {\r\n            new Dialog({\r\n                //@ts-expect-error\r\n                title,\r\n                content,\r\n                buttons: {\r\n                    advantage: {\r\n                        label: game.i18n.localize(\"ARd20.Advantage\"),\r\n                        callback: (html) => resolve(this._onDialogSubmit(html, D20Roll.ADV_MODE.ADVANTAGE)),\r\n                    },\r\n                    normal: {\r\n                        label: game.i18n.localize(\"ARd20.Normal\"),\r\n                        callback: (html) => resolve(this._onDialogSubmit(html, D20Roll.ADV_MODE.NORMAL)),\r\n                    },\r\n                    disadvantage: {\r\n                        label: game.i18n.localize(\"ARd20.Disadvantage\"),\r\n                        callback: (html) => resolve(this._onDialogSubmit(html, D20Roll.ADV_MODE.DISADVANTAGE)),\r\n                    },\r\n                },\r\n                default: defaultButton,\r\n                close: () => resolve(null),\r\n            }, options).render(true);\r\n        });\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Handle submission of the Roll evaluation configuration Dialog\r\n     * @param {jQuery} html             The submitted dialog content\r\n     * @param {number} advantageMode    The chosen advantage mode\r\n     * @private\r\n     */\r\n    //@ts-expect-error\r\n    _onDialogSubmit(html, advantageMode) {\r\n        const form = html[0].querySelector(\"form\");\r\n        console.log(this);\r\n        console.log(form, \"ФОРМА\");\r\n        if (form.bonus.value) {\r\n            const bonus = new Roll(form.bonus.value, this.data);\r\n            if (!(bonus.terms[0] instanceof OperatorTerm))\r\n                this.terms.push(new OperatorTerm({ operator: \"+\" }));\r\n            this.terms = this.terms.concat(bonus.terms);\r\n        }\r\n        // Customize the modifier\r\n        if (form.attribute?.value) {\r\n            //@ts-expect-error\r\n            const abl = this.data.attributes[form.attribute.value];\r\n            console.log(abl);\r\n            //@ts-expect-error\r\n            this.terms.findSplice((t) => t.term === \"@mod\", new NumericTerm({ number: abl.mod }));\r\n            //@ts-expect-error\r\n            this.options.flavor += ` (${game.i18n.localize(CONFIG.ARd20.Attributes[form.attribute.value])})`;\r\n        }\r\n        /* if (form.prof_type?.value) {\r\n           const pr = this.data[form.prof_type.value][form.prof_value.value];\r\n           console.log(pr);\r\n           this.terms.findSplice((t) => t.term === \"@prof_die\", new Die({ number: 1, faces: pr.prof_die }));\r\n           this.terms.findSplice((t) => t.term === \"@prof_bonus\", new NumericTerm({ number: pr.prof_bonus }));\r\n         }*/\r\n        // Apply advantage or disadvantage\r\n        //@ts-expect-error\r\n        this.options.advantageMode = advantageMode;\r\n        //@ts-expect-error\r\n        this.options.rollMode = form.rollMode.value;\r\n        //@ts-expect-error\r\n        this.options.mRoll = form.mRoll?.checked;\r\n        this.configureModifiers();\r\n        return this;\r\n    }\r\n}\r\n/* -------------------------------------------- */\r\n/**\r\n * Advantage mode of a 5e d20 roll\r\n * @enum {number}\r\n */\r\nD20Roll.ADV_MODE = {\r\n    NORMAL: 0,\r\n    ADVANTAGE: 1,\r\n    DISADVANTAGE: -1,\r\n};\r\n/**\r\n * The HTML template path used to configure evaluation of this Roll\r\n * @type {string}\r\n */\r\nD20Roll.EVALUATION_TEMPLATE = \"systems/ard20/templates/chat/roll-dialog.html\";\r\n","/**\r\n * A type of Roll specific to a damage (or healing) roll in the 5e system.\r\n * @param {string} formula                       The string formula to parse\r\n * @param {object} data                          The data object against which to parse attributes within the formula\r\n * @param {object} [options={}]                  Extra optional arguments which describe or modify the DamageRoll\r\n * @param {number} [options.criticalBonusDice=0]      A number of bonus damage dice that are added for critical hits\r\n * @param {number} [options.criticalMultiplier=2]     A critical hit multiplier which is applied to critical hits\r\n * @param {boolean} [options.multiplyNumeric=false]   Multiply numeric terms by the critical multiplier\r\n * @param {boolean} [options.powerfulCritical=false]  Apply the \"powerful criticals\" house rule to critical hits\r\n *\r\n */\r\n//@ts-expect-error\r\nexport default class DamageRoll extends Roll {\r\n    //@ts-expect-error\r\n    constructor(formula, data, options) {\r\n        super(formula, data, options);\r\n        // For backwards compatibility, skip rolls which do not have the \"critical\" option defined\r\n        //@ts-expect-error\r\n        if (this.options.critical !== undefined)\r\n            this.configureDamage();\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * A convenience reference for whether this DamageRoll is a critical hit\r\n     * @type {boolean}\r\n     */\r\n    get isCritical() {\r\n        //@ts-expect-error\r\n        return this.options.critical;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /*  Damage Roll Methods                         */\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Apply optional modifiers which customize the behavior of the d20term\r\n     * @private\r\n     */\r\n    configureDamage() {\r\n        let critBonus = 0;\r\n        for (let [i, term] of this.terms.entries()) {\r\n            if (!(term instanceof OperatorTerm)) {\r\n                //@ts-expect-error\r\n                term.options.damageType = i !== 0 && this.terms[i - 1] instanceof OperatorTerm ? this.options.damageType[i - 1] : this.options.damageType[i];\r\n            }\r\n            // Multiply dice terms\r\n            if (term instanceof DiceTerm) {\r\n                //@ts-expect-error\r\n                term.options.baseNumber = term.options.baseNumber ?? term.number; // Reset back\r\n                //@ts-expect-error\r\n                term.number = term.options.baseNumber;\r\n                if (this.isCritical) {\r\n                    critBonus += term.number * term.faces;\r\n                    let [oper, num] = [new OperatorTerm({ operator: \"+\" }), new NumericTerm({ number: critBonus, options: { flavor: \"Crit\" } })];\r\n                    this.terms.splice(1, 0, oper);\r\n                    this.terms.splice(2, 0, num);\r\n                    //@ts-expect-error\r\n                    let cb = this.options.criticalBonusDice && i === 0 ? this.options.criticalBonusDice : 0;\r\n                    term.alter(1, cb);\r\n                    //@ts-expect-error\r\n                    term.options.critical = true;\r\n                }\r\n            }\r\n            // Multiply numeric terms\r\n            //@ts-expect-error\r\n            else if (this.options.multiplyNumeric && term instanceof NumericTerm) {\r\n                //@ts-expect-error\r\n                term.options.baseNumber = term.options.baseNumber ?? term.number; // Reset back\r\n                //@ts-expect-error\r\n                term.number = term.options.baseNumber;\r\n                if (this.isCritical) {\r\n                    //@ts-expect-error\r\n                    term.number *= this.options.criticalMultiplier ?? 2;\r\n                    //@ts-expect-error\r\n                    term.options.critical = true;\r\n                }\r\n            }\r\n        }\r\n        //@ts-expect-error\r\n        this._formula = this.constructor.getFormula(this.terms);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @inheritdoc */\r\n    toMessage(messageData = {}, options = {}) {\r\n        //@ts-expect-error\r\n        messageData.flavor = messageData.flavor || this.options.flavor;\r\n        if (this.isCritical) {\r\n            const label = game.i18n.localize(\"ARd20.CriticalHit\");\r\n            //@ts-expect-error\r\n            messageData.flavor = messageData.flavor ? `${messageData.flavor} (${label})` : label;\r\n        }\r\n        //@ts-expect-error\r\n        options.rollMode = options.rollMode ?? this.options.rollMode;\r\n        return super.toMessage(messageData, options);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /*  Configuration Dialog                        */\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Create a Dialog prompt used to configure evaluation of an existing D20Roll instance.\r\n     * @param {object} data                     Dialog configuration data\r\n     * @param {string} [data.title]               The title of the shown dialog window\r\n     * @param {number} [data.defaultRollMode]     The roll mode that the roll mode select element should default to\r\n     * @param {string} [data.defaultCritical]     Should critical be selected as default\r\n     * @param {string} [data.template]            A custom path to an HTML template to use instead of the default\r\n     * @param {boolean} [data.allowCritical=true] Allow critical hit to be chosen as a possible damage mode\r\n     * @param {object} options                  Additional Dialog customization options\r\n     * @returns {Promise<D20Roll|null>}         A resulting D20Roll object constructed with the dialog, or null if the dialog was closed\r\n     */\r\n    //@ts-expect-error\r\n    async configureDialog({ title, defaultRollMode, canMult, damType, mRoll, defaultCritical = false, template, allowCritical = true } = {}, options = {}) {\r\n        // Render the Dialog inner HTML\r\n        //@ts-expect-error\r\n        const content = await renderTemplate(template ?? this.constructor.EVALUATION_TEMPLATE, {\r\n            formula: `${this.formula} + @bonus`,\r\n            defaultRollMode,\r\n            rollModes: CONFIG.Dice.rollModes,\r\n            canMult,\r\n            damType,\r\n            mRoll\r\n        });\r\n        // Create the Dialog window and await submission of the form\r\n        return new Promise((resolve) => {\r\n            new Dialog({\r\n                title,\r\n                content,\r\n                buttons: {\r\n                    critical: {\r\n                        //@ts-expect-error\r\n                        condition: allowCritical,\r\n                        label: game.i18n.localize(\"ARd20.CriticalHit\"),\r\n                        callback: (html) => resolve(this._onDialogSubmit(html, true)),\r\n                    },\r\n                    normal: {\r\n                        label: game.i18n.localize(allowCritical ? \"ARd20.Normal\" : \"ARd20.Roll\"),\r\n                        callback: (html) => resolve(this._onDialogSubmit(html, false)),\r\n                    },\r\n                },\r\n                default: defaultCritical ? \"critical\" : \"normal\",\r\n                close: () => resolve(null),\r\n            }, options).render(true);\r\n        });\r\n    }\r\n    /* -------------------------------------------- */\r\n    /**\r\n     * Handle submission of the Roll evaluation configuration Dialog\r\n     * @param {jQuery} html             The submitted dialog content\r\n     * @param {boolean} isCritical      Is the damage a critical hit?\r\n     * @private\r\n     */\r\n    //@ts-expect-error\r\n    _onDialogSubmit(html, isCritical) {\r\n        const form = html[0].querySelector(\"form\");\r\n        // Append a situational bonus term\r\n        if (form.bonus.value) {\r\n            const bonus = new Roll(form.bonus.value, this.data);\r\n            if (!(bonus.terms[0] instanceof OperatorTerm))\r\n                this.terms.push(new OperatorTerm({ operator: \"+\" }));\r\n            this.terms = this.terms.concat(bonus.terms);\r\n        }\r\n        // Apply advantage or disadvantage\r\n        //@ts-expect-error\r\n        this.options.critical = isCritical;\r\n        //@ts-expect-error\r\n        this.options.rollMode = form.rollMode.value;\r\n        //@ts-expect-error\r\n        this.options.damageType.forEach((part, ind) => (this.options.damageType[ind] = form[`damageType.${ind}`] ? part[form[`damageType.${ind}`].value] : part[0]));\r\n        //@ts-expect-error\r\n        this.options.mRoll = form.mRoll?.checked;\r\n        this.configureDamage();\r\n        return this;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @inheritdoc */\r\n    //@ts-expect-error\r\n    static fromData(data) {\r\n        const roll = super.fromData(data);\r\n        //@ts-expect-error\r\n        roll._formula = this.getFormula(roll.terms);\r\n        return roll;\r\n    }\r\n}\r\n/**\r\n * The HTML template path used to configure evaluation of this Roll\r\n * @type {string}\r\n */\r\nDamageRoll.EVALUATION_TEMPLATE = \"systems/ard20/templates/chat/roll-dialog.html\";\r\n","export { default as D20Roll } from \"./d20-roll.js\";\r\nexport { default as DamageRoll } from \"./damage-roll.js\";\r\n/**\r\n * A standardized helper function for simplifying the constant parts of a multipart roll formula\r\n *\r\n * @param {string} formula                 The original Roll formula\r\n * @param {Object} data                    Actor or item data against which to parse the roll\r\n * @param {Object} options                 Formatting options\r\n * @param {boolean} options.constantFirst   Puts the constants before the dice terms in the resulting formula\r\n *\r\n * @return {string}                        The resulting simplified formula\r\n */\r\nexport function simplifyRollFormula(formula, data, options={ constantFirst : false }) {\r\n    const roll = new Roll(formula, data); // Parses the formula and replaces any @properties\r\n    const terms = roll.terms;\r\n    // Some terms are \"too complicated\" for this algorithm to simplify\r\n    // In this case, the original formula is returned.\r\n    if (terms.some(_isUnsupportedTerm))\r\n        return roll.formula;\r\n    const rollableTerms = []; // Terms that are non-constant, and their associated operators\r\n    const constantTerms = []; // Terms that are constant, and their associated operators\r\n    let operators = []; // Temporary storage for operators before they are moved to one of the above\r\n    for (let term of terms) {\r\n        // For each term\r\n        if (term instanceof OperatorTerm)\r\n            operators.push(term);\r\n        // If the term is an addition/subtraction operator, push the term into the operators array\r\n        else {\r\n            // Otherwise the term is not an operator\r\n            if (term instanceof DiceTerm) {\r\n                // If the term is something rollable\r\n                rollableTerms.push(...operators); // Place all the operators into the rollableTerms array\r\n                rollableTerms.push(term); // Then place this rollable term into it as well\r\n            } //\r\n            else {\r\n                // Otherwise, this must be a constant\r\n                constantTerms.push(...operators); // Place the operators into the constantTerms array\r\n                constantTerms.push(term); // Then also add this constant term to that array.\r\n            } //\r\n            operators = []; // Finally, the operators have now all been assigend to one of the arrays, so empty this before the next iteration.\r\n        }\r\n    }\r\n    const constantFormula = Roll.getFormula(constantTerms); // Cleans up the constant terms and produces a new formula string\r\n    const rollableFormula = Roll.getFormula(rollableTerms); // Cleans up the non-constant terms and produces a new formula string\r\n    // Mathematically evaluate the constant formula to produce a single constant term\r\n    let constantPart = undefined;\r\n    if (constantFormula) {\r\n        try {\r\n            constantPart = Roll.safeEval(constantFormula);\r\n        }\r\n        catch (err) {\r\n            console.warn(`Unable to evaluate constant term ${constantFormula} in simplifyRollFormula`);\r\n        }\r\n    }\r\n    // Order the rollable and constant terms, either constant first or second depending on the optional argument\r\n    const parts = options.constantFirst ? [constantPart, rollableFormula] : [rollableFormula, constantPart];\r\n    // Join the parts with a + sign, pass them to `Roll` once again to clean up the formula\r\n    return new Roll(parts.filterJoin(\" + \")).formula;\r\n}\r\n/* -------------------------------------------- */\r\n/**\r\n * Only some terms are supported by simplifyRollFormula, this method returns true when the term is not supported.\r\n * @param {*} term - A single Dice term to check support on\r\n * @return {Boolean} True when unsupported, false if supported\r\n */\r\nfunction _isUnsupportedTerm(term) {\r\n    const diceTerm = term instanceof DiceTerm;\r\n    const operator = term instanceof OperatorTerm && [\"+\", \"-\"].includes(term.operator);\r\n    const number = term instanceof NumericTerm;\r\n    return !(diceTerm || operator || number);\r\n}\r\n/* -------------------------------------------- */\r\n/* D20 Roll                                     */\r\n/* -------------------------------------------- */\r\n/**\r\n * A standardized helper function for managing core 5e d20 rolls.\r\n * Holding SHIFT, ALT, or CTRL when the attack is rolled will \"fast-forward\".\r\n * This chooses the default options of a normal attack with no bonus, Advantage, or Disadvantage respectively\r\n *\r\n * @param {string[]} parts          The dice roll component parts, excluding the initial d20\r\n * @param {object} data             Actor or item data against which to parse the roll\r\n *\r\n * @param {boolean} [advantage]       Apply advantage to the roll (unless otherwise specified)\r\n * @param {boolean} [disadvantage]    Apply disadvantage to the roll (unless otherwise specified)\r\n * @param {number} [critical]         The value of d20 result which represents a critical success\r\n * @param {number} [fumble]           The value of d20 result which represents a critical failure\r\n * @param {number} [targetValue]      Assign a target value against which the result of this roll should be compared\r\n\r\n * @param {boolean} [chooseModifier=false] Choose the ability modifier that should be used when the roll is made\r\n * @param {boolean} [fastForward=false] Allow fast-forward advantage selection\r\n * @param {Event} [event]             The triggering event which initiated the roll\r\n * @param {string} [rollMode]         A specific roll mode to apply as the default for the resulting roll\r\n * @param {string} [template]         The HTML template used to render the roll dialog\r\n * @param {string} [title]            The dialog window title\r\n * @param {Object} [dialogOptions]    Modal dialog options\r\n *\r\n * @param {boolean} [chatMessage=true] Automatically create a Chat Message for the result of this roll\r\n * @param {object} [messageData={}] Additional data which is applied to the created Chat Message, if any\r\n * @param {string} [rollMode]       A specific roll mode to apply as the default for the resulting roll\r\n * @param {object} [speaker]        The ChatMessage speaker to pass when creating the chat\r\n * @param {string} [flavor]         Flavor text to use in the posted chat message\r\n *\r\n * @return {Promise<D20Roll|null>}  The evaluated D20Roll, or null if the workflow was cancelled\r\n */\r\n//@ts-expect-error\r\nexport async function d20Roll({ \r\n//@ts-expect-error\r\nparts = [], \r\n//@ts-expect-error\r\ndata = {}, \r\n//@ts-expect-error\r\nadvantage, \r\n//@ts-expect-error\r\ndisadvantage, \r\n//@ts-expect-error\r\nfumble = 1, \r\n//@ts-expect-error\r\ncritical = 20, \r\n//@ts-expect-error\r\ntargetValue, \r\n//@ts-expect-error\r\nchooseModifier = false, \r\n//@ts-expect-error\r\nfastForward = false, \r\n//@ts-expect-error\r\nevent, \r\n//@ts-expect-error\r\ntemplate, \r\n//@ts-expect-error\r\ntitle, \r\n//@ts-expect-error\r\ndialogOptions, \r\n//@ts-expect-error\r\nchatMessage = true, \r\n//@ts-expect-error\r\nmessageData = {}, \r\n//@ts-expect-error\r\nrollMode, \r\n//@ts-expect-error\r\nspeaker, \r\n//@ts-expect-error\r\noptions, \r\n//@ts-expect-error\r\nflavor, \r\n//@ts-expect-error\r\ncanMult, \r\n//@ts-expect-error\r\nmRoll,\r\n//@ts-expect-error\r\n } = {}) {\r\n    // Handle input arguments\r\n    const formula = [\"1d20\"].concat(parts).join(\" + \");\r\n    const { advantageMode, isFF } = _determineAdvantageMode({ advantage, disadvantage, fastForward, event });\r\n    const defaultRollMode = rollMode || game.settings.get(\"core\", \"rollMode\");\r\n    if (chooseModifier && !isFF) {\r\n        data[\"mod\"] = \"@mod\";\r\n    }\r\n    // Construct the D20Roll instance\r\n    //@ts-expect-error\r\n    const roll = new CONFIG.Dice.D20Roll(formula, data, {\r\n        flavor: flavor || title,\r\n        advantageMode,\r\n        defaultRollMode,\r\n        critical,\r\n        fumble,\r\n        targetValue,\r\n        mRoll,\r\n    });\r\n    // Prompt a Dialog to further configure the D20Roll\r\n    if (!isFF) {\r\n        const configured = await roll.configureDialog({\r\n            title,\r\n            chooseModifier,\r\n            defaultRollMode: defaultRollMode,\r\n            defaultAction: advantageMode,\r\n            defaultAbility: data?.item?.ability,\r\n            template,\r\n            canMult,\r\n            mRoll,\r\n        }, dialogOptions);\r\n        if (configured === null)\r\n            return null;\r\n    }\r\n    // Evaluate the configured roll\r\n    await roll.evaluate({ async: true });\r\n    // Create a Chat Message\r\n    if (speaker) {\r\n        console.warn(`You are passing the speaker argument to the d20Roll function directly which should instead be passed as an internal key of messageData`);\r\n        messageData.speaker = speaker;\r\n    }\r\n    if (roll && chatMessage)\r\n        await roll.toMessage(messageData, options);\r\n    return roll;\r\n}\r\n/* -------------------------------------------- */\r\n/**\r\n * Determines whether this d20 roll should be fast-forwarded, and whether advantage or disadvantage should be applied\r\n * @returns {{isFF: boolean, advantageMode: number}}  Whether the roll is fast-forward, and its advantage mode\r\n */\r\n//@ts-expect-error\r\nfunction _determineAdvantageMode({ event, advantage = false, disadvantage = false, fastForward = false } = {}) {\r\n    const isFF = fastForward || (event && (event.shiftKey || event.altKey || event.ctrlKey || event.metaKey));\r\n    //@ts-expect-error\r\n    let advantageMode = CONFIG.Dice.D20Roll.ADV_MODE.NORMAL;\r\n    //@ts-expect-error\r\n    if (advantage || event?.altKey)\r\n        advantageMode = CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE;\r\n    //@ts-expect-error\r\n    else if (disadvantage || event?.ctrlKey || event?.metaKey)\r\n        advantageMode = CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE;\r\n    return { isFF, advantageMode };\r\n}\r\n/* -------------------------------------------- */\r\n/* Damage Roll                                  */\r\n/* -------------------------------------------- */\r\n/**\r\n * A standardized helper function for managing core 5e damage rolls.\r\n * Holding SHIFT, ALT, or CTRL when the attack is rolled will \"fast-forward\".\r\n * This chooses the default options of a normal attack with no bonus, Critical, or no bonus respectively\r\n *\r\n * @param {string[]} parts          The dice roll component parts, excluding the initial d20\r\n * @param {object} [data]           Actor or item data against which to parse the roll\r\n *\r\n * @param {boolean} [critical=false] Flag this roll as a critical hit for the purposes of fast-forward or default dialog action\r\n * @param {number} [criticalBonusDice=0] A number of bonus damage dice that are added for critical hits\r\n * @param {number} [criticalMultiplier=2] A critical hit multiplier which is applied to critical hits\r\n * @param {boolean} [multiplyNumeric=false] Multiply numeric terms by the critical multiplier\r\n * @param {boolean} [powerfulCritical=false] Apply the \"powerful criticals\" house rule to critical hits\r\n\r\n * @param {boolean} [fastForward=false] Allow fast-forward advantage selection\r\n * @param {Event}[event]            The triggering event which initiated the roll\r\n * @param {boolean} [allowCritical=true] Allow the opportunity for a critical hit to be rolled\r\n * @param {string} [template]       The HTML template used to render the roll dialog\r\n * @param {string} [title]          The dice roll UI window title\r\n * @param {object} [dialogOptions]  Configuration dialog options\r\n *\r\n * @param {boolean} [chatMessage=true] Automatically create a Chat Message for the result of this roll\r\n * @param {object} [messageData={}] Additional data which is applied to the created Chat Message, if any\r\n * @param {string} [rollMode]       A specific roll mode to apply as the default for the resulting roll\r\n * @param {object} [speaker]        The ChatMessage speaker to pass when creating the chat\r\n * @param {string} [flavor]         Flavor text to use in the posted chat message\r\n *\r\n * @return {Promise<DamageRoll|null>} The evaluated DamageRoll, or null if the workflow was canceled\r\n */\r\n//@ts-expect-error\r\nexport async function damageRoll({ \r\n//@ts-expect-error\r\nparts = [], \r\n//@ts-expect-error\r\ndata, // Roll creation\r\n//@ts-expect-error\r\ncritical = false, \r\n//@ts-expect-error\r\ndamType, \r\n//@ts-expect-error\r\ndamageType, \r\n//@ts-expect-error\r\ncriticalBonusDice, \r\n//@ts-expect-error\r\ncriticalMultiplier, \r\n//@ts-expect-error\r\nmultiplyNumeric, // Damage customization\r\n//@ts-expect-error\r\nfastForward = false, \r\n//@ts-expect-error\r\nevent, \r\n//@ts-expect-error\r\nallowCritical = true, \r\n//@ts-expect-error\r\ntemplate, \r\n//@ts-expect-error\r\ntitle, \r\n//@ts-expect-error\r\ndialogOptions, // Dialog configuration\r\n//@ts-expect-error\r\nchatMessage = false, \r\n//@ts-expect-error\r\nmessageData = {}, \r\n//@ts-expect-error\r\nrollMode, \r\n//@ts-expect-error\r\nspeaker, \r\n//@ts-expect-error\r\ncanMult, \r\n//@ts-expect-error\r\nflavor, \r\n//@ts-expect-error\r\nmRoll\r\n//@ts-expect-error\r\n } = {}) {\r\n    console.log(canMult);\r\n    // Handle input arguments\r\n    const defaultRollMode = rollMode || game.settings.get(\"core\", \"rollMode\");\r\n    // Construct the DamageRoll instance\r\n    const formula = parts.join(\" + \");\r\n    const { isCritical, isFF } = _determineCriticalMode({ critical, fastForward, event });\r\n    //@ts-expect-error\r\n    const roll = new CONFIG.Dice.DamageRoll(formula, data, {\r\n        flavor: flavor || title,\r\n        critical: isCritical,\r\n        criticalBonusDice,\r\n        criticalMultiplier,\r\n        multiplyNumeric,\r\n        damType,\r\n        mRoll,\r\n        damageType\r\n    });\r\n    // Prompt a Dialog to further configure the DamageRoll\r\n    if (!isFF) {\r\n        const configured = await roll.configureDialog({\r\n            title,\r\n            defaultRollMode: defaultRollMode,\r\n            defaultCritical: isCritical,\r\n            template,\r\n            allowCritical,\r\n            mRoll,\r\n            canMult,\r\n            damType\r\n        }, dialogOptions);\r\n        if (configured === null)\r\n            return null;\r\n    }\r\n    // Evaluate the configured roll\r\n    await roll.evaluate({ async: true });\r\n    // Create a Chat Message\r\n    if (speaker) {\r\n        console.warn(`You are passing the speaker argument to the damageRoll function directly which should instead be passed as an internal key of messageData`);\r\n        messageData.speaker = speaker;\r\n    }\r\n    if (roll && chatMessage)\r\n        await roll.toMessage(messageData);\r\n    return roll;\r\n}\r\n/* -------------------------------------------- */\r\n/**\r\n * Determines whether this d20 roll should be fast-forwarded, and whether advantage or disadvantage should be applied\r\n * @returns {{isFF: boolean, isCritical: boolean}}  Whether the roll is fast-forward, and whether it is a critical hit\r\n */\r\n//@ts-expect-error\r\nfunction _determineCriticalMode({ event, critical = false, fastForward = false } = {}) {\r\n    const isFF = fastForward || (event && (event.shiftKey || event.altKey || event.ctrlKey || event.metaKey));\r\n    if (event?.altKey)\r\n        critical = true;\r\n    return { isFF, isCritical: critical };\r\n}\r\n","import { getValues, obj_entries } from \"../ard20.js\";\r\nimport { d20Roll, damageRoll, simplifyRollFormula } from \"../dice/dice.js\";\r\n/**\r\n * Extend the basic Item with some very simple modifications.\r\n * @extends {Item}\r\n */\r\nexport class ARd20Item extends Item {\r\n  /**\r\n   * Augment the basic Item data model with additional dynamic data.\r\n   */\r\n  prepareData() {\r\n    // As with the actor class, items are documents that can have their data\r\n    // preparation methods overridden (such as prepareBaseData()).\r\n    super.prepareData();\r\n  }\r\n  prepareDerivedData() {\r\n    super.prepareDerivedData();\r\n    const itemData = this.data;\r\n    this.labels = {};\r\n    this._prepareSpellData(itemData);\r\n    this._prepareWeaponData(itemData);\r\n    this._prepareFeatureData(itemData);\r\n    this._prepareRaceData(itemData);\r\n    this._prepareArmorData(itemData);\r\n    if (itemData.data.hasAttack) this._prepareAttack(itemData);\r\n    if (itemData.data.hasDamage) this._prepareDamage(itemData);\r\n    if (!this.isOwned) this.prepareFinalAttributes();\r\n  }\r\n  /**\r\n   *Prepare data for Spells\r\n   */\r\n  _prepareSpellData(itemData) {\r\n    if (itemData.type !== \"spell\") return;\r\n    const data = itemData.data;\r\n  }\r\n  /**\r\n   *Prepare data for weapons\r\n   */\r\n  _prepareWeaponData(itemData) {\r\n    if (itemData.type !== \"weapon\") return;\r\n    const data = itemData.data;\r\n    const flags = itemData.flags;\r\n    data.hasAttack = data.hasAttack || true;\r\n    data.hasDamage = data.hasDamage || true;\r\n    //TODO: this._setDeflect(data);\r\n    this._setTypeAndSubtype(data, flags);\r\n    for (const level of game.settings.get(\"ard20\", \"profLevel\")) {\r\n      data.damage.common[level.key] = data.damage.common[level.key] ?? {\r\n        formula: \"\",\r\n        parts: [[\"\", [\"\", \"\"]]],\r\n      };\r\n    }\r\n    /*for (let [key, type] of obj_entries(data.damage)) {\r\n            if (key !== \"current\") {\r\n                for (let [key, prof] of obj_entries(type)) {\r\n                    prof.formula = \"\";\r\n                    prof.parts.forEach((part) => {\r\n                        if (Array.isArray(part[1])) {\r\n                            prof.formula += `${part[0]}`;\r\n                            part[1].forEach((sub, ind) => {\r\n                                if (ind === 0) {\r\n                                    prof.formula += ` {${sub[0]} ${sub[1]}`;\r\n                                    prof.formula += ind === part[1].length - 1 ? \"}\" : \"\";\r\n                                }\r\n                                else {\r\n                                    prof.formula += ` or ${sub[0]} ${sub[1]}`;\r\n                                    prof.formula += ind === part[1].length - 1 ? \"}\" : \"\";\r\n                                }\r\n                            });\r\n                        }\r\n                        else\r\n                            prof.formula += `${part[0]} {${part[1]} ${part[2]}}; `;\r\n                    });\r\n                }\r\n            }\r\n        }*/\r\n  }\r\n  /**\r\n   *Set deflect die equal to damage die, if not\r\n   */\r\n  /* TODO:\r\n    _setDeflect(data: object & WeaponDataPropertiesData) {\r\n      for (let [k, v] of obj_entries(CONFIG.ARd20.Rank)) {\r\n        v = game.i18n.localize(CONFIG.ARd20.prof[k]) ?? k;\r\n        v = v.toLowerCase();\r\n        data.deflect[v] = data.property[v].def ? data.deflect[v] || data.damage.common[v] : 0;\r\n      }\r\n    }\r\n    */\r\n  //@ts-expect-error\r\n  _setTypeAndSubtype(data, flags) {\r\n    data.sub_type_array = game.settings\r\n      .get(\"ard20\", \"proficiencies\")\r\n      .weapon.value.filter((prof) => prof.type === data.type.value);\r\n    if (flags.core?.sourceId) {\r\n      const id = /Item.(.+)/.exec(flags.core.sourceId)[1];\r\n      const item = game.items?.get(id);\r\n      if (item?.data.type === \"weapon\") {\r\n        data.sub_type = data.sub_type === undefined ? item.data.data.sub_type : data.sub_type;\r\n      }\r\n    }\r\n    data.sub_type =\r\n      data.sub_type_array.filter((prof) => prof.name === data.sub_type).length === 0\r\n        ? data.sub_type_array[0].name\r\n        : data.sub_type || data.sub_type_array[0].name;\r\n    data.proficiency.name =\r\n      game.i18n.localize(getValues(CONFIG.ARd20.Rank, data.proficiency.level)) ??\r\n      getValues(CONFIG.ARd20.Rank, data.proficiency.level);\r\n    data.type.name =\r\n      game.i18n.localize(getValues(CONFIG.ARd20.Rank, data.type.value)) ??\r\n      getValues(CONFIG.ARd20.Rank, data.type.value);\r\n  }\r\n  /**\r\n   *Prepare data for features\r\n   */\r\n  _prepareFeatureData(itemData) {\r\n    if (itemData.type !== \"feature\") return;\r\n    const data = itemData.data;\r\n    // Handle Source of the feature\r\n    data.source.label = \"\";\r\n    data.source.value.forEach((value, key) => {\r\n      let label = game.i18n.localize(getValues(CONFIG.ARd20.Source, value));\r\n      data.source.label += key === 0 ? label : `</br>${label}`;\r\n    });\r\n    //labels.source = game.i18n.localize(CONFIG.ARd20.source[data.source.value]);\r\n    //define levels\r\n    data.level.has = data.level.has !== undefined ? data.level.has : false;\r\n    data.level.max = data.level.has ? data.level.max || 4 : 1;\r\n    data.level.initial = Math.min(data.level.max, data.level.initial);\r\n    data.level.current = this.isOwned ? Math.max(data.level.initial, 1) : 0;\r\n    //define exp cost\r\n    if (data.level.max > 1) {\r\n      let n = (10 - data.level.max) / data.level.max;\r\n      let k = 1.7 + (Math.round(Number((Math.abs(n) * 100).toPrecision(15))) / 100) * Math.sign(n);\r\n      if (data.xp.basicCost.length < data.level.max) {\r\n        for (let i = 1; i < data.level.max; i++) {\r\n          data.xp.basicCost.push(Math.round((data.xp.basicCost[i - 1] * k) / 5) * 5);\r\n          data.xp.AdvancedCost.push(data.xp.basicCost[i]);\r\n        }\r\n      } else {\r\n        for (let i = 1; i < data.level.max; i++) {\r\n          data.xp.basicCost[i] = Math.round((data.xp.basicCost[i - 1] * k) / 5) * 5;\r\n          data.xp.AdvancedCost[i] = data.xp.AdvancedCost[i] ?? data.xp.basicCost[i];\r\n        }\r\n      }\r\n    }\r\n    for (let [key, req] of Object.entries(data.req.values)) {\r\n      req.pass = Array.from({ length: data.level.max }, (i) => (i = false));\r\n      switch (req.type) {\r\n        case \"ability\":\r\n          for (let [key, v] of obj_entries(CONFIG.ARd20.Attributes)) {\r\n            if (req.name === game.i18n.localize(CONFIG.ARd20.Attributes[key])) req.value = key;\r\n          }\r\n          break;\r\n        case \"skill\":\r\n          for (let [key, v] of obj_entries(CONFIG.ARd20.Skills)) {\r\n            if (req.name === game.i18n.localize(CONFIG.ARd20.Skills[key])) req.value = key;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n    for (let i = data.req.logic.length; data.level.max > data.req.logic.length; i++) {\r\n      if (i === 0) {\r\n        data.req.logic.push(\"1\");\r\n      } else {\r\n        data.req.logic.push(data.req.logic[i - 1]);\r\n      }\r\n    }\r\n    for (let i = data.req.logic.length; data.level.max < data.req.logic.length; i--) {\r\n      data.req.logic.splice(data.req.logic.length - 1, 1);\r\n    }\r\n  }\r\n  /**\r\n   * Prepare data for 'race' type of item\r\n   */\r\n  _prepareRaceData(itemData) {\r\n    if (itemData.type !== \"race\") return;\r\n  }\r\n  /**\r\n   * Prepare data for \"armor\" type item\r\n   */\r\n  _prepareArmorData(itemData) {\r\n    if (itemData.type !== \"armor\") return;\r\n    const data = itemData.data;\r\n    for (let [key, dr] of obj_entries(CONFIG.ARd20.DamageSubTypes)) {\r\n      if (!(key === \"force\" || key === \"radiant\" || key === \"psychic\")) {\r\n        data.res.phys[key].value = parseInt(data.res.phys[key].value) ?? 0;\r\n        data.res.phys[key].value += data.res.phys[key].value !== \"imm\" ? data.res.phys[key].bonus : \"\";\r\n      }\r\n      data.res.mag[key].value = parseInt(data.res.mag[key].value) ?? 0;\r\n      data.res.mag[key].value += data.res.mag[key].value !== \"imm\" ? data.res.mag[key].bonus : \"\";\r\n    }\r\n    data.mobility.value = data.mobility.value ?? CONFIG.ARd20.HeavyPoints[data.type][data.slot];\r\n    data.mobility.value += data.mobility.bonus;\r\n  }\r\n  /**\r\n    Prepare Data that uses actor's data\r\n    */\r\n  prepareFinalAttributes() {\r\n    const itemData = this.data;\r\n    //@ts-expect-error\r\n    const abil = (itemData.abil = {});\r\n    for (let [k, v] of obj_entries(CONFIG.ARd20.Attributes)) {\r\n      abil[k] = this.isOwned ? getProperty(this.actor.data, `data.attributes.${k}.mod`) : null;\r\n    }\r\n    let prof_bonus = 0;\r\n    if (itemData.type === \"weapon\") {\r\n      const data = itemData.data;\r\n      data.proficiency.level = this.isOwned\r\n        ? this.actor?.data.data.proficiencies.weapon.filter((pr) => pr.name === data.sub_type)[0].value\r\n        : 0;\r\n      data.proficiency.levelName = game.settings.get(\"ard20\", \"profLevel\")[data.proficiency.level].label;\r\n      data.proficiency.key = game.settings.get(\"ard20\", \"profLevel\")[data.proficiency.level].key;\r\n      prof_bonus = data.proficiency.level * 4;\r\n    }\r\n    if (itemData.data.hasAttack) this._prepareAttack(itemData, prof_bonus, abil);\r\n    if (itemData.data.hasDamage) this._prepareDamage(itemData, abil);\r\n  }\r\n  _prepareAttack(itemData, prof_bonus, abil) {\r\n    const data = itemData.data;\r\n    if (!data.hasAttack) return;\r\n    //@ts-expect-error\r\n    let mod = itemData.type === \"weapon\" && abil !== undefined ? abil.dex : data.atkMod;\r\n    //@ts-expect-error\r\n    data.attack = {\r\n      formula: \"1d20+\" + prof_bonus + \"+\" + mod,\r\n      parts: [mod, prof_bonus],\r\n    };\r\n  }\r\n  _prepareDamage(itemData, abil) {\r\n    const data = itemData.data;\r\n    if (!data.hasDamage) return;\r\n    let mod = itemData.type === \"weapon\" && abil !== undefined ? abil.str : 0;\r\n    const prop = itemData.type === \"weapon\" ? `damage.common.${data.proficiency.key}.parts` : \"damage.parts\";\r\n    let baseDamage = getProperty(data, prop);\r\n    //@ts-expect-error\r\n    data.damage.current = {\r\n      formula: \"\",\r\n      parts: baseDamage,\r\n    };\r\n    baseDamage?.forEach((part, key) => {\r\n      console.log(\"baseDamage for current damage\", part);\r\n      //@ts-expect-error\r\n      data.damage.current.formula += part[0] + `[`;\r\n      part[1].forEach((subPart, subKey) => {\r\n        data.damage.current.formula +=\r\n          game.i18n.localize(CONFIG.ARd20.DamageTypes[subPart[0]]) +\r\n          ` ${game.i18n.localize(CONFIG.ARd20.DamageSubTypes[subPart[1]])}`;\r\n        data.damage.current.formula += subKey === part[1].length - 1 ? \"]\" : \" or<br/>\";\r\n      });\r\n      data.damage.current.formula += key === baseDamage.length - 1 ? \"\" : \"<br/>+<br/>\";\r\n    });\r\n  }\r\n  /**\r\n   * Prepare a data object which is passed to any Roll formulas which are created related to this Item\r\n   * @private\r\n   */\r\n  //@ts-expect-error\r\n  getRollData() {\r\n    // If present, return the actor's roll data.\r\n    if (!this.actor) return null;\r\n    const rollData = this.actor.getRollData();\r\n    const hasDamage = this.data.data.hasDamage;\r\n    const hasAttack = this.data.data.hasAttack;\r\n    //@ts-expect-error\r\n    rollData.item = foundry.utils.deepClone(this.data.data);\r\n    //@ts-expect-error\r\n    rollData.damageDie = hasDamage ? this.data.data.damage.current.parts[0] : null;\r\n    //@ts-expect-error\r\n    rollData.mod = hasAttack\r\n      ? //@ts-expect-error\r\n        this.data.data.attack.parts[0]\r\n      : hasDamage\r\n      ? //@ts-expect-error\r\n        this.data.data.damage.current.parts[1]\r\n      : null;\r\n    //@ts-expect-error\r\n    rollData.prof = hasAttack ? this.data.data.attack.parts[1] : null;\r\n    return rollData;\r\n  }\r\n  /**\r\n   * Handle clickable rolls.\r\n   * @param {Event} event   The originating click event\r\n   * @private\r\n   */\r\n  //@ts-expect-error\r\n  async roll({ configureDialog = true, rollMode, hasDamage = false, hasAttack = false, createMessage = true }) {\r\n    let item = this;\r\n    const id = item.id;\r\n    const iData = this.data.data; //Item data\r\n    const actor = this.actor;\r\n    const aData = actor?.data.data;\r\n    hasDamage = iData.hasDamage || hasDamage;\r\n    hasAttack = iData.hasAttack || hasAttack;\r\n    // Initialize chat data.\r\n    const speaker = ChatMessage.getSpeaker({ actor: actor });\r\n    const iName = this.name;\r\n    // Otherwise, create a roll and send a chat message from it.\r\n    const targets = Array.from(game.user.targets);\r\n    //@ts-expect-error\r\n    const mRoll = this.data.data.mRoll || false;\r\n    //@ts-expect-error\r\n    return item.displayCard({ rollMode, createMessage, hasAttack, hasDamage, targets, mRoll });\r\n  }\r\n  /* -------------------------------------------- */\r\n  /*  Chat Message Helpers                        */\r\n  /* -------------------------------------------- */\r\n  static chatListeners(html) {\r\n    html.on(\"click\", \".card-buttons button\", this._onChatCardAction.bind(this));\r\n    html.on(\"click\", \".item-name\", this._onChatCardToggleContent.bind(this));\r\n    html.on(\"click\", \".attack-roll .roll-controls .accept\", this._rollDamage.bind(this));\r\n    html.trigger(\"click\");\r\n    html.on(\"hover\", \".attack-roll .flexrow .value\", function (event) {\r\n      event.preventDefault();\r\n      const element = this.closest(\"li.flexrow\");\r\n      element.querySelector(\".attack-roll .hover-roll\")?.classList.toggle(\"shown\", event.type == \"mouseenter\");\r\n    });\r\n  }\r\n  /* -------------------------------------------- */\r\n  /**\r\n   * Handle execution of a chat card action via a click event on one of the card buttons\r\n   * @param {Event} event       The originating click event\r\n   * @returns {Promise}         A promise which resolves once the handler workflow is complete\r\n   * @private\r\n   */\r\n  //@ts-expect-error\r\n  static async _onChatCardAction(event) {\r\n    console.log(event);\r\n    event.stopImmediatePropagation();\r\n    // Extract card data\r\n    const button = event.currentTarget;\r\n    const card = button.closest(\".chat-card\");\r\n    const messageId = card.closest(\".message\").dataset.messageId;\r\n    const message = game.messages.get(messageId);\r\n    const action = button.dataset.action;\r\n    const targetUuid = button.closest(\".flexrow\").dataset.targetId;\r\n    // Validate permission to proceed with the roll\r\n    const isTargetted = action === \"save\";\r\n    if (!(isTargetted || game.user.isGM || message.isAuthor)) return;\r\n    // Recover the actor for the chat card\r\n    const actor = await this._getChatCardActor(card);\r\n    if (!actor) return;\r\n    // Get the Item from stored flag data or by the item ID on the Actor\r\n    const storedData = message.getFlag(\"ard20\", \"itemData\");\r\n    //@ts-expect-error\r\n    const item = storedData ? new this(storedData, { parent: actor }) : actor.items.get(card.dataset.itemId);\r\n    if (!item) {\r\n      return ui.notifications.error(\r\n        game.i18n.format(\"ARd20.ActionWarningNoItem\", { item: card.dataset.itemId, name: actor.name })\r\n      );\r\n    }\r\n    const spellLevel = parseInt(card.dataset.spellLevel) || null;\r\n    // Handle different actions\r\n    switch (action) {\r\n      case \"damage\":\r\n      case \"versatile\":\r\n        let dam = await item.rollDamage({\r\n          critical: event.altKey,\r\n          event: event,\r\n          spellLevel: spellLevel,\r\n          versatile: action === \"versatile\",\r\n        });\r\n        //const dom = new DOMParser().parseFromString(message.data.content,\"text/html\")\r\n        const html = $(message.data.content);\r\n        dam = await dam.render();\r\n        //dom.querySelector('button').replaceWith(dam)\r\n        if (targetUuid) {\r\n          html.find(`[data-targetId=\"${targetUuid}\"]`).find(\"button\").replaceWith(dam);\r\n        } else {\r\n          html.find(\".damage-roll\").find(\"button\").replaceWith(dam);\r\n        }\r\n        //console.log(dom)\r\n        await message.update({ content: html[0].outerHTML });\r\n        break;\r\n      case \"formula\":\r\n        await item.rollFormula({ event, spellLevel });\r\n        break;\r\n      case \"save\":\r\n        const targets = this._getChatCardTargets(card);\r\n        for (let token of targets) {\r\n          //@ts-expect-error\r\n          const speaker = ChatMessage.getSpeaker({ scene: canvas.scene, token: token });\r\n          //@ts-expect-error\r\n          await token.actor.rollAbilitySave(button.dataset.ability, { event, speaker });\r\n        }\r\n        break;\r\n      case \"toolCheck\":\r\n        await item.rollToolCheck({ event });\r\n        break;\r\n      case \"placeTemplate\":\r\n        ///@ts-expect-error\r\n        const template = game.ard20.canvas.AbilityTemplate.fromItem(item);\r\n        if (template) template.drawPreview();\r\n        break;\r\n    }\r\n    // Re-enable the button\r\n    button.disabled = false;\r\n  }\r\n  /* -------------------------------------------- */\r\n  /**\r\n   * Handle toggling the visibility of chat card content when the name is clicked\r\n   * @param {Event} event   The originating click event\r\n   * @private\r\n   */\r\n  static _onChatCardToggleContent(event) {\r\n    event.preventDefault();\r\n    const header = event.currentTarget;\r\n    const card = header.closest(\".chat-card\");\r\n    const content = card.querySelector(\".card-content\");\r\n    content.style.display = content.style.display === \"none\" ? \"block\" : \"none\";\r\n  }\r\n  async _applyDamage(dam, tData, tHealth, tActor, tokenId) {\r\n    let value = dam.total;\r\n    console.log(\"урон до резистов: \", value);\r\n    dam.terms.forEach((term) => {\r\n      if (!(term instanceof OperatorTerm)) {\r\n        let damageType = term.options.damageType;\r\n        let res = tData.defences.damage[damageType[0]][damageType[1]];\r\n        if (res.type === \"imm\") console.log(\"Иммунитет\");\r\n        console.log(\"урон уменьшился с \", value);\r\n        value -= res.type === \"imm\" ? term.total : Math.min(res.value, term.total);\r\n        console.log(\"до\", value);\r\n      }\r\n    });\r\n    console.log(value, \"итоговый урон\");\r\n    tHealth -= value;\r\n    console.log(\"хп стало\", tHealth);\r\n    let obj = {};\r\n    obj[\"data.health.value\"] = tHealth;\r\n    if (game.user.isGM) {\r\n      console.log(\"GM applying damage\");\r\n      console.log(tActor);\r\n      await tActor.update(obj);\r\n    } else {\r\n      console.log(\"not GM applying damage\");\r\n      game.socket.emit(\"system.ard20\", {\r\n        operation: \"updateActorData\",\r\n        tokenId: tokenId,\r\n        update: obj,\r\n        value: value,\r\n      });\r\n    }\r\n  }\r\n  static async _rollDamage(event) {\r\n    event.stopImmediatePropagation();\r\n    const element = event.currentTarget;\r\n    const card = element.closest(\".chat-card\");\r\n    const message = game.messages.get(card.closest(\".message\").dataset.messageId);\r\n    const targetUuid = element.closest(\"li.flexrow\").dataset.targetId;\r\n    const token = await fromUuid(targetUuid);\r\n    //@ts-expect-error\r\n    const tActor = token?.actor;\r\n    const tData = tActor.data.data;\r\n    let tHealth = tData.health.value;\r\n    console.log(tHealth, \"здоровье цели\");\r\n    // Recover the actor for the chat card\r\n    const actor = await this._getChatCardActor(card);\r\n    if (!actor) return;\r\n    // Get the Item from stored flag data or by the item ID on the Actor\r\n    const storedData = message.getFlag(\"ard20\", \"itemData\");\r\n    //@ts-expect-error\r\n    const item = storedData ? new this(storedData, { parent: actor }) : actor.items.get(card.dataset.itemId);\r\n    if (!item) {\r\n      return ui.notifications.error(\r\n        game.i18n.format(\"ARd20.ActionWarningNoItem\", { item: card.dataset.itemId, name: actor.name })\r\n      );\r\n    }\r\n    const dam = await item.rollDamage({\r\n      event: event,\r\n      canMult: false,\r\n    });\r\n    const html = $(message.data.content);\r\n    let damHTML = await dam.render();\r\n    console.log(html.find(`[data-target-id=\"${targetUuid}\"]`).find(\".damage-roll\")[0]);\r\n    html.find(`[data-target-id=\"${targetUuid}\"]`).find(\".damage-roll\").append(damHTML);\r\n    html.find(`[data-target-id=\"${targetUuid}\"]`).find(\".accept\").remove();\r\n    console.log(html[0]);\r\n    await message.update({ content: html[0].outerHTML });\r\n    await item._applyDamage(dam, tData, tHealth, tActor, targetUuid);\r\n  }\r\n  /* -------------------------------------------- */\r\n  /**\r\n   * Get the Actor which is the author of a chat card\r\n   * @param {HTMLElement} card    The chat card being used\r\n   * @return {Actor|null}         The Actor entity or null\r\n   * @private\r\n   */\r\n  static async _getChatCardActor(card) {\r\n    // Case 1 - a synthetic actor from a Token\r\n    if (card.dataset.tokenId) {\r\n      const token = await fromUuid(card.dataset.tokenId);\r\n      if (!token) return null;\r\n      //@ts-expect-error\r\n      return token.actor;\r\n    }\r\n    // Case 2 - use Actor ID directory\r\n    const actorId = card.dataset.actorId;\r\n    return game.actors.get(actorId) || null;\r\n  }\r\n  /* -------------------------------------------- */\r\n  /**\r\n   * Get the Actor which is the author of a chat card\r\n   * @param {HTMLElement} card    The chat card being used\r\n   * @return {Actor[]}            An Array of Actor entities, if any\r\n   * @private\r\n   */\r\n  static _getChatCardTargets(card) {\r\n    let targets = canvas.tokens.controlled.filter((t) => !!t.actor);\r\n    //@ts-expect-error\r\n    if (!targets.length && game.user.character) targets = targets.concat(game.user.character.getActiveTokens());\r\n    if (!targets.length) ui.notifications.warn(game.i18n.localize(\"ARd20.ActionWarningNoToken\"));\r\n    return targets;\r\n  }\r\n  /*showRollDetail(event){\r\n      event.preventDefault();\r\n      const elem = event.currentTarget;\r\n      const\r\n    }*/\r\n  async displayCard({\r\n    //@ts-expect-error\r\n    rollMode,\r\n    createMessage = true,\r\n    hasAttack = Boolean(),\r\n    hasDamage = Boolean(),\r\n    targets = [],\r\n    mRoll = Boolean(),\r\n  } = {}) {\r\n    // Render the chat card template\r\n    let atk = {};\r\n    let dc = {};\r\n    let atkHTML = {};\r\n    let dmgHTML = {};\r\n    let result = {};\r\n    let hit = {};\r\n    let dmg = {};\r\n    let dieResultCss = {};\r\n    //@ts-expect-error\r\n    const def = this.data.data.attack?.def ?? \"reflex\";\r\n    const token = this.actor.token;\r\n    if (targets.length !== 0) {\r\n      //@ts-expect-error\r\n      let atkRoll = hasAttack ? await this.rollAttack(mRoll, { canMult: true }) : null;\r\n      let dmgRoll = hasDamage && !hasAttack ? await this.rollDamage({ canMult: true }) : null;\r\n      for (let [key, target] of Object.entries(targets)) {\r\n        if (atkRoll) {\r\n          mRoll = atkRoll.options.mRoll;\r\n          //@ts-expect-error\r\n          dc[key] = target.actor.data.data.defences.stats[def].value;\r\n          //@ts-expect-error\r\n          atk[key] = hasAttack ? (Object.keys(atk).length === 0 || !mRoll ? atkRoll : await atkRoll.reroll()) : null;\r\n          //@ts-expect-error\r\n          console.log(atk[key]);\r\n          //@ts-expect-error\r\n          atkHTML[key] = hasAttack ? await atk[key].render() : null;\r\n          //@ts-expect-error\r\n          let d20 = atk[key] ? atk[key].terms[0] : null;\r\n          //@ts-expect-error\r\n          atk[key] = atk[key].total;\r\n          //@ts-expect-error\r\n          dieResultCss[key] =\r\n            d20.total >= d20.options.critical ? \"d20crit\" : d20.total <= d20.options.fumble ? \"d20fumble\" : \"d20normal\";\r\n          //@ts-expect-error\r\n          result[key] = atk[key] > dc[key] ? \"hit\" : \"miss\";\r\n          //@ts-expect-error\r\n          hit[key] = result[key] === \"hit\" ? true : false;\r\n        } else {\r\n          mRoll = dmgRoll.options.mRoll;\r\n          //@ts-expect-error\r\n          dmg[key] = hasDamage ? (Object.keys(dmg).length === 0 || !mRoll ? dmgRoll : await dmgRoll.reroll()) : null;\r\n          //@ts-expect-error\r\n          dmgHTML[key] = hasDamage ? await dmg[key].render() : null;\r\n        }\r\n      }\r\n    } else {\r\n      //@ts-expect-error\r\n      atk[0] = hasAttack ? await this.rollAttack(mRoll) : null;\r\n      //@ts-expect-error\r\n      mRoll = atk[0] ? atk[0].options.mRoll : false;\r\n      //@ts-expect-error\r\n      atkHTML[0] = hasAttack ? await atk[0].render() : null;\r\n    }\r\n    //@ts-expect-error\r\n    let templateState = targets.size !== 0 ? (mRoll ? \"multiAttack\" : \"oneAttack\") : \"noTarget\";\r\n    const templateData = {\r\n      //@ts-expect-error\r\n      actor: this.actor.data,\r\n      tokenId: token?.uuid || null,\r\n      item: this.data,\r\n      data: this.getChatData(),\r\n      //@ts-expect-error\r\n      labels: this.labels,\r\n      hasAttack,\r\n      hasDamage,\r\n      atk,\r\n      atkHTML,\r\n      targets,\r\n      //@ts-expect-error\r\n      owner: this.actor.isOwner || game.user.isGM,\r\n      dc,\r\n      result,\r\n      hit,\r\n      dmgHTML,\r\n      dieResultCss,\r\n    };\r\n    const html = await renderTemplate(`systems/ard20/templates/chat/item-card-multiAttack.html`, templateData);\r\n    // Create the ChatMessage data object\r\n    const chatData = {\r\n      user: game.user.data._id,\r\n      type: CONST.CHAT_MESSAGE_TYPES.OTHER,\r\n      content: html,\r\n      //@ts-expect-error\r\n      flavor: this.data.data.chatFlavor || this.name,\r\n      //@ts-expect-error\r\n      speaker: ChatMessage.getSpeaker({ actor: this.actor, token }),\r\n      flags: { \"core.canPopout\": true },\r\n    };\r\n    // If the Item was destroyed in the process of displaying its card - embed the item data in the chat message\r\n    /*\r\n        if (this.data.type === \"consumable\" && !this.actor.items.has(this.id)) {\r\n          chatData.flags[\"ard20.itemData\"] = this.data;\r\n        }*/\r\n    // Apply the roll mode to adjust message visibility\r\n    ChatMessage.applyRollMode(chatData, rollMode || game.settings.get(\"core\", \"rollMode\"));\r\n    // Create the Chat Message or return its data\r\n    return createMessage ? ChatMessage.create(chatData) : chatData;\r\n  }\r\n  /**\r\n   * Prepare an object of chat data used to display a card for the Item in the chat log.\r\n   * @param {object} htmlOptions    Options used by the TextEditor.enrichHTML function.\r\n   * @returns {object}              An object of chat data to render.\r\n   */\r\n  getChatData(htmlOptions = {}) {\r\n    const data = foundry.utils.deepClone(this.data.data);\r\n    // Rich text description\r\n    //data.description.value = TextEditor.enrichHTML(data.description.value, htmlOptions);\r\n    // Item type specific properties\r\n    const props = [];\r\n    // Equipment properties\r\n    /*if (data.hasOwnProperty(\"equipped\") && ![\"loot\", \"tool\"].includes(this.data.type)) {\r\n          /*if (data.attunement === CONFIG.ARd20.attunementTypes.REQUIRED) {\r\n            props.push(game.i18n.localize(CONFIG.ARd20.attunements[CONFIG.ARd20.attunementTypes.REQUIRED]));\r\n          }*/\r\n    /*props.push(game.i18n.localize(data.equipped ? \"ARd20.Equipped\" : \"ARd20.Unequipped\"));\r\n        }\r\n    \r\n        // Ability activation properties\r\n        if (data.hasOwnProperty(\"activation\")) {\r\n          props.push(labels.activation + (data.activation?.condition ? ` (${data.activation.condition})` : \"\"), labels.target, labels.range, labels.duration);\r\n        }\r\n    \r\n        // Filter properties and return\r\n        data.properties = props.filter((p) => !!p);\r\n        */\r\n    return data;\r\n  }\r\n  /* -------------------------------------------- */\r\n  /**\r\n   * Prepare chat card data for weapon type items.\r\n   * @param {object} data     Copy of item data being use to display the chat message.\r\n   * @param {object} labels   Specially prepared item labels.\r\n   * @param {string[]} props  Existing list of properties to be displayed. *Will be mutated.*\r\n   * @private\r\n   */\r\n  /* -------------------------------------------- */\r\n  /**\r\n   * Place an attack roll using an item (weapon, feat, spell, or equipment)\r\n   * Rely upon the d20Roll logic for the core implementation\r\n   *\r\n   * @param {object} options        Roll options which are configured and provided to the d20Roll function\r\n   * @returns {Promise<Roll|null>}   A Promise which resolves to the created Roll instance\r\n   */\r\n  async rollAttack(mRoll = Boolean(), canMult = Boolean(), options = {}) {\r\n    console.log(canMult);\r\n    const itemData = this.data.data;\r\n    //@ts-expect-error\r\n    const flags = this.actor.data.flags.ard20 || {};\r\n    let title = `${this.name} - ${game.i18n.localize(\"ARd20.AttackRoll\")}`;\r\n    const { parts, rollData } = this.getAttackToHit();\r\n    const targets = game.user.targets;\r\n    //@ts-expect-error\r\n    if (options.parts?.length > 0) {\r\n      //@ts-expect-error\r\n      parts.push(...options.parts);\r\n    }\r\n    let rollConfig = {\r\n      parts: parts,\r\n      actor: this.actor,\r\n      data: rollData,\r\n      title: title,\r\n      flavor: title,\r\n      dialogOptions: {\r\n        width: 400,\r\n      },\r\n      chatMessage: true,\r\n      options: {\r\n        create: false,\r\n      },\r\n      targetValue: targets,\r\n      canMult: canMult,\r\n      mRoll: mRoll,\r\n    };\r\n    //@ts-expect-error\r\n    rollConfig = mergeObject(rollConfig, options);\r\n    //@ts-expect-error\r\n    const roll = await d20Roll(rollConfig);\r\n    if (roll === false) return null;\r\n    return roll;\r\n  }\r\n  rollDamage({\r\n    critical = false,\r\n    event = null,\r\n    spellLevel = null,\r\n    versatile = false,\r\n    options = {},\r\n    mRoll = Boolean(),\r\n    canMult = Boolean(),\r\n  } = {}) {\r\n    console.log(canMult);\r\n    const iData = this.data.data;\r\n    const aData = this.actor.data.data;\r\n    //@ts-expect-error\r\n    const parts = iData.damage.current.parts.map((d) => d[0]);\r\n    //@ts-expect-error\r\n    const damType = iData.damage.current.parts.map((d) =>\r\n      d[1].map((c, ind) => {\r\n        //@ts-expect-error\r\n        let a = game.i18n.localize(CONFIG.ARd20.DamageTypes[c[0]]);\r\n        //@ts-expect-error\r\n        let b = game.i18n.localize(CONFIG.ARd20.DamageSubTypes[c[1]]);\r\n        let obj = { key: ind, label: `${a} ${b}` };\r\n        return obj;\r\n      })\r\n    );\r\n    //@ts-expect-error\r\n    options.damageType = iData.damage.current.parts.map((d) => d[1]);\r\n    const hasAttack = false;\r\n    const hasDamage = true;\r\n    //@ts-expect-error\r\n    const rollData = this.getRollData(hasAttack, hasDamage);\r\n    const rollConfig = {\r\n      actor: this.actor,\r\n      //@ts-expect-error\r\n      critical: critical ?? event?.altkey ?? false,\r\n      data: rollData,\r\n      event: event,\r\n      parts: parts,\r\n      canMult: canMult,\r\n      damType: damType,\r\n      mRoll: mRoll,\r\n    };\r\n    //@ts-expect-error\r\n    return damageRoll(mergeObject(rollConfig, options));\r\n  }\r\n  /**\r\n   * Update a label to the Item detailing its total to hit bonus.\r\n   * Sources:\r\n   * - item entity's innate attack bonus\r\n   * - item's actor's proficiency bonus if applicable\r\n   * - item's actor's global bonuses to the given item type\r\n   * - item's ammunition if applicable\r\n   *\r\n   * @returns {{rollData: object, parts: string[]}|null}  Data used in the item's Attack roll.\r\n   */\r\n  getAttackToHit() {\r\n    const itemData = this.data.data;\r\n    const hasAttack = true;\r\n    const hasDamage = false;\r\n    //if (!this.hasAttack || !itemData) return;\r\n    //@ts-expect-error\r\n    const rollData = this.getRollData(hasAttack, hasDamage);\r\n    console.log(\"ROLL DATA\", rollData);\r\n    // Define Roll bonuses\r\n    const parts = [];\r\n    // Include the item's innate attack bonus as the initial value and label\r\n    //@ts-expect-error\r\n    if (itemData.attackBonus) {\r\n      //@ts-expect-error\r\n      parts.push(itemData.attackBonus);\r\n      //@ts-expect-error\r\n      this.labels.toHit = itemData.attackBonus;\r\n    }\r\n    // Take no further action for un-owned items\r\n    if (!this.isOwned) return { rollData, parts };\r\n    // Ability score modifier\r\n    parts.push(\"@prof\", \"@mod\");\r\n    /* Add proficiency bonus if an explicit proficiency flag is present or for non-item features\r\n        if ( ![\"weapon\", \"consumable\"].includes(this.data.type)) {\r\n          parts.push(\"@prof\");\r\n          if ( this.data.data.prof?.hasProficiency ) {\r\n            rollData.prof = this.data.data.prof.term;\r\n          }\r\n        }\r\n        */\r\n    /* Actor-level global bonus to attack rolls\r\n        const actorBonus = this.actor.data.data.bonuses?.[itemData.actionType] || {};\r\n        if (actorBonus.attack) parts.push(actorBonus.attack);\r\n        */\r\n    /* One-time bonus provided by consumed ammunition\r\n        if (itemData.consume?.type === \"ammo\" && this.actor.items) {\r\n          const ammoItemData = this.actor.items.get(itemData.consume.target)?.data;\r\n    \r\n          if (ammoItemData) {\r\n            const ammoItemQuantity = ammoItemData.data.quantity;\r\n            const ammoCanBeConsumed = ammoItemQuantity && ammoItemQuantity - (itemData.consume.amount ?? 0) >= 0;\r\n            const ammoItemAttackBonus = ammoItemData.data.attackBonus;\r\n            const ammoIsTypeConsumable = ammoItemData.type === \"consumable\" && ammoItemData.data.consumableType === \"ammo\";\r\n            if (ammoCanBeConsumed && ammoItemAttackBonus && ammoIsTypeConsumable) {\r\n              parts.push(\"@ammo\");\r\n              rollData.ammo = ammoItemAttackBonus;\r\n            }\r\n          }\r\n        }\r\n        */\r\n    // Condense the resulting attack bonus formula into a simplified label\r\n    //@ts-expect-error\r\n    const roll = new Roll(parts.join(\"+\"), rollData);\r\n    //@ts-expect-error\r\n    const formula = simplifyRollFormula(roll.formula);\r\n    //@ts-expect-error\r\n    this.labels.toHit = !/^[+-]/.test(formula) ? `+ ${formula}` : formula;\r\n    // Update labels and return the prepared roll data\r\n    return { rollData, parts };\r\n  }\r\n}\r\n","<script>\r\n  import { getContext } from \"svelte\";\r\n  export let max;\r\n  export let min;\r\n  export let type;\r\n  export let subtype;\r\n  export let cost;\r\n  const doc = getContext(\"chaAdvActorData\");\r\n  const changes = getContext(\"chaAdvXpChanges\");\r\n  let disabled;\r\n  export let costLabel\r\n  $: {\r\n    switch (type) {\r\n      case \"attributes\":\r\n        disabled =\r\n          $doc[type][subtype].value === max || $doc[type][subtype].value === min || $doc.advancement.xp.get < cost;\r\n        break;\r\n      case \"skills\":\r\n        disabled =\r\n          $doc[type][subtype].level === max || $doc[type][subtype].level === min || $doc.advancement.xp.get < cost;\r\n        break;\r\n      case \"features\":\r\n        console.log(max,min)\r\n        disabled =\r\n          $doc[type][subtype].data.level.initial === max ||\r\n          $doc[type][subtype].data.level.initial === min ||\r\n          $doc.advancement.xp.get < cost;\r\n        break;\r\n    }\r\n    costLabel = disabled ? \"-\":cost\r\n  }\r\n  function increase(type, subtype) {\r\n    doc.update((store) => {\r\n      switch (type) {\r\n        case \"attributes\":\r\n          store.attributes[subtype].value += 1;\r\n          break;\r\n        case \"skills\":\r\n          store.skills[subtype].level += 1;\r\n          break;\r\n        case \"features\":\r\n          store.features[subtype].data.level.initial += 1;\r\n          break;\r\n      }\r\n      store.advancement.xp.used += cost;\r\n      store.advancement.xp.get -= cost;\r\n      return store;\r\n    });\r\n    changes.update((changeArr) => {\r\n      changeArr.push({ type: type, subtype: subtype, value: cost });\r\n      return changeArr;\r\n    });\r\n  }\r\n  function decrease(type, subtype) {\r\n    doc.update((store) => {\r\n      switch (type) {\r\n        case \"attributes\":\r\n          store.attributes[subtype].value -= 1;\r\n          break;\r\n        case \"skills\":\r\n          store.skills[subtype].level -= 1;\r\n          break;\r\n        case \"features\":\r\n          store.features[subtype].data.level.initial -= 1;\r\n          break;\r\n      }\r\n      let index = -1;\r\n      $changes.forEach((change, key) => {\r\n        index = change.type === type && change.subtype === subtype && key > index ? key : index;\r\n      });\r\n      if (index >= 0) {\r\n        store.advancement.xp.used -= $changes[index].value;\r\n        store.advancement.xp.get += $changes[index].value;\r\n        return store;\r\n      }\r\n    });\r\n    changes.update((changeArr) => {\r\n      let index = -1;\r\n      changeArr.forEach((change, key) => {\r\n        index = change.type === type && change.subtype === subtype && key > index ? key : index;\r\n      });\r\n      if (index >= 0) {\r\n        changeArr.splice(index, 1);\r\n        changeArr = changeArr;\r\n      }\r\n      return changeArr;\r\n    });\r\n  }\r\n</script>\r\n\r\n{#if max !== undefined}\r\n  <button class=\"change\" {disabled} on:click={() => increase(type, subtype)}> + </button>\r\n{/if}\r\n{#if min !== undefined}\r\n  <button class=\"change\" {disabled} on:click={() => decrease(type, subtype)}> - </button>\r\n{/if}\r\n\r\n<style>\r\n  button:active {\r\n    transform: translateY(0.1em);\r\n  }\r\n</style>\r\n","<script>\r\n  import { getContext } from \"svelte\";\r\n  import ChangeButton from \"./ChangeButton.svelte\";\r\n  export let max;\r\n  export let val;\r\n  export let key;\r\n  export let type;\r\n  export let description;\r\n  export let typeStr;\r\n  export let thead;\r\n  //export let cellWidth;\r\n  const originalData = getContext(\"chaAdvActorOriginalData\");\r\n  const aditionalData = getContext(\"chaAdvAditionalData\");\r\n  const element = getContext(\"chaAdvElementParameters\")\r\n  const formulas = getContext(\"chaAdvXpFormulas\").formulas;\r\n  let variables = {};\r\n  let cost;\r\n  let min;\r\n  let widthPercent = 100 / thead.length;\r\n  switch (typeStr) {\r\n    case \"attributes\":\r\n      min = originalData[typeStr][val[0]].value;\r\n      break;\r\n    case \"skills\":\r\n      min = originalData[typeStr][val[0]].level;\r\n      break;\r\n    case \"features\":\r\n      console.log(aditionalData, val[0]);\r\n      min = aditionalData.feats.awail[val[0]].data.level.current;\r\n      max = aditionalData.feats.awail[val[0]].data.level.max;\r\n      break;\r\n  }\r\n  $: {\r\n    for (let [key, variable] of Object.entries(getContext(\"chaAdvXpFormulas\").variables)) {\r\n      switch (key) {\r\n        case \"attributes\":\r\n          variables[variable.shortName] = typeStr === key ? val[1].value : 0;\r\n          break;\r\n        case \"skills\":\r\n          variables[variable.shortName] = typeStr === key ? val[1].level : 0;\r\n          break;\r\n        case \"features\":\r\n          variables[variable.shortName] = typeStr === key ? val[1].data.level.initial : 0;\r\n          break;\r\n        case \"skillsCount\":\r\n          variables[variable.shortName] = 1; //TODO: rewrite\r\n          break;\r\n        case \"featuresCount\":\r\n          variables[variable.shortName] = 1; //TODO: rewrite\r\n      }\r\n    }\r\n    cost = math.evaluate(formulas[typeStr], variables);\r\n  }\r\n  function changeDesc(val) {\r\n    if (!val[1].description) return \"\";\r\n    description = val[1].description;\r\n  }\r\n  let strMod;\r\n  $: if (val[1].mod !== undefined) {\r\n    strMod = val[1].mod < 0 ? `${val[1].mod}` : `+${val[1].mod}`;\r\n  }\r\n  let last = key === Object.values(type).length - 1 ? \"last\" : \"\";\r\n  //TODO: reconfigure thead for localization\r\n</script>\r\n\r\n<tr bind:offsetHeight={$element.trHeight} bind:clientWidth={$element.trWidth} style=\"--cellWidth:{widthPercent}%\">\r\n  {#if thead.includes(\"Name\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}> {val[0]} </td>\r\n  {/if}\r\n  {#if thead.includes(\"Source\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}> {@html val[1].data.source.label} </td>\r\n  {/if}\r\n  {#if thead.includes(\"Increase\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}>\r\n      <ChangeButton type={typeStr} subtype={val[0]} {max} {cost} />\r\n    </td>\r\n  {/if}\r\n  {#if thead.includes(\"Level\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}>\r\n      {val[1].data.level.initial}\r\n    </td>\r\n  {/if}\r\n  {#if thead.includes(\"Max Level\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}> {val[1].data.level.max} </td>\r\n  {/if}\r\n  {#if thead.includes(\"Rank\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}> {val[1].rankName} </td>\r\n  {/if}\r\n  {#if thead.includes(\"Value\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}> {val[1].value} </td>\r\n  {/if}\r\n  {#if thead.includes(\"Decrease\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}>\r\n      <ChangeButton type={typeStr} subtype={val[0]} {min} />\r\n    </td>\r\n  {/if}\r\n  {#if thead.includes(\"Mod\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}> {strMod} </td>\r\n  {/if}\r\n  {#if thead.includes(\"Cost\")}\r\n    <!-- svelte-ignore a11y-mouse-events-have-key-events -->\r\n    <td class={last} on:mouseover={() => changeDesc(val)}> {cost} </td>\r\n  {/if}\r\n  {#if key === 0 && thead.includes(\"Description\")}\r\n    <td class=\"description\" rowspan={thead.length}> {description} </td>\r\n  {/if}\r\n</tr>\r\n\r\n<style>\r\n  .last {\r\n    border-bottom: 1px solid black;\r\n  }\r\n  .description {\r\n    max-width: 1em;\r\n  }\r\n  td {\r\n    text-align: center;\r\n    border-right: 1px solid black;\r\n    border-left: 1px solid black;\r\n    width: var(--cellWidth);\r\n    word-break: break-word;\r\n  }\r\n  tr {\r\n    border: 1px solid black;\r\n    width: 100%;\r\n    display: table;\r\n  }\r\n</style>\r\n","<script>\r\n  import { getContext } from \"svelte\";\r\n  import TDvariants from \"./TDvariants.svelte\";\r\n  \r\n  export let tabData;\r\n  const element = getContext(\"chaAdvElementParameters\")\r\n  const data = getContext(\"chaAdvActorData\");\r\n  const settings = game.settings.get(\"ard20\", \"profLevel\");\r\n  let typeStr;\r\n  let thead;\r\n  let description;\r\n  let max;\r\n  //TODO: reconfigure thead for localization\r\n  switch (tabData) {\r\n    case \"attributes\":\r\n      typeStr = \"attributes\";\r\n      thead = [\"Name\", \"Increase\", \"Value\", \"Decrease\", \"Mod\", \"Cost\"];\r\n      description = \"\";\r\n      max = 30;\r\n      break;\r\n    case \"skills\":\r\n      typeStr = \"skills\";\r\n      thead = [\"Name\", \"Increase\", \"Rank\", \"Decrease\", \"Cost\"];\r\n      description = \"\";\r\n      max = settings.length - 1;\r\n      break;\r\n    case \"features\":\r\n      typeStr = \"features\";\r\n      thead = [\"Name\", \"Source\", \"Increase\", \"Level\", \"Max Level\", \"Decrease\", \"Cost\"];\r\n      description = \"\";\r\n      max = 1;\r\n      break;\r\n  }\r\n  let thWidth = 100 / thead.length;\r\n  $: {\r\n    for (let [key, attr] of Object.entries($data.attributes)) {\r\n      attr.mod = Math.floor((attr.value - 10) / 2);\r\n    }\r\n  }\r\n  const rankName = settings.map((setting) => {\r\n    return setting.label;\r\n  });\r\n  $: for (let [key, skill] of Object.entries($data.skills)) {\r\n    skill.rankName = rankName[skill.level];\r\n  }\r\n</script>\r\n\r\n<div class=\"flex flexrow\">\r\n  <table>\r\n    <thead bind:offsetHeight={$element.theadHeight}>\r\n      <tr style:width=\"{$element.trWidth}px\">\r\n        {#each thead as th}\r\n          <th style:width=\"{thWidth}%\" class=\"last\"> {th} </th>\r\n        {/each}\r\n      </tr>\r\n    </thead>\r\n    <tbody style=\"--tbodyHeight:{0.95*$element.boxHeight - $element.theadHeight}px\">\r\n      {#each Object.entries($data[tabData]) as attr, key}\r\n        <TDvariants\r\n          type={$data[tabData]}\r\n          {thead}\r\n          {typeStr}\r\n          val={attr}\r\n          {max}\r\n          {key}\r\n          bind:description\r\n        />\r\n      {/each}\r\n    </tbody>\r\n  </table>\r\n  <div class=\"description\">\r\n    <label for=\"description\">Description</label>\r\n    <div>{description}</div>\r\n  </div>\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n  .description {\r\n    height: 100%;\r\n    padding-left: 2px;\r\n    border-left: 1px solid black;\r\n    border-bottom: 1px solid black;\r\n  }\r\n  table thead {\r\n    display: block;\r\n    width: 100%;\r\n    position: sticky;\r\n    inset-block-start: -0.05em;\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n  }\r\n  tbody {\r\n    display: block;\r\n    max-height: var(--tbodyHeight);\r\n    width: 100%;\r\n    overflow-y: auto;\r\n  }\r\n  tr {\r\n    border: 1px solid black;\r\n    display: table;\r\n  }\r\n  th {\r\n    background: rgb(100, 100, 100);\r\n    border: 1px solid black;\r\n    border-width: 0px 1px 0 1px;\r\n    text-align: center;\r\n    padding: 0.2em;\r\n    word-break: break-word;\r\n    &:last-child{\r\n      border-right: 0px;\r\n    }\r\n  }\r\n</style>\r\n","<script>\r\n  import { getContext } from \"svelte\";\r\n  export let tabs = [];\r\n  export let activeTab;\r\n  const data = getContext(\"chaAdvActorData\");\r\n  const element = getContext(\"chaAdvElementParameters\");\r\n  let minBoxSize;\r\n  $: {\r\n    minBoxSize = (Object.entries($data[activeTab]).length * $element.trHeight + $element.theadHeight) * 1.1;\r\n  }\r\n</script>\r\n\r\n<ul>\r\n  {#each tabs as tab}\r\n    <li class={activeTab === tab.id ? \"active\" : \"\"}>\r\n      <span\r\n        on:click={() => {\r\n          activeTab = tab.id;\r\n        }}\r\n      >\r\n        {tab.label}\r\n      </span>\r\n    </li>\r\n  {/each}\r\n</ul>\r\n<div class=\"box\" style=\"--minBoxSize:{minBoxSize}px\" bind:clientHeight={$element.boxHeight}>\r\n  {#each tabs as tab}\r\n    {#if tab.id === activeTab}\r\n      <svelte:component this={tab.component} tabData={tab.id} />\r\n    {/if}\r\n  {/each}\r\n</div>\r\n\r\n<style lang=\"scss\">\r\n  .box {\r\n    margin-bottom: 10px;\r\n    border: 1px solid #dee2e6;\r\n    border-radius: 0 0 0.5rem 0.5rem;\r\n    border-top: 0;\r\n    height: min(75%, max(25%, var(--minBoxSize)));\r\n    background: rgba(0, 0, 0, 0.08);\r\n  }\r\n  ul {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding-left: 0;\r\n    margin-bottom: 0;\r\n    list-style: none;\r\n    border-bottom: 1px solid #dee2e6;\r\n  }\r\n  li {\r\n    &:active {\r\n      margin-bottom: -0.1em;\r\n      transform: translateY(0.1em);\r\n    }\r\n    &.active > span {\r\n      color: white;\r\n      background-color: rgba(0, 0, 0, 0.08);\r\n      border-color: #dee2e6 #dee2e6 #fff;\r\n    }\r\n  }\r\n\r\n  span {\r\n    border: 1px solid transparent;\r\n    border-top-left-radius: 0.25rem;\r\n    border-top-right-radius: 0.25rem;\r\n    display: block;\r\n    padding: 0.5rem 1rem;\r\n    cursor: pointer;\r\n    &:hover {\r\n      border-color: #e9ecef #e9ecef #dee2e6;\r\n    }\r\n  }\r\n</style>\r\n","<svelte:options accessors={true} />\r\n\r\n<script>\r\n  import { getContext, setContext } from \"svelte\";\r\n  import { writable } from \"svelte/store\";\r\n  import AttributeComp from \"./Attributes.svelte\";\r\n  import Tabs from \"./Tabs.svelte\";\r\n  export let document;\r\n  //\r\n  const actor = game.actors.get(document.id);\r\n  const { application } = getContext(\"external\");\r\n  //create list of changes and context for it\r\n  const changes = writable([]);\r\n  setContext(\"chaAdvXpChanges\", changes);\r\n  //create context for formulas from setting, CONFIG data, Actor's ID\r\n  setContext(\"chaAdvXpFormulas\", game.settings.get(\"ard20\", \"advancement-rate\"));\r\n  setContext(\"chaAdvCONFIG\", CONFIG);\r\n  setContext(\"chaAdvActorOriginalData\", actor.data.data);\r\n  setContext(\"chaAdvActorID\", document.id);\r\n  setContext(\"chaAdvAditionalData\", document.aditionalData);\r\n\r\n  //create store and context for data\r\n  //TODO: add features and other stuff\r\n  const actorData = writable({\r\n    attributes: duplicate(actor.data.data.attributes),\r\n    skills: duplicate(actor.data.data.skills),\r\n    advancement: duplicate(actor.data.data.advancement),\r\n    proficiencies: duplicate(actor.data.data.proficiencies),\r\n    health: duplicate(actor.data.data.health),\r\n    isReady: duplicate(actor.data.data.isReady),\r\n    features: duplicate(document.aditionalData.feats.awail),\r\n  });\r\n  const elementParameters=writable({\r\n    boxHeight:0,\r\n    trHeight:0,\r\n    trWidth:0,\r\n    theadHeight:0,\r\n  })\r\n  setContext(\"chaAdvElementParameters\",elementParameters)\r\n  setContext(\"chaAdvActorData\", actorData);\r\n\r\n  //create tabs\r\n  //TODO: create features, races and other tabs\r\n  const tabs = [\r\n    { label: \"attributes\", id: \"attributes\", component: AttributeComp },\r\n    { label: \"skills\", id: \"skills\", component: AttributeComp },\r\n    { label: \"Features\", id: \"features\", component: AttributeComp },\r\n  ];\r\n  //select first tab when app initialized\r\n  const activeTab = \"attributes\";\r\n  $: console.log($actorData, $changes);\r\n  const id = getContext(\"chaAdvActorID\");\r\n  const aditionalData = getContext(\"chaAdvAditionalData\");\r\n  //update actor and do other stuff when click 'submit' button\r\n  async function submitData() {\r\n    const updateObj = {};\r\n    updateObj[\"data.attributes\"] = $actorData.attributes;\r\n    updateObj[\"data.skills\"] = $actorData.skills;\r\n    updateObj[\"data.advancement.xp\"] = $actorData.advancement.xp;\r\n    updateObj[\"data.isReady\"] = true;\r\n    console.log($actorData.features);\r\n    let feats = { new: [], exist: [] };\r\n    $actorData.features.forEach((element) => {\r\n      const initLevel = element.data.level.initial;\r\n      const currentLevel = element.data.level.current;\r\n      if (initLevel > currentLevel) {\r\n        if (currentLevel > 0) {\r\n          feats.exist = [...feats.exist, element];\r\n        } else {\r\n          feats.new = [...feats.new, element];\r\n        }\r\n      }\r\n    });\r\n    console.log(feats, \"feats on update\");\r\n    await actor.update(updateObj);\r\n    if (feats.exist.length !== 0) await actor.updateEmbeddedDocuments(\"Item\", feats.exist);\r\n    if (feats.new.length !== 0) await actor.createEmbeddedDocuments(\"Item\", feats.new);\r\n    application.close();\r\n  }\r\n</script>\r\n\r\n<div>\r\n  XP get: {$actorData.advancement.xp.get}\r\n</div>\r\n<div>\r\n  XP used: {$actorData.advancement.xp.used}\r\n</div>\r\n<Tabs {tabs} {activeTab} />\r\n<button on:click={submitData}>SubmitData</button>\r\n","/**\r\n * Manage Active Effect instances through the Actor Sheet via effect control buttons.\r\n * @param {MouseEvent} event      The left-click event on the effect control\r\n * @param {Actor|Item} owner      The owning entity which manages this effect\r\n */\r\nexport function onManageActiveEffect(event, owner) {\r\n    event.preventDefault();\r\n    const a = event.currentTarget;\r\n    //@ts-expect-error\r\n    const li = a.closest(\"li\");\r\n    const effect = li.dataset.effectId ? owner.effects.get(li.dataset.effectId) : null;\r\n    //@ts-expect-error\r\n    switch (a.dataset.action) {\r\n        case \"create\":\r\n            return owner.createEmbeddedDocuments(\"ActiveEffect\", [{\r\n                    label: \"New Effect\",\r\n                    icon: \"icons/svg/aura.svg\",\r\n                    origin: owner.uuid,\r\n                    \"duration.rounds\": li.dataset.effectType === \"temporary\" ? 1 : undefined,\r\n                    disabled: li.dataset.effectType === \"inactive\"\r\n                }]);\r\n        case \"edit\":\r\n            return effect.sheet.render(true);\r\n        case \"delete\":\r\n            return effect.delete();\r\n        case \"toggle\":\r\n            return effect.update({ disabled: !effect.data.disabled });\r\n    }\r\n}\r\n/**\r\n * Prepare the data structure for Active Effects which are currently applied to an Actor or Item.\r\n * @param {ActiveEffect[]} effects    The array of Active Effect instances to prepare sheet data for\r\n * @return {object}                   Data for rendering\r\n */\r\nexport function prepareActiveEffectCategories(effects) {\r\n    // Define effect header categories\r\n    const categories = {\r\n        temporary: {\r\n            type: \"temporary\",\r\n            label: \"Temporary Effects\",\r\n            effects: []\r\n        },\r\n        passive: {\r\n            type: \"passive\",\r\n            label: \"Passive Effects\",\r\n            effects: []\r\n        },\r\n        inactive: {\r\n            type: \"inactive\",\r\n            label: \"Inactive Effects\",\r\n            effects: []\r\n        }\r\n    };\r\n    // Iterate over active effects, classifying them into categories\r\n    for (let e of effects) {\r\n        //@ts-expect-error\r\n        e._getSourceName(); // Trigger a lookup for the source name\r\n        //@ts-expect-error\r\n        if (e.data.disabled)\r\n            categories.inactive.effects.push(e);\r\n        //@ts-expect-error\r\n        else if (e.isTemporary)\r\n            categories.temporary.effects.push(e);\r\n        //@ts-expect-error\r\n        else\r\n            categories.passive.effects.push(e);\r\n    }\r\n    return categories;\r\n}\r\n","import { TJSDialog } from \"@typhonjs-fvtt/runtime/svelte/application\";\r\nimport CharacterAdvancementShell from \"../helpers/Character Advancement/cha-adv-shell.svelte\";\r\nimport { onManageActiveEffect, prepareActiveEffectCategories } from \"../helpers/effects.js\";\r\nimport { getValues, obj_entries } from \"../ard20.js\";\r\n/**\r\n * Extend the basic ActorSheet with some very simple modifications\r\n * @extends {ActorSheet}\r\n */\r\nexport class ARd20ActorSheet extends ActorSheet {\r\n  /** @override */\r\n  static get defaultOptions() {\r\n    return mergeObject(super.defaultOptions, {\r\n      classes: [\"ard20\", \"sheet\", \"actor\"],\r\n      template: \"systems/ard20/templates/actor/actor-sheet.html\",\r\n      width: 600,\r\n      height: 600,\r\n      tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"main\" }],\r\n    });\r\n  }\r\n  /** @override */\r\n  get template() {\r\n    return `systems/ard20/templates/actor/actor-${this.actor.data.type}-sheet.html`;\r\n  }\r\n  /* -------------------------------------------- */\r\n  /** @override */\r\n  getData() {\r\n    // Retrieve the data structure from the base sheet. You can inspect or log\r\n    // the context variable to see the structure, but some key properties for\r\n    // sheets are the actor object, the data object, whether or not it's\r\n    // editable, the items array, and the effects array.\r\n    const context = super.getData();\r\n    // Use a safe clone of the actor data for further operations.\r\n    const actorData = this.actor.data;\r\n    // Add the actor's data to context.data for easier access, as well as flags.\r\n    //@ts-expect-error\r\n    context.data = actorData.data;\r\n    //@ts-expect-error\r\n    context.flags = actorData.flags;\r\n    //@ts-expect-error\r\n    context.config = CONFIG.ARd20;\r\n    //@ts-expect-error\r\n    context.isGM = game.user.isGM;\r\n    // Prepare character data and items.\r\n    if (actorData.type === \"character\") {\r\n      //@ts-expect-error\r\n      this._prepareItems(context);\r\n      this._prepareCharacterData(context);\r\n    }\r\n    // Prepare NPC data and items.\r\n    //@ts-expect-error\r\n    if (actorData.type === \"npc\") {\r\n      //@ts-expect-error\r\n      this._prepareItems(context);\r\n    }\r\n    // Add roll data for TinyMCE editors.\r\n    //@ts-expect-error\r\n    context.rollData = context.actor.getRollData();\r\n    // Prepare active effects\r\n    //@ts-expect-error\r\n    context.effects = prepareActiveEffectCategories(this.actor.effects);\r\n    return context;\r\n  }\r\n  /**\r\n   * Organize and classify Items for Character sheets.\r\n   *\r\n   * @param {Object} actorData The actor to prepare.\r\n   *\r\n   * @return {undefined}\r\n   */\r\n  //@ts-expect-error\r\n  _prepareCharacterData(context) {\r\n    // Handle attribute scores.\r\n    for (let [k, v] of obj_entries(context.data.attributes)) {\r\n      //@ts-expect-error\r\n      v.label = game.i18n.localize(getValues(CONFIG.ARd20.Attributes, k)) ?? k;\r\n    }\r\n    /*for (let [k, v] of obj_entries(context.data.skills)) {\r\n      //@ts-expect-error\r\n      v.name = game.i18n.localize(getValues(CONFIG.ARd20.Skills, k)) ?? k;\r\n      v.rank_name = game.i18n.localize(getValues(CONFIG.ARd20.Rank, v.rank)) ?? v.rank;\r\n    }*/\r\n  }\r\n  /**\r\n   * Organize and classify Items for Character sheets.\r\n   *\r\n   * @param {Object} actorData The actor to prepare.\r\n   *\r\n   * @return {undefined}\r\n   */\r\n  _prepareItems(context) {\r\n    // Initialize containers.\r\n    const gear = [];\r\n    const features = [];\r\n    const weapons = [];\r\n    const armor = [];\r\n    const spells = {\r\n      0: [],\r\n      1: [],\r\n      2: [],\r\n      3: [],\r\n      4: [],\r\n      5: [],\r\n      6: [],\r\n      7: [],\r\n      8: [],\r\n      9: [],\r\n    };\r\n    // Iterate through items, allocating to containers\r\n    for (let i of context.items) {\r\n      //@ts-expect-error\r\n      i.img = i.img || DEFAULT_TOKEN;\r\n      // Append to gear.\r\n      if (i.type === \"item\") {\r\n        gear.push(i);\r\n      }\r\n      // Append to features.\r\n      else if (i.type === \"feature\") {\r\n        features.push(i);\r\n      }\r\n      // Append to spells.\r\n      else if (i.type === \"spell\") {\r\n        //@ts-expect-error\r\n        if (i.data.spellLevel != undefined) {\r\n          //@ts-expect-error\r\n          spells[i.data.spellLevel].push(i);\r\n        }\r\n      } else if (i.type === \"armor\" || i.type === \"weapon\") {\r\n        const isActive = getProperty(i.data, \"equipped\");\r\n        //@ts-expect-error\r\n        i.toggleClass = isActive ? \"active\" : \"\";\r\n        //@ts-expect-error\r\n        i.toggleTitle = game.i18n.localize(isActive ? \"ARd20.Equipped\" : \"ARd20.Unequipped\");\r\n        //@ts-expect-error\r\n        i.data.equipped = !isActive;\r\n        if (i.type === \"armor\") armor.push(i);\r\n        else weapons.push(i);\r\n      }\r\n    }\r\n    // Assign and return\r\n    //@ts-expect-error\r\n    context.gear = gear;\r\n    //@ts-expect-error\r\n    context.features = features;\r\n    //@ts-expect-error\r\n    context.spells = spells;\r\n    //@ts-expect-error\r\n    context.weapons = weapons;\r\n    //@ts-expect-error\r\n    context.armor = armor;\r\n  }\r\n  /* -------------------------------------------- */\r\n  /** @override */\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n    //@ts-expect-error\r\n    $(\".select2\", html).select2();\r\n    // Render the item sheet for viewing/editing prior to the editable check.\r\n    html.find(\".item-toggle\").click(this._onToggleItem.bind(this));\r\n    html.find(\".item-edit\").click((ev) => {\r\n      const li = $(ev.currentTarget).parents(\".item\");\r\n      const item = this.actor.items.get(li.data(\"itemId\"));\r\n      item.sheet.render(true);\r\n    });\r\n    // -------------------------------------------------------------\r\n    // Everything below here is only needed if the sheet is editable\r\n    if (!this.isEditable) return;\r\n    // Add Inventory Item\r\n    html.find(\".item-create\").click(this._onItemCreate.bind(this));\r\n    // Delete Inventory Item\r\n    html.find(\".item-delete\").click((ev) => {\r\n      const li = $(ev.currentTarget).parents(\".item\");\r\n      const item = this.actor.items.get(li.data(\"itemId\"));\r\n      item.delete();\r\n      li.slideUp(200, () => this.render(false));\r\n    });\r\n    // Active Effect management\r\n    html.find(\".effect-control\").click((ev) => onManageActiveEffect(ev, this.actor));\r\n    //roll abilities and skills\r\n    html.find(\".attribute-name\").click(this._onRollAttributeTest.bind(this));\r\n    html.find(\".skill-name\").click(this._onRollSkillCheck.bind(this));\r\n    //open \"character advancement\" window\r\n    html.find(\".config-button\").click(this._OnAdvanceMenu.bind(this));\r\n    //item's roll\r\n    html.find(\".item-roll\").click(this._onItemRoll.bind(this));\r\n    // Drag events for macros.\r\n    if (this.actor.isOwner) {\r\n      let handler = (ev) => this._onDragStart(ev);\r\n      html.find(\"li.item\").each((i, li) => {\r\n        if (li.classList.contains(\"inventory-header\")) return;\r\n        li.setAttribute(\"draggable\", \"true\");\r\n        li.addEventListener(\"dragstart\", handler, false);\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Open @class CharacterAdvancement\r\n   */\r\n  async _OnAdvanceMenu(event) {\r\n    event.preventDefault();\r\n    const button = event.currentTarget;\r\n    let app;\r\n    console.log(this.object);\r\n    const actor = this.object;\r\n    //@ts-ignore\r\n    switch (button.dataset?.action) {\r\n      case \"adv\":\r\n        async function createAditionalData() {\r\n          //functions to get lists of available features and lists\r\n          async function getPacks() {\r\n            let pack_list = []; // array of feats from Compendium\r\n            let pack_name = [];\r\n            for (const val of game.settings.get(\"ard20\", \"feat\").packs) {\r\n              if (game.packs.filter((pack) => pack.metadata.label === val.name).length !== 0) {\r\n                let feat_list = [];\r\n                feat_list.push(\r\n                  Array.from(\r\n                    game.packs.filter((pack) => pack.metadata.label === val.name && pack.documentName === \"Item\")[0]\r\n                      .index\r\n                  )\r\n                );\r\n                feat_list = feat_list.flat();\r\n                for (const feat of feat_list) {\r\n                  const new_key =\r\n                    game.packs.filter((pack) => pack.metadata.label === val.name)[0].metadata.package + \".\" + val.name;\r\n                  const doc = await game.packs.get(new_key).getDocument(feat.id);\r\n                  const item = doc.toObject();\r\n                  item.data = foundry.utils.deepClone(doc.data.data);\r\n                  pack_list.push(item);\r\n                  pack_name.push(item.name);\r\n                }\r\n                pack_list = pack_list.flat();\r\n              }\r\n            }\r\n            return {\r\n              pack_list,\r\n              pack_name,\r\n            };\r\n          }\r\n          function getFolders() {\r\n            let folder_list = []; // array of feats from game folders\r\n            let folder_name = [];\r\n            for (let val of game.settings.get(\"ard20\", \"feat\").folders) {\r\n              if (game.folders.filter((folder) => folder.data.name === val.name).length !== 0) {\r\n                let feat_list = [];\r\n                feat_list.push(\r\n                  game.folders.filter((folder) => folder.data.name === val.name && folder.data.type === \"Item\")[0]\r\n                    .contents\r\n                );\r\n                feat_list = feat_list.flat();\r\n                for (let feat of feat_list) {\r\n                  console.log(\"item added from folder \", feat);\r\n                  const item = feat.toObject();\r\n                  item.data = foundry.utils.deepClone(feat.data.data);\r\n                  folder_list.push(item);\r\n                  folder_name.push(item.name);\r\n                }\r\n                folder_list = folder_list.flat();\r\n              }\r\n            }\r\n            return {\r\n              folder_list,\r\n              folder_name,\r\n            };\r\n          }\r\n          let raceList = await getRacesList();\r\n          let featList = await getFeaturesList();\r\n          let name_array = [];\r\n\r\n          async function getRacesList() {\r\n            const pack = await getPacks();\r\n            const folder = getFolders();\r\n            const pack_list = pack.pack_list;\r\n            const pack_name = pack.pack_name;\r\n            const folder_list = folder.folder_list;\r\n            let race_pack_list = [];\r\n            let race_folder_list = [];\r\n            pack_list.forEach((item) => {\r\n              if (item.type === \"race\") {\r\n                let raceItem = { ...item, chosen: false };\r\n                race_pack_list.push(raceItem);\r\n              }\r\n            });\r\n            folder_list.forEach((item) => {\r\n              if (item.type === \"race\") {\r\n                let raceItem = { ...item, chosen: false };\r\n                race_folder_list.push(raceItem);\r\n              }\r\n            });\r\n            return race_pack_list.concat(race_folder_list.filter((item) => !pack_name.includes(item.name)));\r\n          }\r\n          async function getFeaturesList() {\r\n            const pack = await getPacks();\r\n            const pack_list = pack.pack_list;\r\n            const pack_name = pack.pack_name;\r\n            const folder = getFolders();\r\n            const folder_list = folder.folder_list;\r\n            let feat_pack_list = [];\r\n            pack_list.forEach((item) => {\r\n              if (item.type === \"feature\") {\r\n                let FeatureItem = { ...item };\r\n                feat_pack_list.push(FeatureItem);\r\n              }\r\n            });\r\n            let feat_folder_list = [];\r\n            folder_list.forEach((item) => {\r\n              if (item.type === \"feature\") {\r\n                let FeatureItem = { ...item };\r\n                feat_folder_list.push(FeatureItem);\r\n              }\r\n            });\r\n            let temp_feat_list = feat_pack_list.concat(\r\n              feat_folder_list.filter((item) => !pack_name.includes(item.name))\r\n            );\r\n            let learnedFeatures = [];\r\n            actor.itemTypes.feature.forEach((item) => {\r\n              if (item.data.type === \"feature\") {\r\n                let FeatureItem = { ...item.data };\r\n                learnedFeatures.push(FeatureItem);\r\n              }\r\n            });\r\n            return { temp_feat_list, learnedFeatures };\r\n          }\r\n          for (let i of featList.learnedFeatures) {\r\n            name_array.push(i.name);\r\n          }\r\n          console.log(featList.temp_feat_list, \"featList.temp_feat_list\")\r\n          featList.temp_feat_list.forEach((v, k) => {\r\n            console.log(k, v);\r\n            if (name_array.includes(v.name)) {\r\n              console.log(\"this item is already learned\", featList.temp_feat_list[k]);\r\n              featList.temp_feat_list[k] = foundry.utils.deepClone(\r\n                featList.learnedFeatures.filter((item) => item.name === v.name)[0]\r\n              );\r\n            }\r\n          });\r\n          featList.temp_feat_list = featList.temp_feat_list.filter((item) => {\r\n            if (item.type === \"feature\")\r\n              return !name_array.includes(item.name) || item.data.level.current !== item.data.level.max;\r\n          });\r\n          const obj = {\r\n            races: { list: raceList, chosen: \"\" },\r\n            count: {\r\n              //TODO: rework this for future where you can have more/less ranks\r\n              skills: { 0: 0, 1: 0, 2: 0, 3: 0, 4: 0 },\r\n              feats: { mar: 0, mag: 0, div: 0, pri: 0, psy: 0 },\r\n            },\r\n            feats: {\r\n              learned: featList.learnedFeatures,\r\n              awail: featList.temp_feat_list,\r\n            },\r\n            allow: {\r\n              attribute: duplicate(actor.data.data.isReady),\r\n              race: duplicate(actor.data.data.isReady),\r\n              final: duplicate(actor.data.data.isReady),\r\n            },\r\n          };\r\n          return obj;\r\n        }\r\n        const document = {\r\n          id: actor.id,\r\n          aditionalData: await createAditionalData(),\r\n        };\r\n        app = new CharacterAdvancement(document);\r\n        break;\r\n    }\r\n    app?.render(true);\r\n  }\r\n\r\n  /**\r\n   * Change @param data.equipped\r\n   * by toggling it on sheet\r\n   */\r\n  _onToggleItem(event) {\r\n    event.preventDefault();\r\n    //@ts-ignore\r\n    const itemid = event.currentTarget.closest(\".item\").dataset.itemId;\r\n    const item = this.actor.items.get(itemid);\r\n    //const attr = item.data.type === \"spell\" ? \"data.preparation.prepared\" : \"data.equipped\";\r\n    const attr = \"data.equipped\";\r\n    return item.update({ [attr]: !getProperty(item.data, attr) });\r\n  }\r\n  _onRollAttributeTest(event) {\r\n    event.preventDefault();\r\n    //@ts-ignore\r\n    let attribute = event.currentTarget.parentElement.dataset.attribute;\r\n    return this.actor.rollAttributeTest(attribute, { event: event });\r\n  }\r\n  _onRollSkillCheck(event) {\r\n    event.preventDefault();\r\n    //@ts-ignore\r\n    let skill = event.currentTarget.parentElement.dataset.skill;\r\n    return this.actor.rollSkill(skill, { event: event });\r\n  }\r\n  _onItemRoll(event) {\r\n    event.preventDefault();\r\n    console.log(\"БРОСОК\");\r\n    //@ts-ignore\r\n    const id = event.currentTarget.closest(\".item\").dataset.itemId;\r\n    const item = this.actor.items.get(id);\r\n    const hasAttack = item.data.data.hasAttack;\r\n    const hasDamage = item.data.data.hasDamage;\r\n    //@ts-expect-error\r\n    if (item) return item.roll({ hasAttack, hasDamage });\r\n  }\r\n  /**\r\n   * Handle creating a new Owned Item for the actor using initial data defined in the HTML dataset\r\n   * @param {Event} event   The originating click event\r\n   * @private\r\n   */\r\n  async _onItemCreate(event) {\r\n    event.preventDefault();\r\n    const header = event.currentTarget;\r\n    // Get the type of item to create.\r\n    //@ts-ignore\r\n    const type = header.dataset.type;\r\n    // Grab any data associated with this control.\r\n    //@ts-ignore\r\n    const data = duplicate(header.dataset);\r\n    // Initialize a default name.\r\n    const name = `New ${type.capitalize()}`;\r\n    // Prepare the item object.\r\n    const itemData = {\r\n      name: name,\r\n      type: type,\r\n      data: data,\r\n    };\r\n    // Remove the type from the dataset since it's in the itemData.type prop.\r\n    delete itemData.data[\"type\"];\r\n    // Finally, create the item!\r\n    return await Item.create(itemData, { parent: this.actor });\r\n  }\r\n  /**\r\n   * Handle clickable rolls.\r\n   * @param {Event} event   The originating click event\r\n   * @private\r\n   */\r\n  _onRoll(event) {\r\n    event.preventDefault();\r\n    const element = event.currentTarget;\r\n    //@ts-expect-error\r\n    const dataset = element.dataset;\r\n    // Handle item rolls.\r\n    if (dataset.rollType) {\r\n      if (dataset.rollType == \"item\") {\r\n        //@ts-ignore\r\n        const itemid = element.closest(\".item\").dataset.itemId;\r\n        const item = this.actor.items.get(itemid);\r\n        //@ts-expect-error\r\n        if (item) return item.roll();\r\n      }\r\n      /*else if (dataset.rollType==='weapon'){\r\n              const itemid = element.closest(\".item\").dataset.itemId\r\n              const item = this.actor.items.get(itemid)\r\n              if (item) return item.DamageRoll()\r\n            }*/\r\n    }\r\n  }\r\n  /**\r\n   * _onDrop method with\r\n   */\r\n  async _onDrop(event) {\r\n    if (!game.user.isGM) {\r\n      ui.notifications.error(\"you don't have permissions to add documents to this actor manually\");\r\n      return;\r\n    }\r\n    // Try to extract the data\r\n    let data;\r\n    try {\r\n      data = JSON.parse(event.dataTransfer.getData(\"text/plain\"));\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n    const actor = this.actor;\r\n    /**\r\n     * A hook event that fires when some useful data is dropped onto an ActorSheet.\r\n     * @function dropActorSheetData\r\n     * @memberof hookEvents\r\n     * @param {Actor} actor      The Actor\r\n     * @param {ActorSheet} sheet The ActorSheet application\r\n     * @param {object} data      The data that has been dropped onto the sheet\r\n     */\r\n    const allowed = Hooks.call(\"dropActorSheetData\", actor, this, data);\r\n    if (allowed === false) return;\r\n    // Handle different data types\r\n    switch (data.type) {\r\n      case \"ActiveEffect\":\r\n        return this._onDropActiveEffect(event, data);\r\n      case \"Actor\":\r\n        return this._onDropActor(event, data);\r\n      case \"Item\":\r\n        return this._onDropItem(event, data);\r\n      case \"Folder\":\r\n        return this._onDropFolder(event, data);\r\n    }\r\n  }\r\n}\r\nclass CharacterAdvancement extends TJSDialog {\r\n  constructor(document) {\r\n    super(\r\n      {\r\n        title: \"Character advancement\",\r\n        id: \"cha-adv\",\r\n        modal: true,\r\n        draggable: false,\r\n        content: {\r\n          class: CharacterAdvancementShell,\r\n          props: {\r\n            document,\r\n          },\r\n        },\r\n      },\r\n      {\r\n        width: 800,\r\n        height: 600,\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { getValues, obj_entries } from \"../ard20.js\";\r\nimport { ARd20Item } from \"../documents/item.js\";\r\n//@ts-expect-error\r\nexport class FeatRequirements extends FormApplication {\r\n    static get defaultOptions() {\r\n        return foundry.utils.mergeObject(super.defaultOptions, {\r\n            classes: [\"ard20\"],\r\n            title: \"Feature Requirements\",\r\n            template: \"systems/ard20/templates/app/feat_req.hbs\",\r\n            id: \"feat_req\",\r\n            width: 800,\r\n            height: \"auto\",\r\n        });\r\n    }\r\n    async getData() {\r\n        this.options.data = !this.form ? (await this.InitializeData()) : this.options.data;\r\n        //create easier acces to templateData\r\n        const templateData = this.options.data;\r\n        const req = templateData.req;\r\n        const reqValues = req.values;\r\n        const reqLogic = req.logic;\r\n        const data = templateData.data;\r\n        let formApp = templateData.formApp;\r\n        console.log(\"data created\");\r\n        //creating array with all possible requirements' names\r\n        let name_array = [];\r\n        for (let i of data) {\r\n            name_array.push(i.name);\r\n        }\r\n        //iterate through created requirements\r\n        reqValues.forEach((value, index) => {\r\n            //setting correct type of reqirement\r\n            reqValues[index].type = formApp?.values?.[index]?.type ?? (reqValues[index].type || \"attribute\");\r\n            //creating array with from data array with elements that are same type\r\n            let subtype_list = data.filter((item) => item.type === reqValues[index].type);\r\n            //setting correct requirement name\r\n            reqValues[index].name =\r\n                subtype_list.filter((item) => {\r\n                    item.name === formApp.values?.[index]?.name;\r\n                }).length > 0\r\n                    ? formApp.values?.[index].name || reqValues[index].name\r\n                    : reqValues[index].name || subtype_list[0].name;\r\n            reqValues[index].subtype_list = subtype_list.map((item) => item.name);\r\n            reqValues[index].input = formApp.values[index]?.input ?? (reqValues[index].input || []);\r\n            reqValues[index].value = data.filter((item) => item.name === reqValues[index].name)[0].value;\r\n            for (let i = 0; i < this.object.data.data.level.max; i++) {\r\n                let inputElement = reqValues[index].input[i];\r\n                let previousElement = reqValues[index].input[i - 1] ?? 0;\r\n                switch (reqValues[index].type) {\r\n                    case \"skill\":\r\n                        inputElement = inputElement > 4 ? 1 : inputElement || 1;\r\n                        break;\r\n                    case \"attribute\":\r\n                        inputElement = inputElement || 10;\r\n                        break;\r\n                    case \"feature\":\r\n                        const maxLevel = reqValues[index].value;\r\n                        inputElement = Math.min(inputElement, maxLevel);\r\n                }\r\n                inputElement = Math.max(inputElement, previousElement);\r\n                reqValues[index].input[i] = inputElement;\r\n            }\r\n        });\r\n        reqLogic.forEach((value, index) => {\r\n            reqLogic[index] = formApp.logic?.[index] ?? reqLogic[index];\r\n        });\r\n        templateData.formApp = req;\r\n        console.log(templateData);\r\n        return templateData;\r\n    }\r\n    /**\r\n     * Initialize Data for FormApplication\r\n     * Data structure looks like this:\r\n     * @param {Array} req - already existing requirements\r\n     * @param {Array} type_list - list of types for requirements, can be attribute, skill or feat\r\n     * @param feat.awail - array of Items with type feat from Folders and Compendium Packs\r\n     * @param feat.current - array of Items that was already used\r\n     * @returns {object} templateData\r\n     */\r\n    async InitializeData() {\r\n        if (this.form)\r\n            return;\r\n        console.log(\"First launch\");\r\n        const featList = await this.getFeats();\r\n        const pack_list = featList.pack_list;\r\n        const folder_list = featList.folder_list;\r\n        const folder_name = featList.folder_name;\r\n        const data = []; //list of attributes, skills and feats that user can use as requirement\r\n        for (let [k, v] of Object.entries(CONFIG.ARd20.Attributes)) {\r\n            data.push({\r\n                name: game.i18n.localize(getValues(CONFIG.ARd20.Attributes, k)) ?? k,\r\n                value: k,\r\n                type: \"attribute\",\r\n            });\r\n        }\r\n        for (let [k, v] of obj_entries(CONFIG.ARd20.Skills)) {\r\n            data.push({\r\n                name: game.i18n.localize(getValues(CONFIG.ARd20.Skills, k)) ?? k,\r\n                value: k,\r\n                type: \"skill\",\r\n            });\r\n        }\r\n        const arr = Object.values(CONFIG.ARd20.Rank).filter((value, index) => {\r\n            if (index !== 0)\r\n                return CONFIG.ARd20.Rank[index];\r\n        });\r\n        const rank = Object.assign({}, arr);\r\n        const templateData = {\r\n            formApp: {\r\n                values: [],\r\n                logic: [],\r\n            },\r\n            req: foundry.utils.deepClone(this.object.data.data.req),\r\n            type_list: [\"attribute\", \"skill\", \"feature\"],\r\n            feat: {\r\n                awail: pack_list.concat(folder_list.filter((item) => pack_list.indexOf(item) < 0)),\r\n                current: this.object.data.data.req.values.filter((item) => item.type === \"feature\"),\r\n            },\r\n            data: data,\r\n            rank: rank,\r\n        };\r\n        const formApp = templateData.formApp;\r\n        const req = templateData.req;\r\n        const type_list = templateData.type_list;\r\n        const featAwail = templateData.feat.awail;\r\n        const featCurrent = templateData.feat.current;\r\n        let name_array = [];\r\n        for (let i of featCurrent) {\r\n            name_array.push(i.name);\r\n        }\r\n        featAwail.forEach((item, index) => {\r\n            if (item.name === this.object.name) {\r\n                console.log(item.name, \" matches name of the feat\");\r\n                featAwail.splice(index, 1);\r\n            }\r\n            else if (name_array.includes(item.name)) {\r\n                console.log(item.name, \"this feat is already included\", index);\r\n                item.input = featCurrent[featCurrent.indexOf(featCurrent.filter((feat) => feat.name === item.name)[0])].input;\r\n                featAwail.splice(index, 1);\r\n            }\r\n            if (featAwail.filter((feat) => feat.name === item.name).length !== 0) {\r\n                data.push({ name: item.name, type: \"feature\", value: item.value });\r\n            }\r\n        });\r\n        return templateData;\r\n    }\r\n    /**\r\n     * Get features from folders and packs that were configured in settings\r\n     * @returns {} {pack_list, folder_list, folder_name}\r\n     */\r\n    async getFeats() {\r\n        let pack_list = [];\r\n        let folder_list = [];\r\n        let folder_name = [];\r\n        const packs = game.settings.get(\"ard20\", \"feat\").packs;\r\n        const folders = game.settings.get(\"ard20\", \"feat\").folders;\r\n        for (let key of packs) {\r\n            if (game.packs.filter((pack) => pack.metadata.label === key).length !== 0) {\r\n                let feat_list = [];\r\n                feat_list.push(Array.from(game.packs.filter((pack) => pack.metadata.label === key && pack.metadata.entity === \"Item\")[0].index));\r\n                feat_list = feat_list.flat();\r\n                for (let feat of feat_list) {\r\n                    if (feat instanceof ARd20Item) {\r\n                        const new_key = game.packs.filter((pack) => pack.metadata.label === key)[0].metadata.package + \".\" + key;\r\n                        const doc = await game.packs.get(new_key).getDocument(feat.id);\r\n                        if (doc instanceof ARd20Item) {\r\n                            if (doc.data.type === \"feature\") {\r\n                                let item = doc.toObject();\r\n                                item.data = doc.data.data;\r\n                                const feature = {\r\n                                    name: item.name,\r\n                                    type: \"feature\",\r\n                                    input: [],\r\n                                    pass: [],\r\n                                    subtype_list: [],\r\n                                    value: item.data.level.max,\r\n                                };\r\n                                pack_list.push(feature);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (let key of folders) {\r\n            if (game.folders.filter((folder) => folder.data.name === key).length !== 0) {\r\n                let feat_list = [];\r\n                feat_list.push(game.folders.filter((folder) => folder.data.name === key && folder.data.type === \"Item\")[0].contents);\r\n                feat_list = feat_list.flat();\r\n                for (let feat of feat_list) {\r\n                    if (feat instanceof ARd20Item && feat.data.type === \"feature\") {\r\n                        console.log(\"item added from folder \", feat);\r\n                        const item = feat.toObject();\r\n                        item.data = foundry.utils.deepClone(feat.data.data);\r\n                        const feature = {\r\n                            name: item.name,\r\n                            type: \"feature\",\r\n                            input: [],\r\n                            pass: [],\r\n                            subtype_list: [],\r\n                            value: item.data.level.max,\r\n                        };\r\n                        folder_list.push(feature);\r\n                        folder_name.push(item.name);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return { pack_list, folder_list, folder_name };\r\n    }\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n        html.find(\".item-create\").on(\"click\", this._onAdd.bind(this));\r\n        html.find(\".item-delete\").on(\"click\", this._Delete.bind(this));\r\n    }\r\n    /**\r\n     * Add new requirement. By default it \"Strength>=10\" for every feat's level.\r\n     * @param event\r\n     */\r\n    async _onAdd(event) {\r\n        event.preventDefault();\r\n        const req = this.options.data.req;\r\n        let sub_list = []; //temporary list with attributes\r\n        for (let [k, i] of obj_entries(CONFIG.ARd20.Attributes)) {\r\n            sub_list.push(k);\r\n        }\r\n        //create varible for easier access to maximum level of feature\r\n        const maxLevel = this.object.data.data.level.max;\r\n        //create default value object\r\n        const defaultValue = {\r\n            name: \"Strength\",\r\n            type: \"attribute\",\r\n            pass: new Array(maxLevel).fill(false),\r\n            subtype_list: sub_list,\r\n            value: \"str\",\r\n            input: new Array(maxLevel).fill(10),\r\n        };\r\n        req.values.push(defaultValue);\r\n        this.render();\r\n    }\r\n    /**\r\n     * Delete existing requirement\r\n     * @param event\r\n     */\r\n    async _Delete(event) {\r\n        event.preventDefault();\r\n        const req = this.options.data.req;\r\n        req.values.splice(event.currentTarget.dataset.key, 1);\r\n        this.render();\r\n    }\r\n    /**\r\n     * Save typed-in values\r\n     * @param event\r\n     */\r\n    _onChangeInput(event) {\r\n        super._onChangeInput(event);\r\n        const data = this.options.data;\r\n        const formApp = data.formApp;\r\n        const k = event.currentTarget.dataset.key;\r\n        const i = event.currentTarget.dataset.order;\r\n        console.log(foundry.utils.expandObject(this._getSubmitData()));\r\n        const req = foundry.utils.expandObject(this._getSubmitData()).req;\r\n        switch (event.currentTarget.dataset.type) {\r\n            case \"value\":\r\n                formApp.values[k].type = req.values[k].type;\r\n                formApp.values[k].name = req.values[k].name;\r\n                formApp.values[k].input[i] = req.values[k].input[i];\r\n                break;\r\n            case \"logic\":\r\n                formApp.logic[k] = req.logic[k];\r\n                break;\r\n        }\r\n        this.getData();\r\n        this.render();\r\n    }\r\n    async _updateObject(event, formData) {\r\n        const item = this.object;\r\n        this.render();\r\n        const req = this.options.data.req;\r\n        const obj = {};\r\n        obj[\"data.req.values\"] = req.values;\r\n        obj[\"data.req.logic\"] = req.logic;\r\n        console.log(obj);\r\n        await item.update(obj);\r\n    }\r\n}\r\n","import { obj_entries } from \"../ard20.js\";\r\nimport { onManageActiveEffect, prepareActiveEffectCategories } from \"../helpers/effects.js\";\r\nimport { FeatRequirements } from \"../helpers/feat_req.js\";\r\n/**\r\n * Extend the basic ItemSheet with some very simple modifications\r\n * @extends {ItemSheet}\r\n */\r\nexport class ARd20ItemSheet extends ItemSheet {\r\n    /** @override */\r\n    static get defaultOptions() {\r\n        return mergeObject(super.defaultOptions, {\r\n            classes: [\"ard20\", \"sheet\", \"item\"],\r\n            width: 520,\r\n            height: 480,\r\n            tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"description\" }],\r\n        });\r\n    }\r\n    /** @override */\r\n    get template() {\r\n        const path = \"systems/ard20/templates/item\";\r\n        return `${path}/item-${this.item.data.type}-sheet.html`;\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @override */\r\n    getData() {\r\n        // Retrieve base data structure.\r\n        const context = super.getData();\r\n        // Use a safe clone of the item data for further operations.\r\n        //@ts-expect-error\r\n        const itemData = context.item.data;\r\n        //@ts-expect-error\r\n        context.config = CONFIG.ARd20;\r\n        // Retrieve the roll data for TinyMCE editors.\r\n        //@ts-expect-error\r\n        context.rollData = {};\r\n        let actor = this.object?.parent ?? null;\r\n        if (actor) {\r\n            //@ts-expect-error\r\n            context.rollData = actor.getRollData();\r\n        }\r\n        // Add the actor's data to context.data for easier access, as well as flags.\r\n        //@ts-expect-error\r\n        context.data = itemData.data;\r\n        //@ts-expect-error\r\n        context.flags = itemData.flags;\r\n        //@ts-expect-error\r\n        context.isGM = game.user.isGM;\r\n        //@ts-expect-error\r\n        context.type = context.item.type;\r\n        //@ts-expect-error\r\n        context.effects = prepareActiveEffectCategories(this.item.effects);\r\n        return context;\r\n    }\r\n    _getSubmitData(updateData = {}) {\r\n        // Create the expanded update data object\r\n        if (this.form === null)\r\n            return;\r\n        //@ts-expect-error\r\n        const fd = new FormDataExtended(this.form, { editors: this.editors });\r\n        let data = fd.toObject();\r\n        if (updateData)\r\n            data = mergeObject(data, updateData);\r\n        else\r\n            data = expandObject(data);\r\n        // Handle Damage array\r\n        //@ts-expect-error\r\n        const damage = data.data?.damage;\r\n        if (damage) {\r\n            if (damage.parts) {\r\n                damage.damType = Object.values(damage?.damType || {});\r\n                damage.parts = Object.values(damage?.parts || {}).map(function (d, ind) {\r\n                    let a = [];\r\n                    if (damage.damType[ind].length !== 0) {\r\n                        damage.damType[ind].forEach((sub, i) => a.push(JSON.parse(damage.damType[ind][i])));\r\n                    }\r\n                    //@ts-expect-error\r\n                    return [d[0] || \"\", a];\r\n                });\r\n            }\r\n            else {\r\n                for (let [key, type] of obj_entries(damage)) {\r\n                    for (let [k, prof] of obj_entries(type)) {\r\n                        prof.damType = Object.values(prof?.damType || {});\r\n                        prof.parts = Object.values(prof?.parts || {}).map(function (d, ind) {\r\n                            let a = [];\r\n                            if (prof.damType[ind].length !== 0 && prof.damType[ind][0] !== \"\") {\r\n                                prof.damType[ind].forEach((sub, i) => a.push(JSON.parse(prof.damType[ind][i])));\r\n                            }\r\n                            //@ts-expect-error\r\n                            return [d[0] || \"\", a];\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return flattenObject(data);\r\n    }\r\n    /* -------------------------------------------- */\r\n    /** @override */\r\n    activateListeners(html) {\r\n        super.activateListeners(html);\r\n        const edit = !this.isEditable;\r\n        const context = this.getData();\r\n        //@ts-expect-error\r\n        function formatSelection(state) {\r\n            const parent = $(state.element).parent().prop(\"tagName\");\r\n            if (!state.id || parent !== \"OPTGROUP\")\r\n                return state.text;\r\n            const optgroup = $(state.element).parent().attr(\"label\");\r\n            const subtype = state.element.value.match(/(\\w+)/g)[1];\r\n            const url = `systems/ard20/css/${subtype}.svg`;\r\n            return `<div><img style=\"width:15px; background-color:black; margin-left:2px\" src=${url} />${optgroup} ${state.text}</div>`;\r\n        }\r\n        //@ts-expect-error\r\n        function formatResult(state) {\r\n            const parent = $(state.element).parent().prop(\"tagName\");\r\n            if (!state.id || parent !== \"OPTGROUP\")\r\n                return state.text;\r\n            const subtype = state.element.value.match(/(\\w+)/g)[1];\r\n            const url = `systems/ard20/css/${subtype}.svg`;\r\n            return `<div><img style=\"width:15px; background-color:black; margin-left:2px\" src=${url} /> ${state.text}</div>`;\r\n        }\r\n        $(`select.select2`, html)\r\n            //@ts-expect-error\r\n            .select2({\r\n            width: \"auto\",\r\n            dropdownAutoWidth: true,\r\n            disabled: edit,\r\n            templateSelection: formatSelection,\r\n            templateResult: formatResult,\r\n            //@ts-expect-error\r\n            escapeMarkup: function (m) {\r\n                return m;\r\n            },\r\n        })\r\n            //@ts-expect-error\r\n            .val(function (index, value) {\r\n            //@ts-expect-error\r\n            const name = $(\"select.select2\", html)[index].name;\r\n            const val = getProperty(context, name);\r\n            return val;\r\n        })\r\n            .trigger(\"change\");\r\n        $(\"select\").on(\"select2:unselect\", function (evt) {\r\n            //@ts-expect-error\r\n            if (!evt.params.originalEvent) {\r\n                return;\r\n            }\r\n            //@ts-expect-error\r\n            evt.params.originalEvent.stopPropagation();\r\n        });\r\n        // Everything below here is only needed if the sheet is editable\r\n        if (!this.isEditable)\r\n            return;\r\n        //@ts-expect-error\r\n        html.find(\".effect-control\").click((ev) => onManageActiveEffect(ev, this.item));\r\n        // Roll handlers, click handlers, etc. would go here.\r\n        html.find(\".config-button\").click(this._FeatReq.bind(this));\r\n        html.find(\".damage-control\").click(this._onDamageControl.bind(this));\r\n    }\r\n    //@ts-expect-error\r\n    _FeatReq(event) {\r\n        event.preventDefault();\r\n        const button = event.currentTarget;\r\n        let app;\r\n        switch (button.dataset.action) {\r\n            case \"feat-req\":\r\n                //@ts-expect-error\r\n                app = new FeatRequirements(this.object);\r\n                break;\r\n        }\r\n        app?.render(true);\r\n    }\r\n    //@ts-expect-error\r\n    async _onDamageControl(event) {\r\n        event.preventDefault();\r\n        const a = event.currentTarget;\r\n        if (a.classList.contains(\"add-damage\")) {\r\n            //await this._onSubmit(event);\r\n            let path = a.dataset.type ? \"data.damage\" + a.dataset.type : \"data.damage\";\r\n            const damage = getProperty(this.item.data, path);\r\n            damage.damType = damage.damType || [];\r\n            const partsPath = path + \".parts\";\r\n            const damTypePath = path + \".damType\";\r\n            const update = {};\r\n            update[partsPath] = damage.parts.concat([[\"\", [\"\", \"\"]]]);\r\n            update[damTypePath] = damage.damType?.concat([[\"\"]]);\r\n            await this.item.update(update);\r\n        }\r\n        if (a.classList.contains(\"delete-damage\")) {\r\n            //await this._onSubmit(event);\r\n            const li = a.closest(\".damage-part\");\r\n            let path = a.dataset.type ? \"data.damage\" + a.dataset.type : \"data.damage\";\r\n            const damage = getProperty(this.item.data, path);\r\n            console.log(damage);\r\n            damage.parts.splice(Number(li.dataset.damagePart), 1);\r\n            damage.damType.splice(Number(li.dataset.damagePart), 1);\r\n            const partsPath = path + \".parts\";\r\n            const damTypePath = path + \".damType\";\r\n            const update = {};\r\n            update[partsPath] = damage.parts;\r\n            update[damTypePath] = damage.damType;\r\n            await this.item.update(update);\r\n        }\r\n    }\r\n    //@ts-expect-error\r\n    async _onSubmit(...args) {\r\n        if (this._tabs[0].active === \"data\")\r\n            this.position.height = \"auto\";\r\n        //@ts-expect-error\r\n        await super._onSubmit(...args);\r\n    }\r\n}\r\n","/**\r\n * Define a set of template paths to pre-load\r\n * Pre-loaded templates are compiled and cached for fast access when rendering\r\n * @return {Promise}\r\n */\r\nexport const preloadHandlebarsTemplates = async function () {\r\n    return loadTemplates([\r\n        // Actor partials.\r\n        \"systems/ard20/templates/actor/parts/actor-features.html\",\r\n        \"systems/ard20/templates/actor/parts/actor-items.html\",\r\n        \"systems/ard20/templates/actor/parts/actor-spells.html\",\r\n        \"systems/ard20/templates/actor/parts/actor-effects.html\",\r\n        \"systems/ard20/templates/actor/parts/actor-equip.html\",\r\n        // Character Advancement\r\n        \"systems/ard20/templates/actor/parts/actor-adv.html\",\r\n        // Settings\r\n        \"systems/ard20/templates/app/prof-settings.html\",\r\n        \"systems/ard20/templates/app/feat-settings.html\",\r\n        // Requirements for features\r\n        \"systems/ard20/templates/app/feat_req.hbs\",\r\n    ]);\r\n};\r\n","//@ts-expect-error\r\nexport const ARd20 = {};\r\nARd20.Attributes = {\r\n    str: \"ARd20.AttributeStr\",\r\n    dex: \"ARd20.AttributeDex\",\r\n    con: \"ARd20.AttributeCon\",\r\n    int: \"ARd20.AttributeInt\",\r\n    wis: \"ARd20.AttributeWis\",\r\n    cha: \"ARd20.AttributeCha\",\r\n};\r\nARd20.AttributeAbbreviations = {\r\n    str: \"ARd20.AttributeStrAbbr\",\r\n    dex: \"ARd20.AttributeDexAbbr\",\r\n    con: \"ARd20.AttributeConAbbr\",\r\n    int: \"ARd20.AttributeIntAbbr\",\r\n    wis: \"ARd20.AttributeWisAbbr\",\r\n    cha: \"ARd20.AttributeChaAbbr\",\r\n};\r\nARd20.CHARACTER_EXP_LEVELS = [0, 300, 900, 2700, 6500, 14000, 23000, 34000, 48000, 64000, 85000, 100000, 120000, 140000, 165000, 195000, 225000, 265000, 305000, 355000];\r\nARd20.SpellSchool = {\r\n    abj: \"ARd20.SchoolAbj\",\r\n    con: \"ARd20.SchoolCon\",\r\n    div: \"ARd20.SchoolDiv\",\r\n    enc: \"ARd20.SchoolEnc\",\r\n    evo: \"ARd20.SchoolEvo\",\r\n    ill: \"ARd20.SchoolIll\",\r\n    nec: \"ARd20.SchoolNec\",\r\n    trs: \"ARd20.SchoolTrs\",\r\n};\r\nARd20.Skills = {\r\n    acr: \"ARd20.SkillAcr\",\r\n    ani: \"ARd20.SkillAni\",\r\n    arc: \"ARd20.SkillArc\",\r\n    ath: \"ARd20.SkillAth\",\r\n    dec: \"ARd20.SkillDec\",\r\n    his: \"ARd20.SkillHis\",\r\n    ins: \"ARd20.SkillIns\",\r\n    itm: \"ARd20.SkillItm\",\r\n    inv: \"ARd20.SkillInv\",\r\n    med: \"ARd20.SkillMed\",\r\n    nat: \"ARd20.SkillNat\",\r\n    prc: \"ARd20.SkillPrc\",\r\n    prf: \"ARd20.SkillPrf\",\r\n    per: \"ARd20.SkillPer\",\r\n    rel: \"ARd20.SkillRel\",\r\n    slt: \"ARd20.SkillSlt\",\r\n    ste: \"ARd20.SkillSte\",\r\n    sur: \"ARd20.SkillSur\",\r\n};\r\nARd20.Rank = {\r\n    0: \"ARd20.Untrained\",\r\n    1: \"ARd20.Basic\",\r\n    2: \"ARd20.Expert\",\r\n    3: \"ARd20.Master\",\r\n    4: \"ARd20.Legend\",\r\n};\r\nARd20.Source = {\r\n    mar: \"ARd20.Martial\",\r\n    mag: \"ARd20.Magical\",\r\n    div: \"ARd20.Divine\",\r\n    pri: \"ARd20.Primal\",\r\n    psy: \"ARd20.Psyhic\",\r\n};\r\nARd20.WeaponProp = {\r\n    aff: \"ARd20.Affixed\",\r\n    awk: \"ARd20.Awkward\",\r\n    con: \"ARd20.Conceal\",\r\n    bra: \"ARd20.Brace\",\r\n    def: \"ARd20.Deflect\",\r\n    dis: \"ARd20.Disarm\",\r\n    dou: \"ARd20.Double Ended\",\r\n    ent: \"ARd20.Entangle\",\r\n    fin: \"ARd20.Finesse\",\r\n    fir: \"ARd20.Firearm\",\r\n    hea: \"ARd20.Heavy\",\r\n    lau: \"ARd20.Launch\",\r\n    lig: \"ARd20.Light\",\r\n    lun: \"ARd20.Lunge\",\r\n    mel: \"ARd20.Melee\",\r\n    one: \"ARd20.One-Handed\",\r\n    pen: \"ARd20.Penetrate\",\r\n    ran: \"ARd20.Ranged\",\r\n    rea: \"ARd20.Reach\",\r\n    rel: \"ARd20.Reload\",\r\n    sta: \"Ard20.Stagger\",\r\n    thr: \"ARd20.Thrown\",\r\n    tri: \"ARd20.Trip\",\r\n    two: \"ARd20.Two-Handed\",\r\n    ver: \"ARd20.Versatile\",\r\n};\r\nARd20.WeaponType = {\r\n    amb: \"ARd20.Ambush\",\r\n    axe: \"ARd20.Axe\",\r\n    blu: \"ARd20.Bludgeon\",\r\n    bow: \"ARd20.Bow\",\r\n    sli: \"ARd20.Sling\",\r\n    cbl: \"ARd20.Combat Blade\",\r\n    cro: \"ARd20.Crossbow\",\r\n    dbl: \"ARd20.Dueling Blade\",\r\n    fir: \"ARd20.Firearm\",\r\n    fla: \"ARd20.Flail\",\r\n    whi: \"ARd20.Whip\",\r\n    ham: \"ARd20.Hammer\",\r\n    pic: \"ARd20.Pick\",\r\n    pol: \"ARd20.Polearm\",\r\n    spe: \"ARd20.Spear\",\r\n    thr: \"ARd20.Throwing\",\r\n};\r\nARd20.AbilXP = [50, 50, 50, 50, 70, 90, 120, 150, 190, 290, 440, 660, 990, 1500, 2700, 4800, 8400, 14700, 25700, 51500, 103000, 206000, 412000, 824000, 2060000];\r\nARd20.SkillXP = {\r\n    0: [50, 80, 125, 185, 260, 350, 455, 575, 710, 860, 1025, 1205, 1400, 1610, 1835, 2075, 2330, 2600],\r\n    1: [115, 190, 295, 430, 595, 790, 1015, 1270, 1555, 1870, 2215, 2590, 2995, 3430, 3895, 4390, 4915, 5470],\r\n};\r\nARd20.DamageTypes = {\r\n    mag: \"ARd20.Magical\",\r\n    phys: \"ARd20.Physical\",\r\n};\r\nARd20.DamageSubTypes = {\r\n    acid: \"ARd20.DamageAcid\",\r\n    bludgeoning: \"ARd20.DamageBludgeoning\",\r\n    cold: \"ARd20.DamageCold\",\r\n    fire: \"ARd20.DamageFire\",\r\n    force: \"ARd20.DamageForce\",\r\n    lightning: \"ARd20.DamageLightning\",\r\n    necr: \"ARd20.DamageNecrotic\",\r\n    piercing: \"ARd20.DamagePiercing\",\r\n    poison: \"ARd20.DamagePoison\",\r\n    slashing: \"ARd20.DamageSlashing\",\r\n    radiant: \"ARd20.DamageRadiant\",\r\n    psychic: \"ARd20.DamagePsychic\",\r\n};\r\nARd20.ResistTypes = {\r\n    res: \"ARd20.Resistance\",\r\n    vul: \"Ard20.Vulnerability\",\r\n    imm: \"ARd20.Immunity\",\r\n};\r\nARd20.HPDice = [\"1d6\", \"1d8\", \"1d10\", \"1d12\", \"1d12+2\", \"1d12+4\", \"1d20\", \"1d20+2\", \"1d20+4\", \"1d20+6\", \"1d20+8\", \"1d20+10\", \"1d20+12\"];\r\nARd20.HeavyPoints = {\r\n    light: { chest: 3, gloves: 1, boots: 1, pants: 2, head: 1 },\r\n    medium: { chest: 5, gloves: 2, boots: 2, pants: 3, head: 2 },\r\n    heavy: { chest: 8, gloves: 3, boots: 3, pants: 5, head: 3 },\r\n};\r\nARd20.RollResult = {\r\n    0: \"ARd20.Fumble\",\r\n    1: \"ARd20.Fail\",\r\n    2: \"ARd20.Success\",\r\n    3: \"ARd20.Crit\",\r\n};\r\n","export default class ARd20SocketHandler {\r\n  //@ts-expect-error\r\n  static async updateActorData(data) {\r\n      console.log('socket data',data)\r\n      console.log('Socket Called, its GM:', game.user.isGM,' and its active: ',game.user.active)\r\n    if (!game.user.isGM) return;\r\n    // if the logged in user is the active GM with the lowest user id\r\n    const isResponsibleGM = game.users\r\n      .filter((user) => user.isGM && user.active)\r\n      .some((other) => other.data._id <= game.user.data._id);\r\n\r\n    if (!isResponsibleGM) return;\r\n    console.log('HERE GM ON SOCKET CALLING')\r\n    const token = await fromUuid(data.tokenId)\r\n    const actor = token?.actor;\r\n    //@ts-expect-error\r\n    if (actor) await actor.update(data.update);\r\n  }\r\n}\r\n","<script>\r\n  export let setting;\r\n  export let data;\r\n  function SubmitSetting(setting, data) {\r\n    game.settings.set(\"ard20\", setting, data);\r\n  }\r\n</script>\r\n\r\n<button class=\"submit\" on:click={() => SubmitSetting(setting, data)}>Submit</button>\r\n<style lang=\"scss\">\r\n  button.submit{\r\n    width:100%;\r\n    flex-basis: fit-content;\r\n  }\r\n</style>","<svelte:options accessors={true} />\r\n\r\n<script>\r\n  import SettingsSubmitButton from \"../../general svelte components/SettingsSubmitButton.svelte\";\r\n  import { ApplicationShell } from \"@typhonjs-fvtt/runtime/svelte/component/core\";\r\n  const setting = \"advancement-rate\";\r\n  let data = game.settings.get(\"ard20\", setting);\r\n  export let elementRoot;\r\n  let attributeFormula;\r\n  $: {\r\n    attributeFormula = data.formulas.attributes;\r\n    for (let variable of Object.values(data.variables)) {\r\n      if (variable.value) {\r\n        console.log(attributeFormula);\r\n        attributeFormula = attributeFormula.replaceAll(variable.shortName, variable.value);\r\n      }\r\n    }\r\n  }\r\n  async function Submit() {\r\n    await game.settings.set(\"ard20\", setting, data);\r\n  }\r\n</script>\r\n\r\n<ApplicationShell bind:elementRoot>\r\n  <div class=\"\">\r\n    <div>\r\n      <label for=\"Custom Values\"> CustomValues </label>\r\n      <div class=\"grid grid-2col\">\r\n        {#each Object.values(data.variables) as variable}\r\n          <label for={variable.longName}>{variable.longName}</label>\r\n          <input bind:value={variable.shortName} placeholder=\"shortName\" />\r\n        {/each}\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <label for=\"Attribute Formula\">Attribute Advancement Formula</label>\r\n      <input type=\"text\" bind:value={data.formulas.attributes} />\r\n    </div>\r\n    <br />\r\n    <div>\r\n      <label for=\"Skill Formula\">Skill Advancement Formula</label>\r\n      <input type=\"text\" bind:value={data.formulas.skills} />\r\n    </div>\r\n    <br />\r\n    <div>\r\n      <label for=\"Feature Formula\">Feature Advancement Formula</label>\r\n      <input type=\"text\" bind:value={data.formulas.features} />\r\n    </div>\r\n  <SettingsSubmitButton {setting} {data} />\r\n  </div>\r\n</ApplicationShell>\r\n\r\n","import { SvelteApplication } from \"@typhonjs-fvtt/runtime/svelte/application\";\r\nimport AdvancementRateShell from \"./advancement-rate-shell.svelte\";\r\nexport class AdvRateSettingsShim extends FormApplication {\r\n  /**\r\n   * @inheritDoc\r\n   */\r\n  constructor(options = {}) {\r\n    super({}, options);\r\n\r\n    new AdvancementRateFormApp().render(true, { focus: true });\r\n  }\r\n\r\n  async _updateObject(event, formData) {}\r\n  render() {\r\n    this.close();\r\n  }\r\n}\r\nclass AdvancementRateFormApp extends SvelteApplication {\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      classes: [\"ard20\"],\r\n      title: \"Advancement Rate\",\r\n      minimizable:true,\r\n      resizable:true,\r\n      width: 600,\r\n      height: 600,\r\n      svelte: {\r\n        class: AdvancementRateShell,\r\n        target: document.body,\r\n      },\r\n    });\r\n  }\r\n}\r\n","<svelte:options accessors={true} />\r\n\r\n<script>\r\n  import SettingsSubmitButton from \"../../general svelte components/SettingsSubmitButton.svelte\";\r\n  import { ApplicationShell } from \"@typhonjs-fvtt/runtime/svelte/component/core\";\r\n  import { uuidv4 } from \"@typhonjs-fvtt/runtime/svelte/util\";\r\n  export let elementRoot;\r\n  const setting=\"feat\"\r\n  export let data = game.settings.get(\"ard20\", \"feat\");\r\n  console.log(data);\r\n\r\n  function addEntry(type) {\r\n    const name = `New ${type}`.slice(0, -1);\r\n    const id = uuidv4();\r\n    data[type] = [...data[type], { name: name, id: id }];\r\n    console.log(data);\r\n    data = data;\r\n  }\r\n  function deleteEntry(type, id) {\r\n    console.log(type);\r\n    const index = data[type].findIndex((entry) => entry.id === id);\r\n    if (index >= 0) {\r\n      console.log(data[type]);\r\n      data[type].splice(index, 1);\r\n      data = data;\r\n    }\r\n  }\r\n\r\n  async function Submit() {\r\n    await game.settings.set(\"ard20\", \"feat\", data);\r\n  }\r\n</script>\r\n\r\n<ApplicationShell bind:elementRoot>\r\n  <section class=\"sheet-body\">\r\n    <div class=\"flexcol\">\r\n      packs\r\n      {#each data.packs as pack (pack.id)}\r\n        <div class=\"grid grid-2col\">\r\n          <input type=\"text\" bind:value={pack.name} />\r\n          <button on:click={() => deleteEntry(\"packs\", pack.id)} class=\"minus far fa-minus-square\" />\r\n        </div>\r\n      {/each}\r\n      <button on:click={() => addEntry(\"packs\")} class=\"add far fa-plus-square\" />\r\n      <hr />\r\n      folders\r\n      {#each data.folders as folder (folder.id)}\r\n        <div class=\"grid grid-2col\">\r\n          <input type=\"text\" bind:value={folder.name} />\r\n          <button on:click={() => deleteEntry(\"folders\", folder.id)} class=\"minus far fa-minus-square\" />\r\n        </div>\r\n      {/each}\r\n      <button on:click={() => addEntry(\"folders\")} class=\"add far fa-plus-square\" />\r\n    </div>\r\n  </section>\r\n  <SettingsSubmitButton {setting} {data} />\r\n</ApplicationShell>\r\n","import { SvelteApplication } from \"@typhonjs-fvtt/runtime/svelte/application\";\r\nimport FeatSettingShell from './featSetting-shell.svelte'\r\nexport class FeatSettingsShim extends FormApplication {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    constructor(options = {}) {\r\n      super({}, options);\r\n  \r\n      new FeatSetting().render(true, { focus: true });\r\n    }\r\n  \r\n    async _updateObject(event, formData) {}\r\n    render() {\r\n      this.close();\r\n    }\r\n  }\r\n  class FeatSetting extends SvelteApplication {\r\n    static get defaultOptions() {\r\n      return foundry.utils.mergeObject(super.defaultOptions, {\r\n        classes: [\"ard20\"],\r\n        title: \"Folders and Packs with Features\",\r\n        minimizable:true,\r\n        resizable:true,\r\n        width: 400,\r\n        height: 600,\r\n        svelte: {\r\n          class: FeatSettingShell,\r\n          target: document.body,\r\n        },\r\n      });\r\n    }\r\n  }\r\n  ","<svelte:options accessors={true} />\r\n\r\n<script>\r\n  import SettingsSubmitButton from \"../../general svelte components/SettingsSubmitButton.svelte\";\r\n  import { uuidv4 } from \"@typhonjs-fvtt/runtime/svelte/util\";\r\n  import { ApplicationShell } from \"@typhonjs-fvtt/runtime/svelte/component/core\";\r\n  import { localize } from \"@typhonjs-fvtt/runtime/svelte/helper\";\r\n  import { ARd20 } from \"../../helpers/config.js\";\r\n  const setting = \"proficiencies\"\r\n  let data = game.settings.get(\"ard20\", \"proficiencies\");\r\n  console.log(data);\r\n  function removeAllAll() {\r\n    for (const item of Object.values(data)) {\r\n      item.value = [];\r\n    }\r\n    console.log(data);\r\n    data = data;\r\n  }\r\n  function removeAll(type) {\r\n    data[type].value = [];\r\n    data = data;\r\n  }\r\n  function add(type) {\r\n    data[type].value = [\r\n      ...data[type].value,\r\n      { id: uuidv4(), name: `New ${type}`, type: Object.keys(selectArr[type])[0] },\r\n    ];\r\n    data = data;\r\n  }\r\n  function setDefaultGroup(type) {\r\n    console.log([...game.settings.settings].filter((set) => set[0] === \"ard20.proficiencies\")[0][1].default);\r\n    data[type].value = [\r\n      ...[...game.settings.settings].filter((set) => set[0] === \"ard20.proficiencies\")[0][1].default[type].value,\r\n    ];\r\n    data = data;\r\n  }\r\n  function setDefaultAll() {\r\n    console.log([...game.settings.settings].filter((set) => set[0] === \"ard20.proficiencies\")[0][1].default);\r\n    data = duplicate([...game.settings.settings].filter((set) => set[0] === \"ard20.proficiencies\")[0][1].default);\r\n  }\r\n  function remove(key, type) {\r\n    const index = data[type].value.findIndex((entry) => entry.id === key);\r\n    if (index >= 0) {\r\n      data[type].value.splice(index, 1);\r\n      data = data;\r\n    }\r\n  }\r\n  export let elementRoot;\r\n  let activeTabValue = \"weapon\";\r\n  const handleClick = (tabValue) => () => (activeTabValue = tabValue);\r\n  let selectArr = {\r\n    weapon: ARd20.WeaponType,\r\n    armor: { light: \"light\", medium: \"medium\", heavy: \"heavy\" },\r\n    tool: {},\r\n  };\r\n  async function Submit() {\r\n    await game.settings.set(\"ard20\", \"proficiencies\", data);\r\n  }\r\n</script>\r\n\r\n<ApplicationShell bind:elementRoot>\r\n  <div class=\"flexrow\">\r\n    <button on:click={() => removeAllAll()}>Remove All</button>\r\n    <button on:click={() => setDefaultAll()}>Reset All</button>\r\n  </div>\r\n  <ul>\r\n    {#each Object.values(data) as item}\r\n      <li class={activeTabValue === item.id ? \"active\" : \"\"}>\r\n        <span on:click={handleClick(item.id)}>{item.label}</span>\r\n      </li>\r\n    {/each}\r\n  </ul>\r\n\r\n  <div class=\"box\">\r\n    {#each Object.values(data) as item (item)}\r\n      {#if activeTabValue === item.id}\r\n        <div class=\"flexrow\">\r\n          <button on:click={() => add(item.id)}>Add {item.label}</button>\r\n          <button on:click={() => setDefaultGroup(item.id)}>Reset to default</button>\r\n          <button on:click={() => removeAll(item.id)}>Remove All {item.label}</button>\r\n        </div>\r\n        <hr />\r\n        <div>\r\n          {#each item.value as entry (entry.id)}\r\n            <div class=\"flexrow\">\r\n              <input bind:value={entry.name} />\r\n              <select bind:value={entry.type}>\r\n                {#each Object.entries(selectArr[item.id]) as opt}\r\n                  <option value={opt[0]}>{localize(opt[1])}</option>\r\n                {/each}\r\n              </select>\r\n              <button on:click={() => remove(entry.id, item.id)} class=\"minus far fa-minus-square\" />\r\n            </div>\r\n          {/each}\r\n        </div>\r\n      {/if}\r\n    {/each}\r\n  </div>\r\n  <SettingsSubmitButton {setting} {data}/>\r\n</ApplicationShell>\r\n\r\n<style lang=\"scss\">\r\n  button {\r\n    max-height: 2em;\r\n  }\r\n  .box {\r\n    background-color: #c9c7b8;\r\n    margin-bottom: 10px;\r\n    padding: 10px;\r\n    border: 2px solid #dee2e6;\r\n    border-radius: 0 0 0.5rem 0.5rem;\r\n    border-top: 0;\r\n  }\r\n  ul {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding-left: 0;\r\n    margin-bottom: 0;\r\n    list-style: none;\r\n    border-bottom: 1px solid #dee2e6;\r\n    justify-content: space-evenly;\r\n    align-content: space-around;\r\n    max-height: 3em;\r\n  }\r\n  li {\r\n    margin-bottom: -0.5em;\r\n  }\r\n\r\n  span {\r\n    border: 1px solid transparent;\r\n    border-top-left-radius: 0.25rem;\r\n    border-top-right-radius: 0.25rem;\r\n    display: block;\r\n    padding: 0.5rem 1rem;\r\n    cursor: pointer;\r\n  }\r\n\r\n  span:hover {\r\n    border-color: #b5b3a4 #b5b3a4 #dee2e6;\r\n    background-color: #c9c7b8;\r\n  }\r\n\r\n  li.active > span {\r\n    color: rgb(0, 0, 0);\r\n    background-color: #c9c7b8;\r\n    border-left: 2px solid;\r\n    border-top: 2px solid;\r\n    border-right: 2px solid;\r\n    border-color: #dee2e6 #dee2e6 #c9c7b8;\r\n  }\r\n</style>\r\n","import { SvelteApplication } from \"@typhonjs-fvtt/runtime/svelte/application\";\r\nimport ProfSettingShell from './profSetting-shell.svelte'\r\nexport class ProfSettingsShim extends FormApplication {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    constructor(options = {}) {\r\n      super({}, options);\r\n  \r\n      new ProfSetting().render(true, { focus: true });\r\n    }\r\n  \r\n    async _updateObject(event, formData) {}\r\n    render() {\r\n      this.close();\r\n    }\r\n  }\r\n  class ProfSetting extends SvelteApplication {\r\n    static get defaultOptions() {\r\n      return foundry.utils.mergeObject(super.defaultOptions, {\r\n        classes: [\"ard20\"],\r\n        title: \"Sub-types for Proficiencies\",\r\n        minimizable:true,\r\n        resizable:true,\r\n        width: 600,\r\n        height: 800,\r\n        svelte: {\r\n          class: ProfSettingShell,\r\n          target: document.body,\r\n        },\r\n      });\r\n    }\r\n  }\r\n  ","<svelte:options accessors={true} />\r\n\r\n<script>\r\n  import SettingsSubmitButton from \"../../general svelte components/SettingsSubmitButton.svelte\";\r\n  import { ApplicationShell } from \"@typhonjs-fvtt/runtime/svelte/component/core\";\r\n  import { uuidv4 } from \"@typhonjs-fvtt/runtime/svelte/util\";\r\n  export let elementRoot;\r\n  const setting = \"profLevel\";\r\n  let data = game.settings.get(\"ard20\", \"profLevel\");\r\n  function addEntry() {\r\n    const key = \"newKey\";\r\n    const label = `New level`;\r\n    const id = uuidv4();\r\n    data = [...data, { key: key, label: label, id: id }];\r\n    console.log(data);\r\n    data = data;\r\n  }\r\n  function deleteEntry(id) {\r\n    const index = data.findIndex((entry) => entry.id === id);\r\n    if (index >= 0) {\r\n      data.splice(index, 1);\r\n      data = data;\r\n    }\r\n  }\r\n  async function Submit() {\r\n    await game.settings.set(\"ard20\", \"profLevel\", data);\r\n    game.actors.forEach((actor) => {\r\n      actor.prepareData();\r\n      actor._sheet.render(true);\r\n    });\r\n  }\r\n</script>\r\n\r\n<ApplicationShell bind:elementRoot>\r\n  <button on:click={addEntry}>Add level</button>\r\n  {#each data as setting}\r\n    <div class=\"grid grid-5col\">\r\n      <label for=\"setting.key\">Key:</label>\r\n      <input bind:value={setting.key} type=\"text\" />\r\n      <label for=\"setting.label\">Name</label>\r\n      <input bind:value={setting.label} type=\"text\" />\r\n      <button\r\n        class=\"minus far fa-minus-square\"\r\n        on:click={() => {\r\n          deleteEntry(setting.id);\r\n        }}\r\n      />\r\n    </div>\r\n  {/each}\r\n  <SettingsSubmitButton {setting} {data} />\r\n</ApplicationShell>\r\n","import { SvelteApplication } from \"@typhonjs-fvtt/runtime/svelte/application\";\r\nimport ProfLevelSettingShell from './profLevelSetting-shell.svelte'\r\nexport class ProfLevelSettingShim extends FormApplication {\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    constructor(options = {}) {\r\n      super({}, options);\r\n  \r\n      new ProfLevelSetting().render(true, { focus: true });\r\n    }\r\n  \r\n    async _updateObject(event, formData) {}\r\n    render() {\r\n      this.close();\r\n    }\r\n  }\r\n  class ProfLevelSetting extends SvelteApplication {\r\n    static get defaultOptions() {\r\n      return foundry.utils.mergeObject(super.defaultOptions, {\r\n        classes: [\"ard20\"],\r\n        title: \"Levels of proficiencies\",\r\n        minimizable:true,\r\n        resizable:true,\r\n        width: 400,\r\n        height: 600,\r\n        svelte: {\r\n          class: ProfLevelSettingShell,\r\n          target: document.body,\r\n        },\r\n      });\r\n    }\r\n  }\r\n  ","import { AdvRateSettingsShim } from \"../settings/advancement-rate/advancement-rate.js\";\r\nimport { FeatSettingsShim } from \"../settings/FeatSetting/featSetting.js\";\r\nimport { ProfSettingsShim } from \"../settings/ProfSetting/profSetting.js\";\r\nimport { ProfLevelSettingShim } from \"../settings/ProfLevelsSetting/profLevelSetting.js\";\r\nexport const registerSystemSettings = function () {\r\n  game.settings.register(\"ard20\", \"proficiencies\", {\r\n    scope: \"world\",\r\n    config: false,\r\n    default: {\r\n      weapon: {\r\n        label: \"weapon\",\r\n        id: \"weapon\",\r\n        value: [\r\n          { name: \"Punch Dagger\", type: \"amb\", id: \"Punch Dagger\" },\r\n          { name: \"Whip Dagger\", type: \"amb\", id: \"Whip Dagger\" },\r\n          { name: \"Gauntlet\", type: \"amb\", id: \"Gauntlet\" },\r\n          { name: \"Hidden Blade\", type: \"amb\", id: \"Hidden Blade\" },\r\n          { name: \"Knucke Axe\", type: \"amb\", id: \"Knucke Axe\" },\r\n          { name: \"Side Baton\", type: \"amb\", id: \"Side Baton\" },\r\n          { name: \"Unarmed strike\", type: \"amb\", id: \"Unarmed strike\" },\r\n          { name: \"Battle Axe\", type: \"axe\", id: \"Battle Axe\" },\r\n          { name: \"Great Axe\", type: \"axe\", id: \"Great Axe\" },\r\n          { name: \"Handaxe\", type: \"axe\", id: \"Handaxe\" },\r\n          { name: \"Hook Sword\", type: \"axe\", id: \"Hook Sword\" },\r\n          { name: \"Khopesh\", type: \"axe\", id: \"Khopesh\" },\r\n          { name: \"Poleaxe\", type: \"axe\", id: \"Poleaxe\" },\r\n          { name: \"Tomahawk\", type: \"axe\", id: \"Tomahawk\" },\r\n          { name: \"Great club\", type: \"blu\", id: \"Great club\" },\r\n          { name: \"Heavy club\", type: \"blu\", id: \"Heavy club\" },\r\n          { name: \"Light Club\", type: \"blu\", id: \"Light Club\" },\r\n        ],\r\n      },\r\n      armor: { label: \"armor\", id: \"armor\", value: [] },\r\n      tool: { label: \"tool\", id: \"tool\", value: [] },\r\n    },\r\n    onChange: (value) => {\r\n      console.log(\"Настройка изменилась \", value);\r\n    },\r\n  });\r\n  game.settings.registerMenu(\"ard20\", \"gearProfManage\", {\r\n    name: \"SETTINGS.ProfManage\",\r\n    label: \"SETTINGS.ProfManage\",\r\n    type: ProfSettingsShim,\r\n    restricted: false,\r\n    icon: \"fab fa-buffer\",\r\n  });\r\n  game.settings.register(\"ard20\", \"feat\", {\r\n    scope: \"world\",\r\n    config: false,\r\n    default: {\r\n      packs: [],\r\n      folders: [],\r\n    },\r\n    onChange: (value) => {\r\n      console.log(\"Настройка изменилась\", value);\r\n    },\r\n  });\r\n  game.settings.registerMenu(\"ard20\", \"featManage\", {\r\n    name: \"SETTINGS.FeatureManage\",\r\n    label: \"SETTINGS.FeatureManage\",\r\n    type: FeatSettingsShim,\r\n    restricted: false,\r\n  });\r\n  game.settings.register(\"ard20\", \"advancement-rate\", {\r\n    scope: \"world\",\r\n    config: false,\r\n    default: {\r\n      variables: {\r\n        skillsCount: {\r\n          shortName: \"SC\",\r\n          longName: \"Skill Count\",\r\n        },\r\n        featuresCount: {\r\n          shortName: \"FC\",\r\n          longName: \"feature Count\",\r\n        },\r\n        skills: {\r\n          shortName: \"SV\",\r\n          longName: \"skill Value\",\r\n        },\r\n        features: {\r\n          shortName: \"FL\",\r\n          longName: \"Feature Level\",\r\n        },\r\n        attributes: {\r\n          shortName: \"AV\",\r\n          longName: \"Attribute Value\",\r\n        },\r\n      },\r\n      formulas: {\r\n        skills: \"SV\",\r\n        features: \"FL\",\r\n        attributes: \"max(floor((AS-10)/2)+2,1)\",\r\n      },\r\n    },\r\n    onChange: (value) => {\r\n      console.log(\"Настройка изменилась\", value);\r\n    },\r\n  });\r\n  game.settings.registerMenu(\"ard20\", \"advancementRateManage\", {\r\n    name: \"SETTINGS.AdvancementRateManage\",\r\n    label: \"SETTINGS.AdvancementRateManage\",\r\n    type: AdvRateSettingsShim,\r\n    restricted: false,\r\n  });\r\n  game.settings.register(\"ard20\", \"profLevel\", {\r\n    scope: \"world\",\r\n    config: false,\r\n    default: [\r\n      { key: \"untrained\", label: \"Untrained\", id: \"untrained\" },\r\n      { key: \"trained\", label: \"Trained\", id: \"trained\" },\r\n      { key: \"expert\", label: \"Expert\", id: \"expert\" },\r\n      { key: \"master\", label: \"Master\", id: \"master\" },\r\n      { key: \"legend\", label: \"Legend\", id: \"legend\" },\r\n    ],\r\n  });\r\n  game.settings.registerMenu(\"ard20\", \"profLevelMenu\", {\r\n    name: \"SETTINGS.profLevel\",\r\n    label: \"SETTINGS.profLevel\",\r\n    type: ProfLevelSettingShim,\r\n    restricted: false,\r\n  });\r\n};\r\nclass ProfFormApp extends FormApplication {\r\n  static get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      classes: [\"ard20\"],\r\n      title: \"Armor/Weapon Proficiencies\",\r\n      template: \"systems/ard20/templates/app/prof-settings.html\",\r\n      id: \"prof-settings\",\r\n      width: 600,\r\n      height: \"auto\",\r\n      submitOnChange: true,\r\n      closeOnSubmit: false,\r\n      tabs: [{ navSelector: \".sheet-tabs\", contentSelector: \".sheet-body\", initial: \"weapons\" }],\r\n    });\r\n  }\r\n  //@ts-expect-error\r\n  getData() {\r\n    const sheetData = {\r\n      proficiencies: game.settings.get(\"ard20\", \"proficiencies\"),\r\n      config: CONFIG.ARd20,\r\n    };\r\n    return sheetData;\r\n  }\r\n  //@ts-expect-error\r\n  activateListeners(html) {\r\n    super.activateListeners(html);\r\n    html.find(\".add\").click(this._onAdd.bind(this));\r\n    html.find(\".minus\").click(this._Delete.bind(this));\r\n  }\r\n  //@ts-expect-error\r\n  async _onAdd(event) {\r\n    event.preventDefault();\r\n    const proficiencies = game.settings.get(\"ard20\", \"proficiencies\");\r\n    proficiencies.weapon.push({ name: \"name\", type: \"amb\" });\r\n    await game.settings.set(\"ard20\", \"proficiencies\", proficiencies);\r\n    this.render();\r\n  }\r\n  //@ts-expect-error\r\n  async _Delete(event) {\r\n    event.preventDefault();\r\n    const proficiencies = game.settings.get(\"ard20\", \"proficiencies\");\r\n    proficiencies.weapon.splice(event.currentTarget.dataset.key, 1);\r\n    await game.settings.set(\"ard20\", \"proficiencies\", proficiencies);\r\n    this.render();\r\n  }\r\n  //@ts-expect-error\r\n  async _updateObject(event, formData) {\r\n    const proficiencies = game.settings.get(\"ard20\", \"proficiencies\");\r\n    console.log(formData);\r\n    let dirty = false;\r\n    for (let [fieldName, value] of Object.entries(foundry.utils.flattenObject(formData))) {\r\n      const [type, index, propertyName] = fieldName.split(\".\");\r\n      //@ts-expect-error\r\n      if (proficiencies[type][index][propertyName] !== value) {\r\n        //log({index, propertyName, value});\r\n        //@ts-expect-error\r\n        proficiencies[type][index][propertyName] = value;\r\n        dirty = dirty || true;\r\n      }\r\n      if (dirty) {\r\n        await game.settings.set(\"ard20\", \"proficiencies\", proficiencies);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Highlight critical success or failure on d20 rolls\r\n */\r\n//@ts-expect-error\r\nexport const highlightCriticalSuccessFailure = function (message, html, data) {\r\n    if (!message.isRoll || !message.isContentVisible)\r\n        return;\r\n    // Highlight rolls where the first part is a d20 roll\r\n    const roll = message.roll;\r\n    if (!roll.dice.length)\r\n        return;\r\n    const d = roll.dice[0];\r\n    // Ensure it is an un-modified d20 roll\r\n    const isD20 = (d.faces === 20) && (d.values.length === 1);\r\n    if (!isD20)\r\n        return;\r\n    const isModifiedRoll = (\"success\" in d.results[0]) || d.options.marginSuccess || d.options.marginFailure;\r\n    if (isModifiedRoll)\r\n        return;\r\n    // Highlight successes and failures\r\n    const critical = d.options.critical || 20;\r\n    const fumble = d.options.fumble || 1;\r\n    if (d.total >= critical)\r\n        html.find(\".dice-total\").addClass(\"critical\");\r\n    else if (d.total <= fumble)\r\n        html.find(\".dice-total\").addClass(\"fumble\");\r\n    else if (d.options.target) {\r\n        if (roll.total >= d.options.target)\r\n            html.find(\".dice-total\").addClass(\"success\");\r\n        else\r\n            html.find(\".dice-total\").addClass(\"failure\");\r\n    }\r\n};\r\n/* -------------------------------------------- */\r\n/**\r\n * Optionally hide the display of chat card action buttons which cannot be performed by the user\r\n */\r\n//@ts-expect-error\r\nexport const displayChatActionButtons = function (message, html, data) {\r\n    const chatCard = html.find(\".ard20.chat-card\");\r\n    if (chatCard.length > 0) {\r\n        const flavor = html.find(\".flavor-text\");\r\n        if (flavor.text() === html.find(\".item-name\").text())\r\n            flavor.remove();\r\n        // If the user is the message author or the actor owner, proceed\r\n        let actor = game.actors.get(data.message.speaker.actor);\r\n        if (actor && actor.isOwner)\r\n            return;\r\n        else if (game.user.isGM || (data.author.id === game.user.id))\r\n            return;\r\n        // Otherwise conceal action buttons except for saving throw\r\n        const buttons = chatCard.find(\"button[data-action]\");\r\n        //@ts-expect-error\r\n        buttons.each((i, btn) => {\r\n            if (btn.dataset.action === \"save\")\r\n                return;\r\n            btn.style.display = \"none\";\r\n        });\r\n    }\r\n};\r\n/* -------------------------------------------- */\r\n/**\r\n * This function is used to hook into the Chat Log context menu to add additional options to each message\r\n * These options make it easy to conveniently apply damage to controlled tokens based on the value of a Roll\r\n *\r\n * @param {HTMLElement} html    The Chat Message being rendered\r\n * @param {Array} options       The Array of Context Menu options\r\n *\r\n * @return {Array}              The extended options Array including new context choices\r\n */\r\nexport const addChatMessageContextOptions = function (html, options) {\r\n    let canApply = (li) => {\r\n        //@ts-expect-error\r\n        const message = game.messages.get(li.data(\"messageId\"));\r\n        return message?.isRoll && message?.isContentVisible && canvas.tokens?.controlled.length;\r\n    };\r\n    options.push({\r\n        //@ts-expect-error\r\n        name: game.i18n.localize(\"ARd20.ChatContextDamage\"),\r\n        //@ts-expect-error\r\n        icon: '<i class=\"fas fa-user-minus\"></i>',\r\n        //@ts-expect-error\r\n        condition: canApply,\r\n        //@ts-expect-error\r\n        callback: li => applyChatCardDamage(li, 1)\r\n    }, {\r\n        name: game.i18n.localize(\"ARd20.ChatContextHealing\"),\r\n        icon: '<i class=\"fas fa-user-plus\"></i>',\r\n        condition: canApply,\r\n        //@ts-expect-error\r\n        callback: li => applyChatCardDamage(li, -1)\r\n    }, {\r\n        name: game.i18n.localize(\"ARd20.ChatContextDoubleDamage\"),\r\n        icon: '<i class=\"fas fa-user-injured\"></i>',\r\n        condition: canApply,\r\n        //@ts-expect-error\r\n        callback: li => applyChatCardDamage(li, 2)\r\n    }, {\r\n        name: game.i18n.localize(\"ARd20.ChatContextHalfDamage\"),\r\n        icon: '<i class=\"fas fa-user-shield\"></i>',\r\n        condition: canApply,\r\n        //@ts-expect-error\r\n        callback: li => applyChatCardDamage(li, 0.5)\r\n    });\r\n    return options;\r\n};\r\n/* -------------------------------------------- */\r\n/**\r\n * Apply rolled dice damage to the token or tokens which are currently controlled.\r\n * This allows for damage to be scaled by a multiplier to account for healing, critical hits, or resistance\r\n *\r\n * @param {HTMLElement} li      The chat entry which contains the roll data\r\n * @param {Number} multiplier   A damage multiplier to apply to the rolled damage.\r\n * @return {Promise}\r\n */\r\nfunction applyChatCardDamage(li, multiplier) {\r\n    //@ts-expect-error\r\n    const message = game.messages.get(li.data(\"messageId\"));\r\n    const roll = message.roll;\r\n    return Promise.all(canvas.tokens.controlled.map(t => {\r\n        const a = t.actor;\r\n        //@ts-expect-error\r\n        return a.applyDamage(roll.total, multiplier);\r\n    }));\r\n}\r\n/* -------------------------------------------- */\r\n","// Import document classes.\r\nimport { ARd20Actor } from \"./documents/actor.js\";\r\nimport { ARd20Item } from \"./documents/item.js\";\r\n// Import sheet classes.\r\nimport { ARd20ActorSheet } from \"./sheets/actor-sheet.js\";\r\nimport { ARd20ItemSheet } from \"./sheets/item-sheet.js\";\r\n// Import helper/utility classes and constants.\r\nimport { preloadHandlebarsTemplates } from \"./helpers/templates.js\";\r\nimport { ARd20 } from \"./helpers/config.js\";\r\nimport ARd20SocketHandler from \"./helpers/socket.js\";\r\nimport { registerSystemSettings } from \"./helpers/settings.js\";\r\nimport * as dice from \"./dice/dice.js\";\r\nimport * as chat from \"./helpers/chat.js\";\r\n/* -------------------------------------------- */\r\n/*  Init Hook                                   */\r\n/* -------------------------------------------- */\r\nexport function obj_entries(obj) {\r\n  return Object.entries(obj);\r\n}\r\nexport function arr_entries(arr) {\r\n  return Object.entries(arr);\r\n}\r\nexport function getValues(SourceObject, key) {\r\n  return SourceObject[key];\r\n}\r\nexport function obj_keys(obj) {\r\n  return Object.keys(obj);\r\n}\r\nexport function array_keys(obj) {\r\n  return Object.keys(obj);\r\n}\r\nHooks.once(\"init\", async function () {\r\n  // Add utility classes to the global game object so that they're more easily\r\n  // accessible in global contexts.\r\n  if (game instanceof Game) {\r\n    game.ard20 = {\r\n      documents: {\r\n        ARd20Actor,\r\n        ARd20Item,\r\n      },\r\n      rollItemMacro,\r\n      config: ARd20,\r\n      dice: dice,\r\n    };\r\n    // Add custom constants for configuration.\r\n    CONFIG.ARd20 = ARd20;\r\n    //@ts-expect-error\r\n    CONFIG.Dice.DamageRoll = dice.DamageRoll;\r\n    //@ts-expect-error\r\n    CONFIG.Dice.D20Roll = dice.D20Roll;\r\n    CONFIG.Dice.rolls.push(dice.D20Roll);\r\n    CONFIG.Dice.rolls.push(dice.DamageRoll);\r\n    game.socket.on(\"system.ard20\", (data) => {\r\n      if (data.operation === \"updateActorData\") ARd20SocketHandler.updateActorData(data);\r\n    });\r\n\r\n    /**\r\n     * Set an initiative formula for the system\r\n     * @type {String}\r\n     */\r\n    CONFIG.Combat.initiative = {\r\n      formula: \"1d20 + @abilities.dex.mod\",\r\n      decimals: 2,\r\n    };\r\n    // Define custom Document classes\r\n    CONFIG.Actor.documentClass = ARd20Actor;\r\n    CONFIG.Item.documentClass = ARd20Item;\r\n    // Register sheet application classes\r\n    Actors.unregisterSheet(\"core\", ActorSheet);\r\n    Actors.registerSheet(\"ard20\", ARd20ActorSheet, { makeDefault: true });\r\n    Items.unregisterSheet(\"core\", ItemSheet);\r\n    //@ts-expect-error\r\n    Items.registerSheet(\"ard20\", ARd20ItemSheet, { makeDefault: true });\r\n    registerSystemSettings();\r\n\r\n\r\n    // Preload Handlebars templates.\r\n    return preloadHandlebarsTemplates();\r\n  } else {\r\n    throw new Error(\"game not initialized yet!\");\r\n  }\r\n});\r\n/* -------------------------------------------- */\r\n/*  Handlebars Helpers                          */\r\n/* -------------------------------------------- */\r\n// If you need to add Handlebars helpers, here are a few useful examples:\r\nHandlebars.registerHelper(\"concat\", function () {\r\n  var outStr = \"\";\r\n  for (var arg in arguments) {\r\n    if (typeof arguments[arg] != \"object\") {\r\n      outStr += arguments[arg];\r\n    }\r\n  }\r\n  return outStr;\r\n});\r\nHandlebars.registerHelper(\"toLowerCase\", function (str) {\r\n  return str.toLowerCase();\r\n});\r\nHandlebars.registerHelper(\"add\", function (value1, value2) {\r\n  return Number(value1) + Number(value2);\r\n});\r\n/* -------------------------------------------- */\r\n/*  Ready Hook                                  */\r\n/* -------------------------------------------- */\r\nHooks.once(\"ready\", async function () {\r\n  //check if typhonjs module is installed and activated\r\n  if (!game.modules.get(\"typhonjs\")) {\r\n    ui.notifications.error(\"typhonjs module is not install, please install it!\");\r\n  } else if (!game.modules.get(\"typhonjs\").active) {\r\n    ui.notifications.error(\"typhonjs module is not active!\");\r\n    const moduleSettings = game.settings.get('core','moduleConfiguration')\r\n    moduleSettings[\"typhonjs\"] = true\r\n    await game.settings.set('core','moduleConfiguration',moduleSettings)\r\n  }\r\n  // Wait to register hotbar drop hook on ready so that modules could register earlier if they want to\r\n  Hooks.on(\"hotbarDrop\", (bar, data, slot) => createItemMacro(data, slot));\r\n});\r\n/* -------------------------------------------- */\r\n/*  Hotbar Macros                               */\r\n/* -------------------------------------------- */\r\n/**\r\n * Create a Macro from an Item drop.\r\n * Get an existing item macro if one exists, otherwise create a new one.\r\n * @param {Object} data     The dropped data\r\n * @param {number} slot     The hotbar slot to use\r\n * @returns {Promise}\r\n */\r\nasync function createItemMacro(data, slot) {\r\n  if (game instanceof Game) {\r\n    //@ts-expect-error\r\n    if (data.type !== \"Item\") return;\r\n    if (!(\"data\" in data) && ui.notifications instanceof Notifications) return ui.notifications.warn(\"You can only create macro buttons for owned Items\");\r\n    //@ts-expect-error\r\n    const item = data.data;\r\n    // Create the macro command\r\n    const command = `game.ard20.rollItemMacro(\"${item.name}\");`;\r\n    let macroList = game.macros.contents.filter((m) => m.name === item.name && m?.command === command);\r\n    let macroCheck = macroList.length !== 0 ? macroList[0] : null;\r\n    if (macroCheck !== null) {\r\n      let macro = await Macro.create({\r\n        name: item.name,\r\n        type: \"script\",\r\n        img: item.img,\r\n        command: command,\r\n        flags: { \"ard20.itemMacro\": true },\r\n      });\r\n      if (macro instanceof Macro) {\r\n        game.user?.assignHotbarMacro(macro, slot);\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n/**\r\n * Create a Macro from an Item drop.\r\n * Get an existing item macro if one exists, otherwise create a new one.\r\n * @param {string} itemName\r\n * @return {Promise}\r\n */\r\nexport function rollItemMacro(itemName) {\r\n  if (game instanceof Game) {\r\n    const speaker = ChatMessage.getSpeaker();\r\n    let actor;\r\n    if (speaker.token) actor = game.actors.tokens[speaker.token];\r\n    if (!actor && typeof speaker.actor === \"string\") actor = game.actors.get(speaker.actor);\r\n    const item = actor ? actor.items.find((i) => i.name === itemName) : null;\r\n    if (!item) return ui.notifications.warn(`Your controlled Actor does not have an item named ${itemName}`);\r\n    // Trigger the item roll\r\n    //@ts-expect-error\r\n    return item.roll();\r\n  }\r\n}\r\nHooks.on(\"renderChatMessage\", (app, html, data) => {\r\n  // Display action buttons\r\n  chat.displayChatActionButtons(app, html, data);\r\n  // Highlight critical success or failure die\r\n  chat.highlightCriticalSuccessFailure(app, html, data);\r\n  // Optionally collapse the content\r\n});\r\nHooks.on(\"getChatLogEntryContext\", chat.addChatMessageContextOptions);\r\n//@ts-expect-error\r\nHooks.on(\"renderChatLog\", (app, html, data) => ARd20Item.chatListeners(html));\r\n//@ts-expect-error\r\nHooks.on(\"renderChatPopout\", (app, html, data) => ARd20Item.chatListeners(html));\r\n","import { d20Roll } from \"../dice/dice.js\";\r\nimport { obj_entries, obj_keys, getValues } from \"../ard20.js\";\r\n/**\r\n * Extend the base Actor document by defining a custom roll data structure which is ideal for the Simple system.\r\n * @extends {Actor}\r\n */\r\nexport class ARd20Actor extends Actor {\r\n  //@ts-check\r\n  /** @override */\r\n  prepareData() {\r\n    // Prepare data for the actor. Calling the super version of this executes\r\n    // the following, in order: data reset (to clear active effects),\r\n    // prepareBaseData(), prepareEmbeddedDocuments() (including active effects),\r\n    // prepareDerivedData().\r\n    super.prepareData();\r\n    this.items.forEach((item) => item.prepareFinalAttributes());\r\n  }\r\n  /**\r\n   * @override\r\n   * Augment the basic actor data with additional dynamic data. Typically,\r\n   * you'll want to handle most of your calculated/derived data in this step.\r\n   * Data calculated in this step should generally not exist in template.json\r\n   * (such as ability modifiers rather than ability scores) and should be\r\n   * available both inside and outside of character sheets (such as if an actor\r\n   * is queried and has a roll executed directly from it).\r\n   */\r\n  prepareDerivedData() {\r\n    const actorData = this.data;\r\n    // Make separate methods for each Actor type (character, npc, etc.) to keep\r\n    // things organized.\r\n    this._prepareCharacterData(actorData);\r\n    this._prepareNpcData(actorData);\r\n  }\r\n  /**\r\n   * Prepare Character type specific data\r\n   */\r\n  _prepareCharacterData(actorData) {\r\n    if (actorData.type !== \"character\") return;\r\n    // Make modifications to data here. For example:\r\n    const data = actorData.data;\r\n    const attributes = data.attributes;\r\n    const advancement = data.advancement;\r\n    const def_stats = data.defences.stats;\r\n    const def_dam = data.defences.damage;\r\n    const proficiencies = data.proficiencies;\r\n    data.mobility.value = 0;\r\n    this.itemTypes.armor.forEach((item) => {\r\n      if (item.data.type === \"armor\") {\r\n        if (item.data.data.equipped) {\r\n          for (let key of obj_keys(def_dam.phys)) {\r\n            let ph = item.data.data.res.phys[key];\r\n            def_dam.phys[key].bonus += ph.type !== \"imm\" ? parseInt(ph.value) : 0;\r\n            def_dam.phys[key].type = ph.type === \"imm\" ? \"imm\" : def_dam.phys[key].type;\r\n          }\r\n          for (let key of obj_keys(def_dam.mag)) {\r\n            let mg = item.data.data.res.mag[key];\r\n            def_dam.mag[key].bonus += mg.type !== \"imm\" ? parseInt(mg.value) : 0;\r\n            def_dam.mag[key].type = mg.type === \"imm\" ? \"imm\" : def_dam.mag[key].type;\r\n          }\r\n          data.mobility.value += item.data.data.mobility.value;\r\n        }\r\n      }\r\n    });\r\n    data.mobility.value += data.mobility.bonus;\r\n    // Loop through ability scores, and add their modifiers to our sheet output.\r\n    for (let ability of Object.values(attributes)) {\r\n      // Calculate the modifier using d20 rules.\r\n      ability.total = ability.value + ability.bonus;\r\n      ability.mod = Math.floor((ability.value - 10) / 2);\r\n    }\r\n    let dexMod =\r\n      data.mobility.value < 10\r\n        ? attributes.dex.mod\r\n        : data.mobility.value < 16\r\n        ? Math.min(2, attributes.dex.mod)\r\n        : Math.min(0, attributes.dex.mod);\r\n    //calculate level and expierence\r\n    const levels = CONFIG.ARd20.CHARACTER_EXP_LEVELS;\r\n    if (advancement.xp.used) {\r\n      advancement.xp.used = advancement.xp.used ?? 0;\r\n    }\r\n    for (let i = 1; i < 21; i++) {\r\n      if (advancement.xp.used >= levels[i - 1] && advancement.xp.used < levels[i]) {\r\n        advancement.level = i;\r\n        advancement.xp.level = levels[i];\r\n        advancement.xp.level_min = levels[i - 1];\r\n      }\r\n    }\r\n    advancement.xp.bar_max = advancement.xp.level - advancement.xp.level_min;\r\n    advancement.xp.bar_min = advancement.xp.used - advancement.xp.level_min;\r\n    def_stats.reflex.value = 10 + 4 * def_stats.reflex.level + dexMod + attributes.int.mod + def_stats.reflex.bonus;\r\n    def_stats.reflex.label = \"Reflex\";\r\n    def_stats.fortitude.value =\r\n      10 + 4 * def_stats.fortitude.level + attributes.str.mod + attributes.con.mod + def_stats.fortitude.bonus;\r\n    def_stats.fortitude.label = \"Fortitude\";\r\n    def_stats.will.value =\r\n      10 + 4 * def_stats.will.level + attributes.wis.mod + attributes.cha.mod + def_stats.will.bonus;\r\n    def_stats.will.label = \"Will\";\r\n    for (let [key, dr] of obj_entries(CONFIG.ARd20.DamageSubTypes)) {\r\n      if (!(key === \"force\" || key === \"radiant\" || key === \"psychic\")) {\r\n        def_dam.phys[key].value =\r\n          def_dam.phys[key]?.value || def_dam.phys[key]?.type !== \"imm\"\r\n            ? Math.max(isNaN(def_dam.phys[key]?.value) ? 0 : def_dam.phys[key].value) + def_dam.phys[key]?.bonus\r\n            : 0;\r\n        def_dam.phys[key].name =\r\n          game.i18n.localize(CONFIG.ARd20.DamageSubTypes[key]) ?? CONFIG.ARd20.DamageSubTypes[key];\r\n      }\r\n      def_dam.mag[key].value =\r\n        def_dam.mag[key]?.value || def_dam.mag[key]?.type !== \"imm\"\r\n          ? Math.max(isNaN(def_dam.mag[key]?.value) ? 0 : def_dam.mag[key].value) + def_dam.mag[key]?.bonus\r\n          : 0;\r\n      def_dam.mag[key].name = game.i18n.localize(CONFIG.ARd20.DamageSubTypes[key]) ?? CONFIG.ARd20.DamageSubTypes[key];\r\n    }\r\n    const profLevelSetting = game.settings.get(\"ard20\", \"profLevel\");\r\n    const maxProfLevel = profLevelSetting.length - 1;\r\n    //calculate rolls for character's skills\r\n    for (let [key, skill] of obj_entries(data.skills)) {\r\n      skill.level = skill.level < maxProfLevel ? skill.level : maxProfLevel;\r\n      skill.value = skill.level * 4 + skill.bonus;\r\n      skill.name = game.i18n.localize(CONFIG.ARd20.Skills[key]) ?? CONFIG.ARd20.Skills[key];\r\n      skill.rankName = profLevelSetting[skill.level].label;\r\n    }\r\n    proficiencies.weapon = game.settings.get(\"ard20\", \"proficiencies\").weapon.value.map((setting, key) => {\r\n      return {\r\n        name: setting.name,\r\n        type: setting.type,\r\n        value: proficiencies.weapon[key]?.value ?? 0,\r\n        rankName: profLevelSetting[proficiencies.weapon[key]?.value ?? 0].label,\r\n      };\r\n    });\r\n    data.speed.value = this.itemTypes.race[0]?.data.type === \"race\" ? this.itemTypes.race[0].data.data.speed : 0;\r\n    data.speed.value += attributes.dex.mod + data.speed.bonus;\r\n  }\r\n  /**\r\n   * Prepare NPC type specific data.\r\n   */\r\n  _prepareNpcData(actorData) {\r\n    //@ts-expect-error\r\n    if (actorData.type !== \"npc\") return;\r\n    // Make modifications to data here. For example:\r\n    const data = actorData.data;\r\n    //@ts-expect-error\r\n    data.xp = data.cr * data.cr * 100;\r\n  }\r\n  /**\r\n   * Override getRollData() that's supplied to rolls.\r\n   */\r\n  getRollData() {\r\n    const data = super.getRollData();\r\n    // Prepare character roll data.\r\n    return data;\r\n  }\r\n  /**\r\n   * Roll an Attribute Test\r\n   * Prompt the user for input regarding Advantage/Disadvantage and any Situational Bonus\r\n   * @param {Number} attributeId    The ability ID (e.g. \"str\")\r\n   * @param {Object} options      Options which configure how ability tests are rolled\r\n   * @return {Promise<Roll>}      A Promise which resolves to the created Roll instance\r\n   */\r\n  rollAttributeTest(attributeId, options) {\r\n    const label = game.i18n.localize(getValues(CONFIG.ARd20.Attributes, attributeId));\r\n    const actorData = this.data.data;\r\n    const attributes = actorData.attributes;\r\n    const attr = getValues(attributes, attributeId);\r\n    // Construct parts\r\n    const parts = [\"@mod\"];\r\n    const data = { mod: attr.mod };\r\n    // Add provided extra roll parts now because they will get clobbered by mergeObject below\r\n    if (options?.parts?.length > 0) {\r\n      parts.push(...options.parts);\r\n    }\r\n    // Roll and return\r\n    const rollData = foundry.utils.mergeObject(options, {\r\n      parts: parts,\r\n      data: data,\r\n      title: game.i18n.format(\"ARd20.AttributePromptTitle\", { attribute: label }),\r\n      messageData: {\r\n        speaker: options.speaker || ChatMessage.getSpeaker({ actor: this }),\r\n        \"flags.ard20.roll\": { type: \"attribute\", attributeId },\r\n      },\r\n    });\r\n    //@ts-expect-error\r\n    return d20Roll(rollData);\r\n  }\r\n  /**\r\n   * Roll a Skill Check\r\n   * Prompt the user for input regarding Advantage/Disadvantage and any Situational Bonus\r\n   * @param {string} skillId      The skill id (e.g. \"ins\")\r\n   * @param {Object} options      Options which configure how the skill check is rolled\r\n   * @return {Promise<Roll>}      A Promise which resolves to the created Roll instance\r\n   */\r\n  rollSkill(skillId, options) {\r\n    console.log(\"rollSkill event:\", skillId, \"skillID;   \", options, \"options;   \");\r\n    const skl = getValues(this.data.data.skills, skillId);\r\n    // Compose roll parts and data\r\n    const parts = [\"@proficiency\", \"@mod\"];\r\n    const data = { attributes: this.getRollData().attributes, proficiency: skl.value };\r\n    // Add provided extra roll parts now because they will get clobbered by mergeObject below\r\n    if (options.parts?.length > 0) {\r\n      parts.push(...options.parts);\r\n    }\r\n    // Roll and return\r\n    const rollData = foundry.utils.mergeObject(options, {\r\n      parts: parts,\r\n      data: data,\r\n      title: game.i18n.format(\"ARd20.SkillPromptTitle\", {\r\n        skill: game.i18n.localize(getValues(CONFIG.ARd20.Skills, skillId)),\r\n      }),\r\n      messageData: {\r\n        speaker: options.speaker || ChatMessage.getSpeaker({ actor: this }),\r\n        \"flags.ard20.roll\": { type: \"skill\", skillId },\r\n      },\r\n      chooseModifier: true,\r\n    });\r\n    //@ts-expect-error\r\n    return d20Roll(rollData);\r\n  }\r\n}\r\n","// Import document classes.\r\nimport { ARd20Actor } from \"../built/documents/actor.js\";\r\nimport { ARd20Item } from \"../built/documents/item.js\";\r\n// Import sheet classes.\r\nimport { ARd20ActorSheet } from \"../built/sheets/actor-sheet.js\";\r\nimport { ARd20ItemSheet } from \"../built/sheets/item-sheet.js\";\r\n// Import helper/utility classes and constants.\r\nimport { preloadHandlebarsTemplates } from \"../built/helpers/templates.js\";\r\nimport { ARd20 } from \"../built/helpers/config.js\";\r\nimport ARd20SocketHandler from \"../built/helpers/socket.js\";\r\nimport { registerSystemSettings } from \"../built/helpers/settings.js\";\r\nimport * as dice from \"../built/dice/dice.js\";\r\nimport * as chat from \"../built/helpers/chat.js\";\r\n/* -------------------------------------------- */\r\n/*  Init Hook                                   */\r\n/* -------------------------------------------- */\r\nexport function obj_entries(obj) {\r\n    return Object.entries(obj);\r\n}\r\nexport function arr_entries(arr) {\r\n    return Object.entries(arr);\r\n}\r\nexport function getValues(SourceObject, key) {\r\n    return SourceObject[key];\r\n}\r\nexport function obj_keys(obj) {\r\n    return Object.keys(obj);\r\n}\r\nexport function array_keys(obj) {\r\n    return Object.keys(obj);\r\n}\r\nHooks.once(\"init\", async function () {\r\n    // Add utility classes to the global game object so that they're more easily\r\n    // accessible in global contexts.\r\n    if (game instanceof Game) {\r\n        game.ard20 = {\r\n            documents: {\r\n                ARd20Actor,\r\n                ARd20Item,\r\n            },\r\n            rollItemMacro,\r\n            config: ARd20,\r\n            dice: dice,\r\n        };\r\n        // Add custom constants for configuration.\r\n        CONFIG.ARd20 = ARd20;\r\n        //@ts-expect-error\r\n        CONFIG.Dice.DamageRoll = dice.DamageRoll;\r\n        //@ts-expect-error\r\n        CONFIG.Dice.D20Roll = dice.D20Roll;\r\n        CONFIG.Dice.rolls.push(dice.D20Roll);\r\n        CONFIG.Dice.rolls.push(dice.DamageRoll);\r\n        if (game.socket instanceof io.Socket) {\r\n            game.socket.on(\"system.ard20\", (data) => {\r\n                if (data.operation === \"updateActorData\")\r\n                    ARd20SocketHandler.updateActorData(data);\r\n            });\r\n        }\r\n        /**\r\n         * Set an initiative formula for the system\r\n         * @type {String}\r\n         */\r\n        CONFIG.Combat.initiative = {\r\n            formula: \"1d20 + @abilities.dex.mod\",\r\n            decimals: 2,\r\n        };\r\n        // Define custom Document classes\r\n        CONFIG.Actor.documentClass = ARd20Actor;\r\n        CONFIG.Item.documentClass = ARd20Item;\r\n        // Register sheet application classes\r\n        Actors.unregisterSheet(\"core\", ActorSheet);\r\n        Actors.registerSheet(\"ard20\", ARd20ActorSheet, { makeDefault: true });\r\n        Items.unregisterSheet(\"core\", ItemSheet);\r\n        //@ts-expect-error\r\n        Items.registerSheet(\"ard20\", ARd20ItemSheet, { makeDefault: true });\r\n        registerSystemSettings();\r\n        // Preload Handlebars templates.\r\n        return preloadHandlebarsTemplates();\r\n    }\r\n    else {\r\n        throw new Error(\"game not initialized yet!\");\r\n    }\r\n});\r\n/* -------------------------------------------- */\r\n/*  Handlebars Helpers                          */\r\n/* -------------------------------------------- */\r\n// If you need to add Handlebars helpers, here are a few useful examples:\r\nHandlebars.registerHelper(\"concat\", function () {\r\n    var outStr = \"\";\r\n    for (var arg in arguments) {\r\n        if (typeof arguments[arg] != \"object\") {\r\n            outStr += arguments[arg];\r\n        }\r\n    }\r\n    return outStr;\r\n});\r\nHandlebars.registerHelper(\"toLowerCase\", function (str) {\r\n    return str.toLowerCase();\r\n});\r\nHandlebars.registerHelper(\"add\", function (value1, value2) {\r\n    return Number(value1) + Number(value2);\r\n});\r\n/* -------------------------------------------- */\r\n/*  Ready Hook                                  */\r\n/* -------------------------------------------- */\r\nHooks.once(\"ready\", async function () {\r\n    // Wait to register hotbar drop hook on ready so that modules could register earlier if they want to\r\n    Hooks.on(\"hotbarDrop\", (bar, data, slot) => createItemMacro(data, slot));\r\n});\r\n/* -------------------------------------------- */\r\n/*  Hotbar Macros                               */\r\n/* -------------------------------------------- */\r\n/**\r\n * Create a Macro from an Item drop.\r\n * Get an existing item macro if one exists, otherwise create a new one.\r\n * @param {Object} data     The dropped data\r\n * @param {number} slot     The hotbar slot to use\r\n * @returns {Promise}\r\n */\r\nasync function createItemMacro(data, slot) {\r\n    if (game instanceof Game) {\r\n        //@ts-expect-error\r\n        if (data.type !== \"Item\")\r\n            return;\r\n        if (!(\"data\" in data) && ui.notifications instanceof Notifications)\r\n            return ui.notifications.warn(\"You can only create macro buttons for owned Items\");\r\n        //@ts-expect-error\r\n        const item = data.data;\r\n        // Create the macro command\r\n        const command = `game.ard20.rollItemMacro(\"${item.name}\");`;\r\n        let macroList = game.macros.contents.filter((m) => m.name === item.name && m?.command === command);\r\n        let macroCheck = macroList.length !== 0 ? macroList[0] : null;\r\n        if (macroCheck !== null) {\r\n            let macro = await Macro.create({\r\n                name: item.name,\r\n                type: \"script\",\r\n                img: item.img,\r\n                command: command,\r\n                flags: { \"ard20.itemMacro\": true },\r\n            });\r\n            if (macro instanceof Macro) {\r\n                game.user?.assignHotbarMacro(macro, slot);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Create a Macro from an Item drop.\r\n * Get an existing item macro if one exists, otherwise create a new one.\r\n * @param {string} itemName\r\n * @return {Promise}\r\n */\r\nexport function rollItemMacro(itemName) {\r\n    if (game instanceof Game) {\r\n        const speaker = ChatMessage.getSpeaker();\r\n        let actor;\r\n        if (speaker.token)\r\n            actor = game.actors.tokens[speaker.token];\r\n        if (!actor && typeof speaker.actor === \"string\")\r\n            actor = game.actors.get(speaker.actor);\r\n        const item = actor ? actor.items.find((i) => i.name === itemName) : null;\r\n        if (!item)\r\n            return ui.notifications.warn(`Your controlled Actor does not have an item named ${itemName}`);\r\n        // Trigger the item roll\r\n        //@ts-expect-error\r\n        return item.roll();\r\n    }\r\n}\r\nHooks.on(\"renderChatMessage\", (app, html, data) => {\r\n    // Display action buttons\r\n    chat.displayChatActionButtons(app, html, data);\r\n    // Highlight critical success or failure die\r\n    chat.highlightCriticalSuccessFailure(app, html, data);\r\n    // Optionally collapse the content\r\n});\r\nHooks.on(\"getChatLogEntryContext\", chat.addChatMessageContextOptions);\r\n//@ts-expect-error\r\nHooks.on(\"renderChatLog\", (app, html, data) => ARd20Item.chatListeners(html));\r\n//@ts-expect-error\r\nHooks.on(\"renderChatPopout\", (app, html, data) => ARd20Item.chatListeners(html));\r\n"],"names":["D20Roll","Roll","constructor","formula","data","options","terms","Die","faces","Error","_formula","configureModifiers","hasAdvantage","advantageMode","ADV_MODE","ADVANTAGE","hasDisadvantage","DISADVANTAGE","d20","modifiers","number","push","advantage","disadvantage","critical","fumble","targetValue","target","getFormula","toMessage","messageData","_evaluated","evaluate","async","flavor","game","i18n","localize","rollMode","configureDialog","title","defaultRollMode","canMult","defaultAction","NORMAL","mRoll","chooseModifier","defaultAttribute","template","content","renderTemplate","EVALUATION_TEMPLATE","rollModes","CONFIG","Dice","attributes","ARd20","Attributes","defaultButton","Promise","resolve","Dialog","buttons","label","callback","html","_onDialogSubmit","normal","default","close","render","form","querySelector","console","log","bonus","value","OperatorTerm","operator","concat","attribute","abl","findSplice","t","term","NumericTerm","mod","checked","DamageRoll","undefined","configureDamage","isCritical","critBonus","i","entries","damageType","DiceTerm","baseNumber","oper","num","splice","cb","criticalBonusDice","alter","multiplyNumeric","criticalMultiplier","damType","defaultCritical","allowCritical","condition","forEach","part","ind","fromData","roll","simplifyRollFormula","constantFirst","some","_isUnsupportedTerm","rollableTerms","constantTerms","operators","constantFormula","rollableFormula","constantPart","safeEval","err","warn","parts","filterJoin","diceTerm","includes","d20Roll","fastForward","event","dialogOptions","chatMessage","speaker","join","isFF","_determineAdvantageMode","settings","get","configured","defaultAbility","item","ability","shiftKey","altKey","ctrlKey","metaKey","damageRoll","_determineCriticalMode","ARd20Item","Item","prepareData","prepareDerivedData","itemData","labels","_prepareSpellData","_prepareWeaponData","_prepareFeatureData","_prepareRaceData","_prepareArmorData","hasAttack","_prepareAttack","hasDamage","_prepareDamage","isOwned","prepareFinalAttributes","type","flags","_setTypeAndSubtype","level","damage","common","key","sub_type_array","weapon","filter","prof","core","sourceId","id","exec","items","sub_type","name","length","proficiency","getValues","Rank","source","Source","has","max","initial","Math","min","current","n","k","round","Number","abs","toPrecision","sign","xp","basicCost","AdvancedCost","req","Object","values","pass","Array","from","v","obj_entries","Skills","logic","dr","DamageSubTypes","res","phys","parseInt","mag","mobility","HeavyPoints","slot","abil","getProperty","actor","prof_bonus","proficiencies","pr","levelName","dex","atkMod","attack","str","prop","baseDamage","subPart","subKey","DamageTypes","getRollData","rollData","foundry","utils","deepClone","damageDie","createMessage","iData","ChatMessage","getSpeaker","targets","user","displayCard","chatListeners","on","_onChatCardAction","bind","_onChatCardToggleContent","_rollDamage","trigger","preventDefault","element","closest","classList","toggle","stopImmediatePropagation","button","currentTarget","card","messageId","dataset","message","messages","action","targetUuid","targetId","isTargetted","isGM","isAuthor","_getChatCardActor","storedData","getFlag","parent","itemId","ui","notifications","error","format","spellLevel","dam","rollDamage","versatile","$","find","replaceWith","update","outerHTML","rollFormula","_getChatCardTargets","token","scene","canvas","rollAbilitySave","rollToolCheck","ard20","AbilityTemplate","fromItem","drawPreview","disabled","header","style","display","_applyDamage","tData","tHealth","tActor","tokenId","total","defences","obj","socket","emit","operation","fromUuid","health","damHTML","append","remove","actorId","actors","tokens","controlled","character","getActiveTokens","Boolean","atk","dc","atkHTML","dmgHTML","result","hit","dmg","dieResultCss","def","atkRoll","rollAttack","dmgRoll","stats","keys","reroll","size","templateData","uuid","getChatData","owner","isOwner","chatData","_id","CONST","CHAT_MESSAGE_TYPES","OTHER","chatFlavor","applyRollMode","create","htmlOptions","getAttackToHit","rollConfig","width","mergeObject","map","d","c","a","b","altkey","attackBonus","toHit","test","create_if_block_1","create_if_block","AttributeComp","onManageActiveEffect","li","effect","effectId","effects","createEmbeddedDocuments","icon","origin","effectType","sheet","delete","prepareActiveEffectCategories","categories","temporary","passive","inactive","e","_getSourceName","isTemporary","ARd20ActorSheet","ActorSheet","defaultOptions","classes","height","tabs","navSelector","contentSelector","getData","context","actorData","config","_prepareItems","_prepareCharacterData","gear","features","weapons","armor","spells","img","DEFAULT_TOKEN","isActive","toggleClass","toggleTitle","equipped","activateListeners","select2","click","_onToggleItem","ev","parents","isEditable","_onItemCreate","slideUp","_onRollAttributeTest","_onRollSkillCheck","_OnAdvanceMenu","_onItemRoll","handler","_onDragStart","each","contains","setAttribute","addEventListener","app","object","createAditionalData","getPacks","pack_list","pack_name","val","packs","pack","metadata","feat_list","documentName","index","flat","feat","new_key","package","doc","getDocument","toObject","getFolders","folder_list","folder_name","folders","folder","contents","raceList","getRacesList","featList","getFeaturesList","name_array","race_pack_list","race_folder_list","raceItem","chosen","feat_pack_list","FeatureItem","feat_folder_list","temp_feat_list","learnedFeatures","itemTypes","feature","_objectSpread","races","list","count","skills","feats","mar","div","pri","psy","learned","awail","allow","duplicate","isReady","race","final","document","aditionalData","CharacterAdvancement","itemid","attr","parentElement","rollAttributeTest","skill","rollSkill","capitalize","_onRoll","rollType","_onDrop","JSON","parse","dataTransfer","allowed","Hooks","call","_onDropActiveEffect","_onDropActor","_onDropItem","_onDropFolder","TJSDialog","modal","draggable","class","CharacterAdvancementShell","props","FeatRequirements","FormApplication","InitializeData","reqValues","reqLogic","formApp","subtype_list","input","inputElement","previousElement","maxLevel","getFeats","arr","rank","assign","type_list","indexOf","featAwail","featCurrent","entity","_onAdd","_Delete","sub_list","defaultValue","fill","_onChangeInput","order","expandObject","_getSubmitData","_updateObject","formData","ARd20ItemSheet","ItemSheet","path","updateData","fd","FormDataExtended","editors","sub","flattenObject","edit","formatSelection","state","text","optgroup","subtype","match","url","formatResult","dropdownAutoWidth","templateSelection","templateResult","escapeMarkup","m","evt","params","originalEvent","stopPropagation","_FeatReq","_onDamageControl","partsPath","damTypePath","damagePart","_onSubmit","args","_tabs","active","position","preloadHandlebarsTemplates","loadTemplates","con","int","wis","cha","AttributeAbbreviations","CHARACTER_EXP_LEVELS","SpellSchool","abj","enc","evo","ill","nec","trs","acr","ani","arc","ath","dec","his","ins","itm","inv","med","nat","prc","prf","per","rel","slt","ste","sur","WeaponProp","aff","awk","bra","dis","dou","ent","fin","fir","hea","lau","lig","lun","mel","one","pen","ran","rea","sta","thr","tri","two","ver","WeaponType","amb","axe","blu","bow","sli","cbl","cro","dbl","fla","whi","ham","pic","pol","spe","AbilXP","SkillXP","acid","bludgeoning","cold","fire","force","lightning","necr","piercing","poison","slashing","radiant","psychic","ResistTypes","vul","imm","HPDice","light","chest","gloves","boots","pants","head","medium","heavy","RollResult","ARd20SocketHandler","updateActorData","isResponsibleGM","users","other","setting","AdvRateSettingsShim","AdvancementRateFormApp","focus","SvelteApplication","minimizable","resizable","svelte","AdvancementRateShell","body","FeatSettingsShim","FeatSetting","FeatSettingShell","ProfSettingsShim","ProfSetting","ProfSettingShell","ProfLevelSettingShim","ProfLevelSetting","ProfLevelSettingShell","registerSystemSettings","register","scope","tool","onChange","registerMenu","restricted","variables","skillsCount","shortName","longName","featuresCount","formulas","ProfFormApp","submitOnChange","closeOnSubmit","sheetData","set","dirty","fieldName","propertyName","split","highlightCriticalSuccessFailure","isRoll","isContentVisible","dice","isD20","isModifiedRoll","results","marginSuccess","marginFailure","addClass","displayChatActionButtons","chatCard","author","btn","addChatMessageContextOptions","canApply","applyChatCardDamage","multiplier","all","applyDamage","SourceObject","obj_keys","once","Game","documents","ARd20Actor","rollItemMacro","rolls","Combat","initiative","decimals","Actor","documentClass","Actors","unregisterSheet","registerSheet","makeDefault","Items","Handlebars","registerHelper","outStr","arg","arguments","toLowerCase","value1","value2","modules","moduleSettings","bar","createItemMacro","Notifications","command","macroList","macros","macroCheck","macro","Macro","assignHotbarMacro","itemName","chat","_prepareNpcData","advancement","def_stats","def_dam","ph","mg","floor","dexMod","levels","used","level_min","bar_max","bar_min","reflex","fortitude","will","isNaN","profLevelSetting","maxProfLevel","rankName","speed","cr","attributeId","skillId","skl","arr_entries","array_keys","io","Socket"],"mappings":"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"}