// Grid.
.grid,
.grid-2col {
  display: grid;
  grid-column: span 2 / span 2;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 10px;
  margin: 10px 0;
  padding: 0;
}
@for $i from 3 through 20 {
  .grid-#{$i}col {
    grid-column: span $i / span $i;
    grid-template-columns: repeat($i, minmax(0, 1fr));
  }
}
// Grid offset.
@for $i from 2 through 20 {
  .grid-start-#{$i} {
    grid-column-start: $i;
  }
}
@for $i from 2 through 20 {
  .grid-span-#{$i} {
    grid-column-end: span $i;
  }
}
table {
  &.center {
    text-align: center;
  }
  th.description {
    border-bottom: 1px solid black;
    border-left: 1px solid black;
    width: 50%;
  }
  tr {
    &:nth-child(even) {
      background-color: rgba(0, 0, 0, 0);
      th,
      td {
        background-color: rgba(255, 255, 255, 0.2);
      }
    }
    td {
      border: 1px solid transparent;
      &.description {
        border: none;
      }
    }
    &:nth-child(2) {
      td:nth-last-child(2) {
        border-right: 1px solid black;
      }
    }
    &:nth-child(n + 3) {
      td {
        &:nth-last-child(1) {
          border-right: 1px solid black;
        }
      }
    }
    td,
    th {
      &.chosen {
        border-bottom: 1px solid red;
        border-top: 1px solid red;
        &:first-child {
          border-left: 1px solid red;
        }
        &.last {
          border-right: 1px solid red;
        }
      }
      &.over-chosen {
        border-bottom: 1px solid red;
      }
      &.under-chosen {
        border-top: 1px solid red;
      }
    }
  }
}
